{
  "openapi": "3.0.0",
  "externalDocs": {
    "description": "See documentation for Akamai's Alerts API",
    "url": "https://techdocs.akamai.com/alerts-app/reference"
  },
  "info": {
    "title": "Akamai: Alerts API",
    "version": "v1",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/access-control-data": {
      "get": {
        "description": "Lists items of relevant data available to you at runtime to apply to an alert definition. For example, when creating an alert about traffic levels for a set of CP codes, you can use this operation to list the set of CP codes to which you have access.",
        "operationId": "get-access-control-data",
        "summary": "List access control data",
        "tags": [
          "Access control data"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/get-access-control-data"
        },
        "responses": {
          "200": {
            "description": "The response lists access cotrol data.",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "localizable": false,
                      "name": "Jabberwocky",
                      "objectId": "1234",
                      "type": "cpcode",
                      "fields": {
                        "timezone": null
                      }
                    },
                    {
                      "localizable": false,
                      "name": "Akamai Ads",
                      "objectId": "1234",
                      "type": "cpcode",
                      "fields": {
                        "timezone": null
                      }
                    },
                    {
                      "localizable": false,
                      "name": "64K - high bit flipped",
                      "objectId": "1234",
                      "type": "cpcode",
                      "fields": {
                        "timezone": null
                      }
                    },
                    {
                      "localizable": false,
                      "name": "Streaming disjointed",
                      "objectId": "1234",
                      "type": "cpcode",
                      "fields": {
                        "timezone": null
                      }
                    },
                    {
                      "localizable": false,
                      "name": "Streaming Metafile Servers",
                      "objectId": "1234",
                      "type": "cpcode",
                      "fields": {
                        "timezone": null
                      }
                    },
                    {
                      "localizable": false,
                      "name": "Akamai Conference",
                      "objectId": "1234",
                      "type": "cpcode",
                      "fields": {
                        "timezone": null
                      }
                    },
                    {
                      "localizable": false,
                      "name": "Media Engineering NetStorage WSD",
                      "objectId": "1234",
                      "type": "cpcode",
                      "fields": {
                        "timezone": "-8"
                      }
                    },
                    {
                      "localizable": false,
                      "name": "Universal Streaming for multiplatform",
                      "objectId": "1234",
                      "type": "cpcode",
                      "fields": {
                        "timezone": "8"
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Represents access controlled objects from which descriptions must be read.",
                  "type": "object",
                  "required": [
                    "type",
                    "objectId",
                    "name",
                    "localizable"
                  ],
                  "properties": {
                    "fields": {
                      "description": "Additional object data.",
                      "type": "object"
                    },
                    "localizable": {
                      "description": "Whether the `name` field was localizable, either not dynamic or user defined.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "A basic description of content.",
                      "type": "string"
                    },
                    "objectId": {
                      "description": "A unique identifier for this content.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of content, either `acggroup`, `adaptivecpcode`, `adaptivemetric`, `adaptiveprofile`, `alertHttp`, `arlfile`, `contract`, `cpcode`, `datastream`, `dsatest`, `edns`, `encoder`, `etpConfig`, `etpSiteMetaInfo`, `eventlog`, `evt_cnt`, `fpdomain`, `fpproperty`, `group`, `httpErrorCode`, `iphoneFileType`, `mapruleid`, `network`, `player`, `product`, `regionid`, `rej_cnt`, `satest`, `slatest`, `sripslot`, `statest`, `stream`, `trigger`, `visibility`, or `waatest`.",
                      "type": "string",
                      "enum": [
                        "acggroup",
                        "adaptivecpcode",
                        "adaptivemetric",
                        "adaptiveprofile",
                        "alertHttp",
                        "arlfile",
                        "contract",
                        "cpcode",
                        "datastream",
                        "dsatest",
                        "edns",
                        "encoder",
                        "etpConfig",
                        "etpSiteMetaInfo",
                        "eventlog",
                        "evt_cnt",
                        "fpdomain",
                        "fpproperty",
                        "group",
                        "httpErrorCode",
                        "iphoneFileType",
                        "mapruleid",
                        "network",
                        "player",
                        "product",
                        "regionid",
                        "rej_cnt",
                        "satest",
                        "slatest",
                        "sripslot",
                        "statest",
                        "stream",
                        "trigger",
                        "visibility",
                        "waatest"
                      ]
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/access-control-data.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Bad request](https://techdocs.akamai.com/alerts-app/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Not a valid alert Id",
                  "status": 400,
                  "title": "Illegal Argument",
                  "type": "/alerts-api/error-types/ILLEGAL_ARGUMENT"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.202",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "__Enum__ The type of access control data on which to report.",
            "example": "{{type}}",
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "example": "contract",
              "type": "string",
              "enum": [
                "acggroup",
                "adaptivecpcode",
                "adaptivemetric",
                "adaptiveprofile",
                "alertHttp",
                "arlfile",
                "contract",
                "cpcode",
                "datastream",
                "dsatest",
                "edns",
                "encoder",
                "etpConfig",
                "etpSiteMetaInfo",
                "eventlog",
                "evt_cnt",
                "fpdomain",
                "fpproperty",
                "group",
                "httpErrorCode",
                "iphoneFileType",
                "mapruleid",
                "network",
                "player",
                "product",
                "regionid",
                "rej_cnt",
                "satest",
                "slatest",
                "sripslot",
                "statest",
                "stream",
                "trigger",
                "visibility",
                "waatest"
              ]
            },
            "x-akamai": {
              "file-path": "parameters/type-query.yaml"
            }
          },
          {
            "description": "When the `type` is either `cpcode` or `httpErrorCode`, restricts the range of data to what a specific template supports. For example, status codes in the 3xx range may not be relevant for a template that focuses on 4xx-5xx errors.",
            "example": "{{templateId}}",
            "in": "query",
            "name": "templateId",
            "schema": {
              "example": "s@134",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/templateId-query.yaml"
            }
          },
          {
            "description": "__Enum__ When the `type` is set to `slatest`, specifies the ID to request, either `available` or `performance`.",
            "example": "{{filter}}",
            "in": "query",
            "name": "filter",
            "schema": {
              "example": "performance",
              "type": "string",
              "enum": [
                "available",
                "performance"
              ]
            },
            "x-akamai": {
              "file-path": "parameters/filter-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/alert-definitions": {
      "post": {
        "description": "Creates a new alert definition based on a template. The template's required `fields` represent criteria you may use to trigger an alert, but the new definition's `fields` specify the set of values that actually trigger the alert. After you create a new alert, it may take a couple of minutes before it has enough information before it can fire.",
        "operationId": "post-definition",
        "summary": "Create a new alert",
        "tags": [
          "Alert definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/post-definition"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "origin": "STATIC",
                "fields": {
                  "alertLowerBound": 5,
                  "definitionId": "",
                  "emailHtmlFormat": true,
                  "isSum": true,
                  "name": "myTestAlertName",
                  "network": "myNetwork",
                  "param": 20,
                  "paramName": "cpercent",
                  "templateId": "s@150",
                  "aca_cpcode": [
                    "111",
                    "33190"
                  ],
                  "email": [
                    "nomail@akamai.com"
                  ],
                  "emailBrief": [
                    "email@akamai.com"
                  ],
                  "group": [
                    "grp_123456"
                  ]
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Alert configured with thresholds for monitoring.",
                "type": "object",
                "required": [
                  "fields"
                ],
                "properties": {
                  "definitionId": {
                    "description": "Identifies each alert definition.",
                    "example": "{{definitionId}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "fields": {
                    "additionalProperties": false,
                    "description": "A mapping of contextual fields relevant to the alert.",
                    "type": "object",
                    "required": [
                      "templateId",
                      "name"
                    ],
                    "properties": {
                      "email": {
                        "description": "Email addresses of alert notification's recipients.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "group": {
                        "description": "Group identifiers to which alert should be assigned.",
                        "minItems": 1,
                        "type": "array",
                        "items": {
                          "minimum": 1,
                          "type": "integer"
                        }
                      },
                      "name": {
                        "description": "The human readable name for the alert.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "templateId": {
                        "description": "Identifies the template.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/fields-map.yaml"
                    }
                  },
                  "origin": {
                    "description": "Identifies the type of alert the template enables, either `STATIC` or `ADAPTIVE`. Static alert types specify raw values, while the adaptive alert type expresses standard deviations. The only available ADAPTIVE alert identifies excessive traffic, and its `templateId` is `a@1`.",
                    "example": "{{origin}}",
                    "type": "string",
                    "enum": [
                      "STATIC",
                      "ADAPTIVE"
                    ]
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/post-definition.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The response provides the newly created alert.",
            "content": {
              "application/json": {
                "example": {
                  "accountId": "A-CCT7890",
                  "definitionId": "s@123",
                  "origin": "STATIC",
                  "editInfo": {
                    "active": true,
                    "createdAt": "2006-02-16T20:49:54Z",
                    "createdBy": "szhang",
                    "editAt": "2006-02-16T20:49:54Z",
                    "editBy": "jkowalski"
                  },
                  "fields": {
                    "alertLowerBound": 5,
                    "definitionId": "s@123",
                    "emailHtmlFormat": true,
                    "isSum": true,
                    "name": "myTestAlertName",
                    "network": "myNetwork",
                    "param": 20,
                    "paramName": "cpercent",
                    "templateId": "s@150",
                    "aca_cpcode": [
                      "111",
                      "33190"
                    ],
                    "email": [
                      "nomail@akamai.com"
                    ],
                    "emailBrief": [
                      "email@akamai.com"
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Alert configured with thresholds for monitoring.",
                  "type": "object",
                  "required": [
                    "fields"
                  ],
                  "properties": {
                    "accountId": {
                      "description": "Identifies the account under which the alert was created.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "definitionId": {
                      "description": "Identifies the alert definition.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "editInfo": {
                      "additionalProperties": false,
                      "description": "A summary of the alert's creation time and most recent edit.",
                      "type": "object",
                      "required": [
                        "createdAt",
                        "createdBy",
                        "editAt",
                        "editBy",
                        "active"
                      ],
                      "properties": {
                        "active": {
                          "description": "When the alert `origin` is `STATIC`, indicates if the alert is allowed to fire. A `false` value may be due to variations in account and contract status that leaves the alert configured but inactive.",
                          "type": "boolean"
                        },
                        "createdAt": {
                          "description": "ISO 8601 timestamp for when the alert was created.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "createdBy": {
                          "description": "The user who created the alert.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "editAt": {
                          "description": "ISO 8601 timestamp for when the alert was last edited.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "editBy": {
                          "description": "The user who last edited the alert.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "fields": {
                      "additionalProperties": false,
                      "description": "The set of criteria that determines when the alert fires. The object's members vary depending on the template on which the alert is based. However, all `fields` include a `name`, the `templateId` on which the alert was based, and an array of `email` addresses for the alert's recipients.",
                      "type": "object",
                      "required": [
                        "templateId",
                        "name"
                      ],
                      "properties": {
                        "email": {
                          "description": "Email addresses of alert notification's recipients.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "group": {
                          "description": "Group identifiers to which alert should be assigned.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "minimum": 1,
                            "type": "integer"
                          }
                        },
                        "name": {
                          "description": "The human readable name for the alert.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "templateId": {
                          "description": "Identifies the template.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/fields-map.yaml"
                      }
                    },
                    "links": {
                      "description": "Link relations to schemas and REST endpoints.",
                      "minItems": 2,
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "rel",
                          "href"
                        ],
                        "properties": {
                          "href": {
                            "description": "Link to resource of type described by rel.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "rel": {
                            "description": "Describes type of link.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/links.yaml"
                      }
                    },
                    "origin": {
                      "description": "Identifies the type of alert the template enables, either `STATIC` or `ADAPTIVE`. Static alert types specify raw values, while the adaptive alert type expresses standard deviations. The only available `ADAPTIVE` alert identifies excessive traffic, and its `templateId` is `a@1`.",
                      "type": "string",
                      "enum": [
                        "STATIC",
                        "ADAPTIVE"
                      ]
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/definition.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Bad request](https://techdocs.akamai.com/alerts-app/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Not a valid alert Id",
                  "status": 400,
                  "title": "Illegal Argument",
                  "type": "/alerts-api/error-types/ILLEGAL_ARGUMENT"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.82",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "415": {
            "description": "[Unsupported media type](https://techdocs.akamai.com/alerts-app/reference/415).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Content type 'application/xml' not supported",
                  "status": 415,
                  "title": "Unsupported Media Type",
                  "type": "/alerts-api/error-types/UNSUPPORTED_MEDIA_TYPE"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/415.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists alert instances that are configured to fire under certain conditions. Optionally filter alerts by relevant fields or their values.",
        "operationId": "get-definitions",
        "summary": "List alerts",
        "tags": [
          "Alert definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/get-definitions"
        },
        "responses": {
          "200": {
            "description": "The response lists alerts.",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "accountId": "A-CCT9012",
                      "definitionId": "s@123",
                      "origin": "STATIC",
                      "editInfo": {
                        "active": true,
                        "createdAt": "2006-02-16T20:49:54Z",
                        "createdBy": "adevi",
                        "editAt": "2006-02-16T20:49:54Z",
                        "editBy": "afero"
                      },
                      "fields": {
                        "alertLowerBound": 5,
                        "definitionId": "s@123",
                        "emailHtmlFormat": true,
                        "isSum": true,
                        "name": "myTestAlertName",
                        "network": "myNetwork",
                        "param": 20,
                        "paramName": "cpercent",
                        "templateId": "s@150",
                        "aca_cpcode": [
                          "111",
                          "33190"
                        ],
                        "email": [
                          "nomail@akamai.com"
                        ],
                        "emailBrief": [
                          "email@akamai.com"
                        ]
                      },
                      "links": [
                        {
                          "href": "/alerts/v2/json-schema/templates/s@150/alert-definitions",
                          "rel": "describedBy"
                        },
                        {
                          "href": "/alerts/v2/alert-definitions/s@123",
                          "rel": "self"
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies a collection of alert definitions, all of which appear in the `data` array.",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "description": "Alert definitions.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Alert configured with thresholds for monitoring.",
                        "type": "object",
                        "required": [
                          "fields"
                        ],
                        "properties": {
                          "accountId": {
                            "description": "Identifies the account under which the alert was created.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "definitionId": {
                            "description": "Identifies the alert definition.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "editInfo": {
                            "additionalProperties": false,
                            "description": "A summary of the alert's creation time and most recent edit.",
                            "type": "object",
                            "required": [
                              "createdAt",
                              "createdBy",
                              "editAt",
                              "editBy",
                              "active"
                            ],
                            "properties": {
                              "active": {
                                "description": "When the alert `origin` is `STATIC`, indicates if the alert is allowed to fire. A `false` value may be due to variations in account and contract status that leaves the alert configured but inactive.",
                                "type": "boolean"
                              },
                              "createdAt": {
                                "description": "ISO 8601 timestamp for when the alert was created.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "createdBy": {
                                "description": "The user who created the alert.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "editAt": {
                                "description": "ISO 8601 timestamp for when the alert was last edited.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "editBy": {
                                "description": "The user who last edited the alert.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "fields": {
                            "additionalProperties": false,
                            "description": "The set of criteria that determines when the alert fires. The object's members vary depending on the template on which the alert is based. However, all `fields` include a `name`, the `templateId` on which the alert was based, and an array of `email` addresses for the alert's recipients.",
                            "type": "object",
                            "required": [
                              "templateId",
                              "name"
                            ],
                            "properties": {
                              "email": {
                                "description": "Email addresses of alert notification's recipients.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "group": {
                                "description": "Group identifiers to which alert should be assigned.",
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                  "minimum": 1,
                                  "type": "integer"
                                }
                              },
                              "name": {
                                "description": "The human readable name for the alert.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "templateId": {
                                "description": "Identifies the template.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/fields-map.yaml"
                            }
                          },
                          "links": {
                            "description": "Link relations to schemas and REST endpoints.",
                            "minItems": 2,
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "rel",
                                "href"
                              ],
                              "properties": {
                                "href": {
                                  "description": "Link to resource of type described by rel.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "rel": {
                                  "description": "Describes type of link.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/links.yaml"
                            }
                          },
                          "origin": {
                            "description": "Identifies the type of alert the template enables, either `STATIC` or `ADAPTIVE`. Static alert types specify raw values, while the adaptive alert type expresses standard deviations. The only available `ADAPTIVE` alert identifies excessive traffic, and its `templateId` is `a@1`.",
                            "type": "string",
                            "enum": [
                              "STATIC",
                              "ADAPTIVE"
                            ]
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/definition.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/definitions.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Bad request](https://techdocs.akamai.com/alerts-app/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Not a valid alert Id",
                  "status": 400,
                  "title": "Illegal Argument",
                  "type": "/alerts-api/error-types/ILLEGAL_ARGUMENT"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.41",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "Filter results to only include definitions that contain the specified field.",
            "example": "{{fieldName}}",
            "in": "query",
            "name": "fieldName",
            "schema": {
              "example": "aca_cpcode",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/fieldName-query.yaml"
            }
          },
          {
            "description": "With `fieldName` specified, further filter results based on the field's value. This matches either a scalar value or membership within an array.",
            "example": "{{fieldValue}}",
            "in": "query",
            "name": "fieldValue",
            "schema": {
              "example": 33190,
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/fieldValue-query.yaml"
            }
          },
          {
            "description": "Filter results to include a subset, repeating the parameter to specify more than one `definitionId` identifier.",
            "example": "{{ids}}",
            "explode": true,
            "in": "query",
            "name": "ids",
            "schema": {
              "example": "s@123",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/ids-query.yaml"
            }
          },
          {
            "description": "Whether to include the `alert_group` member in each alert definition response object. The default value is `true`.",
            "example": "{{includeGroupInformation}}",
            "in": "query",
            "name": "includeGroupInformation",
            "schema": {
              "default": true,
              "example": false,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/includeGroupInformation-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/alert-definitions/{definitionId}": {
      "get": {
        "description": "Get a single alert instance that is configured to fire under certain conditions.",
        "operationId": "get-definition",
        "summary": "Get an alert",
        "tags": [
          "Alert definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/get-definition"
        },
        "responses": {
          "200": {
            "description": "The response provides the alert.",
            "content": {
              "application/json": {
                "example": {
                  "accountId": "A-CCT7890",
                  "contractId": "K-0N7RAK7",
                  "corpAccount": "Bob's Bait Inc",
                  "cpCode": 1234567,
                  "definitionId": "a@cp_314159_1234",
                  "domain": "",
                  "origin": "ADAPTIVE",
                  "services": "all",
                  "templateId": "a@1",
                  "editInfo": {
                    "active": true,
                    "createdAt": "2016-08-23T21:19:38.583Z",
                    "createdBy": "jsmith",
                    "editAt": "2016-08-23T21:19:38.583Z",
                    "editBy": "mrossi"
                  },
                  "fields": {
                    "adaptivecpcode": "314159",
                    "adaptivemetric": "srip_mbps_to_user",
                    "adaptiveprofile": "17",
                    "definitionId": "a@cp_314653_7198",
                    "name": "YB-2 [Adaptive] IPA/SXL Mbps to User",
                    "templateId": "a@1",
                    "email": [
                      "mtest@example.com"
                    ],
                    "aboveModel": {
                      "anomalyCount": 3,
                      "deviations": 3,
                      "windowSize": 4
                    },
                    "belowModel": {
                      "anomalyCount": 4,
                      "deviations": 6,
                      "windowSize": 32
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Alert configured with thresholds for monitoring.",
                  "type": "object",
                  "required": [
                    "fields"
                  ],
                  "properties": {
                    "accountId": {
                      "description": "Identifies the account under which the alert was created.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "definitionId": {
                      "description": "Identifies the alert definition.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "editInfo": {
                      "additionalProperties": false,
                      "description": "A summary of the alert's creation time and most recent edit.",
                      "type": "object",
                      "required": [
                        "createdAt",
                        "createdBy",
                        "editAt",
                        "editBy",
                        "active"
                      ],
                      "properties": {
                        "active": {
                          "description": "When the alert `origin` is `STATIC`, indicates if the alert is allowed to fire. A `false` value may be due to variations in account and contract status that leaves the alert configured but inactive.",
                          "type": "boolean"
                        },
                        "createdAt": {
                          "description": "ISO 8601 timestamp for when the alert was created.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "createdBy": {
                          "description": "The user who created the alert.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "editAt": {
                          "description": "ISO 8601 timestamp for when the alert was last edited.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "editBy": {
                          "description": "The user who last edited the alert.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "fields": {
                      "additionalProperties": false,
                      "description": "The set of criteria that determines when the alert fires. The object's members vary depending on the template on which the alert is based. However, all `fields` include a `name`, the `templateId` on which the alert was based, and an array of `email` addresses for the alert's recipients.",
                      "type": "object",
                      "required": [
                        "templateId",
                        "name"
                      ],
                      "properties": {
                        "email": {
                          "description": "Email addresses of alert notification's recipients.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "group": {
                          "description": "Group identifiers to which alert should be assigned.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "minimum": 1,
                            "type": "integer"
                          }
                        },
                        "name": {
                          "description": "The human readable name for the alert.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "templateId": {
                          "description": "Identifies the template.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/fields-map.yaml"
                      }
                    },
                    "links": {
                      "description": "Link relations to schemas and REST endpoints.",
                      "minItems": 2,
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "rel",
                          "href"
                        ],
                        "properties": {
                          "href": {
                            "description": "Link to resource of type described by rel.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "rel": {
                            "description": "Describes type of link.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/links.yaml"
                      }
                    },
                    "origin": {
                      "description": "Identifies the type of alert the template enables, either `STATIC` or `ADAPTIVE`. Static alert types specify raw values, while the adaptive alert type expresses standard deviations. The only available `ADAPTIVE` alert identifies excessive traffic, and its `templateId` is `a@1`.",
                      "type": "string",
                      "enum": [
                        "STATIC",
                        "ADAPTIVE"
                      ]
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/definition.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Bad request](https://techdocs.akamai.com/alerts-app/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Not a valid alert Id",
                  "status": 400,
                  "title": "Illegal Argument",
                  "type": "/alerts-api/error-types/ILLEGAL_ARGUMENT"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.215",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found](https://techdocs.akamai.com/alerts-app/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "ALERT_NOT_FOUND",
                  "detail": "Resource Not Found.",
                  "status": 404,
                  "title": "Not Found",
                  "type": "/alerts-api/error-types/ALERT_NOT_FOUND"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Modifies the criteria that determine when an alert fires.",
        "operationId": "put-definition",
        "summary": "Update an alert",
        "tags": [
          "Alert definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/put-definition"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "definitionId": "s@123",
                "origin": "STATIC",
                "fields": {
                  "alertLowerBound": 5,
                  "definitionId": "s@123",
                  "emailHtmlFormat": true,
                  "isSum": true,
                  "name": "myTestAlertName",
                  "network": "myNetwork",
                  "param": 20,
                  "paramName": "cpercent",
                  "templateId": "s@150",
                  "aca_cpcode": [
                    "111",
                    "33190"
                  ],
                  "email": [
                    "nomail@akamai.com"
                  ],
                  "emailBrief": [
                    "email@akamai.com"
                  ]
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Alert configured with thresholds for monitoring.",
                "type": "object",
                "required": [
                  "fields"
                ],
                "properties": {
                  "accountId": {
                    "description": "Identifies the account under which the alert was created.",
                    "example": "{{accountId}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "definitionId": {
                    "description": "Identifies the alert definition.",
                    "example": "{{definitionId}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "editInfo": {
                    "additionalProperties": false,
                    "description": "A summary of the alert's creation time and most recent edit.",
                    "type": "object",
                    "required": [
                      "createdAt",
                      "createdBy",
                      "editAt",
                      "editBy",
                      "active"
                    ],
                    "properties": {
                      "active": {
                        "description": "When the alert `origin` is `STATIC`, indicates if the alert is allowed to fire. A `false` value may be due to variations in account and contract status that leaves the alert configured but inactive.",
                        "type": "boolean"
                      },
                      "createdAt": {
                        "description": "ISO 8601 timestamp for when the alert was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "createdBy": {
                        "description": "The user who created the alert.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "editAt": {
                        "description": "ISO 8601 timestamp for when the alert was last edited.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "editBy": {
                        "description": "The user who last edited the alert.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "fields": {
                    "additionalProperties": false,
                    "description": "The set of criteria that determines when the alert fires. The object's members vary depending on the template on which the alert is based. However, all `fields` include a `name`, the `templateId` on which the alert was based, and an array of `email` addresses for the alert's recipients.",
                    "type": "object",
                    "required": [
                      "templateId",
                      "name"
                    ],
                    "properties": {
                      "email": {
                        "description": "Email addresses of alert notification's recipients.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "group": {
                        "description": "Group identifiers to which alert should be assigned.",
                        "minItems": 1,
                        "type": "array",
                        "items": {
                          "minimum": 1,
                          "type": "integer"
                        }
                      },
                      "name": {
                        "description": "The human readable name for the alert.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "templateId": {
                        "description": "Identifies the template.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/fields-map.yaml"
                    }
                  },
                  "links": {
                    "description": "Link relations to schemas and REST endpoints.",
                    "minItems": 2,
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "rel",
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "Link to resource of type described by rel.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "rel": {
                          "description": "Describes type of link.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/links.yaml"
                    }
                  },
                  "origin": {
                    "description": "Identifies the type of alert the template enables, either `STATIC` or `ADAPTIVE`. Static alert types specify raw values, while the adaptive alert type expresses standard deviations. The only available `ADAPTIVE` alert identifies excessive traffic, and its `templateId` is `a@1`.",
                    "example": "{{origin}}",
                    "type": "string",
                    "enum": [
                      "STATIC",
                      "ADAPTIVE"
                    ]
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/definition.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Alert successfully updated.",
            "content": {
              "*/*": {}
            }
          },
          "400": {
            "description": "[Bad request](https://techdocs.akamai.com/alerts-app/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Not a valid alert Id",
                  "status": 400,
                  "title": "Illegal Argument",
                  "type": "/alerts-api/error-types/ILLEGAL_ARGUMENT"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.179",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "415": {
            "description": "[Unsupported media type](https://techdocs.akamai.com/alerts-app/reference/415).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Content type 'application/xml' not supported",
                  "status": 415,
                  "title": "Unsupported Media Type",
                  "type": "/alerts-api/error-types/UNSUPPORTED_MEDIA_TYPE"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/415.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Deletes an alert and stops it from firing. It can take a few minutes to propagate alert deactivation.",
        "operationId": "delete-definition",
        "summary": "Remove an alert",
        "tags": [
          "Alert definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/delete-definition"
        },
        "responses": {
          "204": {
            "description": "Alert successfully deleted.",
            "content": {
              "*/*": {}
            }
          },
          "400": {
            "description": "[Bad request](https://techdocs.akamai.com/alerts-app/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Not a valid alert Id",
                  "status": 400,
                  "title": "Illegal Argument",
                  "type": "/alerts-api/error-types/ILLEGAL_ARGUMENT"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.150",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies the alert definition.",
          "example": "{{definitionId}}",
          "in": "path",
          "name": "definitionId",
          "required": true,
          "schema": {
            "example": "s@1623",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/definitionId-path.yaml"
          }
        }
      ]
    },
    "/alert-definitions/{definitionId}/activities": {
      "get": {
        "description": "Lists a history of an alert definition's _modifications_. This operation only applies to adaptive alerts, and responds with an error if applied to a static alert.",
        "operationId": "get-definition-alert-activities",
        "summary": "List adaptive alert activity log",
        "tags": [
          "Alert definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/get-definition-alert-activities"
        },
        "responses": {
          "200": {
            "description": "The response lists activity logs.",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "activityId": 0,
                      "details": "SERIES_DELETE",
                      "startTime": "2015-04-11T06:03:15.820Z",
                      "data": {}
                    },
                    {
                      "activityId": 1,
                      "details": "SERIES_ADD",
                      "startTime": "2015-03-12T06:01:38.185Z",
                      "data": {
                        "aboveModelAlertDefinition": {
                          "anomalyCount": 7,
                          "uncertaintyFactor": 4,
                          "windowSize": 9
                        },
                        "belowModelAlertDefinition": {
                          "anomalyCount": 7,
                          "uncertaintyFactor": 4,
                          "windowSize": 9
                        },
                        "entity": {
                          "cmp": false,
                          "description": "Bob's Bait",
                          "entityId": "351445",
                          "entityType": "cp",
                          "account": {
                            "id": "A-CCT7890",
                            "name": "Bob's Bait"
                          }
                        },
                        "metric": {
                          "description": "IPA/SXL Mbps to User",
                          "id": 15,
                          "name": "srip_mbps_to_user"
                        },
                        "profile": {
                          "id": 13,
                          "name": "Weekly"
                        }
                      }
                    },
                    {
                      "activityId": 1,
                      "details": "EMAIL_EDIT",
                      "startTime": "2015-03-12T07:01:38.185Z",
                      "data": {
                        "email": "email@akamai.com"
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies a collection of alert definition activities (modifications), all of which appear in the `data` array.",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "description": "Alert definition's activities.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "activityId",
                          "details",
                          "startTime",
                          "data"
                        ],
                        "properties": {
                          "activityId": {
                            "description": "Identifies the activity.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "data": {
                            "description": "Any additional information related to the activity.",
                            "type": "object"
                          },
                          "details": {
                            "description": "A string representing type of the activity. For example: `SERIES_ADD`, `SERIES_DELETE`, `EMAIL_EDIT`.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "startTime": {
                            "description": "A ISO 8601 timestamp for when the activity occurred.",
                            "format": "date-time",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/definition-activities.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Bad request](https://techdocs.akamai.com/alerts-app/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Not a valid alert Id",
                  "status": 400,
                  "title": "Illegal Argument",
                  "type": "/alerts-api/error-types/ILLEGAL_ARGUMENT"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.96",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies the alert definition.",
          "example": "{{definitionId}}",
          "in": "path",
          "name": "definitionId",
          "required": true,
          "schema": {
            "example": "s@1623",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/definitionId-path.yaml"
          }
        }
      ]
    },
    "/alert-definitions/{definitionId}/alert-firings": {
      "get": {
        "description": "Lists a history of an alert definition's _firings_. Firings for the last 30 days are arranged chronologically in the `data` array, with the most recent at the end.  This lists alerts that have a defined `endTime` to indicate they are no longer in progress. For others, run the [List active firings](https://techdocs.akamai.com/alerts-app/reference/get-active-alert-firings) operation.",
        "operationId": "get-definition-alert-firings",
        "summary": "List fired alerts",
        "tags": [
          "Alert firings"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/get-definition-alert-firings"
        },
        "responses": {
          "200": {
            "description": "The response lists firings.",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "definitionId": "a@12938",
                      "endTime": "2001-01-21T02:21:12.002Z",
                      "firingId": "9826198",
                      "name": "Adaptive Alert",
                      "service": "Mbps to User",
                      "startTime": "2001-01-21T00:01:82.123Z",
                      "fieldMap": {
                        "Account_Name": "Internet Company",
                        "Alert_Condition_(Mbits/sec)": "38.232",
                        "Alert_Threshold_(Mbits/sec)": "32.12",
                        "CP_Code": "1234",
                        "CP_Code_Description": "Bob's Bait Inc Bait Shop - eStore",
                        "Detail_URL": "https://control.akamai.com/tranquility/home#alert/102232/3267",
                        "Expected_Value_(Mbits/sec)": "25.792",
                        "Message": "Mbps to User: Above model",
                        "alert_name_key": "Internet Company has above normal traffic",
                        "email": "email@example.com",
                        "suppressed": "true"
                      }
                    },
                    {
                      "definitionId": "s@1524",
                      "endTime": "2001-01-21T02:21:12.002Z",
                      "firingId": "87238322",
                      "name": "Security Monitor Aggregate Notification",
                      "service": "dna",
                      "startTime": "2001-01-21T00:01:82.123Z",
                      "fieldMap": {
                        "Notification": "application layer attacks(id:2680)",
                        "alert_name_key": "Security_Monitor Access Watch",
                        "priority": "Medium",
                        "trigger_time": "11/05/2015:22:39 GMT"
                      }
                    },
                    {
                      "definitionId": "s@1524",
                      "endTime": null,
                      "firingId": "825394021",
                      "name": "Customer Server Removed From Rotation",
                      "service": "dna",
                      "startTime": "2001-01-25T00:01:82.123Z",
                      "fieldMap": {
                        "alert_name_key": "22221.02",
                        "email_to": "email@example.com",
                        "observed": "22221.02",
                        "portal_link": "https://control.akamai.com/qos/SecMonServlet?notificationIds=1234&analyzerId=5678&startTime=11/05/2015:22:39&endTime=11/05/2015:22:39",
                        "predicted": "6982.5",
                        "trigger": "8138.34"
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "This specifies a collection of alert firings, all of which appear in the `data` array.",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "description": "Alert firings.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Alert whose criteria were met with information on the state when the alert was activated.",
                        "type": "object",
                        "required": [
                          "firingId",
                          "definitionId",
                          "name",
                          "startTime",
                          "endTime",
                          "service",
                          "fieldMap"
                        ],
                        "properties": {
                          "definitionId": {
                            "description": "Identifies the alert definition.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "endTime": {
                            "description": "ISO 8601 timestamp for the period ending when the alert fired, corresponding to `startTime`. The value is `null` if the alert is currently firing.",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "fieldMap": {
                            "description": "A free-form object that captures details on state when the alert triggered, akin to a stack trace.",
                            "type": "object"
                          },
                          "firingId": {
                            "description": "Identifies the alert firing.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the alert that fired.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "service": {
                            "description": "Identifies the back-end service provider that fired the alert.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "startTime": {
                            "description": "ISO 8601 timestamp for the period starting when the alert fired, corresponding to `endTime`.",
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/firing.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/firings.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Bad request](https://techdocs.akamai.com/alerts-app/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Not a valid alert Id",
                  "status": 400,
                  "title": "Illegal Argument",
                  "type": "/alerts-api/error-types/ILLEGAL_ARGUMENT"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.97",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found](https://techdocs.akamai.com/alerts-app/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "ALERT_NOT_FOUND",
                  "detail": "Resource Not Found.",
                  "status": 404,
                  "title": "Not Found",
                  "type": "/alerts-api/error-types/ALERT_NOT_FOUND"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies the alert definition.",
          "example": "{{definitionId}}",
          "in": "path",
          "name": "definitionId",
          "required": true,
          "schema": {
            "example": "s@1623",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/definitionId-path.yaml"
          }
        }
      ]
    },
    "/alert-definitions/{definitionId}/suppressions": {
      "post": {
        "description": "Creates a new time range for an adaptive alert definition that gets ignored when dynamically modeling its expected range of traffic. This operation only applies to adaptive alerts, and responds with an error if applied to a static alert.",
        "operationId": "post-definition-suppression",
        "summary": "Create a new modeling suppressions",
        "tags": [
          "Alert suppressions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/post-definition-suppression"
        },
        "responses": {
          "201": {
            "description": "The response provides the newly created suppression.",
            "content": {
              "application/json": {
                "example": {
                  "end": "2015-11-12T21:40:00Z",
                  "start": "2015-11-12T21:15:00Z",
                  "suppressionId": "2747"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Alert suppressions define anomalous periods of time to ignore when modeling your site's typical traffic patterns for an adaptive alert.",
                  "type": "object",
                  "required": [
                    "suppressionId",
                    "start",
                    "end"
                  ],
                  "properties": {
                    "end": {
                      "description": "Defines the end of the suppressed time range.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "start": {
                      "description": "Defines the start of the suppressed time range.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "suppressionId": {
                      "description": "Identifies the suppressed time range.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/suppression.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Bad request](https://techdocs.akamai.com/alerts-app/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Not a valid alert Id",
                  "status": 400,
                  "title": "Illegal Argument",
                  "type": "/alerts-api/error-types/ILLEGAL_ARGUMENT"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.153",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "A timestamp in ISO 8601 format specifying start of the date range, when dynamic modeling of the traffic should be suppressed.",
            "example": "{{start}}",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "example": "2015-11-12T21:15:00Z",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/start-query.yaml"
            }
          },
          {
            "description": "A timestamp in ISO 8601 format specifying end of the date range, when dynamic modeling of the traffic should be suppressed.",
            "example": "{{end}}",
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "example": "2015-11-23T08:40:00Z",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/end-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists all time ranges for an adaptive alert definition that are ignored when dynamically modeling its expected range of traffic. This operation only applies to adaptive alerts, and responds with an error if applied to a static alert.",
        "operationId": "get-definition-suppressions",
        "summary": "List modeling suppressions",
        "tags": [
          "Alert suppressions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/get-definition-suppressions"
        },
        "responses": {
          "200": {
            "description": "The response lists suppressions.",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "end": "2015-11-12T21:40:00Z",
                      "start": "2015-11-12T21:15:00Z",
                      "suppressionId": "2747"
                    },
                    {
                      "end": "2015-11-23T08:40:00Z",
                      "start": "2015-11-23T07:40:00Z",
                      "suppressionId": "2755"
                    },
                    {
                      "end": "2015-12-22T04:15:00Z",
                      "start": "2015-12-21T17:40:00Z",
                      "suppressionId": "2756"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "This specifies a collection of suppressions, all of which appear in the `data` array.",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "description": "Alert suppressions define anomalous periods of time to ignore when modeling your site's typical traffic patterns for an adaptive alert.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Alert suppressions define anomalous periods of time to ignore when modeling your site's typical traffic patterns for an adaptive alert.",
                        "type": "object",
                        "required": [
                          "suppressionId",
                          "start",
                          "end"
                        ],
                        "properties": {
                          "end": {
                            "description": "Defines the end of the suppressed time range.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "start": {
                            "description": "Defines the start of the suppressed time range.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "suppressionId": {
                            "description": "Identifies the suppressed time range.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/suppression.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/suppressions.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Bad request](https://techdocs.akamai.com/alerts-app/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Not a valid alert Id",
                  "status": 400,
                  "title": "Illegal Argument",
                  "type": "/alerts-api/error-types/ILLEGAL_ARGUMENT"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.92",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies the alert definition.",
          "example": "{{definitionId}}",
          "in": "path",
          "name": "definitionId",
          "required": true,
          "schema": {
            "example": "s@1623",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/definitionId-path.yaml"
          }
        }
      ]
    },
    "/alert-definitions/{definitionId}/suppressions/{suppressionId}": {
      "delete": {
        "description": "Removes a suppression, and makes an adaptive alert definition reconsider a previously suppressed period of time when modeling your site's expected range of behavior. This operation only applies to adaptive alerts, and responds with an error if applied to a static alert. Suppressions that are too old to affect alert firings are automatically removed, so there is no need to run this operation simply to trim them from the [list of modeling suppressions](https://techdocs.akamai.com/alerts-app/reference/get-definition-suppressions).",
        "operationId": "delete-definition-suppression",
        "summary": "Unsuppress alert modeling",
        "tags": [
          "Alert suppressions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/delete-definition-suppression"
        },
        "responses": {
          "200": {
            "description": "Resource successfully deleted.",
            "content": {
              "*/*": {}
            }
          },
          "400": {
            "description": "[Bad request](https://techdocs.akamai.com/alerts-app/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Not a valid alert Id",
                  "status": 400,
                  "title": "Illegal Argument",
                  "type": "/alerts-api/error-types/ILLEGAL_ARGUMENT"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.114",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies the alert definition.",
          "example": "{{definitionId}}",
          "in": "path",
          "name": "definitionId",
          "required": true,
          "schema": {
            "example": "s@1623",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/definitionId-path.yaml"
          }
        },
        {
          "description": "Unique identifier for the period of alert model suppression to be deleted.",
          "example": "{{suppressionId}}",
          "in": "path",
          "name": "suppressionId",
          "required": true,
          "schema": {
            "example": 12345,
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/suppressionId-path.yaml"
          }
        }
      ]
    },
    "/alert-firings/active": {
      "get": {
        "description": "Lists currently fired alerts.",
        "operationId": "get-active-alert-firings",
        "summary": "List active alerts",
        "tags": [
          "Alert firings"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/get-active-alert-firings"
        },
        "responses": {
          "200": {
            "description": "The response lists active alerts.",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "definitionId": "a@12938",
                      "endTime": "2001-01-21T02:21:12.002Z",
                      "firingId": "9826198",
                      "name": "Adaptive Alert",
                      "service": "Mbps to User",
                      "startTime": "2001-01-21T00:01:82.123Z",
                      "fieldMap": {
                        "Account_Name": "Internet Company",
                        "Alert_Condition_(Mbits/sec)": "38.232",
                        "Alert_Threshold_(Mbits/sec)": "32.12",
                        "CP_Code": "1234",
                        "CP_Code_Description": "Internet Company - eStore",
                        "Detail_URL": "https://control.akamai.com/tranquility/home#alert/102232/3267",
                        "Expected_Value_(Mbits/sec)": "25.792",
                        "Message": "Mbps to User: Above model",
                        "alert_name_key": "Internet Company) has above normal traffic",
                        "email": "email@example.com",
                        "suppressed": "true"
                      }
                    },
                    {
                      "definitionId": "s@1524",
                      "endTime": "2001-01-21T02:21:12.002Z",
                      "firingId": "87238322",
                      "name": "Security Monitor Aggregate Notification",
                      "service": "dna",
                      "startTime": "2001-01-21T00:01:82.123Z",
                      "fieldMap": {
                        "Notification": "application layer attacks(id:2680)",
                        "alert_name_key": "Security_Monitor Access Watch",
                        "priority": "Medium",
                        "trigger_time": "11/05/2015:22:39 GMT"
                      }
                    },
                    {
                      "definitionId": "s@1524",
                      "endTime": null,
                      "firingId": "825394021",
                      "name": "Customer Server Removed From Rotation",
                      "service": "dna",
                      "startTime": "2001-01-25T00:01:82.123Z",
                      "fieldMap": {
                        "alert_name_key": "22221.02",
                        "email_to": "email@example.com",
                        "observed": "22221.02",
                        "portal_link": "https://control.akamai.com/qos/SecMonServlet?notificationIds=1234&analyzerId=5678&startTime=11/05/2015:22:39&endTime=11/05/2015:22:39",
                        "predicted": "6982.5",
                        "trigger": "8138.34"
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "This specifies a collection of alert firings, all of which appear in the `data` array.",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "description": "Alert firings.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Alert whose criteria were met with information on the state when the alert was activated.",
                        "type": "object",
                        "required": [
                          "firingId",
                          "definitionId",
                          "name",
                          "startTime",
                          "endTime",
                          "service",
                          "fieldMap"
                        ],
                        "properties": {
                          "definitionId": {
                            "description": "Identifies the alert definition.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "endTime": {
                            "description": "ISO 8601 timestamp for the period ending when the alert fired, corresponding to `startTime`. The value is `null` if the alert is currently firing.",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "fieldMap": {
                            "description": "A free-form object that captures details on state when the alert triggered, akin to a stack trace.",
                            "type": "object"
                          },
                          "firingId": {
                            "description": "Identifies the alert firing.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the alert that fired.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "service": {
                            "description": "Identifies the back-end service provider that fired the alert.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "startTime": {
                            "description": "ISO 8601 timestamp for the period starting when the alert fired, corresponding to `endTime`.",
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/firing.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/firings.yaml"
                  }
                }
              }
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.175",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/alert-firings/alertcount": {
      "get": {
        "description": "Get the number of active, currently fired alerts.",
        "operationId": "get-active-alert-count",
        "summary": "Count active alerts",
        "tags": [
          "Alert firings"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/get-active-alert-count"
        },
        "responses": {
          "200": {
            "description": "The response provides the count of active alerts.",
            "content": {
              "application/json": {
                "example": {
                  "count": 13
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The active alert count number.",
                  "type": "object",
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "The total number of active alerts.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/firings-count.yaml"
                  }
                }
              }
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.164",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/alert-summaries": {
      "get": {
        "description": "Lists only high-level metadata about each alert: its name, ID, and when it was last fired. This operation wraps data available from other operations to generate simple, accessible listings.",
        "operationId": "get-summaries",
        "summary": "List alert summaries",
        "tags": [
          "Alert summaries"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/get-summaries"
        },
        "responses": {
          "200": {
            "description": "The response lists alert summaries.",
            "content": {
              "application/json": {
                "example": {
                  "scopes": [
                    "ALERTS_ADD",
                    "ALERTS_EDIT",
                    "ALERTS_HTML_EMAIL",
                    "ALERTS_ORIGIN_CERT",
                    "ALERTS_READ",
                    "ALERTS_VIEWER",
                    "ALERTS_DELETE"
                  ],
                  "data": [
                    {
                      "createdBy": "hgildong",
                      "definitionId": "a@cp_1234_5678",
                      "emails": "john-doe@example.com",
                      "firingNow": false,
                      "lastTriggered": "2017-03-10T06:30:00Z",
                      "name": "Adaptive alert [Adaptive] Mbps to User",
                      "templateId": 1,
                      "templateName": "Adaptive"
                    },
                    {
                      "createdBy": "alfulani",
                      "definitionId": "s@1623",
                      "emails": "",
                      "firingNow": false,
                      "lastTriggered": "2012-10-31T23:59:59Z",
                      "name": "High Traffic - production web portal",
                      "templateId": 1,
                      "templateName": "High Traffic -- Content Delivery"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "This specifies a collection of alert summaries, all of which appear in the `data` array.",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "description": "Summary of configuration and recent firing information.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "description": "Summary of configuration and recent firing information.",
                        "minItems": 0,
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "definitionId",
                            "name",
                            "lastTriggered",
                            "firingNow",
                            "createdBy",
                            "templateId",
                            "templateName"
                          ],
                          "properties": {
                            "createdBy": {
                              "description": "An username of the alert's owner.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "definitionId": {
                              "description": "Identifies the alert definition.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "emails": {
                              "description": "A comma-separated list of alert recipients.",
                              "minLength": 0,
                              "type": "string"
                            },
                            "firingNow": {
                              "description": "Whether the alert is active.",
                              "type": "boolean"
                            },
                            "lastTriggered": {
                              "description": "ISO 8601 timestamp for the most recent alert firing.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "description": "The human readable name for the alert.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "templateId": {
                              "description": "Identifies the template.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "templateName": {
                              "description": "Name of template, not internationalized.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/summary.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/summaries.yaml"
                  }
                }
              }
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.213",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/alert-summaries/{definitionId}": {
      "get": {
        "description": "Get the summary of basic metadata for a single alert.",
        "operationId": "get-summaries-definition",
        "summary": "Get an alert summary",
        "tags": [
          "Alert summaries"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/get-summaries-definition"
        },
        "responses": {
          "200": {
            "description": "The response provides the alert summary.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "szhang",
                  "definitionId": "s@1234",
                  "emails": "john-doe@example.com",
                  "firingNow": false,
                  "lastTriggered": "2017-03-10T06:30:00Z",
                  "name": "SLA Performance alert",
                  "templateId": 47,
                  "templateName": "SLA Performance"
                },
                "schema": {
                  "description": "Summary of configuration and recent firing information.",
                  "minItems": 0,
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "definitionId",
                      "name",
                      "lastTriggered",
                      "firingNow",
                      "createdBy",
                      "templateId",
                      "templateName"
                    ],
                    "properties": {
                      "createdBy": {
                        "description": "An username of the alert's owner.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "definitionId": {
                        "description": "Identifies the alert definition.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "emails": {
                        "description": "A comma-separated list of alert recipients.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "firingNow": {
                        "description": "Whether the alert is active.",
                        "type": "boolean"
                      },
                      "lastTriggered": {
                        "description": "ISO 8601 timestamp for the most recent alert firing.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "name": {
                        "description": "The human readable name for the alert.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "templateId": {
                        "description": "Identifies the template.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "templateName": {
                        "description": "Name of template, not internationalized.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/summary.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Bad request](https://techdocs.akamai.com/alerts-app/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Not a valid alert Id",
                  "status": 400,
                  "title": "Illegal Argument",
                  "type": "/alerts-api/error-types/ILLEGAL_ARGUMENT"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.77",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found](https://techdocs.akamai.com/alerts-app/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "ALERT_NOT_FOUND",
                  "detail": "Resource Not Found.",
                  "status": 404,
                  "title": "Not Found",
                  "type": "/alerts-api/error-types/ALERT_NOT_FOUND"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies the alert definition.",
          "example": "{{definitionId}}",
          "in": "path",
          "name": "definitionId",
          "required": true,
          "schema": {
            "example": "s@1623",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/definitionId-path.yaml"
          }
        }
      ]
    },
    "/alert-summaries/{definitionId}/details": {
      "get": {
        "description": "Get verbose details for a single alert, including its definition, firings, and sparklines report.",
        "operationId": "get-summaries-definition-details",
        "summary": "Get alert details",
        "tags": [
          "Alert details"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/get-summaries-definition-details"
        },
        "responses": {
          "200": {
            "description": "The response provides alert details.",
            "content": {
              "application/json": {
                "example": {
                  "definitionId": "s@17652",
                  "sparkline": null,
                  "alerts": [],
                  "scopes": [
                    "ALERTS_ADD",
                    "ALERTS_EDIT",
                    "ALERTS_HTML_EMAIL",
                    "ALERTS_ORIGIN_CERT",
                    "ALERTS_READ",
                    "ALERTS_VIEWER",
                    "ALERTS_DELETE"
                  ],
                  "definition": {
                    "accountId": "A-CCT5678",
                    "contractId": "C-0N7RAC71",
                    "corpAccount": "NONE",
                    "cpCode": 1234567,
                    "definitionId": "s@54257",
                    "domain": null,
                    "origin": "STATIC",
                    "services": "sa",
                    "templateId": "s@44",
                    "editInfo": {
                      "active": true,
                      "createdAt": "2007-10-16T22:11:19Z",
                      "createdBy": "jsmith",
                      "editAt": "2007-10-16T22:17:24Z",
                      "editBy": "tyamada"
                    },
                    "fields": {
                      "definitionId": "s@54257",
                      "emailHtmlFormat": false,
                      "isSum": false,
                      "maintSchedule": null,
                      "name": "example_com",
                      "network": "sa",
                      "origVisibility": "all",
                      "param": 5,
                      "paramName": "agents",
                      "templateId": "s@44",
                      "visibility": "all",
                      "aca_satest": [
                        "25707",
                        "25709",
                        "25708"
                      ],
                      "email": [
                        "nomail@akamai.com"
                      ],
                      "emailBrief": [],
                      "schedule": {
                        "type": "schedule.all"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Configuration details used together for presentation purposes.",
                  "type": "object",
                  "required": [
                    "definitionId",
                    "definition",
                    "alerts"
                  ],
                  "properties": {
                    "activity": {
                      "description": "Activity information.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "time",
                          "messageKey"
                        ],
                        "properties": {
                          "messageArgs": {
                            "description": "Specifies additional information that may be useful in adding detail to the message.",
                            "type": "object"
                          },
                          "messageKey": {
                            "description": "Internationalization token or message to present to users.",
                            "type": "string"
                          },
                          "time": {
                            "description": "An ISO 8601 timestamp.",
                            "format": "date-time",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "alerts": {
                      "description": "Alert firings.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Alert whose criteria were met with information on the state when the alert was activated.",
                        "type": "object",
                        "required": [
                          "firingId",
                          "definitionId",
                          "name",
                          "startTime",
                          "endTime",
                          "service",
                          "fieldMap"
                        ],
                        "properties": {
                          "definitionId": {
                            "description": "Identifies the alert definition.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "endTime": {
                            "description": "ISO 8601 timestamp for the period ending when the alert fired, corresponding to `startTime`. The value is `null` if the alert is currently firing.",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "fieldMap": {
                            "description": "A free-form object that captures details on state when the alert triggered, akin to a stack trace.",
                            "type": "object"
                          },
                          "firingId": {
                            "description": "Identifies the alert firing.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the alert that fired.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "service": {
                            "description": "Identifies the back-end service provider that fired the alert.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "startTime": {
                            "description": "ISO 8601 timestamp for the period starting when the alert fired, corresponding to `endTime`.",
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/firing.yaml"
                        }
                      }
                    },
                    "definition": {
                      "additionalProperties": false,
                      "description": "Alert configured with thresholds for monitoring.",
                      "type": "object",
                      "required": [
                        "fields"
                      ],
                      "properties": {
                        "accountId": {
                          "description": "Identifies the account under which the alert was created.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "definitionId": {
                          "description": "Identifies the alert definition.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "editInfo": {
                          "additionalProperties": false,
                          "description": "A summary of the alert's creation time and most recent edit.",
                          "type": "object",
                          "required": [
                            "createdAt",
                            "createdBy",
                            "editAt",
                            "editBy",
                            "active"
                          ],
                          "properties": {
                            "active": {
                              "description": "When the alert `origin` is `STATIC`, indicates if the alert is allowed to fire. A `false` value may be due to variations in account and contract status that leaves the alert configured but inactive.",
                              "type": "boolean"
                            },
                            "createdAt": {
                              "description": "ISO 8601 timestamp for when the alert was created.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "createdBy": {
                              "description": "The user who created the alert.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "editAt": {
                              "description": "ISO 8601 timestamp for when the alert was last edited.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "editBy": {
                              "description": "The user who last edited the alert.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        },
                        "fields": {
                          "additionalProperties": false,
                          "description": "The set of criteria that determines when the alert fires. The object's members vary depending on the template on which the alert is based. However, all `fields` include a `name`, the `templateId` on which the alert was based, and an array of `email` addresses for the alert's recipients.",
                          "type": "object",
                          "required": [
                            "templateId",
                            "name"
                          ],
                          "properties": {
                            "email": {
                              "description": "Email addresses of alert notification's recipients.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "group": {
                              "description": "Group identifiers to which alert should be assigned.",
                              "minItems": 1,
                              "type": "array",
                              "items": {
                                "minimum": 1,
                                "type": "integer"
                              }
                            },
                            "name": {
                              "description": "The human readable name for the alert.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "templateId": {
                              "description": "Identifies the template.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/fields-map.yaml"
                          }
                        },
                        "links": {
                          "description": "Link relations to schemas and REST endpoints.",
                          "minItems": 2,
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "rel",
                              "href"
                            ],
                            "properties": {
                              "href": {
                                "description": "Link to resource of type described by rel.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "rel": {
                                "description": "Describes type of link.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/links.yaml"
                          }
                        },
                        "origin": {
                          "description": "Identifies the type of alert the template enables, either `STATIC` or `ADAPTIVE`. Static alert types specify raw values, while the adaptive alert type expresses standard deviations. The only available `ADAPTIVE` alert identifies excessive traffic, and its `templateId` is `a@1`.",
                          "type": "string",
                          "enum": [
                            "STATIC",
                            "ADAPTIVE"
                          ]
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/definition.yaml"
                      }
                    },
                    "definitionId": {
                      "description": "Identifies the alert definition.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "scopes": {
                      "description": "The set of your permissions to modify the alert, any combination of: `ALERTS_READ`, `ALERTS_ADD`, `ALERTS_DELETE`, `ALERTS_EDIT`, and `ALERTS_VIEWER` values. The 'ALERTS_READ' permission lets you view alert configuration. The 'ALERTS_VIEWER' permission lets you view active alerts.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "ALERTS_READ",
                          "ALERTS_ADD",
                          "ALERTS_DELETE",
                          "ALERTS_EDIT",
                          "ALERTS_VIEWER"
                        ]
                      }
                    },
                    "sparkline": {
                      "additionalProperties": false,
                      "description": "JSON used to represent graph data. The amount of data varies depending on the supplied parameters.",
                      "nullable": true,
                      "type": "object",
                      "required": [
                        "definitionId",
                        "points",
                        "anomalies"
                      ],
                      "properties": {
                        "anomalies": {
                          "description": "Lists alert firings that occur within the report's time range.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "start",
                              "firingId"
                            ],
                            "properties": {
                              "end": {
                                "description": "ISO 8601 timestamp for when the anomaly ended, or `null` for a currently firing anomaly.",
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              },
                              "firingId": {
                                "description": "Identifies the alert firing for this anomaly.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "start": {
                                "description": "ISO 8601 timestamp for when the anomaly started.",
                                "format": "date-time",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "definitionId": {
                          "description": "Identifies the associated alert definition.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "points": {
                          "description": "Encapsulates the full range of graph data used to render traffic information.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "x",
                              "y"
                            ],
                            "properties": {
                              "high": {
                                "description": "Upper bound of expected value. Only available for adaptive alerts.",
                                "minimum": 0,
                                "type": "number"
                              },
                              "low": {
                                "description": "Lower bound of expected value. Only available for adaptive alerts.",
                                "minimum": 0,
                                "type": "number"
                              },
                              "x": {
                                "description": "ISO 8601 timestamp for each data point.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "y": {
                                "description": "For adaptive alerts, provides the observed value at that point. Otherwise yields 0 for static alerts, in which case x values simply define the overall range of the time series.",
                                "minimum": 0,
                                "type": "number"
                              }
                            }
                          }
                        },
                        "suppressions": {
                          "description": "Suppressions associated with the alert.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Alert suppressions define anomalous periods of time to ignore when modeling your site's typical traffic patterns for an adaptive alert.",
                            "type": "object",
                            "required": [
                              "suppressionId",
                              "start",
                              "end"
                            ],
                            "properties": {
                              "end": {
                                "description": "Defines the end of the suppressed time range.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "start": {
                                "description": "Defines the start of the suppressed time range.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "suppressionId": {
                                "description": "Identifies the suppressed time range.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/suppression.yaml"
                            }
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/sparkline.yaml"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/detail.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Bad request](https://techdocs.akamai.com/alerts-app/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Not a valid alert Id",
                  "status": 400,
                  "title": "Illegal Argument",
                  "type": "/alerts-api/error-types/ILLEGAL_ARGUMENT"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.234",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found](https://techdocs.akamai.com/alerts-app/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "ALERT_NOT_FOUND",
                  "detail": "Resource Not Found.",
                  "status": 404,
                  "title": "Not Found",
                  "type": "/alerts-api/error-types/ALERT_NOT_FOUND"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies the alert definition.",
          "example": "{{definitionId}}",
          "in": "path",
          "name": "definitionId",
          "required": true,
          "schema": {
            "example": "s@1623",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/definitionId-path.yaml"
          }
        }
      ]
    },
    "/alert-templates": {
      "get": {
        "description": "Lists templates for all supported alerts. Objects listed in the response provide only high-level information about each alert template, such as its `name` and whether its `origin` is `STATIC` or `ADAPTIVE`.  For a full definition that specifies all required `fields`, get a [specific template instance](https://techdocs.akamai.com/alerts-app/reference/get-template).",
        "operationId": "get-templates",
        "summary": "List templates",
        "tags": [
          "Templates"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/get-templates"
        },
        "responses": {
          "200": {
            "description": "The response lists templates.",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "name": "High Traffic -- Content Delivery",
                      "origin": "STATIC",
                      "templateId": "s@1",
                      "links": [
                        {
                          "href": "/alerts/v2/json-schema/alert-templates/s@1",
                          "rel": "describedBy"
                        },
                        {
                          "href": "/alerts/v2/alert-templates/s@1",
                          "rel": "self"
                        }
                      ],
                      "products": [
                        {
                          "name": "Terra Alta Enterprise Accelerator",
                          "objectId": "Alta_alerts"
                        },
                        {
                          "name": "Terra Alta Enterprise Accelerator Fast File Upload",
                          "objectId": "Alta_ffu_alerts"
                        },
                        {
                          "name": "Adaptive Media Delivery",
                          "objectId": "AMD_alerts"
                        },
                        {
                          "name": "Akamai Cloud Catalyst",
                          "objectId": "Chamonix_alerts"
                        },
                        {
                          "name": "Akamai Cloud Catalyst Fast File Upload",
                          "objectId": "Chamonix_ffu_alerts"
                        }
                      ]
                    },
                    {
                      "name": "SLA Availability",
                      "origin": "STATIC",
                      "templateId": "s@134",
                      "links": [
                        {
                          "href": "/alerts/v2/json-schema/alert-templates/s@134",
                          "rel": "describedBy"
                        },
                        {
                          "href": "/alerts/v2/alert-templates/s@134",
                          "rel": "self"
                        }
                      ],
                      "products": [
                        {
                          "name": "Terra Alta Enterprise Accelerator",
                          "objectId": "Alta_alerts"
                        },
                        {
                          "name": "Terra Alta Enterprise Accelerator Fast File Upload",
                          "objectId": "Alta_ffu_alerts"
                        },
                        {
                          "name": "Terra Alta Enterprise Accelerator SLA Management",
                          "objectId": "Alta_sa_alerts"
                        },
                        {
                          "name": "Terra Alta Enterprise Accelerator Composite Application Acceleration",
                          "objectId": "Alta_tpo_alerts"
                        },
                        {
                          "name": "Adaptive Media Delivery",
                          "objectId": "AMD_alerts"
                        },
                        {
                          "name": "Akamai Cloud Catalyst",
                          "objectId": "Chamonix_alerts"
                        },
                        {
                          "name": "Akamai Cloud Catalyst Fast File Upload",
                          "objectId": "Chamonix_ffu_alerts"
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "This specifies a collection of templates, all of which appear in the `data` array.",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "description": "Alert template describing a type of alert that can be defined or configured for monitoring.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Alert template describing a type of alert that can be defined or configured for monitoring.",
                        "type": "object",
                        "required": [
                          "templateId",
                          "name",
                          "origin",
                          "firingFields",
                          "fields",
                          "links"
                        ],
                        "properties": {
                          "fields": {
                            "description": "Lists the set of fields required to populate an alert based on this template. This doesn't appear within template collections.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "description": "Represents a set of adaptive alert thresholds field with value populated from an endpoint.",
                                  "title": "adaptiveThresholdField",
                                  "x-akamai": {
                                    "file-path": "schemas/type-adaptiveThresholdField.yaml"
                                  },
                                  "allOf": [
                                    {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "required": [
                                        "key"
                                      ],
                                      "properties": {
                                        "description": {
                                          "description": "Text describing a field.",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "key": {
                                          "description": "The field's unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/type-abstractField.yaml"
                                      }
                                    },
                                    {
                                      "additionalProperties": false,
                                      "required": [
                                        "type",
                                        "jsonSchema"
                                      ],
                                      "properties": {
                                        "jsonSchema": {
                                          "description": "Definition of fields the adaptive threshold must contain.",
                                          "type": "object"
                                        },
                                        "type": {
                                          "description": "Field value type, `adaptive-threshold` in this case.",
                                          "enum": [
                                            "adaptive-threshold"
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "description": "Represents a boolean value field.",
                                  "title": "booleanField",
                                  "x-akamai": {
                                    "file-path": "schemas/type-booleanField.yaml"
                                  },
                                  "allOf": [
                                    {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "required": [
                                        "key"
                                      ],
                                      "properties": {
                                        "description": {
                                          "description": "Text describing a field.",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "key": {
                                          "description": "The field's unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/type-abstractField.yaml"
                                      }
                                    },
                                    {
                                      "additionalProperties": false,
                                      "required": [
                                        "type",
                                        "default"
                                      ],
                                      "properties": {
                                        "default": {
                                          "description": "Default value of field, used for fields with a single boolean value.",
                                          "type": "boolean"
                                        },
                                        "type": {
                                          "description": "Field value type, `bool` in this case.",
                                          "enum": [
                                            "bool"
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "description": "Represents a collection of ACG or EDNS objects populated from specified multi-select endpoints.",
                                  "title": "ednsField",
                                  "x-akamai": {
                                    "file-path": "schemas/type-ednsField.yaml"
                                  },
                                  "allOf": [
                                    {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "required": [
                                        "key"
                                      ],
                                      "properties": {
                                        "description": {
                                          "description": "Text describing a field.",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "key": {
                                          "description": "The field's unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/type-abstractField.yaml"
                                      }
                                    },
                                    {
                                      "additionalProperties": false,
                                      "required": [
                                        "type",
                                        "href_acg",
                                        "href_edns",
                                        "jsonSchema"
                                      ],
                                      "properties": {
                                        "href_acg": {
                                          "description": "Represents a URL where ACG content can be found.  This content is often complex and has been filtered due to users' permissions. Only `objectId` is needed in the value array.",
                                          "type": "string"
                                        },
                                        "href_edns": {
                                          "description": "Represents a URL where EDNS content can be found.  This content is often complex and has been filtered due to users' permissions. Only `objectId` is needed in the value array.",
                                          "type": "string"
                                        },
                                        "jsonSchema": {
                                          "description": "Stream json-schema representation.",
                                          "type": "object"
                                        },
                                        "type": {
                                          "description": "Field value type, `edns` in this case.",
                                          "enum": [
                                            "edns"
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "description": "Represents an email field.",
                                  "title": "emailField",
                                  "x-akamai": {
                                    "file-path": "schemas/type-emailField.yaml"
                                  },
                                  "allOf": [
                                    {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "required": [
                                        "key"
                                      ],
                                      "properties": {
                                        "description": {
                                          "description": "Text describing a field.",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "key": {
                                          "description": "The field's unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/type-abstractField.yaml"
                                      }
                                    },
                                    {
                                      "additionalProperties": false,
                                      "required": [
                                        "type",
                                        "default"
                                      ],
                                      "properties": {
                                        "default": {
                                          "description": "String values for the field.",
                                          "minItems": 0,
                                          "type": "array",
                                          "uniqueItems": true,
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "type": {
                                          "description": "Field value type, `email` in this case.",
                                          "enum": [
                                            "email"
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "description": "Represents a float value field.",
                                  "title": "floatField",
                                  "x-akamai": {
                                    "file-path": "schemas/type-floatField.yaml"
                                  },
                                  "allOf": [
                                    {
                                      "description": "Represents a generic number field.",
                                      "x-akamai": {
                                        "file-path": "schemas/type-abstractNumberField.yaml"
                                      },
                                      "allOf": [
                                        {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "required": [
                                            "key"
                                          ],
                                          "properties": {
                                            "description": {
                                              "description": "Text describing a field.",
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "key": {
                                              "description": "The field's unique identifier.",
                                              "minLength": 1,
                                              "type": "string"
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/type-abstractField.yaml"
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "properties": {
                                            "default": {
                                              "description": "Default value of field, used for fields with a single value.",
                                              "type": "number"
                                            },
                                            "label": {
                                              "description": "Label tag associated with this field.",
                                              "type": "string"
                                            },
                                            "maximum": {
                                              "description": "Maximum allowed value.",
                                              "type": "number"
                                            },
                                            "minimum": {
                                              "description": "Minimum allowed value.",
                                              "type": "number"
                                            },
                                            "units": {
                                              "description": "Describes the unit type associated with the object.",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "additionalProperties": false,
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "sizeFloat": {
                                          "description": "Number digits after zero.",
                                          "type": "number"
                                        },
                                        "type": {
                                          "description": "Field value type, `float` in this case.",
                                          "enum": [
                                            "float"
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "description": "Represents a integer value field.",
                                  "title": "integerField",
                                  "x-akamai": {
                                    "file-path": "schemas/type-integerField.yaml"
                                  },
                                  "allOf": [
                                    {
                                      "description": "Represents a generic number field.",
                                      "x-akamai": {
                                        "file-path": "schemas/type-abstractNumberField.yaml"
                                      },
                                      "allOf": [
                                        {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "required": [
                                            "key"
                                          ],
                                          "properties": {
                                            "description": {
                                              "description": "Text describing a field.",
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "key": {
                                              "description": "The field's unique identifier.",
                                              "minLength": 1,
                                              "type": "string"
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/type-abstractField.yaml"
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "properties": {
                                            "default": {
                                              "description": "Default value of field, used for fields with a single value.",
                                              "type": "number"
                                            },
                                            "label": {
                                              "description": "Label tag associated with this field.",
                                              "type": "string"
                                            },
                                            "maximum": {
                                              "description": "Maximum allowed value.",
                                              "type": "number"
                                            },
                                            "minimum": {
                                              "description": "Minimum allowed value.",
                                              "type": "number"
                                            },
                                            "units": {
                                              "description": "Describes the unit type associated with the object.",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "additionalProperties": false,
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "type": {
                                          "description": "Field value type, `int` in this case.",
                                          "enum": [
                                            "int"
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "description": "Represents a long value field.",
                                  "title": "longField",
                                  "x-akamai": {
                                    "file-path": "schemas/type-longField.yaml"
                                  },
                                  "allOf": [
                                    {
                                      "description": "Represents a generic number field.",
                                      "x-akamai": {
                                        "file-path": "schemas/type-abstractNumberField.yaml"
                                      },
                                      "allOf": [
                                        {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "required": [
                                            "key"
                                          ],
                                          "properties": {
                                            "description": {
                                              "description": "Text describing a field.",
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "key": {
                                              "description": "The field's unique identifier.",
                                              "minLength": 1,
                                              "type": "string"
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/type-abstractField.yaml"
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "properties": {
                                            "default": {
                                              "description": "Default value of field, used for fields with a single value.",
                                              "type": "number"
                                            },
                                            "label": {
                                              "description": "Label tag associated with this field.",
                                              "type": "string"
                                            },
                                            "maximum": {
                                              "description": "Maximum allowed value.",
                                              "type": "number"
                                            },
                                            "minimum": {
                                              "description": "Minimum allowed value.",
                                              "type": "number"
                                            },
                                            "units": {
                                              "description": "Describes the unit type associated with the object.",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "additionalProperties": false,
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "type": {
                                          "description": "Field value type, `long` in this case.",
                                          "enum": [
                                            "long"
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "description": "Represents a schedule field.",
                                  "title": "scheduleField",
                                  "x-akamai": {
                                    "file-path": "schemas/type-scheduleField.yaml"
                                  },
                                  "allOf": [
                                    {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "required": [
                                        "key"
                                      ],
                                      "properties": {
                                        "description": {
                                          "description": "Text describing a field.",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "key": {
                                          "description": "The field's unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/type-abstractField.yaml"
                                      }
                                    },
                                    {
                                      "additionalProperties": false,
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "jsonSchema": {
                                          "description": "Schedule json-schema representation.",
                                          "type": "object"
                                        },
                                        "type": {
                                          "description": "Field value type, either `schedule` or `maintenance-schedule`.",
                                          "enum": [
                                            "schedule",
                                            "maintenance-schedule"
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "description": "Represents a field with multiple values populated from an endpoint.",
                                  "title": "selectMultiValueField",
                                  "x-akamai": {
                                    "file-path": "schemas/type-selectMultiValueField.yaml"
                                  },
                                  "allOf": [
                                    {
                                      "description": "Represents a field populated from an endpoint.",
                                      "x-akamai": {
                                        "file-path": "schemas/type-abstractSelectField.yaml"
                                      },
                                      "allOf": [
                                        {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "required": [
                                            "key"
                                          ],
                                          "properties": {
                                            "description": {
                                              "description": "Text describing a field.",
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "key": {
                                              "description": "The field's unique identifier.",
                                              "minLength": 1,
                                              "type": "string"
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/type-abstractField.yaml"
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "required": [
                                            "itemType",
                                            "href"
                                          ],
                                          "properties": {
                                            "href": {
                                              "description": "If present, represents a URL where content for the field can be found. This content is often complex and has been filtered due to users' permissions.",
                                              "type": "string"
                                            },
                                            "itemType": {
                                              "description": "Describes the type of objects returned by the endpoint, either `acg`, `adaptivemetric`, `adaptiveprofile`, `adaptivecpcode`, `altatest`, `arlfile`, `arlid`, `chamonixtest`, `contract`, `cpcode`, `drcpcode`, `dsatest`, `edns`, `encoder`, `eventlog`, `evt_cnt`, `fpdomain`, `fpproperty`, `group`, `httpErrorCode`, `ionhtest`, `ionnatest`, `ionrmtest`, `ionspmtest`, `iphoneFile`, `network`, `player`, `roacontract`, `rej_cnt`, `satest`, `slatest`, `sripslot`, `statest`, `stream`, `sxlslot`, `trigger`, `throttlingCounter`, `visibility`, `waatest`, `regionid`, or `mapruleid`.",
                                              "enum": [
                                                "acg",
                                                "adaptivemetric",
                                                "adaptiveprofile",
                                                "adaptivecpcode",
                                                "altatest",
                                                "arlfile",
                                                "arlid",
                                                "chamonixtest",
                                                "contract",
                                                "cpcode",
                                                "drcpcode",
                                                "dsatest",
                                                "edns",
                                                "encoder",
                                                "eventlog",
                                                "evt_cnt",
                                                "fpdomain",
                                                "fpproperty",
                                                "group",
                                                "httpErrorCode",
                                                "ionhtest",
                                                "ionnatest",
                                                "ionrmtest",
                                                "ionspmtest",
                                                "iphoneFile",
                                                "network",
                                                "player",
                                                "roacontract",
                                                "rej_cnt",
                                                "satest",
                                                "slatest",
                                                "sripslot",
                                                "statest",
                                                "stream",
                                                "sxlslot",
                                                "trigger",
                                                "throttlingCounter",
                                                "visibility",
                                                "waatest",
                                                "regionid",
                                                "mapruleid"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "additionalProperties": false,
                                      "required": [
                                        "type",
                                        "default"
                                      ],
                                      "properties": {
                                        "default": {
                                          "description": "String values for the field.",
                                          "minItems": 1,
                                          "type": "array",
                                          "uniqueItems": true,
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "maxItems": {
                                          "description": "Maximum number of items required in the array.",
                                          "type": "integer"
                                        },
                                        "minItems": {
                                          "description": "Minimum number of items required in the array.",
                                          "type": "integer"
                                        },
                                        "type": {
                                          "description": "Field value type, `multi-select` in this case.",
                                          "type": "string",
                                          "enum": [
                                            "multi-select"
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "description": "Represents a field with value populated from an endpoint.",
                                  "title": "selectSingleValueField",
                                  "x-akamai": {
                                    "file-path": "schemas/type-selectSingleValueField.yaml"
                                  },
                                  "allOf": [
                                    {
                                      "description": "Represents a field populated from an endpoint.",
                                      "x-akamai": {
                                        "file-path": "schemas/type-abstractSelectField.yaml"
                                      },
                                      "allOf": [
                                        {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "required": [
                                            "key"
                                          ],
                                          "properties": {
                                            "description": {
                                              "description": "Text describing a field.",
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "key": {
                                              "description": "The field's unique identifier.",
                                              "minLength": 1,
                                              "type": "string"
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/type-abstractField.yaml"
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "required": [
                                            "itemType",
                                            "href"
                                          ],
                                          "properties": {
                                            "href": {
                                              "description": "If present, represents a URL where content for the field can be found. This content is often complex and has been filtered due to users' permissions.",
                                              "type": "string"
                                            },
                                            "itemType": {
                                              "description": "Describes the type of objects returned by the endpoint, either `acg`, `adaptivemetric`, `adaptiveprofile`, `adaptivecpcode`, `altatest`, `arlfile`, `arlid`, `chamonixtest`, `contract`, `cpcode`, `drcpcode`, `dsatest`, `edns`, `encoder`, `eventlog`, `evt_cnt`, `fpdomain`, `fpproperty`, `group`, `httpErrorCode`, `ionhtest`, `ionnatest`, `ionrmtest`, `ionspmtest`, `iphoneFile`, `network`, `player`, `roacontract`, `rej_cnt`, `satest`, `slatest`, `sripslot`, `statest`, `stream`, `sxlslot`, `trigger`, `throttlingCounter`, `visibility`, `waatest`, `regionid`, or `mapruleid`.",
                                              "enum": [
                                                "acg",
                                                "adaptivemetric",
                                                "adaptiveprofile",
                                                "adaptivecpcode",
                                                "altatest",
                                                "arlfile",
                                                "arlid",
                                                "chamonixtest",
                                                "contract",
                                                "cpcode",
                                                "drcpcode",
                                                "dsatest",
                                                "edns",
                                                "encoder",
                                                "eventlog",
                                                "evt_cnt",
                                                "fpdomain",
                                                "fpproperty",
                                                "group",
                                                "httpErrorCode",
                                                "ionhtest",
                                                "ionnatest",
                                                "ionrmtest",
                                                "ionspmtest",
                                                "iphoneFile",
                                                "network",
                                                "player",
                                                "roacontract",
                                                "rej_cnt",
                                                "satest",
                                                "slatest",
                                                "sripslot",
                                                "statest",
                                                "stream",
                                                "sxlslot",
                                                "trigger",
                                                "throttlingCounter",
                                                "visibility",
                                                "waatest",
                                                "regionid",
                                                "mapruleid"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "additionalProperties": false,
                                      "required": [
                                        "type",
                                        "default"
                                      ],
                                      "properties": {
                                        "default": {
                                          "description": "Single value for field.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "Field value type, `single-select` in this case.",
                                          "enum": [
                                            "single-select"
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "description": "Represents a collection of nameable streams with multiple values populated from an endpoint.",
                                  "title": "streamField",
                                  "x-akamai": {
                                    "file-path": "schemas/type-streamField.yaml"
                                  },
                                  "allOf": [
                                    {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "required": [
                                        "key"
                                      ],
                                      "properties": {
                                        "description": {
                                          "description": "Text describing a field.",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "key": {
                                          "description": "The field's unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/type-abstractField.yaml"
                                      }
                                    },
                                    {
                                      "additionalProperties": false,
                                      "required": [
                                        "type",
                                        "href",
                                        "jsonSchema"
                                      ],
                                      "properties": {
                                        "href": {
                                          "description": "If present, represents a URL where content for the field can be found.  This content is often complex and has been filtered due to users' permissions.",
                                          "type": "string"
                                        },
                                        "jsonSchema": {
                                          "description": "Stream json-schema representation.",
                                          "type": "object"
                                        },
                                        "maxItems": {
                                          "description": "Maximum number of items required in the array.",
                                          "type": "integer"
                                        },
                                        "minItems": {
                                          "description": "Minimum number of items required in the array.",
                                          "type": "integer"
                                        },
                                        "type": {
                                          "description": "Field value type, `stream` in this case.",
                                          "enum": [
                                            "stream"
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "description": "Represents a string value field.",
                                  "title": "stringField",
                                  "x-akamai": {
                                    "file-path": "schemas/type-stringField.yaml"
                                  },
                                  "allOf": [
                                    {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "required": [
                                        "key"
                                      ],
                                      "properties": {
                                        "description": {
                                          "description": "Text describing a field.",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "key": {
                                          "description": "The field's unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/type-abstractField.yaml"
                                      }
                                    },
                                    {
                                      "additionalProperties": false,
                                      "required": [
                                        "type",
                                        "default"
                                      ],
                                      "properties": {
                                        "default": {
                                          "description": "Default value of field, used for fields with a single value.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "Field value type, either `string` or `hidden`.",
                                          "enum": [
                                            "string",
                                            "hidden"
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          "firingFields": {
                            "description": "Lists field names expected in alert firing objects associated with this template. This doesn't appear within template collections.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "pattern": "^[a-z0-9][a-zA-Z0-9]+$",
                              "type": "string"
                            }
                          },
                          "links": {
                            "description": "Link relations to schemas and REST endpoints.",
                            "minItems": 2,
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "rel",
                                "href"
                              ],
                              "properties": {
                                "href": {
                                  "description": "Link to resource of type described by rel.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "rel": {
                                  "description": "Describes type of link.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/links.yaml"
                            }
                          },
                          "name": {
                            "description": "Name of the template.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "origin": {
                            "description": "Identifies the type of alert the template enables, either `STATIC` or `ADAPTIVE`. Static alert types specify raw values, while the adaptive alert type expresses standard deviations. The only available `ADAPTIVE` alert identifies excessive traffic, and its `templateId` is `a@1`.",
                            "type": "string",
                            "enum": [
                              "STATIC",
                              "ADAPTIVE"
                            ]
                          },
                          "products": {
                            "description": "Describes products associated with each template. You can only use the template if one of the `products` is on your contract.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Represents a CDN solution offering.",
                              "type": "object",
                              "required": [
                                "objectId",
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "A basic description of content.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "objectId": {
                                  "description": "A unique identifier for this content.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/product.yaml"
                              }
                            }
                          },
                          "templateId": {
                            "description": "Identifies the template. Template origin types that are `STATIC` and `ADAPTIVE` are distinguished with `s@` and `a@` prefixes.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/template.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/templates.yaml"
                  }
                }
              }
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.145",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/alert-templates/{templateId}": {
      "get": {
        "description": "Fetches a specific template. The response features a full set of `fields` on which to base a [new alert definition](https://techdocs.akamai.com/alerts-app/reference/post-definition).",
        "operationId": "get-template",
        "summary": "Get a template",
        "tags": [
          "Templates"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/get-template"
        },
        "responses": {
          "200": {
            "description": "The response provides the template.",
            "content": {
              "application/json": {
                "example": {
                  "name": "Origin Connection Failure",
                  "origin": "STATIC",
                  "templateId": "s@7",
                  "firingFields": [
                    "cpCode",
                    "cpCodeDescription",
                    "hits",
                    "errors",
                    "alertConditionErrors",
                    "alertThreshold",
                    "edgeIp",
                    "alertDelay",
                    "emailTo"
                  ],
                  "fields": [
                    {
                      "default": "",
                      "key": "name",
                      "type": "string"
                    },
                    {
                      "default": "",
                      "key": "definitionId",
                      "type": "hidden"
                    },
                    {
                      "default": "s@7",
                      "key": "templateId",
                      "type": "hidden"
                    },
                    {
                      "href": "/alerts/v2/access-control-data?type=cpcode&templateId=s@7",
                      "itemType": "cpcode",
                      "key": "aca_cpcode",
                      "type": "multi-select",
                      "default": []
                    },
                    {
                      "default": "both",
                      "href": "/alerts/v2/access-control-data?type=network",
                      "itemType": "network",
                      "key": "network",
                      "type": "single-select"
                    },
                    {
                      "default": "cpercent",
                      "key": "paramName",
                      "type": "hidden"
                    },
                    {
                      "default": 2,
                      "key": "param",
                      "label": "alertMeWhenOver",
                      "maximum": 100,
                      "minimum": 1,
                      "sizeFloat": 2,
                      "type": "float",
                      "units": "percentOfTheConnectionsToTheOriginServerFail"
                    },
                    {
                      "default": 0,
                      "key": "alertLowerBound",
                      "maximum": 999999,
                      "minimum": 0,
                      "type": "int",
                      "units": "connections"
                    },
                    {
                      "default": true,
                      "key": "isSum",
                      "type": "bool"
                    },
                    {
                      "key": "email",
                      "type": "email",
                      "default": []
                    },
                    {
                      "key": "emailBrief",
                      "type": "email",
                      "default": []
                    },
                    {
                      "default": true,
                      "key": "emailHtmlFormat",
                      "type": "bool"
                    },
                    {
                      "default": "",
                      "key": "origVisibility",
                      "type": "hidden"
                    },
                    {
                      "default": "all",
                      "href": "/alerts/v2/access-control-data?type=visibility",
                      "itemType": "visibility",
                      "key": "visibility",
                      "type": "single-select"
                    }
                  ],
                  "links": [
                    {
                      "href": "/alerts/v2/json-schema/alert-templates/s@7",
                      "rel": "describedBy"
                    },
                    {
                      "href": "/alerts/v2/alert-templates/s@7",
                      "rel": "self"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Alert template describing a type of alert that can be defined or configured for monitoring.",
                  "type": "object",
                  "required": [
                    "templateId",
                    "name",
                    "origin",
                    "firingFields",
                    "fields",
                    "links"
                  ],
                  "properties": {
                    "fields": {
                      "description": "Lists the set of fields required to populate an alert based on this template. This doesn't appear within template collections.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "description": "Represents a set of adaptive alert thresholds field with value populated from an endpoint.",
                            "title": "adaptiveThresholdField",
                            "x-akamai": {
                              "file-path": "schemas/type-adaptiveThresholdField.yaml"
                            },
                            "allOf": [
                              {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "description": {
                                    "description": "Text describing a field.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "key": {
                                    "description": "The field's unique identifier.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/type-abstractField.yaml"
                                }
                              },
                              {
                                "additionalProperties": false,
                                "required": [
                                  "type",
                                  "jsonSchema"
                                ],
                                "properties": {
                                  "jsonSchema": {
                                    "description": "Definition of fields the adaptive threshold must contain.",
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "Field value type, `adaptive-threshold` in this case.",
                                    "enum": [
                                      "adaptive-threshold"
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "description": "Represents a boolean value field.",
                            "title": "booleanField",
                            "x-akamai": {
                              "file-path": "schemas/type-booleanField.yaml"
                            },
                            "allOf": [
                              {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "description": {
                                    "description": "Text describing a field.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "key": {
                                    "description": "The field's unique identifier.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/type-abstractField.yaml"
                                }
                              },
                              {
                                "additionalProperties": false,
                                "required": [
                                  "type",
                                  "default"
                                ],
                                "properties": {
                                  "default": {
                                    "description": "Default value of field, used for fields with a single boolean value.",
                                    "type": "boolean"
                                  },
                                  "type": {
                                    "description": "Field value type, `bool` in this case.",
                                    "enum": [
                                      "bool"
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "description": "Represents a collection of ACG or EDNS objects populated from specified multi-select endpoints.",
                            "title": "ednsField",
                            "x-akamai": {
                              "file-path": "schemas/type-ednsField.yaml"
                            },
                            "allOf": [
                              {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "description": {
                                    "description": "Text describing a field.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "key": {
                                    "description": "The field's unique identifier.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/type-abstractField.yaml"
                                }
                              },
                              {
                                "additionalProperties": false,
                                "required": [
                                  "type",
                                  "href_acg",
                                  "href_edns",
                                  "jsonSchema"
                                ],
                                "properties": {
                                  "href_acg": {
                                    "description": "Represents a URL where ACG content can be found.  This content is often complex and has been filtered due to users' permissions. Only `objectId` is needed in the value array.",
                                    "type": "string"
                                  },
                                  "href_edns": {
                                    "description": "Represents a URL where EDNS content can be found.  This content is often complex and has been filtered due to users' permissions. Only `objectId` is needed in the value array.",
                                    "type": "string"
                                  },
                                  "jsonSchema": {
                                    "description": "Stream json-schema representation.",
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "Field value type, `edns` in this case.",
                                    "enum": [
                                      "edns"
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "description": "Represents an email field.",
                            "title": "emailField",
                            "x-akamai": {
                              "file-path": "schemas/type-emailField.yaml"
                            },
                            "allOf": [
                              {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "description": {
                                    "description": "Text describing a field.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "key": {
                                    "description": "The field's unique identifier.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/type-abstractField.yaml"
                                }
                              },
                              {
                                "additionalProperties": false,
                                "required": [
                                  "type",
                                  "default"
                                ],
                                "properties": {
                                  "default": {
                                    "description": "String values for the field.",
                                    "minItems": 0,
                                    "type": "array",
                                    "uniqueItems": true,
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "type": {
                                    "description": "Field value type, `email` in this case.",
                                    "enum": [
                                      "email"
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "description": "Represents a float value field.",
                            "title": "floatField",
                            "x-akamai": {
                              "file-path": "schemas/type-floatField.yaml"
                            },
                            "allOf": [
                              {
                                "description": "Represents a generic number field.",
                                "x-akamai": {
                                  "file-path": "schemas/type-abstractNumberField.yaml"
                                },
                                "allOf": [
                                  {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                      "key"
                                    ],
                                    "properties": {
                                      "description": {
                                        "description": "Text describing a field.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "key": {
                                        "description": "The field's unique identifier.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/type-abstractField.yaml"
                                    }
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "default": {
                                        "description": "Default value of field, used for fields with a single value.",
                                        "type": "number"
                                      },
                                      "label": {
                                        "description": "Label tag associated with this field.",
                                        "type": "string"
                                      },
                                      "maximum": {
                                        "description": "Maximum allowed value.",
                                        "type": "number"
                                      },
                                      "minimum": {
                                        "description": "Minimum allowed value.",
                                        "type": "number"
                                      },
                                      "units": {
                                        "description": "Describes the unit type associated with the object.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "additionalProperties": false,
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "sizeFloat": {
                                    "description": "Number digits after zero.",
                                    "type": "number"
                                  },
                                  "type": {
                                    "description": "Field value type, `float` in this case.",
                                    "enum": [
                                      "float"
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "description": "Represents a integer value field.",
                            "title": "integerField",
                            "x-akamai": {
                              "file-path": "schemas/type-integerField.yaml"
                            },
                            "allOf": [
                              {
                                "description": "Represents a generic number field.",
                                "x-akamai": {
                                  "file-path": "schemas/type-abstractNumberField.yaml"
                                },
                                "allOf": [
                                  {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                      "key"
                                    ],
                                    "properties": {
                                      "description": {
                                        "description": "Text describing a field.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "key": {
                                        "description": "The field's unique identifier.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/type-abstractField.yaml"
                                    }
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "default": {
                                        "description": "Default value of field, used for fields with a single value.",
                                        "type": "number"
                                      },
                                      "label": {
                                        "description": "Label tag associated with this field.",
                                        "type": "string"
                                      },
                                      "maximum": {
                                        "description": "Maximum allowed value.",
                                        "type": "number"
                                      },
                                      "minimum": {
                                        "description": "Minimum allowed value.",
                                        "type": "number"
                                      },
                                      "units": {
                                        "description": "Describes the unit type associated with the object.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "additionalProperties": false,
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "type": {
                                    "description": "Field value type, `int` in this case.",
                                    "enum": [
                                      "int"
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "description": "Represents a long value field.",
                            "title": "longField",
                            "x-akamai": {
                              "file-path": "schemas/type-longField.yaml"
                            },
                            "allOf": [
                              {
                                "description": "Represents a generic number field.",
                                "x-akamai": {
                                  "file-path": "schemas/type-abstractNumberField.yaml"
                                },
                                "allOf": [
                                  {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                      "key"
                                    ],
                                    "properties": {
                                      "description": {
                                        "description": "Text describing a field.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "key": {
                                        "description": "The field's unique identifier.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/type-abstractField.yaml"
                                    }
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "default": {
                                        "description": "Default value of field, used for fields with a single value.",
                                        "type": "number"
                                      },
                                      "label": {
                                        "description": "Label tag associated with this field.",
                                        "type": "string"
                                      },
                                      "maximum": {
                                        "description": "Maximum allowed value.",
                                        "type": "number"
                                      },
                                      "minimum": {
                                        "description": "Minimum allowed value.",
                                        "type": "number"
                                      },
                                      "units": {
                                        "description": "Describes the unit type associated with the object.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "additionalProperties": false,
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "type": {
                                    "description": "Field value type, `long` in this case.",
                                    "enum": [
                                      "long"
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "description": "Represents a schedule field.",
                            "title": "scheduleField",
                            "x-akamai": {
                              "file-path": "schemas/type-scheduleField.yaml"
                            },
                            "allOf": [
                              {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "description": {
                                    "description": "Text describing a field.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "key": {
                                    "description": "The field's unique identifier.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/type-abstractField.yaml"
                                }
                              },
                              {
                                "additionalProperties": false,
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "jsonSchema": {
                                    "description": "Schedule json-schema representation.",
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "Field value type, either `schedule` or `maintenance-schedule`.",
                                    "enum": [
                                      "schedule",
                                      "maintenance-schedule"
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "description": "Represents a field with multiple values populated from an endpoint.",
                            "title": "selectMultiValueField",
                            "x-akamai": {
                              "file-path": "schemas/type-selectMultiValueField.yaml"
                            },
                            "allOf": [
                              {
                                "description": "Represents a field populated from an endpoint.",
                                "x-akamai": {
                                  "file-path": "schemas/type-abstractSelectField.yaml"
                                },
                                "allOf": [
                                  {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                      "key"
                                    ],
                                    "properties": {
                                      "description": {
                                        "description": "Text describing a field.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "key": {
                                        "description": "The field's unique identifier.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/type-abstractField.yaml"
                                    }
                                  },
                                  {
                                    "additionalProperties": false,
                                    "required": [
                                      "itemType",
                                      "href"
                                    ],
                                    "properties": {
                                      "href": {
                                        "description": "If present, represents a URL where content for the field can be found. This content is often complex and has been filtered due to users' permissions.",
                                        "type": "string"
                                      },
                                      "itemType": {
                                        "description": "Describes the type of objects returned by the endpoint, either `acg`, `adaptivemetric`, `adaptiveprofile`, `adaptivecpcode`, `altatest`, `arlfile`, `arlid`, `chamonixtest`, `contract`, `cpcode`, `drcpcode`, `dsatest`, `edns`, `encoder`, `eventlog`, `evt_cnt`, `fpdomain`, `fpproperty`, `group`, `httpErrorCode`, `ionhtest`, `ionnatest`, `ionrmtest`, `ionspmtest`, `iphoneFile`, `network`, `player`, `roacontract`, `rej_cnt`, `satest`, `slatest`, `sripslot`, `statest`, `stream`, `sxlslot`, `trigger`, `throttlingCounter`, `visibility`, `waatest`, `regionid`, or `mapruleid`.",
                                        "enum": [
                                          "acg",
                                          "adaptivemetric",
                                          "adaptiveprofile",
                                          "adaptivecpcode",
                                          "altatest",
                                          "arlfile",
                                          "arlid",
                                          "chamonixtest",
                                          "contract",
                                          "cpcode",
                                          "drcpcode",
                                          "dsatest",
                                          "edns",
                                          "encoder",
                                          "eventlog",
                                          "evt_cnt",
                                          "fpdomain",
                                          "fpproperty",
                                          "group",
                                          "httpErrorCode",
                                          "ionhtest",
                                          "ionnatest",
                                          "ionrmtest",
                                          "ionspmtest",
                                          "iphoneFile",
                                          "network",
                                          "player",
                                          "roacontract",
                                          "rej_cnt",
                                          "satest",
                                          "slatest",
                                          "sripslot",
                                          "statest",
                                          "stream",
                                          "sxlslot",
                                          "trigger",
                                          "throttlingCounter",
                                          "visibility",
                                          "waatest",
                                          "regionid",
                                          "mapruleid"
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "additionalProperties": false,
                                "required": [
                                  "type",
                                  "default"
                                ],
                                "properties": {
                                  "default": {
                                    "description": "String values for the field.",
                                    "minItems": 1,
                                    "type": "array",
                                    "uniqueItems": true,
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "maxItems": {
                                    "description": "Maximum number of items required in the array.",
                                    "type": "integer"
                                  },
                                  "minItems": {
                                    "description": "Minimum number of items required in the array.",
                                    "type": "integer"
                                  },
                                  "type": {
                                    "description": "Field value type, `multi-select` in this case.",
                                    "type": "string",
                                    "enum": [
                                      "multi-select"
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "description": "Represents a field with value populated from an endpoint.",
                            "title": "selectSingleValueField",
                            "x-akamai": {
                              "file-path": "schemas/type-selectSingleValueField.yaml"
                            },
                            "allOf": [
                              {
                                "description": "Represents a field populated from an endpoint.",
                                "x-akamai": {
                                  "file-path": "schemas/type-abstractSelectField.yaml"
                                },
                                "allOf": [
                                  {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                      "key"
                                    ],
                                    "properties": {
                                      "description": {
                                        "description": "Text describing a field.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "key": {
                                        "description": "The field's unique identifier.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/type-abstractField.yaml"
                                    }
                                  },
                                  {
                                    "additionalProperties": false,
                                    "required": [
                                      "itemType",
                                      "href"
                                    ],
                                    "properties": {
                                      "href": {
                                        "description": "If present, represents a URL where content for the field can be found. This content is often complex and has been filtered due to users' permissions.",
                                        "type": "string"
                                      },
                                      "itemType": {
                                        "description": "Describes the type of objects returned by the endpoint, either `acg`, `adaptivemetric`, `adaptiveprofile`, `adaptivecpcode`, `altatest`, `arlfile`, `arlid`, `chamonixtest`, `contract`, `cpcode`, `drcpcode`, `dsatest`, `edns`, `encoder`, `eventlog`, `evt_cnt`, `fpdomain`, `fpproperty`, `group`, `httpErrorCode`, `ionhtest`, `ionnatest`, `ionrmtest`, `ionspmtest`, `iphoneFile`, `network`, `player`, `roacontract`, `rej_cnt`, `satest`, `slatest`, `sripslot`, `statest`, `stream`, `sxlslot`, `trigger`, `throttlingCounter`, `visibility`, `waatest`, `regionid`, or `mapruleid`.",
                                        "enum": [
                                          "acg",
                                          "adaptivemetric",
                                          "adaptiveprofile",
                                          "adaptivecpcode",
                                          "altatest",
                                          "arlfile",
                                          "arlid",
                                          "chamonixtest",
                                          "contract",
                                          "cpcode",
                                          "drcpcode",
                                          "dsatest",
                                          "edns",
                                          "encoder",
                                          "eventlog",
                                          "evt_cnt",
                                          "fpdomain",
                                          "fpproperty",
                                          "group",
                                          "httpErrorCode",
                                          "ionhtest",
                                          "ionnatest",
                                          "ionrmtest",
                                          "ionspmtest",
                                          "iphoneFile",
                                          "network",
                                          "player",
                                          "roacontract",
                                          "rej_cnt",
                                          "satest",
                                          "slatest",
                                          "sripslot",
                                          "statest",
                                          "stream",
                                          "sxlslot",
                                          "trigger",
                                          "throttlingCounter",
                                          "visibility",
                                          "waatest",
                                          "regionid",
                                          "mapruleid"
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "additionalProperties": false,
                                "required": [
                                  "type",
                                  "default"
                                ],
                                "properties": {
                                  "default": {
                                    "description": "Single value for field.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Field value type, `single-select` in this case.",
                                    "enum": [
                                      "single-select"
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "description": "Represents a collection of nameable streams with multiple values populated from an endpoint.",
                            "title": "streamField",
                            "x-akamai": {
                              "file-path": "schemas/type-streamField.yaml"
                            },
                            "allOf": [
                              {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "description": {
                                    "description": "Text describing a field.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "key": {
                                    "description": "The field's unique identifier.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/type-abstractField.yaml"
                                }
                              },
                              {
                                "additionalProperties": false,
                                "required": [
                                  "type",
                                  "href",
                                  "jsonSchema"
                                ],
                                "properties": {
                                  "href": {
                                    "description": "If present, represents a URL where content for the field can be found.  This content is often complex and has been filtered due to users' permissions.",
                                    "type": "string"
                                  },
                                  "jsonSchema": {
                                    "description": "Stream json-schema representation.",
                                    "type": "object"
                                  },
                                  "maxItems": {
                                    "description": "Maximum number of items required in the array.",
                                    "type": "integer"
                                  },
                                  "minItems": {
                                    "description": "Minimum number of items required in the array.",
                                    "type": "integer"
                                  },
                                  "type": {
                                    "description": "Field value type, `stream` in this case.",
                                    "enum": [
                                      "stream"
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "description": "Represents a string value field.",
                            "title": "stringField",
                            "x-akamai": {
                              "file-path": "schemas/type-stringField.yaml"
                            },
                            "allOf": [
                              {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "description": {
                                    "description": "Text describing a field.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "key": {
                                    "description": "The field's unique identifier.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/type-abstractField.yaml"
                                }
                              },
                              {
                                "additionalProperties": false,
                                "required": [
                                  "type",
                                  "default"
                                ],
                                "properties": {
                                  "default": {
                                    "description": "Default value of field, used for fields with a single value.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Field value type, either `string` or `hidden`.",
                                    "enum": [
                                      "string",
                                      "hidden"
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "firingFields": {
                      "description": "Lists field names expected in alert firing objects associated with this template. This doesn't appear within template collections.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "pattern": "^[a-z0-9][a-zA-Z0-9]+$",
                        "type": "string"
                      }
                    },
                    "links": {
                      "description": "Link relations to schemas and REST endpoints.",
                      "minItems": 2,
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "rel",
                          "href"
                        ],
                        "properties": {
                          "href": {
                            "description": "Link to resource of type described by rel.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "rel": {
                            "description": "Describes type of link.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/links.yaml"
                      }
                    },
                    "name": {
                      "description": "Name of the template.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "origin": {
                      "description": "Identifies the type of alert the template enables, either `STATIC` or `ADAPTIVE`. Static alert types specify raw values, while the adaptive alert type expresses standard deviations. The only available `ADAPTIVE` alert identifies excessive traffic, and its `templateId` is `a@1`.",
                      "type": "string",
                      "enum": [
                        "STATIC",
                        "ADAPTIVE"
                      ]
                    },
                    "products": {
                      "description": "Describes products associated with each template. You can only use the template if one of the `products` is on your contract.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents a CDN solution offering.",
                        "type": "object",
                        "required": [
                          "objectId",
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "A basic description of content.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "objectId": {
                            "description": "A unique identifier for this content.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/product.yaml"
                        }
                      }
                    },
                    "templateId": {
                      "description": "Identifies the template. Template origin types that are `STATIC` and `ADAPTIVE` are distinguished with `s@` and `a@` prefixes.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/template.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Bad request](https://techdocs.akamai.com/alerts-app/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Not a valid alert Id",
                  "status": 400,
                  "title": "Illegal Argument",
                  "type": "/alerts-api/error-types/ILLEGAL_ARGUMENT"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.228",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found](https://techdocs.akamai.com/alerts-app/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "ALERT_NOT_FOUND",
                  "detail": "Resource Not Found.",
                  "status": 404,
                  "title": "Not Found",
                  "type": "/alerts-api/error-types/ALERT_NOT_FOUND"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for the template. Template `origin` types that are `STATIC` and `ADAPTIVE` are distinguished with `s@` and `a@` prefixes.",
          "example": "{{templateId}}",
          "in": "path",
          "name": "templateId",
          "required": true,
          "schema": {
            "example": "s@44",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/templateId-path.yaml"
          }
        }
      ]
    },
    "/json-schema/alert-definition/{templateId}": {
      "get": {
        "description": "Gets the JSON schema that describes the contents of a specific type of alert, depending on the template used to create it. This is useful to validate the contents of a [new alert request](https://techdocs.akamai.com/alerts-app/reference/post-definition) before POSTing it.",
        "operationId": "get-schema-definition-template",
        "summary": "Get definition schema",
        "tags": [
          "Alert definition"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/get-schema-definition-template"
        },
        "responses": {
          "200": {
            "description": "The response provides the definition schema.",
            "content": {
              "application/schema+json": {
                "example": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "description": "Alert configured with thresholds for monitoring.",
                  "title": "AlertDefinition",
                  "type": "object",
                  "required": [
                    "fields"
                  ],
                  "links": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "description": "Link relations to schemas and REST endpoints",
                    "minItems": 2,
                    "title": "JSON link relations",
                    "type": "array",
                    "uniqueItems": true,
                    "required": [
                      "rel",
                      "href"
                    ],
                    "items": {
                      "href": {
                        "description": "Link to resource of type described by rel",
                        "type": "string"
                      },
                      "rel": {
                        "description": "Describes type of link",
                        "type": "string"
                      }
                    }
                  },
                  "properties": {
                    "accountId": {
                      "type": "string"
                    },
                    "definitionId": {
                      "type": "string"
                    },
                    "editInfo": {
                      "type": "object",
                      "required": [
                        "createdAt",
                        "createdBy",
                        "editAt",
                        "editBy",
                        "active"
                      ],
                      "properties": {
                        "active": {
                          "type": "boolean"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "createdBy": {
                          "type": "string"
                        },
                        "editAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "editBy": {
                          "type": "string"
                        }
                      }
                    },
                    "fields": {
                      "type": "object",
                      "required": [
                        "aca_cpcode",
                        "definitionId",
                        "email",
                        "emailBrief",
                        "emailHtmlFormat",
                        "group",
                        "isSum",
                        "name",
                        "network",
                        "origVisibility",
                        "param",
                        "paramName",
                        "templateId",
                        "visibility"
                      ],
                      "properties": {
                        "aca_cpcode": {
                          "items": "string",
                          "minItems": 1,
                          "type": "array",
                          "uniqueItems": true
                        },
                        "definitionId": {
                          "type": "string"
                        },
                        "email": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "emailBrief": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "emailHtmlFormat": {
                          "type": "boolean"
                        },
                        "group": {
                          "items": "string",
                          "maxItems": 1,
                          "minItems": 1,
                          "type": "array",
                          "uniqueItems": true
                        },
                        "isSum": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "network": {
                          "type": "string"
                        },
                        "origVisibility": {
                          "type": "string"
                        },
                        "param": {
                          "type": "number"
                        },
                        "paramName": {
                          "type": "string"
                        },
                        "templateId": {
                          "type": "string"
                        },
                        "visibility": {
                          "type": "string"
                        }
                      }
                    },
                    "origin": {
                      "description": "Name of system of record",
                      "enum": [
                        "STATIC",
                        "ADAPTIVE"
                      ]
                    }
                  }
                },
                "schema": {
                  "description": "JSON schema.",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/schema.yaml"
                  }
                }
              }
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.200",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for the template. Template `origin` types that are `STATIC` and `ADAPTIVE` are distinguished with `s@` and `a@` prefixes.",
          "example": "{{templateId}}",
          "in": "path",
          "name": "templateId",
          "required": true,
          "schema": {
            "example": "s@44",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/templateId-path.yaml"
          }
        }
      ]
    },
    "/json-schema/alert-details": {
      "get": {
        "description": "Gets the JSON schema that describes the contents of a verbose set of alert details.",
        "operationId": "get-schema-details",
        "summary": "Get details schema",
        "tags": [
          "Alert details"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/get-schema-details"
        },
        "responses": {
          "200": {
            "description": "The response provides the details schema.",
            "content": {
              "application/schema+json": {
                "example": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "description": "Configuration details used together for presentation purposes.",
                  "title": "Alert Details Helper Object",
                  "type": "object",
                  "required": [
                    "definitionId",
                    "definition",
                    "alerts",
                    "links"
                  ],
                  "properties": {
                    "activity": {
                      "type": "array",
                      "required": [
                        "time",
                        "messageKey"
                      ],
                      "items": {
                        "messageArgs": {
                          "description": "Json object with additional information that may be useful in adding detail to the message.",
                          "type": "object"
                        },
                        "messageKey": {
                          "description": "internationalization token or message to present to user",
                          "type": "string"
                        },
                        "time": {
                          "description": "ISO-8601 date-time value",
                          "format": "date-time",
                          "type": "string"
                        }
                      }
                    },
                    "alerts": {
                      "type": "array",
                      "items": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "description": "Alert whose criteria were met with information on the state when the alert was activated.",
                        "minItems": 0,
                        "title": "List of fired alerts",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "type": "object",
                          "required": [
                            "firingId",
                            "definitionId",
                            "name",
                            "startTime",
                            "endTime",
                            "service",
                            "fieldMap"
                          ],
                          "properties": {
                            "definitionId": {
                              "type": "string"
                            },
                            "endTime": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "fieldMap": {
                              "type": "object"
                            },
                            "firingId": {
                              "type": "string"
                            },
                            "links": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "description": "Link relations to schemas and rest endpoints",
                              "minItems": 2,
                              "title": "Json link relations",
                              "type": "array",
                              "uniqueItems": true,
                              "required": [
                                "rel",
                                "href"
                              ],
                              "items": {
                                "href": {
                                  "description": "link to resource of type described by rel",
                                  "type": "string"
                                },
                                "rel": {
                                  "description": "Describes type of link",
                                  "type": "string"
                                }
                              }
                            },
                            "name": {
                              "type": "string"
                            },
                            "service": {
                              "type": "string"
                            },
                            "startTime": {
                              "format": "date-time",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "definition": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "description": "Alert configured with thresholds for monitoring.",
                      "title": "AlertDefinition",
                      "type": "object",
                      "required": [
                        "fields"
                      ],
                      "links": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "description": "Link relations to schemas and rest endpoints",
                        "minItems": 2,
                        "title": "Json link relations",
                        "type": "array",
                        "uniqueItems": true,
                        "required": [
                          "rel",
                          "href"
                        ],
                        "items": {
                          "href": {
                            "description": "link to resource of type described by rel",
                            "type": "string"
                          },
                          "rel": {
                            "description": "Describes type of link",
                            "type": "string"
                          }
                        }
                      },
                      "properties": {
                        "accountId": {
                          "type": "string"
                        },
                        "definitionId": {
                          "type": "string"
                        },
                        "editInfo": {
                          "type": "object",
                          "required": [
                            "createdAt",
                            "createdBy",
                            "editAt",
                            "editBy",
                            "active"
                          ],
                          "properties": {
                            "active": {
                              "type": "boolean"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "createdBy": {
                              "type": "string"
                            },
                            "editAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "editBy": {
                              "type": "string"
                            }
                          }
                        },
                        "fields": {
                          "type": "object"
                        },
                        "origin": {
                          "description": "name of system of record",
                          "enum": [
                            "STATIC",
                            "ADAPTIVE"
                          ]
                        }
                      }
                    },
                    "definitionId": {
                      "type": "string"
                    },
                    "links": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "description": "Link relations to schemas and rest endpoints",
                      "minItems": 2,
                      "title": "Json link relations",
                      "type": "array",
                      "uniqueItems": true,
                      "required": [
                        "rel",
                        "href"
                      ],
                      "items": {
                        "href": {
                          "description": "link to resource of type described by rel",
                          "type": "string"
                        },
                        "rel": {
                          "description": "Describes type of link",
                          "type": "string"
                        }
                      }
                    },
                    "sparkline": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "description": "JSON used to represent graph data.  Amount of data varies with parameters supplied.",
                      "title": "Sparkline",
                      "type": "object",
                      "required": [
                        "definitionId",
                        "points",
                        "anomalies"
                      ],
                      "properties": {
                        "anomalies": {
                          "description": "Array of alert data associated with graph period",
                          "type": "array",
                          "items": {
                            "title": "Alert instances",
                            "type": "object",
                            "required": [
                              "start",
                              "firingId"
                            ],
                            "properties": {
                              "end": {
                                "description": "End time of the anomaly.  If zero use the current time.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "firingId": {
                                "description": "Alert firing id associated with this anomaly",
                                "type": "string"
                              },
                              "start": {
                                "description": "start time of the anomaly",
                                "format": "date-time",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "definitionId": {
                          "description": "a unique identifier for the associated alert definition",
                          "type": "string"
                        },
                        "points": {
                          "description": "Array of graph data for rendering traffic information.  Not always available.",
                          "type": "array",
                          "items": {
                            "title": "Datapoint",
                            "type": "object",
                            "required": [
                              "x",
                              "y"
                            ],
                            "properties": {
                              "high": {
                                "description": "upper estimate",
                                "type": "number"
                              },
                              "low": {
                                "description": "lower estimate",
                                "type": "number"
                              },
                              "x": {
                                "description": "timestamp in ISO 8601 format",
                                "format": "date-time",
                                "type": "string"
                              },
                              "y": {
                                "description": "observed value",
                                "type": "number"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "description": "JSON schema.",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/schema.yaml"
                  }
                }
              }
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.170",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/json-schema/alert-firings": {
      "get": {
        "description": "Gets the JSON schema that describes the contents of an alert firing.",
        "operationId": "get-schema-firings",
        "summary": "Get firings schema",
        "tags": [
          "Alert firings"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/get-schema-firings"
        },
        "responses": {
          "200": {
            "description": "The response provides the firings schema.",
            "content": {
              "application/schema+json": {
                "example": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "description": "Alert whose criteria were met with information on the state when the alert was activated.",
                  "minItems": 0,
                  "title": "List of fired alerts",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "required": [
                      "firingId",
                      "definitionId",
                      "name",
                      "startTime",
                      "endTime",
                      "service",
                      "fieldMap"
                    ],
                    "properties": {
                      "definitionId": {
                        "type": "string"
                      },
                      "endTime": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "fieldMap": {
                        "type": "object"
                      },
                      "firingId": {
                        "type": "string"
                      },
                      "links": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "description": "Link relations to schemas and rest endpoints",
                        "minItems": 2,
                        "title": "Json link relations",
                        "type": "array",
                        "uniqueItems": true,
                        "required": [
                          "rel",
                          "href"
                        ],
                        "items": {
                          "href": {
                            "description": "link to resource of type described by rel",
                            "type": "string"
                          },
                          "rel": {
                            "description": "Describes type of link",
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "service": {
                        "type": "string"
                      },
                      "startTime": {
                        "format": "date-time",
                        "type": "string"
                      }
                    }
                  }
                },
                "schema": {
                  "description": "JSON schema.",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/schema.yaml"
                  }
                }
              }
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.65",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/json-schema/alert-summaries": {
      "get": {
        "description": "Gets the JSON schema that describes the contents of an alert summary.",
        "operationId": "get-schema-summaries",
        "summary": "Get summary schema",
        "tags": [
          "Alert summaries"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/get-schema-summaries"
        },
        "responses": {
          "200": {
            "description": "The response provides the summary schema.",
            "content": {
              "application/schema+json": {
                "example": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "description": "Summary of configuration and recent firing information.",
                  "minItems": 0,
                  "required": true,
                  "title": "Alert Configuration Summary Helper Object",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "object",
                    "required": [
                      "definitionId",
                      "name",
                      "lastTriggered",
                      "links"
                    ],
                    "properties": {
                      "definitionId": {
                        "type": "string"
                      },
                      "lastTriggered": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "links": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "description": "Link relations to schemas and rest endpoints",
                        "minItems": 2,
                        "title": "Json link relations",
                        "type": "array",
                        "uniqueItems": true,
                        "required": [
                          "rel",
                          "href"
                        ],
                        "items": {
                          "href": {
                            "description": "link to resource of type described by rel",
                            "type": "string"
                          },
                          "rel": {
                            "description": "Describes type of link",
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "schema": {
                  "description": "JSON schema.",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/schema.yaml"
                  }
                }
              }
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.151",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/json-schema/alert-template": {
      "get": {
        "description": "Gets the JSON schema that describes the contents of an alert template.",
        "operationId": "get-schema-template",
        "summary": "Get template schema",
        "tags": [
          "Alert template"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/get-schema-template"
        },
        "responses": {
          "200": {
            "description": "The response provides the template schema.",
            "content": {
              "application/schema+json": {
                "example": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "description": "Alert template describing a type of alert that can be defined/configured for monitoring.",
                  "title": "Alert Template",
                  "type": "object",
                  "required": [
                    "templateId",
                    "name",
                    "origin",
                    "firingFields",
                    "fields",
                    "links"
                  ],
                  "definitions": {
                    "abstractField": {
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "description": {
                          "description": "text describing a field",
                          "type": "string"
                        },
                        "key": {
                          "description": "name or key of field",
                          "type": "string"
                        }
                      }
                    },
                    "abstractNumberField": {
                      "description": "Represents a generic number field",
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "description": {
                              "description": "text describing a field",
                              "type": "string"
                            },
                            "key": {
                              "description": "name or key of field",
                              "type": "string"
                            }
                          }
                        },
                        {
                          "properties": {
                            "default": {
                              "description": "default value of field.  Used for fields with a single value.",
                              "type": "number"
                            },
                            "label": {
                              "description": "label tag associated with this field",
                              "type": "string"
                            },
                            "maximum": {
                              "description": "maximum allowed value",
                              "type": "number"
                            },
                            "minimum": {
                              "description": "minimum allowed value",
                              "type": "number"
                            },
                            "units": {
                              "description": "Describes unit type associated with the object",
                              "type": "string"
                            }
                          }
                        }
                      ]
                    },
                    "abstractSelectField": {
                      "description": "Represents a field populated from an endpoint",
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "description": {
                              "description": "text describing a field",
                              "type": "string"
                            },
                            "key": {
                              "description": "name or key of field",
                              "type": "string"
                            }
                          }
                        },
                        {
                          "required": [
                            "itemType",
                            "href"
                          ],
                          "properties": {
                            "href": {
                              "description": "If present, represents a url where content for the field can be found.  This content is often complex and has been filtered due to users permissions.",
                              "type": "string"
                            },
                            "itemType": {
                              "description": "Describes type of objects returned by the endpoint",
                              "enum": [
                                "acg",
                                "adaptivemetric",
                                "adaptiveprofile",
                                "adaptivecpcode",
                                "altatest",
                                "arlfile",
                                "arlid",
                                "chamonixtest",
                                "contract",
                                "cpcode",
                                "drcpcode",
                                "dsatest",
                                "edns",
                                "eventlog",
                                "fpdomain",
                                "fpproperty",
                                "httpErrorCode",
                                "ionhtest",
                                "ionnatest",
                                "ionrmtest",
                                "ionspmtest",
                                "iphoneFile",
                                "network",
                                "roacontract",
                                "satest",
                                "slatest",
                                "sripslot",
                                "statest",
                                "stream",
                                "sxlslot",
                                "trigger",
                                "visibility",
                                "waatest"
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "adaptiveThresholdField": {
                      "description": "Represents a set of adaptive alert thresholds field with value populated from an endpoint",
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "description": {
                              "description": "text describing a field",
                              "type": "string"
                            },
                            "key": {
                              "description": "name or key of field",
                              "type": "string"
                            }
                          }
                        },
                        {
                          "required": [
                            "type",
                            "jsonSchema"
                          ],
                          "properties": {
                            "jsonSchema": {
                              "description": "definition of fields the adaptive threshold must contain",
                              "type": "object"
                            },
                            "type": {
                              "description": "field value type",
                              "enum": [
                                "adaptive-threshold"
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "booleanField": {
                      "description": "Represents a boolean value field",
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "description": {
                              "description": "text describing a field",
                              "type": "string"
                            },
                            "key": {
                              "description": "name or key of field",
                              "type": "string"
                            }
                          }
                        },
                        {
                          "required": [
                            "type",
                            "default"
                          ],
                          "properties": {
                            "default": {
                              "description": "default value of field.  Used for fields with a single boolean value.",
                              "type": "boolean"
                            },
                            "type": {
                              "description": "field value type",
                              "enum": [
                                "bool"
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "ednsField": {
                      "description": "Represents a collection of acg or edns objects populated from specified multi-select endpoints",
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "description": {
                              "description": "text describing a field",
                              "type": "string"
                            },
                            "key": {
                              "description": "name or key of field",
                              "type": "string"
                            }
                          }
                        },
                        {
                          "required": [
                            "type",
                            "href_acg",
                            "href_edns",
                            "jsonSchema"
                          ],
                          "properties": {
                            "href_acg": {
                              "description": "Represents a url where acg content can be found.  This content is often complex and has been filtered due to users permissions. Only objectId is needed in the value array.",
                              "type": "string"
                            },
                            "href_edns": {
                              "description": "Represents a url where edns content can be found.  This content is often complex and has been filtered due to users permissions. Only objectId is needed in the value array.",
                              "type": "string"
                            },
                            "jsonSchema": {
                              "description": "stream json-schema representation",
                              "type": "object"
                            },
                            "type": {
                              "description": "field value type",
                              "enum": [
                                "edns"
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "emailField": {
                      "description": "Represents an email field",
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "description": {
                              "description": "text describing a field",
                              "type": "string"
                            },
                            "key": {
                              "description": "name or key of field",
                              "type": "string"
                            }
                          }
                        },
                        {
                          "required": [
                            "type",
                            "default"
                          ],
                          "properties": {
                            "default": {
                              "description": "Array of string values for field.",
                              "type": "array",
                              "uniqueItems": true,
                              "items": {
                                "type": "string"
                              }
                            },
                            "type": {
                              "description": "field value type",
                              "enum": [
                                "email"
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "floatField": {
                      "description": "Represents a float value field",
                      "allOf": [
                        {
                          "description": "Represents a generic number field",
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "description": {
                                  "description": "text describing a field",
                                  "type": "string"
                                },
                                "key": {
                                  "description": "name or key of field",
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "properties": {
                                "default": {
                                  "description": "default value of field.  Used for fields with a single value.",
                                  "type": "number"
                                },
                                "label": {
                                  "description": "label tag associated with this field",
                                  "type": "string"
                                },
                                "maximum": {
                                  "description": "maximum allowed value",
                                  "type": "number"
                                },
                                "minimum": {
                                  "description": "minimum allowed value",
                                  "type": "number"
                                },
                                "units": {
                                  "description": "Describes unit type associated with the object",
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "sizeFloat": {
                              "description": "number digits after zero",
                              "type": "number"
                            },
                            "type": {
                              "description": "field value type",
                              "enum": [
                                "float"
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "integerField": {
                      "description": "Represents a integer value field",
                      "allOf": [
                        {
                          "description": "Represents a generic number field",
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "description": {
                                  "description": "text describing a field",
                                  "type": "string"
                                },
                                "key": {
                                  "description": "name or key of field",
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "properties": {
                                "default": {
                                  "description": "default value of field.  Used for fields with a single value.",
                                  "type": "number"
                                },
                                "label": {
                                  "description": "label tag associated with this field",
                                  "type": "string"
                                },
                                "maximum": {
                                  "description": "maximum allowed value",
                                  "type": "number"
                                },
                                "minimum": {
                                  "description": "minimum allowed value",
                                  "type": "number"
                                },
                                "units": {
                                  "description": "Describes unit type associated with the object",
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "description": "field value type",
                              "enum": [
                                "int"
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "scheduleField": {
                      "description": "Represents a schedule field",
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "description": {
                              "description": "text describing a field",
                              "type": "string"
                            },
                            "key": {
                              "description": "name or key of field",
                              "type": "string"
                            }
                          }
                        },
                        {
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "jsonSchema": {
                              "description": "schedule json-schema representation",
                              "type": "object"
                            },
                            "type": {
                              "description": "field value type",
                              "enum": [
                                "schedule",
                                "maintenance-schedule"
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "selectMultiValueField": {
                      "description": "Represents a field with multiple values populated from an endpoint",
                      "allOf": [
                        {
                          "description": "Represents a field populated from an endpoint",
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "description": {
                                  "description": "text describing a field",
                                  "type": "string"
                                },
                                "key": {
                                  "description": "name or key of field",
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "required": [
                                "itemType",
                                "href"
                              ],
                              "properties": {
                                "href": {
                                  "description": "If present, represents a url where content for the field can be found.  This content is often complex and has been filtered due to users permissions.",
                                  "type": "string"
                                },
                                "itemType": {
                                  "description": "Describes type of objects returned by the endpoint",
                                  "enum": [
                                    "acg",
                                    "adaptivemetric",
                                    "adaptiveprofile",
                                    "adaptivecpcode",
                                    "altatest",
                                    "arlfile",
                                    "arlid",
                                    "chamonixtest",
                                    "contract",
                                    "cpcode",
                                    "drcpcode",
                                    "dsatest",
                                    "edns",
                                    "eventlog",
                                    "fpdomain",
                                    "fpproperty",
                                    "httpErrorCode",
                                    "ionhtest",
                                    "ionnatest",
                                    "ionrmtest",
                                    "ionspmtest",
                                    "iphoneFile",
                                    "network",
                                    "roacontract",
                                    "satest",
                                    "slatest",
                                    "sripslot",
                                    "statest",
                                    "stream",
                                    "sxlslot",
                                    "trigger",
                                    "visibility",
                                    "waatest"
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        {
                          "required": [
                            "type",
                            "default"
                          ],
                          "properties": {
                            "default": {
                              "description": "Array of string values for field.",
                              "type": "array",
                              "uniqueItems": true,
                              "items": {
                                "type": "string"
                              }
                            },
                            "maxItems": {
                              "description": "Maximum number of items required in array",
                              "type": "number"
                            },
                            "minItems": {
                              "description": "Minimum number of items required in array",
                              "type": "number"
                            },
                            "type": {
                              "description": "field value type",
                              "enum": [
                                "multi-select"
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "selectSingleValueField": {
                      "description": "Represents a field with value populated from an endpoint",
                      "allOf": [
                        {
                          "description": "Represents a field populated from an endpoint",
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "description": {
                                  "description": "text describing a field",
                                  "type": "string"
                                },
                                "key": {
                                  "description": "name or key of field",
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "required": [
                                "itemType",
                                "href"
                              ],
                              "properties": {
                                "href": {
                                  "description": "If present, represents a url where content for the field can be found.  This content is often complex and has been filtered due to users permissions.",
                                  "type": "string"
                                },
                                "itemType": {
                                  "description": "Describes type of objects returned by the endpoint",
                                  "enum": [
                                    "acg",
                                    "adaptivemetric",
                                    "adaptiveprofile",
                                    "adaptivecpcode",
                                    "altatest",
                                    "arlfile",
                                    "arlid",
                                    "chamonixtest",
                                    "contract",
                                    "cpcode",
                                    "drcpcode",
                                    "dsatest",
                                    "edns",
                                    "eventlog",
                                    "fpdomain",
                                    "fpproperty",
                                    "httpErrorCode",
                                    "ionhtest",
                                    "ionnatest",
                                    "ionrmtest",
                                    "ionspmtest",
                                    "iphoneFile",
                                    "network",
                                    "roacontract",
                                    "satest",
                                    "slatest",
                                    "sripslot",
                                    "statest",
                                    "stream",
                                    "sxlslot",
                                    "trigger",
                                    "visibility",
                                    "waatest"
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        {
                          "required": [
                            "type",
                            "default"
                          ],
                          "properties": {
                            "default": {
                              "description": "Single value for field",
                              "type": "string"
                            },
                            "type": {
                              "description": "field value type",
                              "enum": [
                                "single-select"
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "streamField": {
                      "description": "Represents a collection of nameable streams with multiple values populated from an endpoint",
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "description": {
                              "description": "text describing a field",
                              "type": "string"
                            },
                            "key": {
                              "description": "name or key of field",
                              "type": "string"
                            }
                          }
                        },
                        {
                          "required": [
                            "type",
                            "href",
                            "jsonSchema"
                          ],
                          "properties": {
                            "href": {
                              "description": "If present, represents a url where content for the field can be found.  This content is often complex and has been filtered due to users permissions.",
                              "type": "string"
                            },
                            "jsonSchema": {
                              "description": "stream json-schema representation",
                              "type": "object"
                            },
                            "maxItems": {
                              "description": "Maximum number of items required in array",
                              "type": "number"
                            },
                            "minItems": {
                              "description": "Minimum number of items required in array",
                              "type": "number"
                            },
                            "type": {
                              "description": "field value type",
                              "enum": [
                                "stream"
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "stringField": {
                      "description": "Represents a string value field",
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "description": {
                              "description": "text describing a field",
                              "type": "string"
                            },
                            "key": {
                              "description": "name or key of field",
                              "type": "string"
                            }
                          }
                        },
                        {
                          "required": [
                            "type",
                            "default"
                          ],
                          "properties": {
                            "default": {
                              "description": "default value of field.  Used for fields with a single value.",
                              "type": "string"
                            },
                            "type": {
                              "description": "field value type",
                              "enum": [
                                "string",
                                "hidden"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "properties": {
                    "fields": {
                      "description": "set of fields required to populate this template",
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "description": "Represents a set of adaptive alert thresholds field with value populated from an endpoint",
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "description": {
                                    "description": "text describing a field",
                                    "type": "string"
                                  },
                                  "key": {
                                    "description": "name or key of field",
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "required": [
                                  "type",
                                  "jsonSchema"
                                ],
                                "properties": {
                                  "jsonSchema": {
                                    "description": "definition of fields the adaptive threshold must contain",
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "field value type",
                                    "enum": [
                                      "adaptive-threshold"
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "description": "Represents a boolean value field",
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "description": {
                                    "description": "text describing a field",
                                    "type": "string"
                                  },
                                  "key": {
                                    "description": "name or key of field",
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "required": [
                                  "type",
                                  "default"
                                ],
                                "properties": {
                                  "default": {
                                    "description": "default value of field.  Used for fields with a single boolean value.",
                                    "type": "boolean"
                                  },
                                  "type": {
                                    "description": "field value type",
                                    "enum": [
                                      "bool"
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "description": "Represents a collection of acg or edns objects populated from specified multi-select endpoints",
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "description": {
                                    "description": "text describing a field",
                                    "type": "string"
                                  },
                                  "key": {
                                    "description": "name or key of field",
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "required": [
                                  "type",
                                  "href_acg",
                                  "href_edns",
                                  "jsonSchema"
                                ],
                                "properties": {
                                  "href_acg": {
                                    "description": "Represents a url where acg content can be found.  This content is often complex and has been filtered due to users permissions. Only objectId is needed in the value array.",
                                    "type": "string"
                                  },
                                  "href_edns": {
                                    "description": "Represents a url where edns content can be found.  This content is often complex and has been filtered due to users permissions. Only objectId is needed in the value array.",
                                    "type": "string"
                                  },
                                  "jsonSchema": {
                                    "description": "stream json-schema representation",
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "field value type",
                                    "enum": [
                                      "edns"
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "description": "Represents an email field",
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "description": {
                                    "description": "text describing a field",
                                    "type": "string"
                                  },
                                  "key": {
                                    "description": "name or key of field",
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "required": [
                                  "type",
                                  "default"
                                ],
                                "properties": {
                                  "default": {
                                    "description": "Array of string values for field.",
                                    "type": "array",
                                    "uniqueItems": true,
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "type": {
                                    "description": "field value type",
                                    "enum": [
                                      "email"
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "description": "Represents a float value field",
                            "allOf": [
                              {
                                "description": "Represents a generic number field",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "key"
                                    ],
                                    "properties": {
                                      "description": {
                                        "description": "text describing a field",
                                        "type": "string"
                                      },
                                      "key": {
                                        "description": "name or key of field",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  {
                                    "properties": {
                                      "default": {
                                        "description": "default value of field.  Used for fields with a single value.",
                                        "type": "number"
                                      },
                                      "label": {
                                        "description": "label tag associated with this field",
                                        "type": "string"
                                      },
                                      "maximum": {
                                        "description": "maximum allowed value",
                                        "type": "number"
                                      },
                                      "minimum": {
                                        "description": "minimum allowed value",
                                        "type": "number"
                                      },
                                      "units": {
                                        "description": "Describes unit type associated with the object",
                                        "type": "string"
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "sizeFloat": {
                                    "description": "number digits after zero",
                                    "type": "number"
                                  },
                                  "type": {
                                    "description": "field value type",
                                    "enum": [
                                      "float"
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "description": "Represents a integer value field",
                            "allOf": [
                              {
                                "description": "Represents a generic number field",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "key"
                                    ],
                                    "properties": {
                                      "description": {
                                        "description": "text describing a field",
                                        "type": "string"
                                      },
                                      "key": {
                                        "description": "name or key of field",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  {
                                    "properties": {
                                      "default": {
                                        "description": "default value of field.  Used for fields with a single value.",
                                        "type": "number"
                                      },
                                      "label": {
                                        "description": "label tag associated with this field",
                                        "type": "string"
                                      },
                                      "maximum": {
                                        "description": "maximum allowed value",
                                        "type": "number"
                                      },
                                      "minimum": {
                                        "description": "minimum allowed value",
                                        "type": "number"
                                      },
                                      "units": {
                                        "description": "Describes unit type associated with the object",
                                        "type": "string"
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "type": {
                                    "description": "field value type",
                                    "enum": [
                                      "int"
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "description": "Represents a schedule field",
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "description": {
                                    "description": "text describing a field",
                                    "type": "string"
                                  },
                                  "key": {
                                    "description": "name or key of field",
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "jsonSchema": {
                                    "description": "schedule json-schema representation",
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "field value type",
                                    "enum": [
                                      "schedule",
                                      "maintenance-schedule"
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "description": "Represents a field with multiple values populated from an endpoint",
                            "allOf": [
                              {
                                "description": "Represents a field populated from an endpoint",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "key"
                                    ],
                                    "properties": {
                                      "description": {
                                        "description": "text describing a field",
                                        "type": "string"
                                      },
                                      "key": {
                                        "description": "name or key of field",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  {
                                    "required": [
                                      "itemType",
                                      "href"
                                    ],
                                    "properties": {
                                      "href": {
                                        "description": "If present, represents a url where content for the field can be found.  This content is often complex and has been filtered due to users permissions.",
                                        "type": "string"
                                      },
                                      "itemType": {
                                        "description": "Describes type of objects returned by the endpoint",
                                        "enum": [
                                          "acg",
                                          "adaptivemetric",
                                          "adaptiveprofile",
                                          "adaptivecpcode",
                                          "altatest",
                                          "arlfile",
                                          "arlid",
                                          "chamonixtest",
                                          "contract",
                                          "cpcode",
                                          "drcpcode",
                                          "dsatest",
                                          "edns",
                                          "eventlog",
                                          "fpdomain",
                                          "fpproperty",
                                          "httpErrorCode",
                                          "ionhtest",
                                          "ionnatest",
                                          "ionrmtest",
                                          "ionspmtest",
                                          "iphoneFile",
                                          "network",
                                          "roacontract",
                                          "satest",
                                          "slatest",
                                          "sripslot",
                                          "statest",
                                          "stream",
                                          "sxlslot",
                                          "trigger",
                                          "visibility",
                                          "waatest"
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "required": [
                                  "type",
                                  "default"
                                ],
                                "properties": {
                                  "default": {
                                    "description": "Array of string values for field.",
                                    "type": "array",
                                    "uniqueItems": true,
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "maxItems": {
                                    "description": "Maximum number of items required in array",
                                    "type": "number"
                                  },
                                  "minItems": {
                                    "description": "Minimum number of items required in array",
                                    "type": "number"
                                  },
                                  "type": {
                                    "description": "field value type",
                                    "enum": [
                                      "multi-select"
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "description": "Represents a field with value populated from an endpoint",
                            "allOf": [
                              {
                                "description": "Represents a field populated from an endpoint",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "key"
                                    ],
                                    "properties": {
                                      "description": {
                                        "description": "text describing a field",
                                        "type": "string"
                                      },
                                      "key": {
                                        "description": "name or key of field",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  {
                                    "required": [
                                      "itemType",
                                      "href"
                                    ],
                                    "properties": {
                                      "href": {
                                        "description": "If present, represents a url where content for the field can be found.  This content is often complex and has been filtered due to users permissions.",
                                        "type": "string"
                                      },
                                      "itemType": {
                                        "description": "Describes type of objects returned by the endpoint",
                                        "enum": [
                                          "acg",
                                          "adaptivemetric",
                                          "adaptiveprofile",
                                          "adaptivecpcode",
                                          "altatest",
                                          "arlfile",
                                          "arlid",
                                          "chamonixtest",
                                          "contract",
                                          "cpcode",
                                          "drcpcode",
                                          "dsatest",
                                          "edns",
                                          "eventlog",
                                          "fpdomain",
                                          "fpproperty",
                                          "httpErrorCode",
                                          "ionhtest",
                                          "ionnatest",
                                          "ionrmtest",
                                          "ionspmtest",
                                          "iphoneFile",
                                          "network",
                                          "roacontract",
                                          "satest",
                                          "slatest",
                                          "sripslot",
                                          "statest",
                                          "stream",
                                          "sxlslot",
                                          "trigger",
                                          "visibility",
                                          "waatest"
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "required": [
                                  "type",
                                  "default"
                                ],
                                "properties": {
                                  "default": {
                                    "description": "Single value for field",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "field value type",
                                    "enum": [
                                      "single-select"
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "description": "Represents a collection of nameable streams with multiple values populated from an endpoint",
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "description": {
                                    "description": "text describing a field",
                                    "type": "string"
                                  },
                                  "key": {
                                    "description": "name or key of field",
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "required": [
                                  "type",
                                  "href",
                                  "jsonSchema"
                                ],
                                "properties": {
                                  "href": {
                                    "description": "If present, represents a url where content for the field can be found.  This content is often complex and has been filtered due to users permissions.",
                                    "type": "string"
                                  },
                                  "jsonSchema": {
                                    "description": "stream json-schema representation",
                                    "type": "object"
                                  },
                                  "maxItems": {
                                    "description": "Maximum number of items required in array",
                                    "type": "number"
                                  },
                                  "minItems": {
                                    "description": "Minimum number of items required in array",
                                    "type": "number"
                                  },
                                  "type": {
                                    "description": "field value type",
                                    "enum": [
                                      "stream"
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "description": "Represents a string value field",
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "description": {
                                    "description": "text describing a field",
                                    "type": "string"
                                  },
                                  "key": {
                                    "description": "name or key of field",
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "required": [
                                  "type",
                                  "default"
                                ],
                                "properties": {
                                  "default": {
                                    "description": "default value of field.  Used for fields with a single value.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "field value type",
                                    "enum": [
                                      "string",
                                      "hidden"
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "firingFields": {
                      "description": "array of alert fields associated with this template",
                      "type": "array",
                      "items": {
                        "description": "field names expected in alert firing objects associated with this template (may change over time)",
                        "type": "string"
                      }
                    },
                    "links": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "description": "Link relations to schemas and rest endpoints",
                      "minItems": 2,
                      "title": "Json link relations",
                      "type": "array",
                      "uniqueItems": true,
                      "required": [
                        "rel",
                        "href"
                      ],
                      "items": {
                        "href": {
                          "description": "link to resource of type described by rel",
                          "type": "string"
                        },
                        "rel": {
                          "description": "Describes type of link",
                          "type": "string"
                        }
                      }
                    },
                    "name": {
                      "description": "name of template. not internationalized",
                      "type": "string"
                    },
                    "origin": {
                      "description": "name of system of record",
                      "enum": [
                        "STATIC",
                        "ADAPTIVE"
                      ]
                    },
                    "products": {
                      "description": "array of products associated with this template",
                      "type": "array",
                      "items": {
                        "description": "represents a CDN solution offering",
                        "type": "object",
                        "required": [
                          "objectId",
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "a basic description of content",
                            "type": "string"
                          },
                          "objectId": {
                            "description": "a unique identifier for this content",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "templateId": {
                      "description": "Id for template",
                      "type": "string"
                    }
                  }
                },
                "schema": {
                  "description": "JSON schema.",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/schema.yaml"
                  }
                }
              }
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.72",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/json-schema/alert-template-header": {
      "get": {
        "description": "Template headers are the summaries that appear in template listings. This operation gets the JSON schema that describes their contents.",
        "operationId": "get-schema-template-header",
        "summary": "Get template header schema",
        "tags": [
          "Alert template header"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/get-schema-template-header"
        },
        "responses": {
          "200": {
            "description": "The response provides the template header schema.",
            "content": {
              "application/schema+json": {
                "example": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "description": "Brief Summary of Alert template.",
                  "title": "Alert Template Header",
                  "type": "object",
                  "required": [
                    "templateId",
                    "name",
                    "origin",
                    "links"
                  ],
                  "properties": {
                    "links": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "description": "Link relations to schemas and rest endpoints",
                      "minItems": 2,
                      "title": "Json link relations",
                      "type": "array",
                      "uniqueItems": true,
                      "required": [
                        "rel",
                        "href"
                      ],
                      "items": {
                        "href": {
                          "description": "link to resource of type described by rel",
                          "type": "string"
                        },
                        "rel": {
                          "description": "Describes type of link",
                          "type": "string"
                        }
                      }
                    },
                    "name": {
                      "description": "name of template. not internationalized",
                      "type": "string"
                    },
                    "origin": {
                      "description": "name of system of record",
                      "enum": [
                        "STATIC",
                        "ADAPTIVE"
                      ]
                    },
                    "templateId": {
                      "description": "Id for template",
                      "type": "string"
                    }
                  }
                },
                "schema": {
                  "description": "JSON schema.",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/schema.yaml"
                  }
                }
              }
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.19",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/sparklines": {
      "get": {
        "description": "Lists _sparklines_, reports that plot anomalies that trigger firings over a time series. Each sparkline this operation lists corresponds to an alert definition. Specify more than one alert identifier to gather related data from different alerts for potential use in overlays, for example one sparkline to identify too much traffic, and another for too little traffic. Note that sparklines based on adaptive alerts provide observed data for both `anomalies` and the full range of `points`. Sparklines based on static alerts only provide observed data for `anomalies`, and the `points` simply define the range of the time series without any observed non-anomalous data.",
        "operationId": "get-sparklines",
        "summary": "List sparklines",
        "tags": [
          "Sparklines"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Alerts API",
          "url": "https://techdocs.akamai.com/alerts-app/reference/get-sparklines"
        },
        "responses": {
          "200": {
            "description": "The response provides the set of sparklines.",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "definitionId": "a@17652",
                      "anomalies": [
                        {
                          "end": "2015-11-11T12:15:00Z",
                          "firingId": "9826198",
                          "start": "2015-11-09T16:50:00Z"
                        },
                        {
                          "firingId": "1989826",
                          "start": "2015-11-13T12:05:00Z"
                        }
                      ],
                      "points": [
                        {
                          "high": 5863.47,
                          "low": 3074.6,
                          "x": "2015-11-09T16:50:00Z",
                          "y": 4764.86
                        },
                        {
                          "high": 5995.18,
                          "low": 2940.94,
                          "x": "2015-11-09T16:55:00Z",
                          "y": 4731.73
                        },
                        {
                          "high": 5819.33,
                          "low": 3031.09,
                          "x": "2015-11-09T17:00:00Z",
                          "y": 4759.06
                        },
                        {
                          "high": 6137.78,
                          "low": 2790.63,
                          "x": "2015-11-09T17:05:00Z",
                          "y": 4749.52
                        }
                      ],
                      "suppressions": [
                        {
                          "end": "2019-04-25T14:40:00Z",
                          "start": "2019-04-25T12:35:00Z",
                          "suppressionId": "12345"
                        },
                        {
                          "end": "2021-11-17T22:25:00Z",
                          "start": "2021-11-17T21:40:00Z",
                          "suppressionId": "12346"
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "This specifies a collection of sparklines, all of which appear in the `data` array.",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "description": "JSON used to represent graph data. The amount of data varies depending on the supplied parameters.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "JSON used to represent graph data. The amount of data varies depending on the supplied parameters.",
                        "nullable": true,
                        "type": "object",
                        "required": [
                          "definitionId",
                          "points",
                          "anomalies"
                        ],
                        "properties": {
                          "anomalies": {
                            "description": "Lists alert firings that occur within the report's time range.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "start",
                                "firingId"
                              ],
                              "properties": {
                                "end": {
                                  "description": "ISO 8601 timestamp for when the anomaly ended, or `null` for a currently firing anomaly.",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "firingId": {
                                  "description": "Identifies the alert firing for this anomaly.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "ISO 8601 timestamp for when the anomaly started.",
                                  "format": "date-time",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "definitionId": {
                            "description": "Identifies the associated alert definition.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "points": {
                            "description": "Encapsulates the full range of graph data used to render traffic information.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "x",
                                "y"
                              ],
                              "properties": {
                                "high": {
                                  "description": "Upper bound of expected value. Only available for adaptive alerts.",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "low": {
                                  "description": "Lower bound of expected value. Only available for adaptive alerts.",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "x": {
                                  "description": "ISO 8601 timestamp for each data point.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "y": {
                                  "description": "For adaptive alerts, provides the observed value at that point. Otherwise yields 0 for static alerts, in which case x values simply define the overall range of the time series.",
                                  "minimum": 0,
                                  "type": "number"
                                }
                              }
                            }
                          },
                          "suppressions": {
                            "description": "Suppressions associated with the alert.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Alert suppressions define anomalous periods of time to ignore when modeling your site's typical traffic patterns for an adaptive alert.",
                              "type": "object",
                              "required": [
                                "suppressionId",
                                "start",
                                "end"
                              ],
                              "properties": {
                                "end": {
                                  "description": "Defines the end of the suppressed time range.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "start": {
                                  "description": "Defines the start of the suppressed time range.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "suppressionId": {
                                  "description": "Identifies the suppressed time range.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/suppression.yaml"
                              }
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sparkline.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/sparklines.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Bad request](https://techdocs.akamai.com/alerts-app/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Not a valid alert Id",
                  "status": 400,
                  "title": "Illegal Argument",
                  "type": "/alerts-api/error-types/ILLEGAL_ARGUMENT"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "[Unauthorized error](https://techdocs.akamai.com/alerts-app/reference/401).",
            "content": {
              "application/problem+json": {
                "example": {
                  "clientIp": "192.0.2.0",
                  "detail": "The signature does not match",
                  "instance": "https://akab-xxxxx-xxxxx.luna.akamaiapis.net/alerts/v2/alert-definitions",
                  "method": "GET",
                  "requestId": "933ed8a4",
                  "requestTime": "2023-07-06T08:11:36Z",
                  "serverIp": "192.0.2.48",
                  "status": 401,
                  "title": "Not authorized",
                  "type": "https://problems.luna.akamaiapis.net/-/pep-authn/deny"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "[Access is forbidden](https://techdocs.akamai.com/alerts-app/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "User lacks scope on account",
                  "status": 403,
                  "title": "Authorization Error",
                  "type": "/alerts-api/error-types/AUTHZ_PROBLEM"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "405": {
            "description": "[Method not allowed](https://techdocs.akamai.com/alerts-app/reference/405).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Request method 'POST' not supported",
                  "status": 405,
                  "title": "Method Not Allowed",
                  "type": "/alerts-api/error-types/METHOD_NOT_ALLOWED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "500": {
            "description": "[Server error](https://techdocs.akamai.com/alerts-app/reference/500).",
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Operation can't completed with invalid alertDefinitionId : a@123",
                  "status": 500,
                  "title": "Internal Server Error",
                  "type": "/alerts-api/error-types/INTERNAL_SERVER_ERROR"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "clientIp": {
                      "description": "IP address of the client that requested the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "description": "The error code that distinguishes each `type`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "detail": {
                      "description": "More information about the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "instance": {
                      "description": "The URL you called that produced the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "method": {
                      "description": "The HTTP method you called on the `instance` URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Identifies each separate request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestTime": {
                      "description": "ISO 8601 timestamp marking when the request occurred.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "serverIp": {
                      "description": "IP address of the server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error, represented as a non-navigable URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/500.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "Unique identifier for the alert to return sparklines for. Repeat the parameter to specify more than one alert.",
            "example": "{{definitionIds}}",
            "in": "query",
            "name": "definitionIds",
            "required": true,
            "schema": {
              "example": "a@17652",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/definitionIds-query.yaml"
            }
          },
          {
            "description": "Length of time prior to the current time for which to return data, expressed as [ISO 8601 durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) in `PnDTnHnMn.nS` format. The default value is `P7D`, which is one week. The maximum value is `P30D`, which is 30 days. For adaptive alerts, if you choose a value of one week or less, the duration rounds up to one week. If you choose a value greater than one week, the duration rounds up to 30 days.",
            "example": "{{duration}}",
            "in": "query",
            "name": "duration",
            "required": false,
            "schema": {
              "default": "P7D",
              "example": "P2DT3H4M",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/duration-query.yaml"
            }
          },
          {
            "description": "Whether to include `high` and `low` traffic predictions within data along with observed values. This only applies to adaptive alerts. The default is `false`.",
            "example": "{{inclRange}}",
            "in": "query",
            "name": "inclRange",
            "required": false,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/inclRange-query.yaml"
            }
          },
          {
            "description": "The number of data points to include in the report, `100` by default. A value of `0` produces all available data.",
            "example": "{{points}}",
            "in": "query",
            "name": "points",
            "required": false,
            "schema": {
              "default": 100,
              "example": 0,
              "minimum": 0,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/points-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "x-readme": {
    "samples-languages": [
      "curl",
      "python",
      "node"
    ]
  },
  "servers": [
    {
      "url": "https://{hostname}/alerts/v2"
    }
  ]
}