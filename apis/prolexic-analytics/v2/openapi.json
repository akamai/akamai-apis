{
  "openapi": "3.0.0",
  "externalDocs": {
    "description": "See documentation for Akamai's Prolexic Analytics API",
    "url": "https://techdocs.akamai.com/prolexic/reference"
  },
  "info": {
    "title": "Akamai: Prolexic Analytics API",
    "version": "2",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/attack-report/contract/{contract}/attack-id/{attackId}": {
      "get": {
        "description": "Retrieves an attack report for the specified customer and `attackId`.",
        "operationId": "get-attack-report-contract-contract-attack-id-attackid",
        "summary": "Get an attack report",
        "tags": [
          "Attack reports"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Prolexic Analytics API",
          "url": "https://techdocs.akamai.com/prolexic/reference/get-attack-report-contract-contract-attack-id-attackid"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "currentContract": "coral",
                  "status": true,
                  "statusMsg": "Attack report acquired successfully",
                  "data": [
                    {
                      "attackId": 1966,
                      "attackTypeName": "RESET Flood",
                      "destinationPort": "8080",
                      "endTime": 1390261538,
                      "eventBw": 500000,
                      "eventEndTime": 1390261538,
                      "eventId": 2744,
                      "eventPeakId": 18594,
                      "eventPps": 1200,
                      "eventStartTime": 1390244438,
                      "ip": "192.0.2.248",
                      "location": "SJC",
                      "netmask": 32,
                      "startTime": 1390244438,
                      "ticketId": 70946
                    },
                    {
                      "attackId": 1966,
                      "attackTypeName": "RESET Flood",
                      "destinationPort": "8080",
                      "endTime": 1390261538,
                      "eventBw": 90000000,
                      "eventEndTime": 1390261538,
                      "eventId": 2744,
                      "eventPeakId": 18595,
                      "eventPps": 200000,
                      "eventStartTime": 1390244438,
                      "ip": "192.0.2.84",
                      "location": "LON",
                      "netmask": 32,
                      "startTime": 1390244438,
                      "ticketId": 70946
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains details about an attack, including location, time, and type of attack.",
                  "type": "object",
                  "properties": {
                    "currentContract": {
                      "type": "string"
                    },
                    "data": {
                      "description": "The list of recorded attacks, with details about each attack.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "attackId",
                          "eventBw",
                          "eventId",
                          "eventPps",
                          "ip",
                          "location",
                          "netmask",
                          "startTime"
                        ],
                        "properties": {
                          "attackId": {
                            "type": "integer"
                          },
                          "attackTypeName": {
                            "description": "The types of attacks, also referred to as `eventTypes` or `attackType`. Valid values are `ACK Flood`, `CLDAP Reflection`, `CharGEN Attack`, `Connection Flood`, `DNS Flood`, `FIN Flood`, `FIN PUSH Flood`, `GET Flood`, `GRE Protocol Flood`, `HEAD Flood`, `ICMP Flood`, `IGMP Flood`, `mDNS Flood`, `NTP FLOOD`, `Netbios Flood`, `POST Flood`, `PUSH Flood`, `PUT Flood`, `RESET Flood`, `RIP Flood`, `RPC Flood`, `Reserved Protocol Flood`, `SNMP Flood`, `SQL Server Reflection`, `SSDP Flood`, `SSL GET Flood`, `SSL POST Flood`, `SYN Flood`, `SYN PUSH`, `Sentinel Flood`, `TCP Anomaly`, `TCP Fragment`, `TFTP Flood`, `UDP Flood`, `UDP Fragment`, or `XMAS`.",
                            "type": "string",
                            "enum": [
                              "ACK Flood",
                              "CLDAP Reflection",
                              "CharGEN Attack",
                              "Connection Flood",
                              "DNS Flood",
                              "FIN Flood",
                              "FIN PUSH Flood",
                              "GET Flood",
                              "GRE Protocol Flood",
                              "HEAD Flood",
                              "ICMP Flood",
                              "IGMP Flood",
                              "mDNS Flood",
                              "NTP FLOOD",
                              "Netbios Flood",
                              "POST Flood",
                              "PUSH Flood",
                              "PUT Flood",
                              "RESET Flood",
                              "RIP Flood",
                              "RPC Flood",
                              "Reserved Protocol Flood",
                              "SNMP Flood",
                              "SQL Server Reflection",
                              "SSDP Flood",
                              "SSL GET Flood",
                              "SSL POST Flood",
                              "SYN Flood",
                              "SYN PUSH",
                              "Sentinel Flood",
                              "TCP Anomaly",
                              "TCP Fragment",
                              "TFTP Flood",
                              "UDP Flood",
                              "UDP Fragment",
                              "XMAS"
                            ]
                          },
                          "destinationPort": {
                            "type": "string"
                          },
                          "endTime": {
                            "type": "integer"
                          },
                          "eventBw": {
                            "description": "The peak bandwidth for the event.",
                            "type": "integer"
                          },
                          "eventCON": {
                            "description": "The peak number of connections for the event.",
                            "type": "integer"
                          },
                          "eventEndTime": {
                            "type": "integer"
                          },
                          "eventId": {
                            "type": "integer"
                          },
                          "eventPeakId": {
                            "description": "The peak value of ID for the event.",
                            "type": "integer"
                          },
                          "eventPps": {
                            "description": "The peak packets per second for the event.",
                            "type": "integer"
                          },
                          "eventStartTime": {
                            "type": "integer"
                          },
                          "ip": {
                            "description": "The target IP address of the event.",
                            "type": "string"
                          },
                          "location": {
                            "description": "Indicates where the alert originated from in the network.",
                            "type": "string"
                          },
                          "netmask": {
                            "description": "CIDR notation indicating the subnet's mask size. Valid values for IPv4 are between `1` and `32`. Valid values for IPv6 are between `1` and `128`.",
                            "type": "integer"
                          },
                          "startTime": {
                            "type": "integer"
                          },
                          "ticketId": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "boolean"
                    },
                    "statusMsg": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/AttackReport.yaml"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "example": {
                  "data": "Insufficient privileges to access object customerName with name=dmnw_atl.",
                  "errorCode": "INSUFFICIENT_PRIVILEGES",
                  "status": 403,
                  "args": [
                    "customerName",
                    "name",
                    "dmnw_atl"
                  ],
                  "errorPaths": [
                    {
                      "message": "You don't have permission to read customer name",
                      "path": "customerName.name"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "example": {
                  "data": "customerName is required.",
                  "errorCode": "PARAMETER_MISSING",
                  "status": 404,
                  "args": [
                    "customerName",
                    "name"
                  ],
                  "errorPaths": [
                    {
                      "message": "Customer not found",
                      "path": "customerName.name"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique ID for each attack.",
          "example": "{{attackId}}",
          "in": "path",
          "name": "attackId",
          "required": true,
          "schema": {
            "example": 1966,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/attackId-path.yaml"
          }
        },
        {
          "description": "The policy domain name of the data center or proxy that events belong to.",
          "example": "{{contract}}",
          "in": "path",
          "name": "contract",
          "required": true,
          "schema": {
            "example": "coral",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/contract-path.yaml"
          }
        }
      ]
    },
    "/attack-reports/contract/{contract}/start/{start}/end/{end}": {
      "get": {
        "description": "Retrieves a list of attack reports for a customer within the specified time range.",
        "operationId": "get-attack-reports-contract-contract-start-start-end-end",
        "summary": "List attack reports",
        "tags": [
          "Attack reports"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Prolexic Analytics API",
          "url": "https://techdocs.akamai.com/prolexic/reference/get-attack-reports-contract-contract-start-start-end-end"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "currentContract": "coral",
                  "status": true,
                  "statusMsg": "Attack reports acquired successfully",
                  "data": [
                    {
                      "attackId": 2985,
                      "destinationPort": "80",
                      "endTime": 1381363451,
                      "eventEndTime": 1381349454,
                      "eventEndTimeAsString": "2013-10-09 20:10:54",
                      "eventId": 4202,
                      "eventStartTime": 1381320180,
                      "eventStartTimeAsString": "2013-10-09 12:03:00",
                      "startTime": 1381063041,
                      "ticketId": 97585,
                      "eventTypes": [
                        "DNS Flood",
                        "ICMP Flood",
                        "UDP Fragment"
                      ],
                      "destinations": [
                        {
                          "ip": "192.0.2.65",
                          "netmask": 32
                        },
                        {
                          "ip": "192.0.2.202",
                          "netmask": 32
                        }
                      ],
                      "peaks": [
                        {
                          "bandwidth": 6500000000,
                          "location": "DCA",
                          "peakId": 17277,
                          "pps": 700000
                        },
                        {
                          "bandwidth": 3000000000,
                          "location": "HKG",
                          "peakId": 17276,
                          "pps": 600000
                        }
                      ]
                    },
                    {
                      "attackId": 2974,
                      "destinationPort": "80",
                      "endTime": 1380847367,
                      "eventEndTime": 1380752215,
                      "eventEndTimeAsString": "2013-10-02 22:16:55",
                      "eventId": 4170,
                      "eventStartTime": 1380714180,
                      "eventStartTimeAsString": "2013-10-02 11:43:00",
                      "startTime": 1380714180,
                      "ticketId": 97368,
                      "eventTypes": [
                        "SYN Flood"
                      ],
                      "destinations": [
                        {
                          "ip": "192.0.2.120",
                          "netmask": 32
                        }
                      ],
                      "peaks": [
                        {
                          "bandwidth": 300000000,
                          "location": "DCA",
                          "peakId": 17093,
                          "pps": 200
                        },
                        {
                          "bandwidth": 3000000,
                          "location": "HKG",
                          "peakId": 17092,
                          "pps": 1000
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains details about an attack, including location, time, and type of attack.",
                  "type": "object",
                  "required": [
                    "currentContract",
                    "data",
                    "status",
                    "statusMsg"
                  ],
                  "properties": {
                    "currentContract": {
                      "description": "The policy domain name of the data center or proxy.",
                      "type": "string"
                    },
                    "data": {
                      "description": "The list of recorded attacks, with details about each attack.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "attackId",
                          "customerShortName",
                          "eventEndTimeAsString",
                          "eventId",
                          "eventStartTime",
                          "eventStartTimeAsString",
                          "eventType",
                          "eventTypes",
                          "startTime"
                        ],
                        "properties": {
                          "attackId": {
                            "description": "A unique identifier for the attack.",
                            "type": "integer"
                          },
                          "customerShortName": {
                            "description": "A nickname for the customer.",
                            "type": "string"
                          },
                          "destinationPort": {
                            "description": "The targeted port of the attack, if applicable. Returns `null` when not applicable.",
                            "type": "string"
                          },
                          "destinations": {
                            "description": "The set of targeted IP addresses or Subnets for the attack.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "ip",
                                "netmask"
                              ],
                              "properties": {
                                "ip": {
                                  "description": "A targeted IP address.",
                                  "type": "string"
                                },
                                "netmask": {
                                  "description": "A targeted subnet.",
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "endTime": {
                            "description": "The end time of the attack in UNIX epoch seconds (UTC).",
                            "type": "integer"
                          },
                          "eventEndTime": {
                            "description": "The end time of the event in UNIX epoch seconds (UTC).",
                            "type": "integer"
                          },
                          "eventEndTimeAsString": {
                            "description": "The end time of the event in `yyyy-MM-dd HH:mm:ss` format.",
                            "type": "string"
                          },
                          "eventId": {
                            "description": "A unique identifier for the event.",
                            "type": "integer"
                          },
                          "eventStartTime": {
                            "description": "The start time of the event in UNIX epoch seconds (UTC).",
                            "type": "integer"
                          },
                          "eventStartTimeAsString": {
                            "description": "The start time of the event in `yyyy-MM-dd HH:mm:ss` format.",
                            "type": "string"
                          },
                          "eventType": {
                            "description": "The type of event. Valid values are `alert` and `attack`.",
                            "type": "string",
                            "enum": [
                              "alert",
                              "attack"
                            ]
                          },
                          "eventTypes": {
                            "description": "The types of attacks, also referred to as `attackTypeName` or `attackType`. Valid values are `ACK Flood`, `CLDAP Reflection`, `CharGEN Attack`, `Connection Flood`, `DNS Flood`, `FIN Flood`, `FIN PUSH Flood`, `GET Flood`, `GRE Protocol Flood`, `HEAD Flood`, `ICMP Flood`, `IGMP Flood`, `mDNS Flood`, `NTP FLOOD`, `Netbios Flood`, `POST Flood`, `PUSH Flood`, `PUT Flood`, `RESET Flood`, `RIP Flood`, `RPC Flood`, `Reserved Protocol Flood`, `SNMP Flood`, `SQL Server Reflection`, `SSDP Flood`, `SSL GET Flood`, `SSL POST Flood`, `SYN Flood`, `SYN PUSH`, `Sentinel Flood`, `TCP Anomaly`, `TCP Fragment`, `TFTP Flood`, `UDP Flood`, `UDP Fragment`, or `XMAS`.",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "ACK Flood",
                                "CLDAP Reflection",
                                "CharGEN Attack",
                                "Connection Flood",
                                "DNS Flood",
                                "FIN Flood",
                                "FIN PUSH Flood",
                                "GET Flood",
                                "GRE Protocol Flood",
                                "HEAD Flood",
                                "ICMP Flood",
                                "IGMP Flood",
                                "mDNS Flood",
                                "NTP FLOOD",
                                "Netbios Flood",
                                "POST Flood",
                                "PUSH Flood",
                                "PUT Flood",
                                "RESET Flood",
                                "RIP Flood",
                                "RPC Flood",
                                "Reserved Protocol Flood",
                                "SNMP Flood",
                                "SQL Server Reflection",
                                "SSDP Flood",
                                "SSL GET Flood",
                                "SSL POST Flood",
                                "SYN Flood",
                                "SYN PUSH",
                                "Sentinel Flood",
                                "TCP Anomaly",
                                "TCP Fragment",
                                "TFTP Flood",
                                "UDP Flood",
                                "UDP Fragment",
                                "XMAS"
                              ]
                            }
                          },
                          "peaks": {
                            "description": "Contains peak statistics from the attack data.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "bandwidth",
                                "location",
                                "peakId",
                                "pps"
                              ],
                              "properties": {
                                "bandwidth": {
                                  "description": "The peak measurement of bandwidth.",
                                  "type": "integer"
                                },
                                "connections": {
                                  "description": "The peak number of connections.",
                                  "type": "integer"
                                },
                                "location": {
                                  "description": "The peak value for location.",
                                  "type": "string"
                                },
                                "peakId": {
                                  "description": "The peak value for ID.",
                                  "type": "integer"
                                },
                                "pps": {
                                  "description": "The peak measurement of packets per second.",
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "startTime": {
                            "description": "The start time of the attack in UNIX epoch seconds (UTC).",
                            "type": "integer"
                          },
                          "ticketId": {
                            "description": "A unique identifier for the ticket associated with this attack.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "status": {
                      "description": "Whether the request for the attack information was successful.",
                      "type": "boolean"
                    },
                    "statusMsg": {
                      "description": "A status message that indicates the successful or failed retrieval of the attack information.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/AttackReports.yaml"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "example": {
                  "data": "Insufficient privileges to access object customerName with name=dmnw_atl.",
                  "errorCode": "INSUFFICIENT_PRIVILEGES",
                  "status": 403,
                  "args": [
                    "customerName",
                    "name",
                    "dmnw_atl"
                  ],
                  "errorPaths": [
                    {
                      "message": "You don't have permission to read customer name",
                      "path": "customerName.name"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "example": {
                  "data": "customerName is required.",
                  "errorCode": "PARAMETER_MISSING",
                  "status": 404,
                  "args": [
                    "customerName",
                    "name"
                  ],
                  "errorPaths": [
                    {
                      "message": "Customer not found",
                      "path": "customerName.name"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unix timestamp for end of attack report search.",
          "example": "{{end}}",
          "in": "path",
          "name": "end",
          "required": true,
          "schema": {
            "example": 1399641518,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/end-path.yaml"
          }
        },
        {
          "description": "Unix timestamp for beginning of attack report search.",
          "example": "{{start}}",
          "in": "path",
          "name": "start",
          "required": true,
          "schema": {
            "example": 1397049511,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/start-path.yaml"
          }
        },
        {
          "description": "The policy domain name of the data center or proxy that events belong to.",
          "example": "{{contract}}",
          "in": "path",
          "name": "contract",
          "required": true,
          "schema": {
            "example": "coral",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/contract-path.yaml"
          }
        }
      ]
    },
    "/critical-events/contract/{contract}": {
      "get": {
        "description": "Retrieves a critical events list for a customer.",
        "operationId": "get-critical-events-contract-contract",
        "summary": "List critical events",
        "tags": [
          "Critical events"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Prolexic Analytics API",
          "url": "https://techdocs.akamai.com/prolexic/reference/get-critical-events-contract-contract"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "currentContract": "coral",
                  "status": true,
                  "statusMsg": "Events acquired successfully",
                  "data": [
                    {
                      "acknowledged": 0,
                      "count": 11,
                      "description": "TEST WBM LEVEL 5",
                      "eventId": "05ngsdca1--lr1.dca1.plx-wbm_monitor-34610029-systems",
                      "expires": 3600,
                      "firstOccur": 1393657985,
                      "importance": 5,
                      "instance": "01",
                      "interfaceName": "unknown",
                      "ip": "192.0.2.187",
                      "location": "dca1",
                      "node": "lr1.dca1.plx",
                      "notes": "TEST 5",
                      "recentOccur": 1395842910,
                      "siteCustomerName": "coral",
                      "siteName": "dca1",
                      "siteType": "DC",
                      "source": "wbm",
                      "state": 1,
                      "summary": "WBM TEST 5"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "currentContract": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "acknowledged": {
                            "type": "integer"
                          },
                          "additionalProperties": {
                            "type": "string"
                          },
                          "attackId": {
                            "type": "string"
                          },
                          "count": {
                            "type": "integer"
                          },
                          "description": {
                            "type": "string"
                          },
                          "eventId": {
                            "type": "string"
                          },
                          "expires": {
                            "type": "integer"
                          },
                          "firstOccur": {
                            "type": "object"
                          },
                          "importance": {
                            "type": "integer"
                          },
                          "instance": {
                            "type": "string"
                          },
                          "interfaceName": {
                            "type": "string"
                          },
                          "ip": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "node": {
                            "type": "string"
                          },
                          "notes": {
                            "type": "string"
                          },
                          "recentOccur": {
                            "type": "object"
                          },
                          "required": {
                            "type": "string"
                          },
                          "siteCustomerName": {
                            "type": "string"
                          },
                          "siteName": {
                            "type": "string"
                          },
                          "siteType": {
                            "type": "string"
                          },
                          "source": {
                            "type": "string"
                          },
                          "state": {
                            "type": "integer"
                          },
                          "summary": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "required": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/CriticalEvent.yaml"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "example": {
                  "data": "Insufficient privileges to access object customerName with name=dmnw_atl.",
                  "errorCode": "INSUFFICIENT_PRIVILEGES",
                  "status": 403,
                  "args": [
                    "customerName",
                    "name",
                    "dmnw_atl"
                  ],
                  "errorPaths": [
                    {
                      "message": "You don't have permission to read customer name",
                      "path": "customerName.name"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "example": {
                  "data": "customerName is required.",
                  "errorCode": "PARAMETER_MISSING",
                  "status": 404,
                  "args": [
                    "customerName",
                    "name"
                  ],
                  "errorPaths": [
                    {
                      "message": "Customer not found",
                      "path": "customerName.name"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "The policy domain name of the data center or proxy that events belong to.",
          "example": "{{contract}}",
          "in": "path",
          "name": "contract",
          "required": true,
          "schema": {
            "example": "coral",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/contract-path.yaml"
          }
        }
      ]
    },
    "/events/contract/{contract}": {
      "get": {
        "description": "Retrieves an events list for a customer.",
        "operationId": "get-events-contract-contract",
        "summary": "List events",
        "tags": [
          "Events"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Prolexic Analytics API",
          "url": "https://techdocs.akamai.com/prolexic/reference/get-events-contract-contract"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "currentContract": "coral",
                  "status": true,
                  "statusMsg": "Events acquired successfully",
                  "data": [
                    {
                      "eventEndTime": 1393236546,
                      "eventStartTime": 1390975985,
                      "eventTitle": "chkInt: Interface GigabitEthernet0/18 is down.",
                      "eventType": "alert",
                      "isOngoing": false,
                      "service": "man",
                      "severity": 80,
                      "eventInfo": {
                        "attackId": "05ngsdca1--lr1.dca1.plx-wbm_monitor-34610029-systems",
                        "lastOccurred": 1393236546,
                        "location": "mia1"
                      }
                    },
                    {
                      "eventEndTime": 0,
                      "eventStartTime": 1392922838,
                      "eventTitle": "[\"SYN Flood\"]",
                      "eventType": "attack",
                      "isOngoing": true,
                      "service": "Mitigation",
                      "severity": 100,
                      "eventInfo": {
                        "attackEventId": "2707",
                        "attackType": "[\"SYN Flood\"]",
                        "destinationIPs": "[178.132.240.114/32, 178.132.240.155/32, 178.132.240.203/32]",
                        "endTime": false,
                        "eventTicketId": "70167",
                        "startTime": 1392922838
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates the details of an event and the associated attack information.",
                  "type": "object",
                  "required": [
                    "currentContract",
                    "data",
                    "status",
                    "statusMsg"
                  ],
                  "properties": {
                    "currentContract": {
                      "description": "The policy domain name of the data center or proxy.",
                      "type": "string"
                    },
                    "data": {
                      "description": "Attack details for each event.",
                      "type": "array",
                      "items": {
                        "additionalProperties": true,
                        "description": "Contains the attack details of the event.",
                        "type": "object",
                        "required": [
                          "eventStartTime",
                          "eventType",
                          "isOngoing",
                          "service",
                          "severity"
                        ],
                        "properties": {
                          "eventEndTime": {
                            "description": "The end time of the event in UNIX epoch seconds (UTC).",
                            "type": "integer"
                          },
                          "eventInfo": {
                            "type": "object"
                          },
                          "eventStartTime": {
                            "description": "The start time of the event in UNIX epoch seconds (UTC).",
                            "type": "integer"
                          },
                          "eventTitle": {
                            "description": "A title that briefly describes the event.",
                            "type": "string"
                          },
                          "eventType": {
                            "description": "The type of event. Valid values are `alert` and `attack`.",
                            "type": "string",
                            "enum": [
                              "alert",
                              "attack"
                            ]
                          },
                          "isOngoing": {
                            "description": "Indicates whether the event is currently ongoing.",
                            "type": "boolean"
                          },
                          "service": {
                            "description": "Returns `Mitigation` in the case of an attack report type event. Returns one of the following sources if it is an alert type event: `abm`, `abr`, `arb`, `bgp`, `fbm`, or `int`.",
                            "type": "string"
                          },
                          "severity": {
                            "description": "The severity level of the event.",
                            "type": "integer"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/Events.yaml"
                        }
                      }
                    },
                    "status": {
                      "description": "Whether the request for the events list was successful.",
                      "type": "boolean"
                    },
                    "statusMsg": {
                      "description": "A status message that indicates the successful or failed retrieval of the events list.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/EventResponse.yaml"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "example": {
                  "data": "Insufficient privileges to access object customerName with name=dmnw_atl.",
                  "errorCode": "INSUFFICIENT_PRIVILEGES",
                  "status": 403,
                  "args": [
                    "customerName",
                    "name",
                    "dmnw_atl"
                  ],
                  "errorPaths": [
                    {
                      "message": "You don't have permission to read customer name",
                      "path": "customerName.name"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "example": {
                  "data": "customerName is required.",
                  "errorCode": "PARAMETER_MISSING",
                  "status": 404,
                  "args": [
                    "customerName",
                    "name"
                  ],
                  "errorPaths": [
                    {
                      "message": "Customer not found",
                      "path": "customerName.name"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "The policy domain name of the data center or proxy that events belong to.",
          "example": "{{contract}}",
          "in": "path",
          "name": "contract",
          "required": true,
          "schema": {
            "example": "coral",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/contract-path.yaml"
          }
        }
      ]
    },
    "/metric-types/{contract}": {
      "get": {
        "description": "Retrieve a list of metric types for a specific customer.",
        "operationId": "get-metric-types-contract",
        "summary": "List metric types",
        "tags": [
          "Metric types"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Prolexic Analytics API",
          "url": "https://techdocs.akamai.com/prolexic/reference/get-metric-types-contract"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "currentContract": "coral",
                  "status": true,
                  "statusMsg": "Metric Types list acquired successfully",
                  "data": {
                    "connect": {
                      "metrics": {
                        "bandwidthIn": {
                          "desc": "Customer inbound traffic, bits per second"
                        },
                        "packetsIn": {
                          "desc": "Customer inbound packets, packets per second"
                        }
                      }
                    },
                    "fbm": {
                      "metrics": {
                        "bandwidth": {
                          "desc": "Customer traffic bits per second",
                          "protocols": [
                            "total",
                            "icmp",
                            "igmp",
                            "udp",
                            "tcp"
                          ],
                          "subnets": [
                            "192.0.2.144/24"
                          ]
                        },
                        "packets": {
                          "desc": "Customer traffic packets per second",
                          "protocols": [
                            "total",
                            "icmp",
                            "igmp",
                            "udp",
                            "tcp"
                          ],
                          "subnets": [
                            "192.0.2.182/24"
                          ]
                        }
                      }
                    },
                    "mitigationPost": {
                      "metrics": {
                        "bandwidth": {
                          "desc": "Customer traffic bits per second"
                        },
                        "packets": {
                          "desc": "Customer traffic packets per second"
                        }
                      }
                    },
                    "mitigationPre": {
                      "metrics": {
                        "bandwidth": {
                          "desc": "Customer traffic bits per second"
                        },
                        "packets": {
                          "desc": "Customer traffic packets per second"
                        }
                      }
                    },
                    "proxy": {
                      "metrics": {
                        "bandwidthIn": {
                          "desc": "Customer inbound traffic, bits per second"
                        },
                        "bandwidthOut": {
                          "desc": "Customer outbound traffic, bits per second"
                        },
                        "connections": {
                          "desc": "Connections count"
                        },
                        "latency": {
                          "desc": "Average latency of request"
                        },
                        "packetsIn": {
                          "desc": "Customer inbound traffic, packets per second"
                        },
                        "packetsOut": {
                          "desc": "Customer outbound traffic, packets per second"
                        },
                        "requests": {
                          "desc": "Requests count"
                        }
                      }
                    },
                    "routed": {
                      "metrics": {
                        "bandwidthIn": {
                          "desc": "Customer inbound traffic, bits per second"
                        },
                        "packetsIn": {
                          "desc": "Customer inbound traffic, packets per second"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information on the types of metrics available to the contract.",
                  "type": "object",
                  "required": [
                    "currentContract",
                    "data",
                    "status",
                    "statusMsg"
                  ],
                  "properties": {
                    "currentContract": {
                      "description": "The policy domain name of the data center or proxy.",
                      "type": "string"
                    },
                    "data": {
                      "additionalProperties": false,
                      "description": "Defines the types of metrics you can request.",
                      "type": "object",
                      "required": [
                        "connect",
                        "fbm",
                        "mitigationPre",
                        "mitigationPost",
                        "proxy",
                        "routed"
                      ],
                      "properties": {
                        "connect": {
                          "additionalProperties": false,
                          "description": "Valid routed and connect metrics.",
                          "type": "object",
                          "required": [
                            "metrics"
                          ],
                          "properties": {
                            "metrics": {
                              "additionalProperties": false,
                              "description": "Contains a list of available routed or connect metrics.",
                              "type": "object",
                              "required": [
                                "bandwidthIn",
                                "packetsIn"
                              ],
                              "properties": {
                                "bandwidthIn": {
                                  "additionalProperties": false,
                                  "description": "The customer inbound traffic measured in bits per second.",
                                  "type": "object",
                                  "required": [
                                    "desc"
                                  ],
                                  "properties": {
                                    "desc": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "packetsIn": {
                                  "additionalProperties": false,
                                  "description": "The customer inbound traffic measured in packets per second.",
                                  "type": "object",
                                  "required": [
                                    "desc"
                                  ],
                                  "properties": {
                                    "desc": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/ConnectAndRoutedMetricsData.yaml"
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/ConnectAndRoutedMetric.yaml"
                          }
                        },
                        "fbm": {
                          "additionalProperties": false,
                          "description": "Valid metrics for FBM.",
                          "type": "object",
                          "required": [
                            "metrics"
                          ],
                          "properties": {
                            "metrics": {
                              "additionalProperties": false,
                              "description": "Contains a list of available FBM metrics.",
                              "type": "object",
                              "required": [
                                "bandwidth",
                                "packets"
                              ],
                              "properties": {
                                "bandwidth": {
                                  "additionalProperties": false,
                                  "description": "Customer traffic measured in bits per second.",
                                  "type": "object",
                                  "required": [
                                    "desc",
                                    "protocols",
                                    "subnets"
                                  ],
                                  "properties": {
                                    "desc": {
                                      "type": "string"
                                    },
                                    "protocols": {
                                      "description": "The available protocols. Valid values are `total`, `icmp`, `igmp`, `udp`, and `tcp`.",
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "enum": [
                                          "total",
                                          "icmp",
                                          "igmp",
                                          "udp",
                                          "tcp"
                                        ]
                                      }
                                    },
                                    "subnets": {
                                      "description": "The subnets available to your contract.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/FbmData.yaml"
                                  }
                                },
                                "packets": {
                                  "additionalProperties": false,
                                  "description": "Customer traffic measured in packets per second.",
                                  "type": "object",
                                  "required": [
                                    "desc",
                                    "protocols",
                                    "subnets"
                                  ],
                                  "properties": {
                                    "desc": {
                                      "type": "string"
                                    },
                                    "protocols": {
                                      "description": "The available protocols. Valid values are `total`, `icmp`, `igmp`, `udp`, and `tcp`.",
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "enum": [
                                          "total",
                                          "icmp",
                                          "igmp",
                                          "udp",
                                          "tcp"
                                        ]
                                      }
                                    },
                                    "subnets": {
                                      "description": "The subnets available to your contract.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/FbmData.yaml"
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/FbmMetricData.yaml"
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/FbmMetric.yaml"
                          }
                        },
                        "mitigationPost": {
                          "additionalProperties": false,
                          "description": "Valid mitigation metrics.",
                          "type": "object",
                          "required": [
                            "metrics"
                          ],
                          "properties": {
                            "metrics": {
                              "additionalProperties": false,
                              "description": "Contains a list of available mitigation metrics.",
                              "type": "object",
                              "required": [
                                "bandwidth",
                                "packets"
                              ],
                              "properties": {
                                "bandwidth": {
                                  "additionalProperties": false,
                                  "description": "Customer traffic measured in packets per second.",
                                  "type": "object",
                                  "required": [
                                    "desc"
                                  ],
                                  "properties": {
                                    "desc": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "packets": {
                                  "additionalProperties": false,
                                  "description": "Customer traffic measured in packets per second.",
                                  "type": "object",
                                  "required": [
                                    "desc"
                                  ],
                                  "properties": {
                                    "desc": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/MitigationData.yaml"
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/MitigationMetric.yaml"
                          }
                        },
                        "mitigationPre": {
                          "additionalProperties": false,
                          "description": "Valid mitigation metrics.",
                          "type": "object",
                          "required": [
                            "metrics"
                          ],
                          "properties": {
                            "metrics": {
                              "additionalProperties": false,
                              "description": "Contains a list of available mitigation metrics.",
                              "type": "object",
                              "required": [
                                "bandwidth",
                                "packets"
                              ],
                              "properties": {
                                "bandwidth": {
                                  "additionalProperties": false,
                                  "description": "Customer traffic measured in packets per second.",
                                  "type": "object",
                                  "required": [
                                    "desc"
                                  ],
                                  "properties": {
                                    "desc": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "packets": {
                                  "additionalProperties": false,
                                  "description": "Customer traffic measured in packets per second.",
                                  "type": "object",
                                  "required": [
                                    "desc"
                                  ],
                                  "properties": {
                                    "desc": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/MitigationData.yaml"
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/MitigationMetric.yaml"
                          }
                        },
                        "proxy": {
                          "additionalProperties": false,
                          "description": "Valid proxy metrics.",
                          "type": "object",
                          "required": [
                            "metrics"
                          ],
                          "properties": {
                            "metrics": {
                              "additionalProperties": false,
                              "description": "Contains a list of available proxy metrics.",
                              "type": "object",
                              "required": [
                                "bandwidthIn",
                                "bandwidthOut",
                                "connections",
                                "latency",
                                "packetsIn",
                                "packetsOut",
                                "requests"
                              ],
                              "properties": {
                                "bandwidthIn": {
                                  "additionalProperties": false,
                                  "description": "Customer inbound traffic measured in bits per second.",
                                  "type": "object",
                                  "required": [
                                    "desc"
                                  ],
                                  "properties": {
                                    "desc": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "bandwidthOut": {
                                  "additionalProperties": false,
                                  "description": "Customer outbound traffic measured in bits per second.",
                                  "type": "object",
                                  "required": [
                                    "desc"
                                  ],
                                  "properties": {
                                    "desc": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "connections": {
                                  "additionalProperties": false,
                                  "description": "The total connections count.",
                                  "type": "object",
                                  "required": [
                                    "desc"
                                  ],
                                  "properties": {
                                    "desc": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "latency": {
                                  "additionalProperties": false,
                                  "description": "Average latency of a request.",
                                  "type": "object",
                                  "required": [
                                    "desc"
                                  ],
                                  "properties": {
                                    "desc": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "packetsIn": {
                                  "additionalProperties": false,
                                  "description": "Customer outbound traffic measured in packets per second.",
                                  "type": "object",
                                  "required": [
                                    "desc"
                                  ],
                                  "properties": {
                                    "desc": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "packetsOut": {
                                  "additionalProperties": false,
                                  "description": "Customer outbound traffic measured in packets per second.",
                                  "type": "object",
                                  "required": [
                                    "desc"
                                  ],
                                  "properties": {
                                    "desc": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "requests": {
                                  "additionalProperties": false,
                                  "description": "The total request count.",
                                  "type": "object",
                                  "required": [
                                    "desc"
                                  ],
                                  "properties": {
                                    "desc": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/ProxyData.yaml"
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/ProxyMetric.yaml"
                          }
                        },
                        "routed": {
                          "additionalProperties": false,
                          "description": "Valid routed and connect metrics.",
                          "type": "object",
                          "required": [
                            "metrics"
                          ],
                          "properties": {
                            "metrics": {
                              "additionalProperties": false,
                              "description": "Contains a list of available routed or connect metrics.",
                              "type": "object",
                              "required": [
                                "bandwidthIn",
                                "packetsIn"
                              ],
                              "properties": {
                                "bandwidthIn": {
                                  "additionalProperties": false,
                                  "description": "The customer inbound traffic measured in bits per second.",
                                  "type": "object",
                                  "required": [
                                    "desc"
                                  ],
                                  "properties": {
                                    "desc": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "packetsIn": {
                                  "additionalProperties": false,
                                  "description": "The customer inbound traffic measured in packets per second.",
                                  "type": "object",
                                  "required": [
                                    "desc"
                                  ],
                                  "properties": {
                                    "desc": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/ConnectAndRoutedMetricsData.yaml"
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/ConnectAndRoutedMetric.yaml"
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/MetricsTypeObject.yaml"
                      }
                    },
                    "status": {
                      "description": "Whether the request for the metrics type list was successful.",
                      "type": "boolean"
                    },
                    "statusMsg": {
                      "description": "A status message that indicates the successful or failed retrieval of the metric types list.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/MetricType.yaml"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "example": {
                  "data": "Insufficient privileges to access object customerName with name=dmnw_atl.",
                  "errorCode": "INSUFFICIENT_PRIVILEGES",
                  "status": 403,
                  "args": [
                    "customerName",
                    "name",
                    "dmnw_atl"
                  ],
                  "errorPaths": [
                    {
                      "message": "You don't have permission to read customer name",
                      "path": "customerName.name"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "example": {
                  "data": "customerName is required.",
                  "errorCode": "PARAMETER_MISSING",
                  "status": 404,
                  "args": [
                    "customerName",
                    "name"
                  ],
                  "errorPaths": [
                    {
                      "message": "Customer not found",
                      "path": "customerName.name"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "The policy domain name of the data center or proxy that events belong to.",
          "example": "{{contract}}",
          "in": "path",
          "name": "contract",
          "required": true,
          "schema": {
            "example": "coral",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/contract-path.yaml"
          }
        }
      ]
    },
    "/metrics": {
      "post": {
        "description": "Lists metrics specified in the `type` object, falling between given `start` and `end` times, sampled at the given rate and attached to given contract. The maximum range between start and end is 90 days.  If some (not all) requested types are invalid, invalid types are silently dropped, and the response only contains data for valid requests. More meaningful errors result if you are requesting data for only one type at a time.",
        "operationId": "post-metrics",
        "summary": "Get metrics data",
        "tags": [
          "Metrics"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Prolexic Analytics API",
          "url": "https://techdocs.akamai.com/prolexic/reference/post-metrics"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "contract": "venus",
                "end": 1400385899,
                "samples": 100,
                "start": 1322390037,
                "type": {
                  "routed": [
                    "bandwidthIn"
                  ],
                  "fbm": [
                    {
                      "metric": "bandwidth",
                      "protocol": "total",
                      "subnet": "192.0.2.186/24"
                    },
                    {
                      "ip": "192.0.2.64",
                      "metric": "packets",
                      "protocol": "tcp"
                    }
                  ]
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Encapsulates the target contract and time constraints for the specified metrics.",
                "type": "object",
                "required": [
                  "contract",
                  "end",
                  "samples",
                  "start",
                  "type"
                ],
                "properties": {
                  "contract": {
                    "description": "The policy domain name of the data center or proxy.",
                    "example": "{{contract}}",
                    "type": "string"
                  },
                  "end": {
                    "description": "The end time of the requested metric in UNIX epoch seconds (UTC).",
                    "example": "{{end}}",
                    "type": "integer"
                  },
                  "samples": {
                    "description": "The number on data points to return.",
                    "example": "{{samples}}",
                    "type": "integer"
                  },
                  "start": {
                    "description": "The start time of the requested metric in UNIX epoch seconds (UTC).",
                    "example": "{{start}}",
                    "type": "integer"
                  },
                  "type": {
                    "additionalProperties": false,
                    "description": "Defines the types of requested metrics.",
                    "type": "object",
                    "properties": {
                      "connect": {
                        "description": "Select `bandwidthIn` to return inbound traffic measured in bits per second or select `packetsIn` to include inbound packets measured in packets per second.",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "bandwidthIn",
                            "packetsIn"
                          ]
                        }
                      },
                      "fbm": {
                        "description": "Array of objects with requested metric, protocol, IP, or subnet. The response are valid subnets for your configuration.",
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "Array of objects with requested metric, protocol, IP, or subnet. The response are valid subnets for your configuration.",
                          "type": "object",
                          "required": [
                            "metric",
                            "protocol"
                          ],
                          "properties": {
                            "ip": {
                              "description": "The requested IP address. You can only specify a single `ip` or `subnet` per metric.",
                              "type": "string"
                            },
                            "metric": {
                              "description": "Select `bandwidth` to return traffic bits per second or select `packets` to return traffic packets per second.",
                              "type": "string",
                              "enum": [
                                "bandwidth",
                                "packets"
                              ]
                            },
                            "protocol": {
                              "description": "The protocol to use in the metric. Valid values are `total`, `icmp`, `igmp`, `udp`, and `tcp`.",
                              "type": "string",
                              "enum": [
                                "total",
                                "icmp",
                                "igmp",
                                "udp",
                                "tcp"
                              ]
                            },
                            "subnet": {
                              "description": "The requested subnet. You can only specify a single `subnet` or `ip` per metric.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/FbmType.yaml"
                          }
                        }
                      },
                      "mitigationPost": {
                        "description": "Select `packets` to return traffic packets per second or select `bandwidth` to return traffic bits per second.",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "packets",
                            "bandwidth"
                          ]
                        }
                      },
                      "mitigationPre": {
                        "description": "Select `packets` to return traffic packets per second or select `bandwidth` to return traffic bits per second.",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "packets",
                            "bandwidth"
                          ]
                        }
                      },
                      "proxy": {
                        "description": "Select `latency` for average latency of request, `bandwidthIn` for inbound traffic in bits per second, `bandwidthOut` for outbound traffic in bits per second, `connections` for a connections count, `packetsOut` for outbound traffic in packets per second, `requests` a request count, or `packetsIn` for inbound traffic in packets per second.",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "latency",
                            "bandwidthIn",
                            "bandwidthOut",
                            "connections",
                            "packetsOut",
                            "requests",
                            "packetsIn"
                          ]
                        }
                      },
                      "routed": {
                        "description": "Select `bandwidthIn` to return inbound traffic measured in bits per second or select `packetsIn` to include inbound packets measured in packets per second.",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "bandwidthIn",
                            "packetsIn"
                          ]
                        }
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/MetricQuery.yaml"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/MetricDataInput.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "currentContract": "coral",
                  "status": true,
                  "statusMsg": "Metrics acquired successfully",
                  "data": [
                    {
                      "metric": "bandwidthIn",
                      "service": "routed",
                      "points": [
                        [
                          1392609960,
                          211014
                        ],
                        [
                          1396886760,
                          202529
                        ]
                      ]
                    },
                    {
                      "metric": "bandwidthIn",
                      "protocol": "total",
                      "service": "fbm",
                      "subnet": "192.0.2.143/24",
                      "points": [
                        [
                          1392609960,
                          211014
                        ],
                        [
                          1396886760,
                          202529
                        ]
                      ]
                    },
                    {
                      "ip": "192.0.2.153",
                      "metric": "bandwidthIn",
                      "protocol": "tcp",
                      "service": "routed",
                      "points": [
                        [
                          1392609960,
                          211014
                        ],
                        [
                          1396886760,
                          202529
                        ]
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "currentContract",
                    "data",
                    "status",
                    "statusMsg"
                  ],
                  "properties": {
                    "currentContract": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "metric": {
                            "type": "string"
                          },
                          "points": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "service": {
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/Metrics.yaml"
                        }
                      }
                    },
                    "status": {
                      "type": "boolean"
                    },
                    "statusMsg": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/MetricResponse.yaml"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "example": {
                  "data": "Insufficient privileges to access object customerName with name=dmnw_atl.",
                  "errorCode": "INSUFFICIENT_PRIVILEGES",
                  "status": 403,
                  "args": [
                    "customerName",
                    "name",
                    "dmnw_atl"
                  ],
                  "errorPaths": [
                    {
                      "message": "You don't have permission to read customer name",
                      "path": "customerName.name"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "example": {
                  "data": "customerName is required.",
                  "errorCode": "PARAMETER_MISSING",
                  "status": 404,
                  "args": [
                    "customerName",
                    "name"
                  ],
                  "errorPaths": [
                    {
                      "message": "Customer not found",
                      "path": "customerName.name"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/time-series-data": {
      "get": {
        "description": "Lists usage and attack information for individual destination IP addresses. Optionally specify the `startTime` and `endTime` to get data from a specific period. The maximum date range is the last seven days and by default you get data from the last two hours. Specify `locations` to include only traffic coming through specific data centers, or `source` for specific router types. Indicate the `samplingSize` to determine the number of timestamps to get data for. Enable `sum` to get aggregated data.",
        "operationId": "get-time-series-data",
        "summary": "Get time series data",
        "tags": [
          "Time series data"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Prolexic Analytics API",
          "url": "https://techdocs.akamai.com/prolexic/reference/get-time-series-data"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "142.205.0.0/16": {
                    "ACCESS_FLOW_DFW3_ESP_BPS": {
                      "1594148700000": 183500.8,
                      "1594148820000": 10110020.267,
                      "1594148880000": 3023394.133,
                      "1594148940000": 11543868.4,
                      "1594149000000": 5758845.867,
                      "1594149060000": 11029211.467,
                      "1594149120000": 11703461.067,
                      "1594149180000": 4535091.2,
                      "1594149480000": 183500.8,
                      "1594151160000": 200977.067,
                      "1594152000000": 113595.733
                    },
                    "BORDER_FLOW_DFW3_ESP_BPS": {
                      "1594148700000": 183500.8,
                      "1594148820000": 10110020.267,
                      "1594148880000": 3023394.133,
                      "1594148940000": 11543868.4,
                      "1594149000000": 5758845.867,
                      "1594149060000": 11029211.467,
                      "1594149120000": 11703461.067,
                      "1594149180000": 4535091.2,
                      "1594149480000": 183500.8,
                      "1594151160000": 200977.067,
                      "1594152000000": 113595.733
                    },
                    "aggregatedData": {
                      "ACCESS_FLOW_DFW3_ESP_BPS": 1322132,
                      "ACCESS_FLOW_DFW3_ESP_PPS": 23444.1223,
                      "ACCESS_FLOW_DFW3_ICMP_BPS": 1223.22,
                      "ACCESS_FLOW_DFW3_ICMP_PPS": 1223.344,
                      "ACCESS_FLOW_DFW3_TCP_BPS": 123445.12,
                      "ACCESS_FLOW_DFW3_TCP_PPS": 76655.23,
                      "ACCESS_FLOW_DFW3_TOTAL_BPS": 1234,
                      "ACCESS_FLOW_DFW3_TOTAL_PPS": 1323,
                      "ACCESS_FLOW_DFW3_UDP_BPS": 1233,
                      "ACCESS_FLOW_DFW3_UDP_PPS": 2132,
                      "BORDER_FLOW_DFW3_ESP_BPS": 12233,
                      "BORDER_FLOW_DFW3_ESP_PPS": 2133,
                      "BORDER_FLOW_DFW3_ICMP_BPS": 1233,
                      "BORDER_FLOW_DFW3_ICMP_PPS": 167888.34,
                      "BORDER_FLOW_DFW3_TCP_BPS": 766554.23,
                      "BORDER_FLOW_DFW3_TCP_PPS": 12345.788,
                      "BORDER_FLOW_DFW3_TOTAL_BPS": 12344.77,
                      "BORDER_FLOW_DFW3_TOTAL_PPS": 659878.22,
                      "BORDER_FLOW_DFW3_UDP_BPS": 6555788,
                      "BORDER_FLOW_DFW3_UDP_PPS": 76555.865
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "additionalProperties": false,
                    "description": "The specified report data facet, including the affected router type, data centers, OSI model layer, and usage in either bytes per second or packets per second. Each data facet maps to a set of timestamp keys.",
                    "type": "object",
                    "properties": {
                      "^[0-9]{1,16}000$": {
                        "description": "The timestamp with associated data usage. Each timestamp key maps to an individual data facet.",
                        "type": "number"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/TimeSeriesDataMetricSet.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/TimeSeriesDataFeatureSchema.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "*/*": {}
            }
          },
          "500": {
            "description": "Internal error.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "A comma-separated list of destinations. These can be individual IP addresses or CIDR blocks to specify a range of addresses.",
            "example": "{{destinations}}",
            "in": "query",
            "name": "destinations",
            "required": true,
            "schema": {
              "example": "147.114.46.0/23,147.104.46.0/23",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/destinations-query.yaml"
            }
          },
          {
            "description": "The end time for the requested data in epoch seconds. Shows the current time by default.",
            "example": "{{endTime}}",
            "in": "query",
            "name": "endTime",
            "required": true,
            "schema": {
              "example": 1596220115,
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/endTime-query.yaml"
            }
          },
          {
            "description": "A comma-separated list of data center names to filter the results by. The currently available data centers are: `mia4`, `lga3`, `lax3`, `dfw3`, `ord3`, `vie3`, `par3`, `ams3`, `sto3`, `sjc2`, `dca2`, `lon2`, `fra2`, `hkg2`, `tyo2`, and `syd2`. Set to `agr` to show aggregated data from all data centers.",
            "example": "{{locations}}",
            "in": "query",
            "name": "locations",
            "required": true,
            "schema": {
              "example": "mia4,lga3",
              "pattern": "^(([a-z]{3}[0-9])|(agr))([,](([a-z]{3}[0-9])*)|(agr))$",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/locations-query.yaml"
            }
          },
          {
            "description": "The number of timestamps to get the usage data for. If not specified, the API returns all the data available for a selected time period.",
            "example": "{{samplingSize}}",
            "in": "query",
            "name": "samplingSize",
            "required": true,
            "schema": {
              "example": 2,
              "minimum": 1,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/samplingSize-query.yaml"
            }
          },
          {
            "description": "__Enum__ The router type the data went through. Either `access_flow` for an Akamai router, `border_flow` for a customer router, or `both`. The default value is `both`.",
            "example": "{{source}}",
            "in": "query",
            "name": "source",
            "required": true,
            "schema": {
              "example": "access_flow",
              "type": "string",
              "enum": [
                "both",
                "access_flow",
                "border_flow"
              ]
            },
            "x-akamai": {
              "file-path": "parameters/source-query.yaml"
            }
          },
          {
            "description": "The start time for the requested data in epoch seconds. Shows the current time minus two hours by default.",
            "example": "{{startTime}}",
            "in": "query",
            "name": "startTime",
            "required": true,
            "schema": {
              "example": 1596133715,
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/startTime-query.yaml"
            }
          },
          {
            "description": "Whether to return `aggregationData` in the response.",
            "example": "{{sum}}",
            "in": "query",
            "name": "sum",
            "required": true,
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/sum-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "x-readme": {
    "samples-languages": [
      "curl",
      "python",
      "node"
    ]
  },
  "servers": [
    {
      "url": "https://{hostname}/prolexic-analytics/v2"
    },
    {
      "url": "http://prolexic-analytics/v2"
    }
  ]
}