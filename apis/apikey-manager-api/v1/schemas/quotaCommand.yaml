type: object
description: |-
  Contains information about quota settings.
  
x-akamai:
  file-path: schemas/quotaCommand.yaml
additionalProperties: false
required:
- enabled
- headers
- interval
- value
properties:
  value:
    type: integer
    description: |
      The number of requests that each key from the collection can send to an API within the specified time period.
    minimum: 100
    maximum: 1000000000
  headers:
    type: object
    description: |
      Contains information about the criteria for sending the quota limit response headers.
    additionalProperties: false
    required:
    - allowLimitHeaderShown
    - allowRemainingHeaderShown
    - allowResetHeaderShown
    - denyLimitHeaderShown
    - denyNextHeaderShown
    - denyRemainingHeaderShown
    properties:
      allowLimitHeaderShown:
        type: boolean
        description: |
          Whether to send the `X-RateLimit-Limit` header in a response when the quota remains.
      allowRemainingHeaderShown:
        type: boolean
        description: |
          Whether to send the `X-RateLimit-Remaining` header in a response when the quota remains.
      allowResetHeaderShown:
        type: boolean
        description: |
          Whether to send the `X-RateLimit-Reset` header in a response when the quota remains.
      denyLimitHeaderShown:
        type: boolean
        description: |
          Whether to send the `X-RateLimit-Limit` header in a response when the quota is full.
      denyNextHeaderShown:
        type: boolean
        description: |
          Whether to send the `X-RateLimit-Next` header in a response when the quota is full.
      denyRemainingHeaderShown:
        type: boolean
        description: |
          Whether to send the `X-RateLimit-Remaining` header in a response when the quota is full.
  enabled:
    type: boolean
    description: |
      Whether you enabled quota settings in the collection.
  interval:
    type: string
    description: |
      The time period for the quota limit in UTC, either `HOUR_1` to reset at the start of each hour, `HOUR_6` at the start of each sixth hour, `HOUR_12` for twice daily, `DAY` for midnight each day, `WEEK` for midnight on each Monday, or `MONTH` for midnight on the first day of each month.
    enum:
    - HOUR_1
    - HOUR_6
    - HOUR_12
    - DAY
    - WEEK
    - MONTH
