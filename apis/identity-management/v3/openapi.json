{
  "externalDocs": {
    "description": "See documentation for Akamai's Identity and Access Management API",
    "url": "https://techdocs.akamai.com/iam-api/reference"
  },
  "info": {
    "description": "Create users and groups, and define policies that manage access\nto Control Center applications.\n",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title": "Akamai: Identity and Access Management API",
    "version": "3"
  },
  "openapi": "3.0.0",
  "paths": {
    "/api-clients": {
      "post": {
        "description": "This operation creates a new API client. Optionally, you can automatically assign a credential for the client when you create it. If you choose not to assign the credential automatically, see [Create authentication credentials](https://techdocs.akamai.com/developer/docs/set-up-authentication-credentials) for details.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/post-api-clients"
        },
        "operationId": "post-api-clients",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "allowAccountSwitch": false,
                "apiAccess": {
                  "allAccessibleApis": false,
                  "apis": [{
                    "accessLevel": "READ-ONLY",
                    "apiId": 5000,
                    "apiName": "Reporting API",
                    "description": "Luna Reporting API",
                    "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                    "endPoint": "/reporting-api"
                  }]
                },
                "authorizedUsers": [
                  "jsmith"
                ],
                "canAutoCreateCredential": false,
                "clientDescription": "Provides access to the reporting data.",
                "clientName": "report_data",
                "clientType": "CLIENT",
                "createCredential": true,
                "groupAccess": {
                  "cloneAuthorizedUserGroups": false,
                  "groups": [{
                    "groupId": 32145,
                    "groupName": "Internet Company",
                    "isBlocked": false,
                    "roleDescription": "Sales role",
                    "roleId": 1,
                    "roleName": "Sales role",
                    "subGroups": [{
                      "groupId": 32145,
                      "groupName": "Digital Company",
                      "isBlocked": false,
                      "parentGroupId": 18385,
                      "roleDescription": "Sales role",
                      "roleId": 2,
                      "roleName": "Sales",
                      "subGroups": []
                    }]
                  }]
                },
                "ipAcl": {
                  "cidr": [
                    "192.0.2.239",
                    "192.0.2.20/24"
                  ],
                  "enable": true
                },
                "notificationEmails": [
                  "mrossi@example.com",
                  "jsmith@example.com"
                ],
                "purgeOptions": {
                  "canPurgeByCacheTag": false,
                  "canPurgeByCpcode": true,
                  "cpcodeAccess": {
                    "allCurrentAndNewCpcodes": false,
                    "cpcodes": [
                      7563521,
                      13243546
                    ]
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "allowAccountSwitch": {
                    "default": false,
                    "description": "Enables the API client to manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).",
                    "example": "{{allowAccountSwitch}}",
                    "type": "boolean"
                  },
                  "apiAccess": {
                    "additionalProperties": false,
                    "description": "The APIs the API client can access.",
                    "oneOf": [{
                        "additionalProperties": false,
                        "properties": {
                          "allAccessibleApis": {
                            "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "apis"
                        ],
                        "title": "Not all APIs accessible"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "allAccessibleApis": {
                            "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "allAccessibleApis"
                        ],
                        "title": "All APIs accessible"
                      }
                    ],
                    "properties": {
                      "allAccessibleApis": {
                        "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.",
                        "type": "boolean"
                      },
                      "apis": {
                        "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled. To get this data, run the [List allowed APIs](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-allowed-apis) operation.",
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "accessLevel": {
                              "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.",
                              "enum": [
                                "READ-ONLY",
                                "READ-WRITE"
                              ],
                              "type": "string"
                            },
                            "apiId": {
                              "description": "Unique identifier for each API. To get this value, run the [List allowed APIs](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-allowed-apis) operation.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "apiName": {
                              "description": "Descriptive label for the API.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "description": {
                              "description": "Descriptive label for the API.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "documentationUrl": {
                              "description": "Link to more information about the API.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "endPoint": {
                              "description": "Specifies where the API can access resources.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "required": [
                            "apiId",
                            "accessLevel"
                          ],
                          "type": "object"
                        },
                        "minItems": 0,
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "authorizedUsers": {
                    "description": "The API client's valid users. When the `clientType` is either `CLIENT` or `USER_CLIENT`, you need to specify a single `username` in the array. To get this data, run the [List authorized users](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users) operation.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "canAutoCreateCredential": {
                    "default": false,
                    "description": "Whether the API client can create a credential for a new API client. The default is `false`.",
                    "example": "{{canAutoCreateCredential}}",
                    "type": "boolean"
                  },
                  "clientDescription": {
                    "description": "Descriptive label about the API client.",
                    "example": "{{clientDescription}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "clientName": {
                    "description": "Descriptive label for the API client.",
                    "example": "{{clientName}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "clientType": {
                    "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials.",
                    "enum": [
                      "CLIENT",
                      "USER_CLIENT"
                    ],
                    "example": "{{clientType}}",
                    "type": "string"
                  },
                  "createCredential": {
                    "default": false,
                    "description": "With `canAutoCreateCredential` enabled, setting this to `true` creates new credentials along with a new API client. The default is `false`.",
                    "example": "{{createCredential}}",
                    "type": "boolean"
                  },
                  "groupAccess": {
                    "additionalProperties": false,
                    "description": "Specifies the API client's group access.",
                    "oneOf": [{
                        "additionalProperties": false,
                        "properties": {
                          "cloneAuthorizedUserGroups": {
                            "description": "Sets the API client's group access the same as the authorized user. Set it to `false` and specify the access in the `groups` array.",
                            "type": "boolean"
                          },
                          "groups": {
                            "description": "Groups the API client can access. To get this data, run the [List accessible groups](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-group-access) operation.",
                            "items": {
                              "additionalProperties": false,
                              "description": "Groups the API client can access.",
                              "properties": {
                                "groupId": {
                                  "description": "Unique identifier for each group. To get this value, run the [List accessible groups](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-group-access) operation.",
                                  "type": "integer"
                                },
                                "groupName": {
                                  "description": "Descriptive label for the group.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "isBlocked": {
                                  "description": "Blocks the API client access to the group's child groups.",
                                  "type": "boolean"
                                },
                                "parentGroupId": {
                                  "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                                  "type": "integer"
                                },
                                "roleDescription": {
                                  "description": "Descriptive label for the role to convey its use.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "roleId": {
                                  "description": "Unique identifier for each role. To get this value, run the [List roles](https://techdocs.akamai.com/iam-api/reference/get-roles) operation.",
                                  "type": "integer"
                                },
                                "roleName": {
                                  "description": "Descriptive label for the role.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "subGroups": {
                                  "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                                  "items": {
                                    "additionalProperties": true,
                                    "description": "A further nested group.",
                                    "properties": {},
                                    "type": "object",
                                    "x-akamai": {
                                      "file-path": "schemas/groups-nested.yaml"
                                    }
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "roleId",
                                "groupId"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "groups",
                          "cloneAuthorizedUserGroups"
                        ],
                        "title": "Custom access"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "cloneAuthorizedUserGroups": {
                            "description": "Set it to `true` to clone the API client's group access from the authorized user.",
                            "type": "boolean"
                          },
                          "groups": {
                            "description": "Groups the API client can access. To get this data, run the [List accessible groups](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-group-access) operation.",
                            "items": {
                              "additionalProperties": false,
                              "description": "Groups the API client can access.",
                              "properties": {
                                "groupId": {
                                  "description": "Unique identifier for each group. To get this value, run the [List accessible groups](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-group-access) operation.",
                                  "type": "integer"
                                },
                                "groupName": {
                                  "description": "Descriptive label for the group.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "isBlocked": {
                                  "description": "Blocks the API client access to the group's child groups.",
                                  "type": "boolean"
                                },
                                "parentGroupId": {
                                  "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                                  "type": "integer"
                                },
                                "roleDescription": {
                                  "description": "Descriptive label for the role to convey its use.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "roleId": {
                                  "description": "Unique identifier for each role. To get this value, run the [List roles](https://techdocs.akamai.com/iam-api/reference/get-roles) operation.",
                                  "type": "integer"
                                },
                                "roleName": {
                                  "description": "Descriptive label for the role.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "subGroups": {
                                  "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                                  "items": {
                                    "additionalProperties": true,
                                    "description": "A further nested group.",
                                    "properties": {},
                                    "type": "object",
                                    "x-akamai": {
                                      "file-path": "schemas/groups-nested.yaml"
                                    }
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "roleId",
                                "groupId"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "cloneAuthorizedUserGroups"
                        ],
                        "title": "Cloned access"
                      }
                    ],
                    "type": "object"
                  },
                  "ipAcl": {
                    "additionalProperties": false,
                    "description": "Specifies the API client's IP list restriction.",
                    "properties": {
                      "cidr": {
                        "description": "IP addresses or CIDR blocks the API client can access.",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "minItems": 0,
                        "type": "array"
                      },
                      "enable": {
                        "description": "Enables API client's access to the IP ACL.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "enable",
                      "cidr"
                    ],
                    "type": "object"
                  },
                  "notificationEmails": {
                    "description": "Email addresses to notify users of expiring credentials.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "purgeOptions": {
                    "additionalProperties": false,
                    "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). Provide it only if the `apis` object includes an `apiName` of `CCU APIs`.",
                    "properties": {
                      "canPurgeByCacheTag": {
                        "description": "Whether the API client can purge content by cache tag.",
                        "type": "boolean"
                      },
                      "canPurgeByCpcode": {
                        "description": "Whether the API client can purge content by CP code.",
                        "type": "boolean"
                      },
                      "cpcodeAccess": {
                        "additionalProperties": false,
                        "description": "CP codes the API client can purge.",
                        "properties": {
                          "allCurrentAndNewCpcodes": {
                            "description": "Whether the API client can purge content by cache tag.",
                            "type": "boolean"
                          },
                          "cpcodes": {
                            "description": "CP codes the API client can purge. To get these values, run the [List allowed CP codes](https://techdocs.akamai.com/iam-api/reference/post-api-clients-users-allowed-cpcodes) operation.",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "allCurrentAndNewCpcodes",
                          "cpcodes"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "canPurgeByCacheTag",
                      "canPurgeByCpcode",
                      "cpcodeAccess"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "clientType",
                  "apiAccess",
                  "groupAccess",
                  "authorizedUsers"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/api-client-post-request-v3.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-eol24zwha6c2huw6-3at564pdmaggqrro",
                  "actions": {
                    "delete": true,
                    "deactivateAll": false,
                    "edit": true,
                    "editApis": true,
                    "editAuth": true,
                    "editGroups": true,
                    "editIpAcl": true,
                    "editSwitchAccount": false,
                    "lock": true,
                    "transfer": true,
                    "unlock": false
                  },
                  "activeCredentialCount": 0,
                  "allowAccountSwitch": false,
                  "apiAccess": {
                    "allAccessibleApis": true,
                    "apis": [{
                      "accessLevel": "READ-WRITE",
                      "apiId": 5101,
                      "apiName": "Reporting API",
                      "description": "Control Center reporting API",
                      "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                      "endPoint": "/reporting-api"
                    }]
                  },
                  "authorizedUsers": [
                    "jsmith"
                  ],
                  "baseURL": "https://akaa-g3bclnoojfn7jvua-ic3mtmz7dwkot4jw.luna-dev.akamaiapis.net",
                  "canAutoCreateCredential": false,
                  "clientDescription": "Used to create users across partner accounts.",
                  "clientId": "2cdgugz2tjbtowmy",
                  "clientName": "create_new_users",
                  "clientType": "CLIENT",
                  "createdBy": "adevi",
                  "createdDate": "2022-05-23T19:56:27.000Z",
                  "credentials": [{
                    "actions": {
                      "delete": true,
                      "activate": true,
                      "deactivate": false,
                      "editDescription": true,
                      "editExpiration": true
                    },
                    "clientSecret": "11111111111111111111111111111111111111111111",
                    "clientToken": "0000-0000000000000000-000000000000000",
                    "createdOn": "2022-08-25T17:35:07.000Z",
                    "credentialId": 16852304,
                    "description": "",
                    "expiresOn": "2024-08-25T17:35:07.000Z",
                    "status": "INACTIVE"
                  }],
                  "groupAccess": {
                    "cloneAuthorizedUserGroups": true,
                    "groups": [{
                      "groupId": 32145,
                      "groupName": "Main Street Corporation",
                      "isBlocked": false,
                      "roleDescription": "Sales role",
                      "roleId": 1,
                      "roleName": "Sales role",
                      "subGroups": [{
                        "groupId": 32145,
                        "groupName": "Cloud Access Manager",
                        "isBlocked": false,
                        "parentGroupId": 19717,
                        "roleDescription": "Cloud Access Manager Admin",
                        "roleId": 114776,
                        "roleName": "Cloud Access Manager Admin",
                        "subGroups": []
                      }]
                    }]
                  },
                  "isLocked": false,
                  "notificationEmails": [
                    "jsmith@example.com"
                  ],
                  "purgeOptions": {
                    "canPurgeByCacheTag": false,
                    "canPurgeByCpcode": false,
                    "cpcodeAccess": {
                      "allCurrentAndNewCpcodes": true,
                      "cpcodes": []
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the API client.",
                  "properties": {
                    "accessToken": {
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies activities available for the API client.",
                      "properties": {
                        "delete": {
                          "description": "Whether you can remove the API client.",
                          "type": "boolean"
                        },
                        "deactivateAll": {
                          "description": "Whether you can deactivate the API client's credentials.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether you can update the API client.",
                          "type": "boolean"
                        },
                        "editApis": {
                          "description": "Whether you can update the `apis` the API client can access.",
                          "type": "boolean"
                        },
                        "editAuth": {
                          "description": "Whether you can update the `groups` or `apis` the API client can access.",
                          "type": "boolean"
                        },
                        "editGroups": {
                          "description": "Whether you can update the `groups` the API client can access.",
                          "type": "boolean"
                        },
                        "editIpAcl": {
                          "description": "Whether you can update the `ipAcl` the API client can access.",
                          "type": "boolean"
                        },
                        "editSwitchAccount": {
                          "description": "Whether you can update the API client's option to manage many accounts.",
                          "type": "boolean"
                        },
                        "lock": {
                          "description": "Whether you can lock the API client.",
                          "type": "boolean"
                        },
                        "transfer": {
                          "description": "Whether you can transfer the API client to a new owner.",
                          "type": "boolean"
                        },
                        "unlock": {
                          "description": "Whether you can unlock the API client.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "deactivateAll",
                        "edit",
                        "editApis",
                        "editAuth",
                        "editGroups",
                        "editIpAcl",
                        "editSwitchAccount",
                        "lock",
                        "transfer",
                        "unlock"
                      ],
                      "type": "object"
                    },
                    "activeCredentialCount": {
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "allowAccountSwitch": {
                      "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).",
                      "type": "boolean"
                    },
                    "apiAccess": {
                      "additionalProperties": false,
                      "description": "The APIs the API client can access.",
                      "properties": {
                        "allAccessibleApis": {
                          "description": "Whether the API client has access to a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.",
                          "type": "boolean"
                        },
                        "apis": {
                          "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "accessLevel": {
                                "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "apiId": {
                                "description": "Unique identifier for each API.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "apiName": {
                                "description": "Descriptive label for the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "description": {
                                "description": "Descriptive label for the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "Link to more information about the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "endPoint": {
                                "description": "Specifies where the API can access resources.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "description",
                              "apiId",
                              "apiName",
                              "documentationUrl",
                              "endPoint",
                              "accessLevel"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "allAccessibleApis",
                        "apis"
                      ],
                      "type": "object"
                    },
                    "authorizedUsers": {
                      "description": "The API client's valid users.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "baseURL": {
                      "description": "The base URL for the service.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "canAutoCreateCredential": {
                      "description": "Whether the API client can create a credential for a new API client.",
                      "type": "boolean"
                    },
                    "clientDescription": {
                      "description": "Descriptive label about the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientId": {
                      "description": "Unique identifier for each API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientName": {
                      "description": "Descriptive label for the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientType": {
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials.",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT"
                      ],
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The user who created the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the API client was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentials": {
                      "description": "The API client's of credentials.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "actions": {
                            "additionalProperties": false,
                            "description": "Specifies activities available for the credential.",
                            "properties": {
                              "delete": {
                                "description": "Whether you can remove the credential.",
                                "type": "boolean"
                              },
                              "activate": {
                                "description": "Whether you can activate the credential.",
                                "type": "boolean"
                              },
                              "deactivate": {
                                "description": "Whether you can deactivate the credential.",
                                "type": "boolean"
                              },
                              "editDescription": {
                                "description": "Whether you can modify the credential's description.",
                                "type": "boolean"
                              },
                              "editExpiration": {
                                "description": "Whether you can modify the credential's expiration date.",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "delete",
                              "activate",
                              "deactivate",
                              "editDescription",
                              "editExpiration"
                            ],
                            "type": "object"
                          },
                          "clientToken": {
                            "description": "Part of the credential that identifies the API client.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdOn": {
                            "description": "ISO 8601 timestamp indicating when the credential was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "credentialId": {
                            "description": "Unique identifier each credential.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "description": {
                            "description": "Descriptive label for the API client.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "expiresOn": {
                            "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "status": {
                            "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.",
                            "enum": [
                              "ACTIVE",
                              "INACTIVE",
                              "DELETED"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "description",
                          "actions",
                          "clientToken",
                          "createdOn",
                          "credentialId",
                          "expiresOn",
                          "status"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "groupAccess": {
                      "additionalProperties": false,
                      "description": "Specifies the API client's group access.",
                      "properties": {
                        "cloneAuthorizedUserGroups": {
                          "description": "Sets the API client's group access the same as the authorized user.",
                          "type": "boolean"
                        },
                        "groups": {
                          "description": "Groups the API client can access.",
                          "items": {
                            "additionalProperties": false,
                            "description": "Groups the API client can access.",
                            "properties": {
                              "groupId": {
                                "description": "Unique identifier for each group. To get this value, run the [List accessible groups](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-group-access) operation.",
                                "type": "integer"
                              },
                              "groupName": {
                                "description": "Descriptive label for the group.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "isBlocked": {
                                "description": "Blocks the API client access to the group's child groups.",
                                "type": "boolean"
                              },
                              "parentGroupId": {
                                "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                                "type": "integer"
                              },
                              "roleDescription": {
                                "description": "Descriptive label for the role to convey its use.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "roleId": {
                                "description": "Unique identifier for each role. To get this value, run the [List roles](https://techdocs.akamai.com/iam-api/reference/get-roles) operation.",
                                "type": "integer"
                              },
                              "roleName": {
                                "description": "Descriptive label for the role.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "subGroups": {
                                "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                                "items": {
                                  "additionalProperties": true,
                                  "description": "A further nested group.",
                                  "properties": {},
                                  "type": "object",
                                  "x-akamai": {
                                    "file-path": "schemas/groups-nested.yaml"
                                  }
                                },
                                "type": "array"
                              }
                            },
                            "required": [
                              "roleId",
                              "groupId"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "cloneAuthorizedUserGroups",
                        "groups"
                      ],
                      "type": "object"
                    },
                    "ipAcl": {
                      "additionalProperties": false,
                      "description": "Specifies the API client's IP list restriction.",
                      "properties": {
                        "cidr": {
                          "description": "IP addresses or CIDR blocks the API client can access.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "enable": {
                          "description": "Enables API client's access to the IP ACL.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enable",
                        "cidr"
                      ],
                      "type": "object"
                    },
                    "isLocked": {
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).",
                      "type": "boolean"
                    },
                    "notificationEmails": {
                      "description": "Email addresses to notify users of expiring credentials.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "purgeOptions": {
                      "additionalProperties": false,
                      "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). It's returned only if the `apis` object includes an `apiName` of `CCU APIs`.",
                      "properties": {
                        "canPurgeByCacheTag": {
                          "description": "Whether the API client can purge content by cache tag.",
                          "type": "boolean"
                        },
                        "canPurgeByCpcode": {
                          "description": "Whether the API client can purge content by CP code.",
                          "type": "boolean"
                        },
                        "cpcodeAccess": {
                          "additionalProperties": false,
                          "description": "CP codes the API client can purge.",
                          "properties": {
                            "allCurrentAndNewCpcodes": {
                              "description": "Whether the API client can purge content by cache tag.",
                              "type": "boolean"
                            },
                            "cpcodes": {
                              "description": "CP codes the API client can purge.",
                              "items": {
                                "minimum": 0,
                                "type": "integer"
                              },
                              "minItems": 0,
                              "type": "array"
                            }
                          },
                          "required": [
                            "allCurrentAndNewCpcodes",
                            "cpcodes"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "canPurgeByCacheTag",
                        "canPurgeByCpcode",
                        "cpcodeAccess"
                      ],
                      "type": "object"
                    },
                    "serviceProviderId": {
                      "description": "Unique identifier for the API's service provider.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "baseURL",
                    "canAutoCreateCredential",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/api-client-detail-v3.yaml"
                  }
                }
              }
            },
            "description": "The response provides the newly created API client.",
            "headers": {
              "Location": {
                "description": "A URL path to the newly created object.",
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/Location.yaml"
                }
              }
            }
          }
        },
        "summary": "Create an API client",
        "tags": [
          "API clients"
        ]
      },
      "get": {
        "description": "This operation lists API clients an administrator can manage on the current account or other managed accounts using the `accountSwitchKey` parameter.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-api-clients"
        },
        "operationId": "get-api-clients",
        "parameters": [{
            "description": "Includes actions you can perform on the object, `false` by default.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                    "accessToken": "akaa-ly55myu4fbtajqck-o7oubkbiytbjxywe",
                    "actions": {
                      "delete": false,
                      "deactivateAll": false,
                      "edit": true,
                      "lock": false,
                      "transfer": true,
                      "unlock": false
                    },
                    "activeCredentialCount": 1,
                    "allowAccountSwitch": false,
                    "authorizedUsers": [
                      "jdoe"
                    ],
                    "canAutoCreateCredential": false,
                    "clientDescription": "Provides access to the reporting data.",
                    "clientId": "xfz2n5d43mogkdim",
                    "clientName": "report_data",
                    "clientType": "CLIENT",
                    "createdBy": "mrossi",
                    "createdDate": "2022-05-13T20:04:35.000Z",
                    "isLocked": false,
                    "notificationEmails": [
                      "jdoe@example.com"
                    ],
                    "serviceConsumerToken": "akaa-lb77cyyf3guivns3-sxmd4sxxxxxxxxxx"
                  },
                  {
                    "accessToken": "akaa-whlw7vibvujyoowg-rrp2q4xxxxxxxxxx",
                    "actions": {
                      "delete": false,
                      "deactivateAll": false,
                      "edit": true,
                      "lock": false,
                      "transfer": true,
                      "unlock": false
                    },
                    "activeCredentialCount": 1,
                    "allowAccountSwitch": false,
                    "authorizedUsers": [
                      "jsmith"
                    ],
                    "canAutoCreateCredential": false,
                    "clientDescription": "Provides all offload estimates.",
                    "clientId": "4f3cxdie6adyalyg",
                    "clientName": "offload_est",
                    "clientType": "CLIENT",
                    "createdBy": "jsmith",
                    "createdDate": "2022-05-09T10:43:49.000Z",
                    "isLocked": false,
                    "notificationEmails": [
                      "jsmith@example.com"
                    ],
                    "serviceConsumerToken": "akaa-csrfyd3yzysqybe3-3dwjebxxxxxxxxxx"
                  }
                ],
                "schema": {
                  "description": "API clients on the account.",
                  "items": {
                    "additionalProperties": false,
                    "description": "API clients on the account.",
                    "properties": {
                      "accessToken": {
                        "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "actions": {
                        "additionalProperties": false,
                        "description": "Specifies activities available for the API client.",
                        "properties": {
                          "delete": {
                            "description": "Whether you can remove the API client.",
                            "type": "boolean"
                          },
                          "deactivateAll": {
                            "description": "Whether you can deactivate the API client's credentials.",
                            "type": "boolean"
                          },
                          "edit": {
                            "description": "Whether you can update the API client.",
                            "type": "boolean"
                          },
                          "lock": {
                            "description": "Whether you can lock the API client.",
                            "type": "boolean"
                          },
                          "transfer": {
                            "description": "Whether you can transfer the API client to a new owner.",
                            "type": "boolean"
                          },
                          "unlock": {
                            "description": "Whether you can unlock the API client.",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "delete",
                          "deactivateAll",
                          "edit",
                          "lock",
                          "transfer",
                          "unlock"
                        ],
                        "type": "object"
                      },
                      "activeCredentialCount": {
                        "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "allowAccountSwitch": {
                        "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).",
                        "type": "boolean"
                      },
                      "authorizedUsers": {
                        "description": "The API client's valid users.",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "minItems": 0,
                        "type": "array"
                      },
                      "canAutoCreateCredential": {
                        "description": "Whether the API client can create a credential for a new API client. ",
                        "type": "boolean"
                      },
                      "clientDescription": {
                        "description": "Descriptive label about the API client.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "clientId": {
                        "description": "Unique identifier for each API client.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "clientName": {
                        "description": "Descriptive label for the API client.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "clientType": {
                        "default": "CLIENT",
                        "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.",
                        "enum": [
                          "CLIENT",
                          "USER_CLIENT",
                          "SERVICE_ACCOUNT"
                        ],
                        "type": "string"
                      },
                      "createdBy": {
                        "description": "The user who created the API client.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the API client was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "isLocked": {
                        "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).",
                        "type": "boolean"
                      },
                      "notificationEmails": {
                        "description": "Email addresses to notify users of expiring credentials.",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "minItems": 0,
                        "type": "array"
                      },
                      "serviceConsumerToken": {
                        "description": "Unique identifier for the service hostname.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "accessToken",
                      "actions",
                      "activeCredentialCount",
                      "allowAccountSwitch",
                      "canAutoCreateCredential",
                      "authorizedUsers",
                      "clientId",
                      "clientName",
                      "clientType",
                      "createdBy",
                      "createdDate",
                      "isLocked",
                      "notificationEmails",
                      "serviceConsumerToken"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/api-client-v3.yaml"
                    }
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/api-clients-v3.yaml"
                  }
                }
              }
            },
            "description": "The response provides a list of API clients an administrator can manage."
          }
        },
        "summary": "List API clients",
        "tags": [
          "API clients"
        ]
      }
    },
    "/api-clients/self": {
      "get": {
        "description": "This operation provides details about your API client.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-api-client-self"
        },
        "operationId": "get-api-client-self",
        "parameters": [{
            "description": "Includes actions you can perform on the object, `false` by default.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          },
          {
            "description": "Includes the API client's group access, `false` by default.",
            "example": "{{groupAccess}}",
            "in": "query",
            "name": "groupAccess",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/group-access-query.yaml"
            }
          },
          {
            "description": "Lists only the APIs the user can access, `false` by default.",
            "example": "{{apiAccess}}",
            "in": "query",
            "name": "apiAccess",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/apis-access-query.yaml"
            }
          },
          {
            "description": "Includes API user's credentials, `false` by default.",
            "example": "{{credentials}}",
            "in": "query",
            "name": "credentials",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/credentials-query.yaml"
            }
          },
          {
            "description": "Includes the API client's IP list restriction, `false` by default.",
            "example": "{{ipAcl}}",
            "in": "query",
            "name": "ipAcl",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/ip-acl-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-whlw7vibvujyoowg-rrp2q4cj362hke5t",
                  "actions": {
                    "delete": false,
                    "deactivateAll": false,
                    "edit": true,
                    "editApis": false,
                    "editAuth": false,
                    "editGroups": false,
                    "editIpAcl": false,
                    "editSwitchAccount": false,
                    "lock": false,
                    "transfer": true,
                    "unlock": false
                  },
                  "activeCredentialCount": 1,
                  "allowAccountSwitch": false,
                  "apiAccess": {
                    "allAccessibleApis": true,
                    "apis": [{
                      "accessLevel": "READ-WRITE",
                      "apiId": 5101,
                      "apiName": "Reporting API",
                      "description": "Luna Reporting API",
                      "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                      "endPoint": "/reporting-api"
                    }]
                  },
                  "authorizedUsers": [
                    "jsmith"
                  ],
                  "baseURL": "https://akaa-csrfyd3yzysqybe3-3dwjebsqo6ecu63m.luna-dev.akamaiapis.net",
                  "canAutoCreateCredential": false,
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "4f3cxdie6adyalyg",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "alfulani",
                  "createdDate": "2022-05-09T10:43:49.000Z",
                  "credentials": [{
                    "actions": {
                      "delete": false,
                      "activate": false,
                      "deactivate": false,
                      "editDescription": false,
                      "editExpiration": false
                    },
                    "clientToken": "0000-0000000000000000-000000000000000",
                    "createdOn": "2022-05-09T10:43:50.000Z",
                    "credentialId": 16850686,
                    "description": "",
                    "expiresOn": "2024-05-09T10:43:50.000Z",
                    "status": "ACTIVE"
                  }],
                  "groupAccess": {
                    "cloneAuthorizedUserGroups": true,
                    "groups": [{
                      "groupId": 54321,
                      "groupName": "Internet Company",
                      "isBlocked": false,
                      "roleDescription": "Admin Role plus Authz Case Management Read Role",
                      "roleId": 142838,
                      "roleName": "Admin plus Authz Case Management Read",
                      "subGroups": [{
                        "groupId": 12345,
                        "groupName": "Cloud Access Manager",
                        "isBlocked": false,
                        "parentGroupId": 19717,
                        "roleDescription": "Cloud Access Manager Admin",
                        "roleId": 114776,
                        "roleName": "Cloud Access Manager Admin",
                        "subGroups": []
                      }]
                    }]
                  },
                  "ipAcl": {
                    "cidr": [
                      "2001:db8::1",
                      "2001:db8::2"
                    ],
                    "enable": true
                  },
                  "isLocked": false,
                  "notificationEmails": [
                    "alfulani@example.com"
                  ],
                  "purgeOptions": {
                    "canPurgeByCacheTag": false,
                    "canPurgeByCpcode": false,
                    "cpcodeAccess": {
                      "allCurrentAndNewCpcodes": true,
                      "cpcodes": []
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the API client.",
                  "properties": {
                    "accessToken": {
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies activities available for the API client.",
                      "properties": {
                        "delete": {
                          "description": "Whether you can remove the API client.",
                          "type": "boolean"
                        },
                        "deactivateAll": {
                          "description": "Whether you can deactivate the API client's credentials.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether you can update the API client.",
                          "type": "boolean"
                        },
                        "editApis": {
                          "description": "Whether you can update the `apis` the API client can access.",
                          "type": "boolean"
                        },
                        "editAuth": {
                          "description": "Whether you can update the `groups` or `apis` the API client can access.",
                          "type": "boolean"
                        },
                        "editGroups": {
                          "description": "Whether you can update the `groups` the API client can access.",
                          "type": "boolean"
                        },
                        "editIpAcl": {
                          "description": "Whether you can update the `ipAcl` the API client can access.",
                          "type": "boolean"
                        },
                        "editSwitchAccount": {
                          "description": "Whether you can update the API client's option to manage many accounts.",
                          "type": "boolean"
                        },
                        "lock": {
                          "description": "Whether you can lock the API client.",
                          "type": "boolean"
                        },
                        "transfer": {
                          "description": "Whether you can transfer the API client to a new owner.",
                          "type": "boolean"
                        },
                        "unlock": {
                          "description": "Whether you can unlock the API client.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "deactivateAll",
                        "edit",
                        "editApis",
                        "editAuth",
                        "editGroups",
                        "editIpAcl",
                        "editSwitchAccount",
                        "lock",
                        "transfer",
                        "unlock"
                      ],
                      "type": "object"
                    },
                    "activeCredentialCount": {
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "allowAccountSwitch": {
                      "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).",
                      "type": "boolean"
                    },
                    "apiAccess": {
                      "additionalProperties": false,
                      "description": "The APIs the API client can access.",
                      "properties": {
                        "allAccessibleApis": {
                          "description": "Whether the API client has access to a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.",
                          "type": "boolean"
                        },
                        "apis": {
                          "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "accessLevel": {
                                "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "apiId": {
                                "description": "Unique identifier for each API.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "apiName": {
                                "description": "Descriptive label for the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "description": {
                                "description": "Descriptive label for the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "Link to more information about the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "endPoint": {
                                "description": "Specifies where the API can access resources.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "description",
                              "apiId",
                              "apiName",
                              "documentationUrl",
                              "endPoint",
                              "accessLevel"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "allAccessibleApis",
                        "apis"
                      ],
                      "type": "object"
                    },
                    "authorizedUsers": {
                      "description": "The API client's valid users.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "baseURL": {
                      "description": "The base URL for the service.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "canAutoCreateCredential": {
                      "description": "Whether the API client can create a credential for a new API client.",
                      "type": "boolean"
                    },
                    "clientDescription": {
                      "description": "Descriptive label about the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientId": {
                      "description": "Unique identifier for each API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientName": {
                      "description": "Descriptive label for the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientType": {
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials.",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT"
                      ],
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The user who created the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the API client was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentials": {
                      "description": "The API client's of credentials.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "actions": {
                            "additionalProperties": false,
                            "description": "Specifies activities available for the credential.",
                            "properties": {
                              "delete": {
                                "description": "Whether you can remove the credential.",
                                "type": "boolean"
                              },
                              "activate": {
                                "description": "Whether you can activate the credential.",
                                "type": "boolean"
                              },
                              "deactivate": {
                                "description": "Whether you can deactivate the credential.",
                                "type": "boolean"
                              },
                              "editDescription": {
                                "description": "Whether you can modify the credential's description.",
                                "type": "boolean"
                              },
                              "editExpiration": {
                                "description": "Whether you can modify the credential's expiration date.",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "delete",
                              "activate",
                              "deactivate",
                              "editDescription",
                              "editExpiration"
                            ],
                            "type": "object"
                          },
                          "clientToken": {
                            "description": "Part of the credential that identifies the API client.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdOn": {
                            "description": "ISO 8601 timestamp indicating when the credential was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "credentialId": {
                            "description": "Unique identifier each credential.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "description": {
                            "description": "Descriptive label for the API client.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "expiresOn": {
                            "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "status": {
                            "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.",
                            "enum": [
                              "ACTIVE",
                              "INACTIVE",
                              "DELETED"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "description",
                          "actions",
                          "clientToken",
                          "createdOn",
                          "credentialId",
                          "expiresOn",
                          "status"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "groupAccess": {
                      "additionalProperties": false,
                      "description": "Specifies the API client's group access.",
                      "properties": {
                        "cloneAuthorizedUserGroups": {
                          "description": "Sets the API client's group access the same as the authorized user.",
                          "type": "boolean"
                        },
                        "groups": {
                          "description": "Groups the API client can access.",
                          "items": {
                            "additionalProperties": false,
                            "description": "Groups the API client can access.",
                            "properties": {
                              "groupId": {
                                "description": "Unique identifier for each group. To get this value, run the [List accessible groups](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-group-access) operation.",
                                "type": "integer"
                              },
                              "groupName": {
                                "description": "Descriptive label for the group.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "isBlocked": {
                                "description": "Blocks the API client access to the group's child groups.",
                                "type": "boolean"
                              },
                              "parentGroupId": {
                                "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                                "type": "integer"
                              },
                              "roleDescription": {
                                "description": "Descriptive label for the role to convey its use.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "roleId": {
                                "description": "Unique identifier for each role. To get this value, run the [List roles](https://techdocs.akamai.com/iam-api/reference/get-roles) operation.",
                                "type": "integer"
                              },
                              "roleName": {
                                "description": "Descriptive label for the role.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "subGroups": {
                                "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                                "items": {
                                  "additionalProperties": true,
                                  "description": "A further nested group.",
                                  "properties": {},
                                  "type": "object",
                                  "x-akamai": {
                                    "file-path": "schemas/groups-nested.yaml"
                                  }
                                },
                                "type": "array"
                              }
                            },
                            "required": [
                              "roleId",
                              "groupId"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "cloneAuthorizedUserGroups",
                        "groups"
                      ],
                      "type": "object"
                    },
                    "ipAcl": {
                      "additionalProperties": false,
                      "description": "Specifies the API client's IP list restriction.",
                      "properties": {
                        "cidr": {
                          "description": "IP addresses or CIDR blocks the API client can access.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "enable": {
                          "description": "Enables API client's access to the IP ACL.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enable",
                        "cidr"
                      ],
                      "type": "object"
                    },
                    "isLocked": {
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).",
                      "type": "boolean"
                    },
                    "notificationEmails": {
                      "description": "Email addresses to notify users of expiring credentials.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "purgeOptions": {
                      "additionalProperties": false,
                      "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). It's returned only if the `apis` object includes an `apiName` of `CCU APIs`.",
                      "properties": {
                        "canPurgeByCacheTag": {
                          "description": "Whether the API client can purge content by cache tag.",
                          "type": "boolean"
                        },
                        "canPurgeByCpcode": {
                          "description": "Whether the API client can purge content by CP code.",
                          "type": "boolean"
                        },
                        "cpcodeAccess": {
                          "additionalProperties": false,
                          "description": "CP codes the API client can purge.",
                          "properties": {
                            "allCurrentAndNewCpcodes": {
                              "description": "Whether the API client can purge content by cache tag.",
                              "type": "boolean"
                            },
                            "cpcodes": {
                              "description": "CP codes the API client can purge.",
                              "items": {
                                "minimum": 0,
                                "type": "integer"
                              },
                              "minItems": 0,
                              "type": "array"
                            }
                          },
                          "required": [
                            "allCurrentAndNewCpcodes",
                            "cpcodes"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "canPurgeByCacheTag",
                        "canPurgeByCpcode",
                        "cpcodeAccess"
                      ],
                      "type": "object"
                    },
                    "serviceProviderId": {
                      "description": "Unique identifier for the API's service provider.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "baseURL",
                    "canAutoCreateCredential",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/api-client-detail-v3.yaml"
                  }
                }
              }
            },
            "description": "The response provides the API client."
          }
        },
        "summary": "Get your API client",
        "tags": [
          "API client: self"
        ]
      },
      "put": {
        "description": "This operation updates your API client.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/put-api-clients-self"
        },
        "operationId": "put-api-clients-self",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "allowAccountSwitch": false,
                "apiAccess": {
                  "allAccessibleApis": false,
                  "apis": [{
                      "accessLevel": "READ-ONLY",
                      "apiId": 109230,
                      "apiName": "Event Center",
                      "description": "Event Center",
                      "documentationUrl": "https://developer.akamai.com/api/luna/events/overview.html",
                      "endPoint": "/events"
                    },
                    {
                      "accessLevel": "READ-ONLY",
                      "apiId": 3515,
                      "apiName": "Reporting API",
                      "description": "Luna Reporting API",
                      "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                      "endPoint": "/reporting-api"
                    }
                  ]
                },
                "authorizedUsers": [
                  "jsmith"
                ],
                "canAutoCreateCredential": false,
                "clientDescription": "Provides access to the reporting data.",
                "clientName": "report_data",
                "groupAccess": {
                  "cloneAuthorizedUserGroups": false,
                  "groups": [{
                    "groupId": 54321,
                    "groupName": "Main Street Corporation",
                    "isBlocked": false,
                    "roleDescription": "Please add a description",
                    "roleId": 73695,
                    "roleName": "Custom role # 73695",
                    "subGroups": [{
                      "groupId": 54321,
                      "groupName": "Internet Company",
                      "isBlocked": false,
                      "parentGroupId": 19760,
                      "roleId": null,
                      "roleName": null,
                      "subGroups": [{
                        "groupId": 12345,
                        "groupName": "Digital Company",
                        "isBlocked": false,
                        "parentGroupId": 44999,
                        "roleId": null,
                        "roleName": null,
                        "subGroups": []
                      }]
                    }]
                  }]
                },
                "notificationEmails": [
                  "jsmith@example.com"
                ]
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "allowAccountSwitch": {
                    "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).",
                    "example": "{{allowAccountSwitch}}",
                    "type": "boolean"
                  },
                  "apiAccess": {
                    "additionalProperties": false,
                    "description": "The APIs the API client can access.",
                    "oneOf": [{
                        "additionalProperties": false,
                        "properties": {
                          "allAccessibleApis": {
                            "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "apis"
                        ],
                        "title": "Not all APIs accessible"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "allAccessibleApis": {
                            "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "allAccessibleApis"
                        ],
                        "title": "All APIs accessible"
                      }
                    ],
                    "properties": {
                      "allAccessibleApis": {
                        "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.",
                        "type": "boolean"
                      },
                      "apis": {
                        "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled. To get this data, run the [List allowed APIs](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-allowed-apis) operation.",
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "accessLevel": {
                              "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.",
                              "enum": [
                                "READ-ONLY",
                                "READ-WRITE"
                              ],
                              "type": "string"
                            },
                            "apiId": {
                              "description": "Unique identifier for each API. To get this value, run the [List allowed APIs](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-allowed-apis) operation.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "apiName": {
                              "description": "Descriptive label for the API.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "description": {
                              "description": "Descriptive label for the API.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "documentationUrl": {
                              "description": "Link to more information about the API.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "endPoint": {
                              "description": "Specifies where the API can access resources.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "required": [
                            "apiId",
                            "accessLevel"
                          ],
                          "type": "object"
                        },
                        "minItems": 0,
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "authorizedUsers": {
                    "description": "The API client's valid users. When the `clientType` is either `CLIENT` or `USER_CLIENT`, you need to specify a single `username` in the array. To get this data, run the [List authorized users](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users) operation.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "canAutoCreateCredential": {
                    "default": false,
                    "description": "Whether the API client can create a credential for a new API client. The default is `false`.",
                    "example": "{{canAutoCreateCredential}}",
                    "type": "boolean"
                  },
                  "clientDescription": {
                    "description": "Descriptive label about the API client.",
                    "example": "{{clientDescription}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "clientName": {
                    "description": "Descriptive label for the API client.",
                    "example": "{{clientName}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "groupAccess": {
                    "additionalProperties": false,
                    "description": "Specifies the API client's group access.",
                    "oneOf": [{
                        "additionalProperties": false,
                        "properties": {
                          "cloneAuthorizedUserGroups": {
                            "description": "Sets the API client's group access the same as the authorized user. Set it to `false` and specify the access in the `groups` array.",
                            "type": "boolean"
                          },
                          "groups": {
                            "description": "Groups the API client can access. To get this data, run the [List accessible groups](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-group-access) operation.",
                            "items": {
                              "additionalProperties": false,
                              "description": "Groups the API client can access.",
                              "properties": {
                                "groupId": {
                                  "description": "Unique identifier for each group. To get this value, run the [List accessible groups](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-group-access) operation.",
                                  "type": "integer"
                                },
                                "groupName": {
                                  "description": "Descriptive label for the group.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "isBlocked": {
                                  "description": "Blocks the API client access to the group's child groups.",
                                  "type": "boolean"
                                },
                                "parentGroupId": {
                                  "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                                  "type": "integer"
                                },
                                "roleDescription": {
                                  "description": "Descriptive label for the role to convey its use.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "roleId": {
                                  "description": "Unique identifier for each role. To get this value, run the [List roles](https://techdocs.akamai.com/iam-api/reference/get-roles) operation.",
                                  "type": "integer"
                                },
                                "roleName": {
                                  "description": "Descriptive label for the role.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "subGroups": {
                                  "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                                  "items": {
                                    "additionalProperties": true,
                                    "description": "A further nested group.",
                                    "properties": {},
                                    "type": "object",
                                    "x-akamai": {
                                      "file-path": "schemas/groups-nested.yaml"
                                    }
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "roleId",
                                "groupId"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "groups",
                          "cloneAuthorizedUserGroups"
                        ],
                        "title": "Custom access"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "cloneAuthorizedUserGroups": {
                            "description": "Set it to `true` to clone the API client's group access from the authorized user.",
                            "type": "boolean"
                          },
                          "groups": {
                            "description": "Groups the API client can access. To get this data, run the [List accessible groups](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-group-access) operation.",
                            "items": {
                              "additionalProperties": false,
                              "description": "Groups the API client can access.",
                              "properties": {
                                "groupId": {
                                  "description": "Unique identifier for each group. To get this value, run the [List accessible groups](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-group-access) operation.",
                                  "type": "integer"
                                },
                                "groupName": {
                                  "description": "Descriptive label for the group.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "isBlocked": {
                                  "description": "Blocks the API client access to the group's child groups.",
                                  "type": "boolean"
                                },
                                "parentGroupId": {
                                  "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                                  "type": "integer"
                                },
                                "roleDescription": {
                                  "description": "Descriptive label for the role to convey its use.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "roleId": {
                                  "description": "Unique identifier for each role. To get this value, run the [List roles](https://techdocs.akamai.com/iam-api/reference/get-roles) operation.",
                                  "type": "integer"
                                },
                                "roleName": {
                                  "description": "Descriptive label for the role.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "subGroups": {
                                  "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                                  "items": {
                                    "additionalProperties": true,
                                    "description": "A further nested group.",
                                    "properties": {},
                                    "type": "object",
                                    "x-akamai": {
                                      "file-path": "schemas/groups-nested.yaml"
                                    }
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "roleId",
                                "groupId"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "cloneAuthorizedUserGroups"
                        ],
                        "title": "Cloned access"
                      }
                    ],
                    "type": "object"
                  },
                  "ipAcl": {
                    "additionalProperties": false,
                    "description": "Specifies the API client's IP list restriction.",
                    "properties": {
                      "cidr": {
                        "description": "IP addresses or CIDR blocks the API client can access.",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "minItems": 0,
                        "type": "array"
                      },
                      "enable": {
                        "description": "Enables API client's access to the IP ACL.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "enable",
                      "cidr"
                    ],
                    "type": "object"
                  },
                  "notificationEmails": {
                    "description": "Email addresses to notify users of expiring credentials.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "purgeOptions": {
                    "additionalProperties": false,
                    "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). Provide it only if the `apis` object includes an `apiName` of `CCU APIs`.",
                    "properties": {
                      "canPurgeByCacheTag": {
                        "description": "Whether the API client can purge content by cache tag.",
                        "type": "boolean"
                      },
                      "canPurgeByCpcode": {
                        "description": "Whether the API client can purge content by CP code.",
                        "type": "boolean"
                      },
                      "cpcodeAccess": {
                        "additionalProperties": false,
                        "description": "CP codes the API client can purge.",
                        "properties": {
                          "allCurrentAndNewCpcodes": {
                            "description": "Whether the API client can purge content by cache tag.",
                            "type": "boolean"
                          },
                          "cpcodes": {
                            "description": "CP codes the API client can purge. To get these values, run the [List allowed CP codes](https://techdocs.akamai.com/iam-api/reference/post-api-clients-users-allowed-cpcodes) operation.",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "allCurrentAndNewCpcodes",
                          "cpcodes"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "canPurgeByCacheTag",
                      "canPurgeByCpcode",
                      "cpcodeAccess"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "apiAccess",
                  "groupAccess",
                  "authorizedUsers"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/api-client-update-request-v3.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-eol24zwha6c2huw6-3at564pdmaggqrro",
                  "actions": {
                    "delete": true,
                    "deactivateAll": false,
                    "edit": true,
                    "editApis": true,
                    "editAuth": true,
                    "editGroups": true,
                    "editIpAcl": true,
                    "editSwitchAccount": false,
                    "lock": true,
                    "transfer": true,
                    "unlock": false
                  },
                  "activeCredentialCount": 0,
                  "allowAccountSwitch": false,
                  "apiAccess": {
                    "allAccessibleApis": true,
                    "apis": [{
                        "accessLevel": "READ-ONLY",
                        "apiId": 164,
                        "apiName": "Media Reports",
                        "description": "Media Reports APIs",
                        "documentationUrl": "https://developer.akamai.com/api/luna/media-reports/overview.html",
                        "endPoint": "/media-reports"
                      },
                      {
                        "accessLevel": "READ-WRITE",
                        "apiId": 5101,
                        "apiName": "Reporting API",
                        "description": "Reporting API",
                        "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                        "endPoint": "/reporting-api"
                      }
                    ]
                  },
                  "authorizedUsers": [
                    "jsmith"
                  ],
                  "baseURL": "https://akaa-g3bclnoojfn7jvua-ic3mtmz7dwkot4jw.luna-dev.akamaiapis.net",
                  "canAutoCreateCredential": false,
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "2cdgugz2tjbtowmy",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "jperez",
                  "createdDate": "2022-05-23T19:56:27.000Z",
                  "groupAccess": {
                    "cloneAuthorizedUserGroups": true,
                    "groups": [{
                        "groupId": 12345,
                        "groupName": "Main Street Corporation",
                        "isBlocked": false,
                        "roleDescription": "CPCode RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": []
                      },
                      {
                        "groupId": 54321,
                        "groupName": "High Street Company",
                        "isBlocked": false,
                        "roleDescription": "Admin Role plus Authz Case Management Read Role",
                        "roleId": 142838,
                        "roleName": "Admin plus Authz Case Management Read",
                        "subGroups": [{
                          "groupId": 54321,
                          "groupName": "Cloud Access Manager",
                          "isBlocked": false,
                          "parentGroupId": 19717,
                          "roleDescription": "Cloud Access Manager Admin",
                          "roleId": 114776,
                          "roleName": "Cloud Access Manager Admin",
                          "subGroups": []
                        }]
                      }
                    ]
                  },
                  "isLocked": false,
                  "notificationEmails": [
                    "jsmith@example.com"
                  ],
                  "purgeOptions": {
                    "canPurgeByCacheTag": false,
                    "canPurgeByCpcode": false,
                    "cpcodeAccess": {
                      "allCurrentAndNewCpcodes": true,
                      "cpcodes": []
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the API client.",
                  "properties": {
                    "accessToken": {
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies activities available for the API client.",
                      "properties": {
                        "delete": {
                          "description": "Whether you can remove the API client.",
                          "type": "boolean"
                        },
                        "deactivateAll": {
                          "description": "Whether you can deactivate the API client's credentials.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether you can update the API client.",
                          "type": "boolean"
                        },
                        "editApis": {
                          "description": "Whether you can update the `apis` the API client can access.",
                          "type": "boolean"
                        },
                        "editAuth": {
                          "description": "Whether you can update the `groups` or `apis` the API client can access.",
                          "type": "boolean"
                        },
                        "editGroups": {
                          "description": "Whether you can update the `groups` the API client can access.",
                          "type": "boolean"
                        },
                        "editIpAcl": {
                          "description": "Whether you can update the `ipAcl` the API client can access.",
                          "type": "boolean"
                        },
                        "editSwitchAccount": {
                          "description": "Whether you can update the API client's option to manage many accounts.",
                          "type": "boolean"
                        },
                        "lock": {
                          "description": "Whether you can lock the API client.",
                          "type": "boolean"
                        },
                        "transfer": {
                          "description": "Whether you can transfer the API client to a new owner.",
                          "type": "boolean"
                        },
                        "unlock": {
                          "description": "Whether you can unlock the API client.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "deactivateAll",
                        "edit",
                        "editApis",
                        "editAuth",
                        "editGroups",
                        "editIpAcl",
                        "editSwitchAccount",
                        "lock",
                        "transfer",
                        "unlock"
                      ],
                      "type": "object"
                    },
                    "activeCredentialCount": {
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "allowAccountSwitch": {
                      "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).",
                      "type": "boolean"
                    },
                    "apiAccess": {
                      "additionalProperties": false,
                      "description": "The APIs the API client can access.",
                      "properties": {
                        "allAccessibleApis": {
                          "description": "Whether the API client has access to a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.",
                          "type": "boolean"
                        },
                        "apis": {
                          "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "accessLevel": {
                                "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "apiId": {
                                "description": "Unique identifier for each API.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "apiName": {
                                "description": "Descriptive label for the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "description": {
                                "description": "Descriptive label for the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "Link to more information about the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "endPoint": {
                                "description": "Specifies where the API can access resources.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "description",
                              "apiId",
                              "apiName",
                              "documentationUrl",
                              "endPoint",
                              "accessLevel"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "allAccessibleApis",
                        "apis"
                      ],
                      "type": "object"
                    },
                    "authorizedUsers": {
                      "description": "The API client's valid users.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "baseURL": {
                      "description": "The base URL for the service.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "canAutoCreateCredential": {
                      "description": "Whether the API client can create a credential for a new API client.",
                      "type": "boolean"
                    },
                    "clientDescription": {
                      "description": "Descriptive label about the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientId": {
                      "description": "Unique identifier for each API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientName": {
                      "description": "Descriptive label for the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientType": {
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials.",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT"
                      ],
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The user who created the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the API client was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentials": {
                      "description": "The API client's of credentials.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "actions": {
                            "additionalProperties": false,
                            "description": "Specifies activities available for the credential.",
                            "properties": {
                              "delete": {
                                "description": "Whether you can remove the credential.",
                                "type": "boolean"
                              },
                              "activate": {
                                "description": "Whether you can activate the credential.",
                                "type": "boolean"
                              },
                              "deactivate": {
                                "description": "Whether you can deactivate the credential.",
                                "type": "boolean"
                              },
                              "editDescription": {
                                "description": "Whether you can modify the credential's description.",
                                "type": "boolean"
                              },
                              "editExpiration": {
                                "description": "Whether you can modify the credential's expiration date.",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "delete",
                              "activate",
                              "deactivate",
                              "editDescription",
                              "editExpiration"
                            ],
                            "type": "object"
                          },
                          "clientToken": {
                            "description": "Part of the credential that identifies the API client.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdOn": {
                            "description": "ISO 8601 timestamp indicating when the credential was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "credentialId": {
                            "description": "Unique identifier each credential.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "description": {
                            "description": "Descriptive label for the API client.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "expiresOn": {
                            "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "status": {
                            "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.",
                            "enum": [
                              "ACTIVE",
                              "INACTIVE",
                              "DELETED"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "description",
                          "actions",
                          "clientToken",
                          "createdOn",
                          "credentialId",
                          "expiresOn",
                          "status"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "groupAccess": {
                      "additionalProperties": false,
                      "description": "Specifies the API client's group access.",
                      "properties": {
                        "cloneAuthorizedUserGroups": {
                          "description": "Sets the API client's group access the same as the authorized user.",
                          "type": "boolean"
                        },
                        "groups": {
                          "description": "Groups the API client can access.",
                          "items": {
                            "additionalProperties": false,
                            "description": "Groups the API client can access.",
                            "properties": {
                              "groupId": {
                                "description": "Unique identifier for each group. To get this value, run the [List accessible groups](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-group-access) operation.",
                                "type": "integer"
                              },
                              "groupName": {
                                "description": "Descriptive label for the group.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "isBlocked": {
                                "description": "Blocks the API client access to the group's child groups.",
                                "type": "boolean"
                              },
                              "parentGroupId": {
                                "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                                "type": "integer"
                              },
                              "roleDescription": {
                                "description": "Descriptive label for the role to convey its use.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "roleId": {
                                "description": "Unique identifier for each role. To get this value, run the [List roles](https://techdocs.akamai.com/iam-api/reference/get-roles) operation.",
                                "type": "integer"
                              },
                              "roleName": {
                                "description": "Descriptive label for the role.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "subGroups": {
                                "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                                "items": {
                                  "additionalProperties": true,
                                  "description": "A further nested group.",
                                  "properties": {},
                                  "type": "object",
                                  "x-akamai": {
                                    "file-path": "schemas/groups-nested.yaml"
                                  }
                                },
                                "type": "array"
                              }
                            },
                            "required": [
                              "roleId",
                              "groupId"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "cloneAuthorizedUserGroups",
                        "groups"
                      ],
                      "type": "object"
                    },
                    "ipAcl": {
                      "additionalProperties": false,
                      "description": "Specifies the API client's IP list restriction.",
                      "properties": {
                        "cidr": {
                          "description": "IP addresses or CIDR blocks the API client can access.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "enable": {
                          "description": "Enables API client's access to the IP ACL.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enable",
                        "cidr"
                      ],
                      "type": "object"
                    },
                    "isLocked": {
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).",
                      "type": "boolean"
                    },
                    "notificationEmails": {
                      "description": "Email addresses to notify users of expiring credentials.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "purgeOptions": {
                      "additionalProperties": false,
                      "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). It's returned only if the `apis` object includes an `apiName` of `CCU APIs`.",
                      "properties": {
                        "canPurgeByCacheTag": {
                          "description": "Whether the API client can purge content by cache tag.",
                          "type": "boolean"
                        },
                        "canPurgeByCpcode": {
                          "description": "Whether the API client can purge content by CP code.",
                          "type": "boolean"
                        },
                        "cpcodeAccess": {
                          "additionalProperties": false,
                          "description": "CP codes the API client can purge.",
                          "properties": {
                            "allCurrentAndNewCpcodes": {
                              "description": "Whether the API client can purge content by cache tag.",
                              "type": "boolean"
                            },
                            "cpcodes": {
                              "description": "CP codes the API client can purge.",
                              "items": {
                                "minimum": 0,
                                "type": "integer"
                              },
                              "minItems": 0,
                              "type": "array"
                            }
                          },
                          "required": [
                            "allCurrentAndNewCpcodes",
                            "cpcodes"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "canPurgeByCacheTag",
                        "canPurgeByCpcode",
                        "cpcodeAccess"
                      ],
                      "type": "object"
                    },
                    "serviceProviderId": {
                      "description": "Unique identifier for the API's service provider.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "baseURL",
                    "canAutoCreateCredential",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/api-client-detail-v3.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the modified API client."
          }
        },
        "summary": "Update your API client",
        "tags": [
          "API client: self"
        ]
      },
      "delete": {
        "description": "This operation permanently deletes an API client you own, without active credentials. It also breaks any API connections with the client. Before deleting your API client, deactivate all credentials and make sure there aren't any API integrations or scripts using them.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/delete-api-client-self"
        },
        "operationId": "delete-api-client-self",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "204": {
            "content": {},
            "description": "API client successfully deleted."
          }
        },
        "summary": "Delete your API client",
        "tags": [
          "API client: self"
        ]
      }
    },
    "/api-clients/self/account-switch-keys": {
      "get": {
        "description": "This operation lists account switch keys available for your API client. You can use the `accountSwitchKey` in many Akamai APIs [to make an API call to another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-self-account-switch-keys"
        },
        "operationId": "get-self-account-switch-keys",
        "parameters": [{
            "description": "Filters results by `accountId` or `accountName`. Enter at least three characters to filter the results by substring.",
            "example": "{{search}}",
            "in": "query",
            "name": "search",
            "schema": {
              "example": "indirect",
              "minLength": 3,
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/account-switch-keys-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                    "accountName": "Internet Company",
                    "accountSwitchKey": "1-EFGH"
                  },
                  {
                    "accountName": "Internet Company",
                    "accountSwitchKey": "1-ABCD:Z-XYZ"
                  },
                  {
                    "accountName": "Digital Company",
                    "accountSwitchKey": "1-ABCD:Z-PQR"
                  }
                ],
                "schema": {
                  "description": "Encapsulates a collection of contexts the client can manage.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "accountName": {
                        "description": "Descriptive label for the account.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "accountSwitchKey": {
                        "description": "The identifier for an account other than your API client's default.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "accountName",
                      "accountSwitchKey"
                    ],
                    "type": "object"
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/self-account-switch-keys.yaml"
                  }
                }
              }
            },
            "description": "The response provides your account switch keys and account names."
          }
        },
        "summary": "List your account switch keys",
        "tags": [
          "API client: self"
        ]
      }
    },
    "/api-clients/self/credentials": {
      "post": {
        "description": "This operation creates a new credential for your API client. Only you may create credentials for this client. Credentials are in `active` status at creation. By default, they expire two years from their creation date. However, when the API client's permissions are based on Control Center permissions, credentials expire differently and follow the same rotation schedule listed for user passwords on those accounts. Run the [Update a credential](https://techdocs.akamai.com/iam-api/reference/put-client-credential) operation to change the expiration date, description, or status. Save the values from the response, such as the `credentialID` for future use. This is the only time you'll see the client secret. Save the credential at this time to avoid the need to create a new one.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/post-self-credentials"
        },
        "operationId": "post-self-credentials",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "clientSecret": "11111111111111111111111111111111111111111111",
                  "clientToken": "0000-0000000000000000-000000000000000",
                  "createdOn": "2018-11-01T23:06:59.000Z",
                  "credentialId": 14111,
                  "description": "New credential for John.",
                  "expiresOn": "2020-11-01T23:06:59.000Z",
                  "status": "ACTIVE"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates all members for the credential data structure.",
                  "properties": {
                    "clientSecret": {
                      "description": "The client secret.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientToken": {
                      "description": "Part of the credential that identifies the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdOn": {
                      "description": "ISO 8601 timestamp indicating when the credential was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentialId": {
                      "description": "Unique identifier each credential.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "description": {
                      "description": "Descriptive label for the credential.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE",
                        "DELETED"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "credentialId",
                    "clientToken",
                    "createdOn",
                    "expiresOn",
                    "status",
                    "description"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/credential.yaml"
                  }
                }
              }
            },
            "description": "The response provides the newly created credential.",
            "headers": {
              "Location": {
                "description": "A URL path to the newly created object.",
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/Location.yaml"
                }
              }
            }
          }
        },
        "summary": "Create your credential",
        "tags": [
          "API client: self"
        ]
      },
      "get": {
        "description": "This operation lists your API client's credentials.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-self-credentials"
        },
        "operationId": "get-self-credentials",
        "parameters": [{
            "description": "Includes actions you can perform on the object, `false` by default.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                    "clientToken": "0000-0000000000000000-000000000000000",
                    "createdOn": "2019-11-01T23:06:59.000Z",
                    "credentialId": 99999,
                    "description": "John's access to Property Manager",
                    "expiresOn": "2020-11-01T23:06:59.000Z",
                    "maxAllowedExpiry": "2020-11-01T23:06:59.000Z",
                    "status": "ACTIVE"
                  },
                  {
                    "clientToken": "0000-0000000000000000-000000000000000",
                    "createdOn": "2019-11-01T23:06:59.000Z",
                    "credentialId": 88888,
                    "description": "John's access to Event Center",
                    "expiresOn": "2020-11-01T23:06:59.000Z",
                    "maxAllowedExpiry": "2020-11-01T23:06:59.000Z",
                    "status": "INACTIVE"
                  }
                ],
                "schema": {
                  "description": "API client's credentials.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "actions": {
                        "additionalProperties": false,
                        "description": "Specifies activities available for the credential.",
                        "properties": {
                          "delete": {
                            "description": "Whether you can remove the credential.",
                            "type": "boolean"
                          },
                          "activate": {
                            "description": "Whether you can activate the credential.",
                            "type": "boolean"
                          },
                          "deactivate": {
                            "description": "Whether you can deactivate the credential.",
                            "type": "boolean"
                          },
                          "editDescription": {
                            "description": "Whether you can modify the credential's description.",
                            "type": "boolean"
                          },
                          "editExpiration": {
                            "description": "Whether you can modify the credential's expiration date.",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "delete",
                          "activate",
                          "deactivate",
                          "editDescription",
                          "editExpiration"
                        ],
                        "type": "object"
                      },
                      "clientToken": {
                        "description": "Part of the credential that identifies the API client.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdOn": {
                        "description": "ISO 8601 timestamp indicating when the credential was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "credentialId": {
                        "description": "Unique identifier each credential.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "description": {
                        "description": "Descriptive label for the credential.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "expiresOn": {
                        "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "maxAllowedExpiry": {
                        "description": "An ISO 8601 timestamp limit for credentials expiring.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "status": {
                        "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.",
                        "enum": [
                          "ACTIVE",
                          "INACTIVE",
                          "DELETED"
                        ],
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "credentialId",
                      "clientToken",
                      "createdOn",
                      "expiresOn",
                      "status",
                      "description",
                      "maxAllowedExpiry"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/credential-nosecret.yaml"
                    }
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/credentials.yaml"
                  }
                }
              }
            },
            "description": "The response provides the credentials."
          }
        },
        "summary": "List your credentials",
        "tags": [
          "API client: self"
        ]
      }
    },
    "/api-clients/self/credentials/deactivate": {
      "post": {
        "description": "This operation deactivates all credentials for your API client. This doesn't delete the API client or the credentials. To deactivate a single credential, run either the [Deactivate your credential](https://techdocs.akamai.com/iam-api/reference/post-self-credential-deactivate) operation or [Update your credential](https://techdocs.akamai.com/iam-api/reference/put-self-credential) and set the status to `INACTIVE`.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/post-self-credentials-deactivate"
        },
        "operationId": "post-self-credentials-deactivate",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "204": {
            "content": {},
            "description": "Credentials successfully deactivated."
          }
        },
        "summary": "Deactivate your credentials",
        "tags": [
          "API client: self"
        ]
      }
    },
    "/api-clients/self/credentials/{credentialId}": {
      "get": {
        "description": "This operation provides details about a specific credential for your API client. To change the credential's expiration date or toggle its activation status, run the [Update a credential](https://techdocs.akamai.com/iam-api/reference/put-client-credential) operation.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-self-credential"
        },
        "operationId": "get-self-credential",
        "parameters": [{
            "description": "Includes actions you can perform on the object, `false` by default.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "clientToken": "0000-0000000000000000-000000000000000",
                  "createdOn": "2020-11-01T23:06:59.000Z",
                  "credentialId": 99999,
                  "description": "Credential with no secret",
                  "expiresOn": "2021-11-01T23:06:59.000Z",
                  "maxAllowedExpiry": "2021-11-01T23:06:59.000Z",
                  "status": "ACTIVE"
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies activities available for the credential.",
                      "properties": {
                        "delete": {
                          "description": "Whether you can remove the credential.",
                          "type": "boolean"
                        },
                        "activate": {
                          "description": "Whether you can activate the credential.",
                          "type": "boolean"
                        },
                        "deactivate": {
                          "description": "Whether you can deactivate the credential.",
                          "type": "boolean"
                        },
                        "editDescription": {
                          "description": "Whether you can modify the credential's description.",
                          "type": "boolean"
                        },
                        "editExpiration": {
                          "description": "Whether you can modify the credential's expiration date.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "activate",
                        "deactivate",
                        "editDescription",
                        "editExpiration"
                      ],
                      "type": "object"
                    },
                    "clientToken": {
                      "description": "Part of the credential that identifies the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdOn": {
                      "description": "ISO 8601 timestamp indicating when the credential was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentialId": {
                      "description": "Unique identifier each credential.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "description": {
                      "description": "Descriptive label for the credential.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "maxAllowedExpiry": {
                      "description": "An ISO 8601 timestamp limit for credentials expiring.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE",
                        "DELETED"
                      ],
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "credentialId",
                    "clientToken",
                    "createdOn",
                    "expiresOn",
                    "status",
                    "description",
                    "maxAllowedExpiry"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/credential-nosecret.yaml"
                  }
                }
              }
            },
            "description": "The response provides the credential."
          }
        },
        "summary": "Get your credential",
        "tags": [
          "API client: self"
        ]
      },
      "put": {
        "description": "This operation updates a specific credential for your API client. You can change the expiration date, description, or toggle the activation status. This isn't the same as rotating a credential. For details, see [Rotate credentials](https://techdocs.akamai.com/iam-api/reference/rotate-credentials).",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/put-self-credential"
        },
        "operationId": "put-self-credential",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "Update this credential",
                "expiresOn": "2020-10-11T23:06:59.000Z",
                "status": "ACTIVE"
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "description": "Descriptive label for the credential.",
                    "example": "{{description}}",
                    "minLength": 0,
                    "type": "string"
                  },
                  "expiresOn": {
                    "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.",
                    "example": "{{expiresOn}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "status": {
                    "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. You can switch the status between `ACTIVE` and `INACTIVE`. You can't reactivate `DELETED` credentials.",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE",
                      "DELETED"
                    ],
                    "example": "{{status}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "expiresOn",
                  "status"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/update-credential.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "description": "Update this credential",
                  "expiresOn": "2020-10-11T23:06:59.000Z",
                  "status": "ACTIVE"
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "description": "Descriptive label for the credential.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. You can switch the status between `ACTIVE` and `INACTIVE`. You can't reactivate `DELETED` credentials.",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE",
                        "DELETED"
                      ],
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "expiresOn",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/update-credential.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the modified credential."
          }
        },
        "summary": "Update your credential",
        "tags": [
          "API client: self"
        ]
      },
      "delete": {
        "description": "This operation deletes a specific credential from your API client. You can only delete inactive credentials.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/delete-self-credential"
        },
        "operationId": "delete-self-credential",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "204": {
            "content": {},
            "description": "Credential successfully deleted."
          }
        },
        "summary": "Remove your credential",
        "tags": [
          "API client: self"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each credential. To get this value for your credentials, run the [List your credentials](https://techdocs.akamai.com/iam-api/reference/get-self-credentials) operation. For other users' credentials, run the [List credentials](https://techdocs.akamai.com/iam-api/reference/get-client-credentials) operation.",
        "example": "{{credentialId}}",
        "in": "path",
        "name": "credentialId",
        "required": true,
        "schema": {
          "example": 123456,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/credential-id-path.yaml"
        }
      }]
    },
    "/api-clients/self/credentials/{credentialId}/deactivate": {
      "post": {
        "description": "This operation deactivates a specific credential for your API client. This doesn't delete the client or the credentials. To update a specific credential, run the [Update your credential](https://techdocs.akamai.com/iam-api/reference/put-self-credential) operation.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/post-self-credential-deactivate"
        },
        "operationId": "post-self-credential-deactivate",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "204": {
            "content": {},
            "description": "Credential successfully deactivated."
          }
        },
        "summary": "Deactivate your credential",
        "tags": [
          "API client: self"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each credential. To get this value for your credentials, run the [List your credentials](https://techdocs.akamai.com/iam-api/reference/get-self-credentials) operation. For other users' credentials, run the [List credentials](https://techdocs.akamai.com/iam-api/reference/get-client-credentials) operation.",
        "example": "{{credentialId}}",
        "in": "path",
        "name": "credentialId",
        "required": true,
        "schema": {
          "example": 123456,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/credential-id-path.yaml"
        }
      }]
    },
    "/api-clients/self/lock": {
      "put": {
        "description": "This operation locks your API client. You can't use the API client while it's locked. To unlock your client, run the [Unlock an API client](https://techdocs.akamai.com/iam-api/reference/put-unlock-api-client) operation.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/put-lock-api-client-self"
        },
        "operationId": "put-lock-api-client-self",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-ly55myu4fbtajqck-o7oubkbiytbjxywe",
                  "activeCredentialCount": 1,
                  "allowAccountSwitch": false,
                  "authorizedUsers": [
                    "jsmith"
                  ],
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "xfz2n5d43mogkdim",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "jsmith",
                  "createdDate": "2022-05-13T20:04:35.000Z",
                  "isLocked": true,
                  "notificationEmails": [
                    "jsmith@example.com"
                  ],
                  "serviceConsumerToken": "akaa-lb77cyyf3guivns3-sxmd4sims2mihn67"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "List of API clients.",
                  "properties": {
                    "accessToken": {
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "activeCredentialCount": {
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "allowAccountSwitch": {
                      "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).",
                      "type": "boolean"
                    },
                    "authorizedUsers": {
                      "description": "The API client's valid users.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "canAutoCreateCredential": {
                      "default": false,
                      "description": "Whether the API client can create a credential for a new API client. ",
                      "type": "boolean"
                    },
                    "clientDescription": {
                      "description": "Descriptive label about the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientId": {
                      "description": "Unique identifier for each API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientName": {
                      "description": "Descriptive label for the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientType": {
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT",
                        "SERVICE_ACCOUNT"
                      ],
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The user who created the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the API client was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "isLocked": {
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).",
                      "type": "boolean"
                    },
                    "notificationEmails": {
                      "description": "Email addresses to notify users of expiring credentials.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "serviceConsumerToken": {
                      "description": "Unique identifier for the service hostname.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails",
                    "serviceConsumerToken"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/api-client-simple-v3.yaml"
                  }
                }
              }
            },
            "description": "The response provides the locked API client."
          }
        },
        "summary": "Lock your API client",
        "tags": [
          "API client: self"
        ]
      }
    },
    "/api-clients/{clientId}": {
      "get": {
        "description": "This operation provides details about an API client.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-api-client"
        },
        "operationId": "get-api-client",
        "parameters": [{
            "description": "Includes actions you can perform on the object, `false` by default.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          },
          {
            "description": "Includes the API client's group access, `false` by default.",
            "example": "{{groupAccess}}",
            "in": "query",
            "name": "groupAccess",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/group-access-query.yaml"
            }
          },
          {
            "description": "Lists only the APIs the user can access, `false` by default.",
            "example": "{{apiAccess}}",
            "in": "query",
            "name": "apiAccess",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/apis-access-query.yaml"
            }
          },
          {
            "description": "Includes API user's credentials, `false` by default.",
            "example": "{{credentials}}",
            "in": "query",
            "name": "credentials",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/credentials-query.yaml"
            }
          },
          {
            "description": "Includes the API client's IP list restriction, `false` by default.",
            "example": "{{ipAcl}}",
            "in": "query",
            "name": "ipAcl",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/ip-acl-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-whlw7vibvujyoowg-rrp2q4cj362hke5t",
                  "actions": {
                    "delete": false,
                    "deactivateAll": false,
                    "edit": true,
                    "editApis": false,
                    "editAuth": false,
                    "editGroups": false,
                    "editIpAcl": false,
                    "editSwitchAccount": false,
                    "lock": false,
                    "transfer": true,
                    "unlock": false
                  },
                  "activeCredentialCount": 1,
                  "allowAccountSwitch": false,
                  "apiAccess": {
                    "allAccessibleApis": true,
                    "apis": [{
                      "accessLevel": "READ-WRITE",
                      "apiId": 5101,
                      "apiName": "Reporting API",
                      "description": "Luna Reporting API",
                      "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                      "endPoint": "/reporting-api"
                    }]
                  },
                  "authorizedUsers": [
                    "jsmith"
                  ],
                  "baseURL": "https://akaa-csrfyd3yzysqybe3-3dwjebsqo6ecu63m.luna-dev.akamaiapis.net",
                  "canAutoCreateCredential": false,
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "4f3cxdie6adyalyg",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "alfulani",
                  "createdDate": "2022-05-09T10:43:49.000Z",
                  "credentials": [{
                    "actions": {
                      "delete": false,
                      "activate": false,
                      "deactivate": false,
                      "editDescription": false,
                      "editExpiration": false
                    },
                    "clientToken": "0000-0000000000000000-000000000000000",
                    "createdOn": "2022-05-09T10:43:50.000Z",
                    "credentialId": 16850686,
                    "description": "",
                    "expiresOn": "2024-05-09T10:43:50.000Z",
                    "status": "ACTIVE"
                  }],
                  "groupAccess": {
                    "cloneAuthorizedUserGroups": true,
                    "groups": [{
                      "groupId": 54321,
                      "groupName": "Internet Company",
                      "isBlocked": false,
                      "roleDescription": "Admin Role plus Authz Case Management Read Role",
                      "roleId": 142838,
                      "roleName": "Admin plus Authz Case Management Read",
                      "subGroups": [{
                        "groupId": 12345,
                        "groupName": "Cloud Access Manager",
                        "isBlocked": false,
                        "parentGroupId": 19717,
                        "roleDescription": "Cloud Access Manager Admin",
                        "roleId": 114776,
                        "roleName": "Cloud Access Manager Admin",
                        "subGroups": []
                      }]
                    }]
                  },
                  "ipAcl": {
                    "cidr": [
                      "2001:db8::1",
                      "2001:db8::2"
                    ],
                    "enable": true
                  },
                  "isLocked": false,
                  "notificationEmails": [
                    "alfulani@example.com"
                  ],
                  "purgeOptions": {
                    "canPurgeByCacheTag": false,
                    "canPurgeByCpcode": false,
                    "cpcodeAccess": {
                      "allCurrentAndNewCpcodes": true,
                      "cpcodes": []
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the API client.",
                  "properties": {
                    "accessToken": {
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies activities available for the API client.",
                      "properties": {
                        "delete": {
                          "description": "Whether you can remove the API client.",
                          "type": "boolean"
                        },
                        "deactivateAll": {
                          "description": "Whether you can deactivate the API client's credentials.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether you can update the API client.",
                          "type": "boolean"
                        },
                        "editApis": {
                          "description": "Whether you can update the `apis` the API client can access.",
                          "type": "boolean"
                        },
                        "editAuth": {
                          "description": "Whether you can update the `groups` or `apis` the API client can access.",
                          "type": "boolean"
                        },
                        "editGroups": {
                          "description": "Whether you can update the `groups` the API client can access.",
                          "type": "boolean"
                        },
                        "editIpAcl": {
                          "description": "Whether you can update the `ipAcl` the API client can access.",
                          "type": "boolean"
                        },
                        "editSwitchAccount": {
                          "description": "Whether you can update the API client's option to manage many accounts.",
                          "type": "boolean"
                        },
                        "lock": {
                          "description": "Whether you can lock the API client.",
                          "type": "boolean"
                        },
                        "transfer": {
                          "description": "Whether you can transfer the API client to a new owner.",
                          "type": "boolean"
                        },
                        "unlock": {
                          "description": "Whether you can unlock the API client.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "deactivateAll",
                        "edit",
                        "editApis",
                        "editAuth",
                        "editGroups",
                        "editIpAcl",
                        "editSwitchAccount",
                        "lock",
                        "transfer",
                        "unlock"
                      ],
                      "type": "object"
                    },
                    "activeCredentialCount": {
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "allowAccountSwitch": {
                      "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).",
                      "type": "boolean"
                    },
                    "apiAccess": {
                      "additionalProperties": false,
                      "description": "The APIs the API client can access.",
                      "properties": {
                        "allAccessibleApis": {
                          "description": "Whether the API client has access to a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.",
                          "type": "boolean"
                        },
                        "apis": {
                          "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "accessLevel": {
                                "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "apiId": {
                                "description": "Unique identifier for each API.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "apiName": {
                                "description": "Descriptive label for the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "description": {
                                "description": "Descriptive label for the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "Link to more information about the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "endPoint": {
                                "description": "Specifies where the API can access resources.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "description",
                              "apiId",
                              "apiName",
                              "documentationUrl",
                              "endPoint",
                              "accessLevel"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "allAccessibleApis",
                        "apis"
                      ],
                      "type": "object"
                    },
                    "authorizedUsers": {
                      "description": "The API client's valid users.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "baseURL": {
                      "description": "The base URL for the service.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "canAutoCreateCredential": {
                      "description": "Whether the API client can create a credential for a new API client.",
                      "type": "boolean"
                    },
                    "clientDescription": {
                      "description": "Descriptive label about the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientId": {
                      "description": "Unique identifier for each API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientName": {
                      "description": "Descriptive label for the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientType": {
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials.",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT"
                      ],
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The user who created the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the API client was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentials": {
                      "description": "The API client's of credentials.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "actions": {
                            "additionalProperties": false,
                            "description": "Specifies activities available for the credential.",
                            "properties": {
                              "delete": {
                                "description": "Whether you can remove the credential.",
                                "type": "boolean"
                              },
                              "activate": {
                                "description": "Whether you can activate the credential.",
                                "type": "boolean"
                              },
                              "deactivate": {
                                "description": "Whether you can deactivate the credential.",
                                "type": "boolean"
                              },
                              "editDescription": {
                                "description": "Whether you can modify the credential's description.",
                                "type": "boolean"
                              },
                              "editExpiration": {
                                "description": "Whether you can modify the credential's expiration date.",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "delete",
                              "activate",
                              "deactivate",
                              "editDescription",
                              "editExpiration"
                            ],
                            "type": "object"
                          },
                          "clientToken": {
                            "description": "Part of the credential that identifies the API client.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdOn": {
                            "description": "ISO 8601 timestamp indicating when the credential was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "credentialId": {
                            "description": "Unique identifier each credential.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "description": {
                            "description": "Descriptive label for the API client.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "expiresOn": {
                            "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "status": {
                            "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.",
                            "enum": [
                              "ACTIVE",
                              "INACTIVE",
                              "DELETED"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "description",
                          "actions",
                          "clientToken",
                          "createdOn",
                          "credentialId",
                          "expiresOn",
                          "status"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "groupAccess": {
                      "additionalProperties": false,
                      "description": "Specifies the API client's group access.",
                      "properties": {
                        "cloneAuthorizedUserGroups": {
                          "description": "Sets the API client's group access the same as the authorized user.",
                          "type": "boolean"
                        },
                        "groups": {
                          "description": "Groups the API client can access.",
                          "items": {
                            "additionalProperties": false,
                            "description": "Groups the API client can access.",
                            "properties": {
                              "groupId": {
                                "description": "Unique identifier for each group. To get this value, run the [List accessible groups](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-group-access) operation.",
                                "type": "integer"
                              },
                              "groupName": {
                                "description": "Descriptive label for the group.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "isBlocked": {
                                "description": "Blocks the API client access to the group's child groups.",
                                "type": "boolean"
                              },
                              "parentGroupId": {
                                "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                                "type": "integer"
                              },
                              "roleDescription": {
                                "description": "Descriptive label for the role to convey its use.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "roleId": {
                                "description": "Unique identifier for each role. To get this value, run the [List roles](https://techdocs.akamai.com/iam-api/reference/get-roles) operation.",
                                "type": "integer"
                              },
                              "roleName": {
                                "description": "Descriptive label for the role.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "subGroups": {
                                "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                                "items": {
                                  "additionalProperties": true,
                                  "description": "A further nested group.",
                                  "properties": {},
                                  "type": "object",
                                  "x-akamai": {
                                    "file-path": "schemas/groups-nested.yaml"
                                  }
                                },
                                "type": "array"
                              }
                            },
                            "required": [
                              "roleId",
                              "groupId"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "cloneAuthorizedUserGroups",
                        "groups"
                      ],
                      "type": "object"
                    },
                    "ipAcl": {
                      "additionalProperties": false,
                      "description": "Specifies the API client's IP list restriction.",
                      "properties": {
                        "cidr": {
                          "description": "IP addresses or CIDR blocks the API client can access.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "enable": {
                          "description": "Enables API client's access to the IP ACL.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enable",
                        "cidr"
                      ],
                      "type": "object"
                    },
                    "isLocked": {
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).",
                      "type": "boolean"
                    },
                    "notificationEmails": {
                      "description": "Email addresses to notify users of expiring credentials.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "purgeOptions": {
                      "additionalProperties": false,
                      "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). It's returned only if the `apis` object includes an `apiName` of `CCU APIs`.",
                      "properties": {
                        "canPurgeByCacheTag": {
                          "description": "Whether the API client can purge content by cache tag.",
                          "type": "boolean"
                        },
                        "canPurgeByCpcode": {
                          "description": "Whether the API client can purge content by CP code.",
                          "type": "boolean"
                        },
                        "cpcodeAccess": {
                          "additionalProperties": false,
                          "description": "CP codes the API client can purge.",
                          "properties": {
                            "allCurrentAndNewCpcodes": {
                              "description": "Whether the API client can purge content by cache tag.",
                              "type": "boolean"
                            },
                            "cpcodes": {
                              "description": "CP codes the API client can purge.",
                              "items": {
                                "minimum": 0,
                                "type": "integer"
                              },
                              "minItems": 0,
                              "type": "array"
                            }
                          },
                          "required": [
                            "allCurrentAndNewCpcodes",
                            "cpcodes"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "canPurgeByCacheTag",
                        "canPurgeByCpcode",
                        "cpcodeAccess"
                      ],
                      "type": "object"
                    },
                    "serviceProviderId": {
                      "description": "Unique identifier for the API's service provider.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "baseURL",
                    "canAutoCreateCredential",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/api-client-detail-v3.yaml"
                  }
                }
              }
            },
            "description": "The response provides the API client."
          }
        },
        "summary": "Get an API client",
        "tags": [
          "API clients"
        ]
      },
      "put": {
        "description": "This operation updates an API client.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/put-api-clients"
        },
        "operationId": "put-api-clients",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "allowAccountSwitch": false,
                "apiAccess": {
                  "allAccessibleApis": false,
                  "apis": [{
                      "accessLevel": "READ-ONLY",
                      "apiId": 109230,
                      "apiName": "Event Center",
                      "description": "Event Center",
                      "documentationUrl": "https://developer.akamai.com/api/luna/events/overview.html",
                      "endPoint": "/events"
                    },
                    {
                      "accessLevel": "READ-ONLY",
                      "apiId": 3515,
                      "apiName": "Reporting API",
                      "description": "Luna Reporting API",
                      "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                      "endPoint": "/reporting-api"
                    }
                  ]
                },
                "authorizedUsers": [
                  "jsmith"
                ],
                "canAutoCreateCredential": false,
                "clientDescription": "Provides access to the reporting data.",
                "clientName": "report_data",
                "groupAccess": {
                  "cloneAuthorizedUserGroups": false,
                  "groups": [{
                    "groupId": 54321,
                    "groupName": "Main Street Corporation",
                    "isBlocked": false,
                    "roleDescription": "Please add a description",
                    "roleId": 73695,
                    "roleName": "Custom role # 73695",
                    "subGroups": [{
                      "groupId": 54321,
                      "groupName": "Internet Company",
                      "isBlocked": false,
                      "parentGroupId": 19760,
                      "roleId": null,
                      "roleName": null,
                      "subGroups": [{
                        "groupId": 12345,
                        "groupName": "Digital Company",
                        "isBlocked": false,
                        "parentGroupId": 44999,
                        "roleId": null,
                        "roleName": null,
                        "subGroups": []
                      }]
                    }]
                  }]
                },
                "notificationEmails": [
                  "jsmith@example.com"
                ]
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "allowAccountSwitch": {
                    "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).",
                    "example": "{{allowAccountSwitch}}",
                    "type": "boolean"
                  },
                  "apiAccess": {
                    "additionalProperties": false,
                    "description": "The APIs the API client can access.",
                    "oneOf": [{
                        "additionalProperties": false,
                        "properties": {
                          "allAccessibleApis": {
                            "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "apis"
                        ],
                        "title": "Not all APIs accessible"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "allAccessibleApis": {
                            "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "allAccessibleApis"
                        ],
                        "title": "All APIs accessible"
                      }
                    ],
                    "properties": {
                      "allAccessibleApis": {
                        "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.",
                        "type": "boolean"
                      },
                      "apis": {
                        "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled. To get this data, run the [List allowed APIs](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-allowed-apis) operation.",
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "accessLevel": {
                              "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.",
                              "enum": [
                                "READ-ONLY",
                                "READ-WRITE"
                              ],
                              "type": "string"
                            },
                            "apiId": {
                              "description": "Unique identifier for each API. To get this value, run the [List allowed APIs](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-allowed-apis) operation.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "apiName": {
                              "description": "Descriptive label for the API.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "description": {
                              "description": "Descriptive label for the API.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "documentationUrl": {
                              "description": "Link to more information about the API.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "endPoint": {
                              "description": "Specifies where the API can access resources.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "required": [
                            "apiId",
                            "accessLevel"
                          ],
                          "type": "object"
                        },
                        "minItems": 0,
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "authorizedUsers": {
                    "description": "The API client's valid users. When the `clientType` is either `CLIENT` or `USER_CLIENT`, you need to specify a single `username` in the array. To get this data, run the [List authorized users](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users) operation.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "canAutoCreateCredential": {
                    "default": false,
                    "description": "Whether the API client can create a credential for a new API client. The default is `false`.",
                    "example": "{{canAutoCreateCredential}}",
                    "type": "boolean"
                  },
                  "clientDescription": {
                    "description": "Descriptive label about the API client.",
                    "example": "{{clientDescription}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "clientName": {
                    "description": "Descriptive label for the API client.",
                    "example": "{{clientName}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "groupAccess": {
                    "additionalProperties": false,
                    "description": "Specifies the API client's group access.",
                    "oneOf": [{
                        "additionalProperties": false,
                        "properties": {
                          "cloneAuthorizedUserGroups": {
                            "description": "Sets the API client's group access the same as the authorized user. Set it to `false` and specify the access in the `groups` array.",
                            "type": "boolean"
                          },
                          "groups": {
                            "description": "Groups the API client can access. To get this data, run the [List accessible groups](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-group-access) operation.",
                            "items": {
                              "additionalProperties": false,
                              "description": "Groups the API client can access.",
                              "properties": {
                                "groupId": {
                                  "description": "Unique identifier for each group. To get this value, run the [List accessible groups](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-group-access) operation.",
                                  "type": "integer"
                                },
                                "groupName": {
                                  "description": "Descriptive label for the group.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "isBlocked": {
                                  "description": "Blocks the API client access to the group's child groups.",
                                  "type": "boolean"
                                },
                                "parentGroupId": {
                                  "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                                  "type": "integer"
                                },
                                "roleDescription": {
                                  "description": "Descriptive label for the role to convey its use.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "roleId": {
                                  "description": "Unique identifier for each role. To get this value, run the [List roles](https://techdocs.akamai.com/iam-api/reference/get-roles) operation.",
                                  "type": "integer"
                                },
                                "roleName": {
                                  "description": "Descriptive label for the role.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "subGroups": {
                                  "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                                  "items": {
                                    "additionalProperties": true,
                                    "description": "A further nested group.",
                                    "properties": {},
                                    "type": "object",
                                    "x-akamai": {
                                      "file-path": "schemas/groups-nested.yaml"
                                    }
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "roleId",
                                "groupId"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "groups",
                          "cloneAuthorizedUserGroups"
                        ],
                        "title": "Custom access"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "cloneAuthorizedUserGroups": {
                            "description": "Set it to `true` to clone the API client's group access from the authorized user.",
                            "type": "boolean"
                          },
                          "groups": {
                            "description": "Groups the API client can access. To get this data, run the [List accessible groups](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-group-access) operation.",
                            "items": {
                              "additionalProperties": false,
                              "description": "Groups the API client can access.",
                              "properties": {
                                "groupId": {
                                  "description": "Unique identifier for each group. To get this value, run the [List accessible groups](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-group-access) operation.",
                                  "type": "integer"
                                },
                                "groupName": {
                                  "description": "Descriptive label for the group.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "isBlocked": {
                                  "description": "Blocks the API client access to the group's child groups.",
                                  "type": "boolean"
                                },
                                "parentGroupId": {
                                  "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                                  "type": "integer"
                                },
                                "roleDescription": {
                                  "description": "Descriptive label for the role to convey its use.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "roleId": {
                                  "description": "Unique identifier for each role. To get this value, run the [List roles](https://techdocs.akamai.com/iam-api/reference/get-roles) operation.",
                                  "type": "integer"
                                },
                                "roleName": {
                                  "description": "Descriptive label for the role.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "subGroups": {
                                  "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                                  "items": {
                                    "additionalProperties": true,
                                    "description": "A further nested group.",
                                    "properties": {},
                                    "type": "object",
                                    "x-akamai": {
                                      "file-path": "schemas/groups-nested.yaml"
                                    }
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "roleId",
                                "groupId"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "cloneAuthorizedUserGroups"
                        ],
                        "title": "Cloned access"
                      }
                    ],
                    "type": "object"
                  },
                  "ipAcl": {
                    "additionalProperties": false,
                    "description": "Specifies the API client's IP list restriction.",
                    "properties": {
                      "cidr": {
                        "description": "IP addresses or CIDR blocks the API client can access.",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "minItems": 0,
                        "type": "array"
                      },
                      "enable": {
                        "description": "Enables API client's access to the IP ACL.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "enable",
                      "cidr"
                    ],
                    "type": "object"
                  },
                  "notificationEmails": {
                    "description": "Email addresses to notify users of expiring credentials.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "purgeOptions": {
                    "additionalProperties": false,
                    "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). Provide it only if the `apis` object includes an `apiName` of `CCU APIs`.",
                    "properties": {
                      "canPurgeByCacheTag": {
                        "description": "Whether the API client can purge content by cache tag.",
                        "type": "boolean"
                      },
                      "canPurgeByCpcode": {
                        "description": "Whether the API client can purge content by CP code.",
                        "type": "boolean"
                      },
                      "cpcodeAccess": {
                        "additionalProperties": false,
                        "description": "CP codes the API client can purge.",
                        "properties": {
                          "allCurrentAndNewCpcodes": {
                            "description": "Whether the API client can purge content by cache tag.",
                            "type": "boolean"
                          },
                          "cpcodes": {
                            "description": "CP codes the API client can purge. To get these values, run the [List allowed CP codes](https://techdocs.akamai.com/iam-api/reference/post-api-clients-users-allowed-cpcodes) operation.",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "allCurrentAndNewCpcodes",
                          "cpcodes"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "canPurgeByCacheTag",
                      "canPurgeByCpcode",
                      "cpcodeAccess"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "apiAccess",
                  "groupAccess",
                  "authorizedUsers"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/api-client-update-request-v3.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-eol24zwha6c2huw6-3at564pdmaggqrro",
                  "actions": {
                    "delete": true,
                    "deactivateAll": false,
                    "edit": true,
                    "editApis": true,
                    "editAuth": true,
                    "editGroups": true,
                    "editIpAcl": true,
                    "editSwitchAccount": false,
                    "lock": true,
                    "transfer": true,
                    "unlock": false
                  },
                  "activeCredentialCount": 0,
                  "allowAccountSwitch": false,
                  "apiAccess": {
                    "allAccessibleApis": true,
                    "apis": [{
                        "accessLevel": "READ-ONLY",
                        "apiId": 164,
                        "apiName": "Media Reports",
                        "description": "Media Reports APIs",
                        "documentationUrl": "https://developer.akamai.com/api/luna/media-reports/overview.html",
                        "endPoint": "/media-reports"
                      },
                      {
                        "accessLevel": "READ-WRITE",
                        "apiId": 5101,
                        "apiName": "Reporting API",
                        "description": "Reporting API",
                        "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                        "endPoint": "/reporting-api"
                      }
                    ]
                  },
                  "authorizedUsers": [
                    "jsmith"
                  ],
                  "baseURL": "https://akaa-g3bclnoojfn7jvua-ic3mtmz7dwkot4jw.luna-dev.akamaiapis.net",
                  "canAutoCreateCredential": false,
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "2cdgugz2tjbtowmy",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "jperez",
                  "createdDate": "2022-05-23T19:56:27.000Z",
                  "groupAccess": {
                    "cloneAuthorizedUserGroups": true,
                    "groups": [{
                        "groupId": 12345,
                        "groupName": "Main Street Corporation",
                        "isBlocked": false,
                        "roleDescription": "CPCode RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": []
                      },
                      {
                        "groupId": 54321,
                        "groupName": "High Street Company",
                        "isBlocked": false,
                        "roleDescription": "Admin Role plus Authz Case Management Read Role",
                        "roleId": 142838,
                        "roleName": "Admin plus Authz Case Management Read",
                        "subGroups": [{
                          "groupId": 54321,
                          "groupName": "Cloud Access Manager",
                          "isBlocked": false,
                          "parentGroupId": 19717,
                          "roleDescription": "Cloud Access Manager Admin",
                          "roleId": 114776,
                          "roleName": "Cloud Access Manager Admin",
                          "subGroups": []
                        }]
                      }
                    ]
                  },
                  "isLocked": false,
                  "notificationEmails": [
                    "jsmith@example.com"
                  ],
                  "purgeOptions": {
                    "canPurgeByCacheTag": false,
                    "canPurgeByCpcode": false,
                    "cpcodeAccess": {
                      "allCurrentAndNewCpcodes": true,
                      "cpcodes": []
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the API client.",
                  "properties": {
                    "accessToken": {
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies activities available for the API client.",
                      "properties": {
                        "delete": {
                          "description": "Whether you can remove the API client.",
                          "type": "boolean"
                        },
                        "deactivateAll": {
                          "description": "Whether you can deactivate the API client's credentials.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether you can update the API client.",
                          "type": "boolean"
                        },
                        "editApis": {
                          "description": "Whether you can update the `apis` the API client can access.",
                          "type": "boolean"
                        },
                        "editAuth": {
                          "description": "Whether you can update the `groups` or `apis` the API client can access.",
                          "type": "boolean"
                        },
                        "editGroups": {
                          "description": "Whether you can update the `groups` the API client can access.",
                          "type": "boolean"
                        },
                        "editIpAcl": {
                          "description": "Whether you can update the `ipAcl` the API client can access.",
                          "type": "boolean"
                        },
                        "editSwitchAccount": {
                          "description": "Whether you can update the API client's option to manage many accounts.",
                          "type": "boolean"
                        },
                        "lock": {
                          "description": "Whether you can lock the API client.",
                          "type": "boolean"
                        },
                        "transfer": {
                          "description": "Whether you can transfer the API client to a new owner.",
                          "type": "boolean"
                        },
                        "unlock": {
                          "description": "Whether you can unlock the API client.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "deactivateAll",
                        "edit",
                        "editApis",
                        "editAuth",
                        "editGroups",
                        "editIpAcl",
                        "editSwitchAccount",
                        "lock",
                        "transfer",
                        "unlock"
                      ],
                      "type": "object"
                    },
                    "activeCredentialCount": {
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "allowAccountSwitch": {
                      "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).",
                      "type": "boolean"
                    },
                    "apiAccess": {
                      "additionalProperties": false,
                      "description": "The APIs the API client can access.",
                      "properties": {
                        "allAccessibleApis": {
                          "description": "Whether the API client has access to a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.",
                          "type": "boolean"
                        },
                        "apis": {
                          "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "accessLevel": {
                                "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "apiId": {
                                "description": "Unique identifier for each API.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "apiName": {
                                "description": "Descriptive label for the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "description": {
                                "description": "Descriptive label for the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "Link to more information about the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "endPoint": {
                                "description": "Specifies where the API can access resources.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "description",
                              "apiId",
                              "apiName",
                              "documentationUrl",
                              "endPoint",
                              "accessLevel"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "allAccessibleApis",
                        "apis"
                      ],
                      "type": "object"
                    },
                    "authorizedUsers": {
                      "description": "The API client's valid users.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "baseURL": {
                      "description": "The base URL for the service.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "canAutoCreateCredential": {
                      "description": "Whether the API client can create a credential for a new API client.",
                      "type": "boolean"
                    },
                    "clientDescription": {
                      "description": "Descriptive label about the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientId": {
                      "description": "Unique identifier for each API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientName": {
                      "description": "Descriptive label for the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientType": {
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials.",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT"
                      ],
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The user who created the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the API client was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentials": {
                      "description": "The API client's of credentials.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "actions": {
                            "additionalProperties": false,
                            "description": "Specifies activities available for the credential.",
                            "properties": {
                              "delete": {
                                "description": "Whether you can remove the credential.",
                                "type": "boolean"
                              },
                              "activate": {
                                "description": "Whether you can activate the credential.",
                                "type": "boolean"
                              },
                              "deactivate": {
                                "description": "Whether you can deactivate the credential.",
                                "type": "boolean"
                              },
                              "editDescription": {
                                "description": "Whether you can modify the credential's description.",
                                "type": "boolean"
                              },
                              "editExpiration": {
                                "description": "Whether you can modify the credential's expiration date.",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "delete",
                              "activate",
                              "deactivate",
                              "editDescription",
                              "editExpiration"
                            ],
                            "type": "object"
                          },
                          "clientToken": {
                            "description": "Part of the credential that identifies the API client.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdOn": {
                            "description": "ISO 8601 timestamp indicating when the credential was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "credentialId": {
                            "description": "Unique identifier each credential.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "description": {
                            "description": "Descriptive label for the API client.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "expiresOn": {
                            "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "status": {
                            "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.",
                            "enum": [
                              "ACTIVE",
                              "INACTIVE",
                              "DELETED"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "description",
                          "actions",
                          "clientToken",
                          "createdOn",
                          "credentialId",
                          "expiresOn",
                          "status"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "groupAccess": {
                      "additionalProperties": false,
                      "description": "Specifies the API client's group access.",
                      "properties": {
                        "cloneAuthorizedUserGroups": {
                          "description": "Sets the API client's group access the same as the authorized user.",
                          "type": "boolean"
                        },
                        "groups": {
                          "description": "Groups the API client can access.",
                          "items": {
                            "additionalProperties": false,
                            "description": "Groups the API client can access.",
                            "properties": {
                              "groupId": {
                                "description": "Unique identifier for each group. To get this value, run the [List accessible groups](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-group-access) operation.",
                                "type": "integer"
                              },
                              "groupName": {
                                "description": "Descriptive label for the group.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "isBlocked": {
                                "description": "Blocks the API client access to the group's child groups.",
                                "type": "boolean"
                              },
                              "parentGroupId": {
                                "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                                "type": "integer"
                              },
                              "roleDescription": {
                                "description": "Descriptive label for the role to convey its use.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "roleId": {
                                "description": "Unique identifier for each role. To get this value, run the [List roles](https://techdocs.akamai.com/iam-api/reference/get-roles) operation.",
                                "type": "integer"
                              },
                              "roleName": {
                                "description": "Descriptive label for the role.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "subGroups": {
                                "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                                "items": {
                                  "additionalProperties": true,
                                  "description": "A further nested group.",
                                  "properties": {},
                                  "type": "object",
                                  "x-akamai": {
                                    "file-path": "schemas/groups-nested.yaml"
                                  }
                                },
                                "type": "array"
                              }
                            },
                            "required": [
                              "roleId",
                              "groupId"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "cloneAuthorizedUserGroups",
                        "groups"
                      ],
                      "type": "object"
                    },
                    "ipAcl": {
                      "additionalProperties": false,
                      "description": "Specifies the API client's IP list restriction.",
                      "properties": {
                        "cidr": {
                          "description": "IP addresses or CIDR blocks the API client can access.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "enable": {
                          "description": "Enables API client's access to the IP ACL.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enable",
                        "cidr"
                      ],
                      "type": "object"
                    },
                    "isLocked": {
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).",
                      "type": "boolean"
                    },
                    "notificationEmails": {
                      "description": "Email addresses to notify users of expiring credentials.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "purgeOptions": {
                      "additionalProperties": false,
                      "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). It's returned only if the `apis` object includes an `apiName` of `CCU APIs`.",
                      "properties": {
                        "canPurgeByCacheTag": {
                          "description": "Whether the API client can purge content by cache tag.",
                          "type": "boolean"
                        },
                        "canPurgeByCpcode": {
                          "description": "Whether the API client can purge content by CP code.",
                          "type": "boolean"
                        },
                        "cpcodeAccess": {
                          "additionalProperties": false,
                          "description": "CP codes the API client can purge.",
                          "properties": {
                            "allCurrentAndNewCpcodes": {
                              "description": "Whether the API client can purge content by cache tag.",
                              "type": "boolean"
                            },
                            "cpcodes": {
                              "description": "CP codes the API client can purge.",
                              "items": {
                                "minimum": 0,
                                "type": "integer"
                              },
                              "minItems": 0,
                              "type": "array"
                            }
                          },
                          "required": [
                            "allCurrentAndNewCpcodes",
                            "cpcodes"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "canPurgeByCacheTag",
                        "canPurgeByCpcode",
                        "cpcodeAccess"
                      ],
                      "type": "object"
                    },
                    "serviceProviderId": {
                      "description": "Unique identifier for the API's service provider.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "baseURL",
                    "canAutoCreateCredential",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/api-client-detail-v3.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the modified API client."
          }
        },
        "summary": "Update an API client",
        "tags": [
          "API clients"
        ]
      },
      "delete": {
        "description": "This operation permanently deletes the API client, breaking any API connections with the client. To delete a client, you need to own the client, or have admin access on a given group. Before deleting an API client, make sure there aren't any API integrations or scripts using it.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/delete-api-client"
        },
        "operationId": "delete-api-client",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "204": {
            "content": {},
            "description": "API client successfully deleted."
          }
        },
        "summary": "Delete an API client",
        "tags": [
          "API clients"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each API client. To get this value, run the [List API clients](https://techdocs.akamai.com/iam-api/reference/get-api-clients) operation.",
        "example": "{{clientId}}",
        "in": "path",
        "name": "clientId",
        "required": true,
        "schema": {
          "example": "2cdgugz2tjbtowmy",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/client-id-path.yaml"
        }
      }]
    },
    "/api-clients/{clientId}/account-switch-keys": {
      "get": {
        "description": "This operation lists account switch keys available for a specific API client. The client can use the `accountSwitchKey` in many Akamai APIs to [make an API call to another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys"
        },
        "operationId": "get-client-account-switch-keys",
        "parameters": [{
            "description": "Filters results by `accountId` or `accountName`. Enter at least three characters to filter the results by substring.",
            "example": "{{search}}",
            "in": "query",
            "name": "search",
            "schema": {
              "example": "indirect",
              "minLength": 3,
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/account-switch-keys-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                    "accountName": "Internet Company",
                    "accountSwitchKey": "1-EFGH"
                  },
                  {
                    "accountName": "Internet Company",
                    "accountSwitchKey": "1-ABCD:Z-XYZ"
                  },
                  {
                    "accountName": "Digital Company",
                    "accountSwitchKey": "1-ABCD:Z-PQR"
                  }
                ],
                "schema": {
                  "description": "Encapsulates a collection of contexts the client can manage.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "accountName": {
                        "description": "Descriptive label for the account.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "accountSwitchKey": {
                        "description": "The identifier for an account other than your API client's default.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "accountName",
                      "accountSwitchKey"
                    ],
                    "type": "object"
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/client-account-switch-keys.yaml"
                  }
                }
              }
            },
            "description": "The response provides account switch keys and account names available to you."
          }
        },
        "summary": "List account switch keys",
        "tags": [
          "API clients"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each API client. To get this value, run the [List API clients](https://techdocs.akamai.com/iam-api/reference/get-api-clients) operation.",
        "example": "{{clientId}}",
        "in": "path",
        "name": "clientId",
        "required": true,
        "schema": {
          "example": "2cdgugz2tjbtowmy",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/client-id-path.yaml"
        }
      }]
    },
    "/api-clients/{clientId}/credentials": {
      "post": {
        "description": "This operation creates a new credential for your API client. If you don't know your `clientId`, you can run the [Create your credential](https://techdocs.akamai.com/iam-api/reference/post-self-credentials) operation. Credentials are in `active` status at creation. By default, they expire two years from their creation date. However, when the API client's permissions are based on Control Center permissions, credentials expire differently and follow the same rotation schedule listed for user passwords on those accounts. Run the [Update a credential](https://techdocs.akamai.com/iam-api/reference/put-client-credential) operation to change the expiration date, description, or status. Save the values from the response, such as the `credentialID`, for future use. This is the only time you'll see the client secret. Save the credential to avoid the need to create a new one.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/post-client-credentials"
        },
        "operationId": "post-client-credentials",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "clientSecret": "11111111111111111111111111111111111111111111",
                  "clientToken": "0000-0000000000000000-000000000000000",
                  "createdOn": "2018-11-01T23:06:59.000Z",
                  "credentialId": 14111,
                  "description": "New credential for John.",
                  "expiresOn": "2020-11-01T23:06:59.000Z",
                  "status": "ACTIVE"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates all members for the credential data structure.",
                  "properties": {
                    "clientSecret": {
                      "description": "The client secret.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientToken": {
                      "description": "Part of the credential that identifies the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdOn": {
                      "description": "ISO 8601 timestamp indicating when the credential was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentialId": {
                      "description": "Unique identifier each credential.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "description": {
                      "description": "Descriptive label for the credential.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE",
                        "DELETED"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "credentialId",
                    "clientToken",
                    "createdOn",
                    "expiresOn",
                    "status",
                    "description"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/credential.yaml"
                  }
                }
              }
            },
            "description": "The response provides a newly created credential.",
            "headers": {
              "Location": {
                "description": "A URL path to the newly created object.",
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/Location.yaml"
                }
              }
            }
          }
        },
        "summary": "Create a credential",
        "tags": [
          "API clients"
        ]
      },
      "get": {
        "description": "This operation lists credentials for an API client.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-client-credentials"
        },
        "operationId": "get-client-credentials",
        "parameters": [{
            "description": "Includes actions you can perform on the object, `false` by default.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                    "clientToken": "0000-0000000000000000-000000000000000",
                    "createdOn": "2019-11-01T23:06:59.000Z",
                    "credentialId": 99999,
                    "description": "John's access to Property Manager",
                    "expiresOn": "2020-11-01T23:06:59.000Z",
                    "maxAllowedExpiry": "2020-11-01T23:06:59.000Z",
                    "status": "ACTIVE"
                  },
                  {
                    "clientToken": "0000-0000000000000000-000000000000000",
                    "createdOn": "2019-11-01T23:06:59.000Z",
                    "credentialId": 88888,
                    "description": "John's access to Event Center",
                    "expiresOn": "2020-11-01T23:06:59.000Z",
                    "maxAllowedExpiry": "2020-11-01T23:06:59.000Z",
                    "status": "INACTIVE"
                  }
                ],
                "schema": {
                  "description": "API client's credentials.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "actions": {
                        "additionalProperties": false,
                        "description": "Specifies activities available for the credential.",
                        "properties": {
                          "delete": {
                            "description": "Whether you can remove the credential.",
                            "type": "boolean"
                          },
                          "activate": {
                            "description": "Whether you can activate the credential.",
                            "type": "boolean"
                          },
                          "deactivate": {
                            "description": "Whether you can deactivate the credential.",
                            "type": "boolean"
                          },
                          "editDescription": {
                            "description": "Whether you can modify the credential's description.",
                            "type": "boolean"
                          },
                          "editExpiration": {
                            "description": "Whether you can modify the credential's expiration date.",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "delete",
                          "activate",
                          "deactivate",
                          "editDescription",
                          "editExpiration"
                        ],
                        "type": "object"
                      },
                      "clientToken": {
                        "description": "Part of the credential that identifies the API client.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdOn": {
                        "description": "ISO 8601 timestamp indicating when the credential was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "credentialId": {
                        "description": "Unique identifier each credential.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "description": {
                        "description": "Descriptive label for the credential.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "expiresOn": {
                        "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "maxAllowedExpiry": {
                        "description": "An ISO 8601 timestamp limit for credentials expiring.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "status": {
                        "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.",
                        "enum": [
                          "ACTIVE",
                          "INACTIVE",
                          "DELETED"
                        ],
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "credentialId",
                      "clientToken",
                      "createdOn",
                      "expiresOn",
                      "status",
                      "description",
                      "maxAllowedExpiry"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/credential-nosecret.yaml"
                    }
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/credentials.yaml"
                  }
                }
              }
            },
            "description": "The response provides the API client's credentials."
          }
        },
        "summary": "List credentials",
        "tags": [
          "API clients"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each API client. To get this value, run the [List API clients](https://techdocs.akamai.com/iam-api/reference/get-api-clients) operation.",
        "example": "{{clientId}}",
        "in": "path",
        "name": "clientId",
        "required": true,
        "schema": {
          "example": "2cdgugz2tjbtowmy",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/client-id-path.yaml"
        }
      }]
    },
    "/api-clients/{clientId}/credentials/deactivate": {
      "post": {
        "description": "This operation deactivates all credentials for a specific API client. This doesn't delete the API client or the credentials. To deactivate a single credential, run either the [Deactivate a credential](https://techdocs.akamai.com/iam-api/reference/post-client-credential-deactivate) operation or [Update a credential](https://techdocs.akamai.com/iam-api/reference/put-client-credential) and set the status to `INACTIVE`.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/post-client-credentials-deactivate"
        },
        "operationId": "post-client-credentials-deactivate",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "204": {
            "content": {},
            "description": "Credentials successfully deactivated."
          }
        },
        "summary": "Deactivate credentials",
        "tags": [
          "API clients"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each API client. To get this value, run the [List API clients](https://techdocs.akamai.com/iam-api/reference/get-api-clients) operation.",
        "example": "{{clientId}}",
        "in": "path",
        "name": "clientId",
        "required": true,
        "schema": {
          "example": "2cdgugz2tjbtowmy",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/client-id-path.yaml"
        }
      }]
    },
    "/api-clients/{clientId}/credentials/{credentialId}": {
      "get": {
        "description": "This operation returns details about a specific credential for an API client. To change the credential's expiration date or toggle its activation status, run the [Update credential for an API client](https://techdocs.akamai.com/iam-api/reference/put-client-credential) operation.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-client-credential"
        },
        "operationId": "get-client-credential",
        "parameters": [{
            "description": "Includes actions you can perform on the object, `false` by default.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "clientToken": "0000-0000000000000000-000000000000000",
                  "createdOn": "2020-11-01T23:06:59.000Z",
                  "credentialId": 99999,
                  "description": "Credential with no secret",
                  "expiresOn": "2021-11-01T23:06:59.000Z",
                  "maxAllowedExpiry": "2021-11-01T23:06:59.000Z",
                  "status": "ACTIVE"
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies activities available for the credential.",
                      "properties": {
                        "delete": {
                          "description": "Whether you can remove the credential.",
                          "type": "boolean"
                        },
                        "activate": {
                          "description": "Whether you can activate the credential.",
                          "type": "boolean"
                        },
                        "deactivate": {
                          "description": "Whether you can deactivate the credential.",
                          "type": "boolean"
                        },
                        "editDescription": {
                          "description": "Whether you can modify the credential's description.",
                          "type": "boolean"
                        },
                        "editExpiration": {
                          "description": "Whether you can modify the credential's expiration date.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "activate",
                        "deactivate",
                        "editDescription",
                        "editExpiration"
                      ],
                      "type": "object"
                    },
                    "clientToken": {
                      "description": "Part of the credential that identifies the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdOn": {
                      "description": "ISO 8601 timestamp indicating when the credential was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentialId": {
                      "description": "Unique identifier each credential.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "description": {
                      "description": "Descriptive label for the credential.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "maxAllowedExpiry": {
                      "description": "An ISO 8601 timestamp limit for credentials expiring.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE",
                        "DELETED"
                      ],
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "credentialId",
                    "clientToken",
                    "createdOn",
                    "expiresOn",
                    "status",
                    "description",
                    "maxAllowedExpiry"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/credential-nosecret.yaml"
                  }
                }
              }
            },
            "description": "The response provides the credential."
          }
        },
        "summary": "Get a credential",
        "tags": [
          "API clients"
        ]
      },
      "put": {
        "description": "This operation updates a specific credential for an API client. You can change the expiration date, description, or toggle the activation status. This isn't the same as rotating a credential. For details, see [Rotate credentials](https://techdocs.akamai.com/iam-api/reference/rotate-credentials).",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/put-client-credential"
        },
        "operationId": "put-client-credential",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "Update this credential",
                "expiresOn": "2020-10-11T23:06:59.000Z",
                "status": "ACTIVE"
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "description": "Descriptive label for the credential.",
                    "example": "{{description}}",
                    "minLength": 0,
                    "type": "string"
                  },
                  "expiresOn": {
                    "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.",
                    "example": "{{expiresOn}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "status": {
                    "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. You can switch the status between `ACTIVE` and `INACTIVE`. You can't reactivate `DELETED` credentials.",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE",
                      "DELETED"
                    ],
                    "example": "{{status}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "expiresOn",
                  "status"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/update-credential.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "description": "Update this credential",
                  "expiresOn": "2020-10-11T23:06:59.000Z",
                  "status": "ACTIVE"
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "description": "Descriptive label for the credential.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. You can switch the status between `ACTIVE` and `INACTIVE`. You can't reactivate `DELETED` credentials.",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE",
                        "DELETED"
                      ],
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "expiresOn",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/update-credential.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the modified credential."
          }
        },
        "summary": "Update a credential",
        "tags": [
          "API clients"
        ]
      },
      "delete": {
        "description": "This operation deletes a specific credential from an API client. You can only delete inactive credentials.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/delete-client-credential"
        },
        "operationId": "delete-client-credential",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "204": {
            "content": {},
            "description": "Credential successfully deleted."
          }
        },
        "summary": "Remove a credential",
        "tags": [
          "API clients"
        ]
      },
      "parameters": [{
          "description": "Unique identifier for each credential. To get this value for your credentials, run the [List your credentials](https://techdocs.akamai.com/iam-api/reference/get-self-credentials) operation. For other users' credentials, run the [List credentials](https://techdocs.akamai.com/iam-api/reference/get-client-credentials) operation.",
          "example": "{{credentialId}}",
          "in": "path",
          "name": "credentialId",
          "required": true,
          "schema": {
            "example": 123456,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/credential-id-path.yaml"
          }
        },
        {
          "description": "Unique identifier for each API client. To get this value, run the [List API clients](https://techdocs.akamai.com/iam-api/reference/get-api-clients) operation.",
          "example": "{{clientId}}",
          "in": "path",
          "name": "clientId",
          "required": true,
          "schema": {
            "example": "2cdgugz2tjbtowmy",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/client-id-path.yaml"
          }
        }
      ]
    },
    "/api-clients/{clientId}/credentials/{credentialId}/deactivate": {
      "post": {
        "description": "This operation deactivates a specific credential for an API client. This doesn't delete the API client, or the other credentials.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/post-client-credential-deactivate"
        },
        "operationId": "post-client-credential-deactivate",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "204": {
            "content": {},
            "description": "Credential successfully deactivated."
          }
        },
        "summary": "Deactivate a credential",
        "tags": [
          "API clients"
        ]
      },
      "parameters": [{
          "description": "Unique identifier for each credential. To get this value for your credentials, run the [List your credentials](https://techdocs.akamai.com/iam-api/reference/get-self-credentials) operation. For other users' credentials, run the [List credentials](https://techdocs.akamai.com/iam-api/reference/get-client-credentials) operation.",
          "example": "{{credentialId}}",
          "in": "path",
          "name": "credentialId",
          "required": true,
          "schema": {
            "example": 123456,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/credential-id-path.yaml"
          }
        },
        {
          "description": "Unique identifier for each API client. To get this value, run the [List API clients](https://techdocs.akamai.com/iam-api/reference/get-api-clients) operation.",
          "example": "{{clientId}}",
          "in": "path",
          "name": "clientId",
          "required": true,
          "schema": {
            "example": "2cdgugz2tjbtowmy",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/client-id-path.yaml"
          }
        }
      ]
    },
    "/api-clients/{clientId}/lock": {
      "put": {
        "description": "This operation locks an API client. You can't use the API client while it's locked. To unlock a client, run the [Unlock an API client](https://techdocs.akamai.com/iam-api/reference/put-unlock-api-client) operation.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/put-lock-api-client"
        },
        "operationId": "put-lock-api-client",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-ly55myu4fbtajqck-o7oubkbiytbjxywe",
                  "activeCredentialCount": 1,
                  "allowAccountSwitch": false,
                  "authorizedUsers": [
                    "jsmith"
                  ],
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "xfz2n5d43mogkdim",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "jsmith",
                  "createdDate": "2022-05-13T20:04:35.000Z",
                  "isLocked": true,
                  "notificationEmails": [
                    "jsmith@example.com"
                  ],
                  "serviceConsumerToken": "akaa-lb77cyyf3guivns3-sxmd4sims2mihn67"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "List of API clients.",
                  "properties": {
                    "accessToken": {
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "activeCredentialCount": {
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "allowAccountSwitch": {
                      "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).",
                      "type": "boolean"
                    },
                    "authorizedUsers": {
                      "description": "The API client's valid users.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "canAutoCreateCredential": {
                      "default": false,
                      "description": "Whether the API client can create a credential for a new API client. ",
                      "type": "boolean"
                    },
                    "clientDescription": {
                      "description": "Descriptive label about the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientId": {
                      "description": "Unique identifier for each API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientName": {
                      "description": "Descriptive label for the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientType": {
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT",
                        "SERVICE_ACCOUNT"
                      ],
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The user who created the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the API client was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "isLocked": {
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).",
                      "type": "boolean"
                    },
                    "notificationEmails": {
                      "description": "Email addresses to notify users of expiring credentials.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "serviceConsumerToken": {
                      "description": "Unique identifier for the service hostname.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails",
                    "serviceConsumerToken"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/api-client-simple-v3.yaml"
                  }
                }
              }
            },
            "description": "The response provides the locked API client."
          }
        },
        "summary": "Lock an API client",
        "tags": [
          "API clients"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each API client. To get this value, run the [List API clients](https://techdocs.akamai.com/iam-api/reference/get-api-clients) operation.",
        "example": "{{clientId}}",
        "in": "path",
        "name": "clientId",
        "required": true,
        "schema": {
          "example": "2cdgugz2tjbtowmy",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/client-id-path.yaml"
        }
      }]
    },
    "/api-clients/{clientId}/unlock": {
      "put": {
        "description": "This operation unlocks an API client.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/put-unlock-api-client"
        },
        "operationId": "put-unlock-api-client",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-ly55myu4fbtajqck-o7oubkbiytbjxywe",
                  "activeCredentialCount": 1,
                  "allowAccountSwitch": false,
                  "authorizedUsers": [
                    "jsmith"
                  ],
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "xfz2n5d43mogkdim",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "jsmith",
                  "createdDate": "2022-05-13T20:04:35.000Z",
                  "isLocked": true,
                  "notificationEmails": [
                    "jsmith@example.com"
                  ],
                  "serviceConsumerToken": "akaa-lb77cyyf3guivns3-sxmd4sims2mihn67"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "List of API clients.",
                  "properties": {
                    "accessToken": {
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "activeCredentialCount": {
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "allowAccountSwitch": {
                      "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).",
                      "type": "boolean"
                    },
                    "authorizedUsers": {
                      "description": "The API client's valid users.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "canAutoCreateCredential": {
                      "default": false,
                      "description": "Whether the API client can create a credential for a new API client. ",
                      "type": "boolean"
                    },
                    "clientDescription": {
                      "description": "Descriptive label about the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientId": {
                      "description": "Unique identifier for each API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientName": {
                      "description": "Descriptive label for the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientType": {
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT",
                        "SERVICE_ACCOUNT"
                      ],
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The user who created the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the API client was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "isLocked": {
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).",
                      "type": "boolean"
                    },
                    "notificationEmails": {
                      "description": "Email addresses to notify users of expiring credentials.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "serviceConsumerToken": {
                      "description": "Unique identifier for the service hostname.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails",
                    "serviceConsumerToken"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/api-client-simple-v3.yaml"
                  }
                }
              }
            },
            "description": "The response provides the unlocked API client."
          }
        },
        "summary": "Unlock an API client",
        "tags": [
          "API clients"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each API client. To get this value, run the [List API clients](https://techdocs.akamai.com/iam-api/reference/get-api-clients) operation.",
        "example": "{{clientId}}",
        "in": "path",
        "name": "clientId",
        "required": true,
        "schema": {
          "example": "2cdgugz2tjbtowmy",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/client-id-path.yaml"
        }
      }]
    },
    "/user-admin/common/contact-types": {
      "get": {
        "description": "This operation lists the supported contact types. Administrators should use the values from this operation to add or update a user's `contactType`. Users should run the [View contact types for a user profile](https://techdocs.akamai.com/iam-api/reference/get-user-contact-types) operation before modifying their contact type.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-common-contact-types"
        },
        "operationId": "get-common-contact-types",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  "Billing",
                  "Technical Decision Maker",
                  "Business Decision Maker",
                  "Security"
                ],
                "schema": {
                  "items": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-string.yaml"
                  }
                }
              }
            },
            "description": "The response provides the supported contact types."
          }
        },
        "summary": "View contact types",
        "tags": [
          "Contact types"
        ]
      }
    },
    "/user-admin/common/countries": {
      "get": {
        "description": "This operation lists the supported countries. Administrators should use the values from this operation to add or update a user's `country`. Users should run the [View supported countries for a user profile](https://techdocs.akamai.com/iam-api/reference/get-user-countries) operation before modifying their country.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-common-countries"
        },
        "operationId": "get-common-countries",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  "Lao People's Democratic Republ",
                  "Greece",
                  "Greenland",
                  "Grenada",
                  "Tanzania, United Republic of",
                  "Thailand",
                  "Togo",
                  "Tokelau",
                  "Tonga",
                  "Djibouti",
                  "Dominica",
                  "Christmas Island",
                  "Cocos (Keeling) Islands",
                  "Colombia",
                  "Comoros",
                  "Curacao"
                ],
                "schema": {
                  "items": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-string.yaml"
                  }
                }
              }
            },
            "description": "The response provides the supported countries."
          }
        },
        "summary": "View countries",
        "tags": [
          "Locale"
        ]
      }
    },
    "/user-admin/common/countries/{country}/states": {
      "get": {
        "description": "This operation lists the supported U.S. states or Canadian provinces. Administrators should use the values from this operation to add or update a user's `state`. If a user's state or province is unknown, use `TBD`. Users should run the [View states for a user profile](https://techdocs.akamai.com/iam-api/reference/get-user-states) operation before modifying their state.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-common-states"
        },
        "operationId": "get-common-states",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  "AB",
                  "BC",
                  "PQ",
                  "NS",
                  "NT",
                  "NU",
                  "QC",
                  "YK",
                  "NB",
                  "MB",
                  "PE",
                  "TBD",
                  "NF",
                  "SK",
                  "ON"
                ],
                "schema": {
                  "items": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-string.yaml"
                  }
                }
              }
            },
            "description": "The response provides the supported U.S. states or Canadian provinces."
          }
        },
        "summary": "View states",
        "tags": [
          "Locale"
        ]
      },
      "parameters": [{
        "description": "Filters the results by country, but only returns lists of states and provinces for `USA` and `Canada`.",
        "example": "{{country}}",
        "in": "path",
        "name": "country",
        "required": true,
        "schema": {
          "example": "canada",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/country-path.yaml"
        }
      }]
    },
    "/user-admin/common/notification-products": {
      "get": {
        "description": "This operation lists the products a user can subscribe to and receive notifications for on the account. The tokens in your API client determine the account. Administrators should use the values from this operation to set a user's product notifications. Users should run the [View products for a user profile](https://techdocs.akamai.com/iam-api/reference/get-user-notification-products) operation before setting their product notifications.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-common-notification-products"
        },
        "operationId": "get-common-notification-products",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  "EdgeComputing for Java",
                  "Streaming",
                  "Enhanced DNS",
                  "Site Delivery",
                  "Secure FreeFlow (HTTPS Content Delivery using ARLs)",
                  "Log Delivery Service",
                  "Site Acceleration",
                  "Web Application Accelerator",
                  "EdgeScape",
                  "Security",
                  "NetStorage"
                ],
                "schema": {
                  "items": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-string.yaml"
                  }
                }
              }
            },
            "description": "The response provides the supported products."
          }
        },
        "summary": "View products",
        "tags": [
          "Products"
        ]
      }
    },
    "/user-admin/common/password-policy": {
      "get": {
        "description": "This operation lists the password policy for the account. The tokens in your API client determine the account. Administrators should use the values from this operation to set a user's password policy. Users should run the [View password policy for a user profile](https://techdocs.akamai.com/iam-api/reference/get-user-password-policy) operation before setting their password policy.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-common-password-policy"
        },
        "operationId": "get-common-password-policy",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "caseDif": 0,
                  "maxRepeating": 2,
                  "minDigits": 1,
                  "minLength": 8,
                  "minLetters": 1,
                  "minNonAlpha": 0,
                  "minReuse": 4,
                  "pwclass": "aka90",
                  "rotateFrequency": 90
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates all information for a password policy.",
                  "properties": {
                    "caseDif": {
                      "description": "The number of characters that, at minimum, need to be in a different case. For example, a value of 1 means at least one letter needs to be uppercase if the rest are lowercase.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "maxRepeating": {
                      "description": "The maximum allowed number of repeating characters.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minDigits": {
                      "description": "The minimum number of digits in a password.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minLength": {
                      "description": "The minimum length of a password.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minLetters": {
                      "description": "The minimum number of letters in a password.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minNonAlpha": {
                      "description": "The minimum number of non-alphabetic characters in a password.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minReuse": {
                      "description": "The minimum number of previous passwords to retain to prevent password reuse.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "pwclass": {
                      "description": "Unique identifier for a password policy.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "rotateFrequency": {
                      "description": "The number of days a password is valid.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "pwclass",
                    "minLength",
                    "minLetters",
                    "minDigits",
                    "caseDif",
                    "minNonAlpha",
                    "maxRepeating",
                    "minReuse"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/portal-password-class.yaml"
                  }
                }
              }
            },
            "description": "The response provides the password policy."
          }
        },
        "summary": "View password policy",
        "tags": [
          "Policies"
        ]
      }
    },
    "/user-admin/common/supported-languages": {
      "get": {
        "description": "This operation lists the supported languages. Administrators should use the values from this operation to set a user's `preferredLanguage`. Users should run the [View languages for a user profile](https://techdocs.akamai.com/iam-api/reference/get-user-languages) operation before setting their preferred language.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-common-languages"
        },
        "operationId": "get-common-languages",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  "Deutsch",
                  "English",
                  "Espa\u00f1ol",
                  "Espa\u00f1ol (Espa\u00f1a)",
                  "Fran\u00e7ais",
                  "Italiano",
                  "Portugu\u00eas",
                  "\u4e2d\u6587 (\u7b80\u4f53)",
                  "\u4e2d\u6587 (\u7e41\u9ad4)",
                  "\u65e5\u672c\u8a9e",
                  "\ud55c\uad6d\uc5b4"
                ],
                "schema": {
                  "items": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-string.yaml"
                  }
                }
              }
            },
            "description": "The response provides the supported languages."
          }
        },
        "summary": "View languages",
        "tags": [
          "Locale"
        ]
      }
    },
    "/user-admin/common/timeout-policies": {
      "get": {
        "description": "This operation lists the supported session timeout policies. The `name` for each timeout period is in minutes, and the time `value` is in seconds. Administrators should use the `sessionTimeout` values from this operation to set a user's timeout policy. Users should run the [View timeout policies for a user profile](https://techdocs.akamai.com/iam-api/reference/get-user-timeout-policies) operation before setting their timeout policy.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-common-timeout-policies"
        },
        "operationId": "get-common-timeout-policies",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                    "name": "after15Minutes",
                    "value": 900
                  },
                  {
                    "name": "after30Minutes",
                    "value": 1800
                  },
                  {
                    "name": "after45Minutes",
                    "value": 2700
                  },
                  {
                    "name": "after1Hour",
                    "value": 3600
                  },
                  {
                    "name": "after2Hours",
                    "value": 7200
                  },
                  {
                    "name": "after4Hours",
                    "value": 14400
                  },
                  {
                    "name": "after18Hours",
                    "value": 64800
                  }
                ],
                "schema": {
                  "description": "Specifies session timeout policy options that can be assigned to each user.",
                  "items": {
                    "additionalProperties": false,
                    "description": "Specifies session timeout policy options that can be assigned to users.",
                    "properties": {
                      "name": {
                        "description": "Descriptive name for the timeout.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "value": {
                        "description": "Number of seconds until session timeout.",
                        "minimum": 0,
                        "type": "integer"
                      }
                    },
                    "required": [
                      "name",
                      "value"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/session-timeout-policy.yaml"
                    }
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-session-timeout-policy.yaml"
                  }
                }
              }
            },
            "description": "This operation lists the supported session timeout policies."
          }
        },
        "summary": "View timeout policies",
        "tags": [
          "Policies"
        ]
      }
    },
    "/user-admin/common/timezones": {
      "get": {
        "description": "This operation lists the supported time zones in the ISO 8601 format. Administrators should use the values from this operation to set a user's `timeZone`. Users should run the [View time zones for a user profile](https://techdocs.akamai.com/iam-api/reference/get-user-timezones) operation before setting their time zone.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-common-timezones"
        },
        "operationId": "get-common-timezones",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                    "description": "Asia/Rangoon GMT+6",
                    "offset": "+6",
                    "posix": "Asia/Rangoon",
                    "timezone": "Asia/Rangoon"
                  },
                  {
                    "description": "Australia/Sydney GMT+10",
                    "offset": "+10",
                    "posix": "Australia/Sydney",
                    "timezone": "Australia/Sydney"
                  },
                  {
                    "description": "Etc/GMT+3",
                    "offset": "+3",
                    "posix": "Etc/GMT-3",
                    "timezone": "Etc/GMT+3"
                  }
                ],
                "schema": {
                  "description": "Specifies time zones that can be assigned to each user.",
                  "items": {
                    "additionalProperties": false,
                    "description": "Specifies time zones that can be assigned to each user.",
                    "properties": {
                      "description": {
                        "description": "Descriptive label for the time zone, including the `+` or `-` offset from GMT.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "offset": {
                        "description": "The time zone offset from GMT.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "posix": {
                        "description": "The time zone posix.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "timezone": {
                        "description": "The time zone ID.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "timezone",
                      "description"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/time-zone.yaml"
                    }
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-time-zones.yaml"
                  }
                }
              }
            },
            "description": "The response provides the supported time zones."
          }
        },
        "summary": "View time zones",
        "tags": [
          "Locale"
        ]
      }
    },
    "/user-admin/groups": {
      "get": {
        "description": "This operation lists all groups the administrator can manage for the current account and contract type or other managed accounts using the `accountSwitchKey` parameter. The account and contract type are determined by the access tokens in your API client.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-groups"
        },
        "operationId": "get-groups",
        "parameters": [{
            "description": "Includes information about actions such as `edit` or `delete` that you can take for the object, `false` by default. Don't confuse this with the `action` parameter, which applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-api/reference/put-user-profile-tfa) operation.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/roles-filter-params-actions-actions.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                  "actions": {
                    "delete": false,
                    "edit": true
                  },
                  "createdBy": "szhang",
                  "createdDate": "2012-04-28T00:00:00.000Z",
                  "groupId": 12345,
                  "groupName": "Main Street Corporation",
                  "modifiedBy": "hgildong",
                  "modifiedDate": "2012-04-28T00:00:00.000Z",
                  "subGroups": [{
                    "actions": {
                      "delete": false,
                      "edit": true
                    },
                    "createdBy": "szhang",
                    "createdDate": "2013-10-29T19:05:52.000Z",
                    "groupId": 12345,
                    "groupName": "Internet Company",
                    "modifiedBy": "mrossi",
                    "modifiedDate": "2017-07-25T22:30:20.000Z",
                    "parentGroupId": 12345,
                    "subGroups": [{
                      "actions": {
                        "delete": false,
                        "edit": true
                      },
                      "createdBy": "jkowalski",
                      "createdDate": "2017-07-25T22:30:47.000Z",
                      "groupId": 54321,
                      "groupName": "Digital Company",
                      "modifiedBy": "jkowalski",
                      "modifiedDate": "2017-07-25T22:30:47.000Z",
                      "parentGroupId": 11111,
                      "subGroups": []
                    }]
                  }]
                }],
                "schema": {
                  "description": "Encapsulates information about a group.",
                  "items": {
                    "additionalProperties": false,
                    "description": "Specifies a group.",
                    "properties": {
                      "actions": {
                        "additionalProperties": false,
                        "description": "Specifies activities available for the group.",
                        "properties": {
                          "delete": {
                            "description": "Whether you can remove the group from the account. You can't remove a group that contains resources or subgroups, or if users have roles on that group.",
                            "type": "boolean"
                          },
                          "edit": {
                            "description": "Whether you can modify the group.",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "delete",
                          "edit"
                        ],
                        "type": "object"
                      },
                      "createdBy": {
                        "description": "The user who created the group.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the group was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "groupId": {
                        "description": "Unique identifier for each group.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "groupName": {
                        "description": "Descriptive label for the group.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "modifiedBy": {
                        "description": "The user who last edited the group.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the group was last updated.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "parentGroupId": {
                        "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "subGroups": {
                        "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                        "items": {
                          "additionalProperties": true,
                          "description": "A further nested group.",
                          "properties": {},
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/groups-nested.yaml"
                          }
                        },
                        "minItems": 0,
                        "type": "array"
                      }
                    },
                    "required": [
                      "createdBy",
                      "createdDate",
                      "groupId",
                      "groupName",
                      "modifiedBy",
                      "modifiedDate",
                      "subGroups"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/group-response.yaml"
                    }
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-group-response.yaml"
                  }
                }
              }
            },
            "description": "The response provides the groups."
          }
        },
        "summary": "List groups",
        "tags": [
          "Groups"
        ]
      }
    },
    "/user-admin/groups/move": {
      "post": {
        "description": "This operation moves a nested group under another group within the same parent hierarchy.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/post-groups-move"
        },
        "operationId": "post-groups-move",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "destinationGroupId": 54321,
                "sourceGroupId": 12345
              },
              "schema": {
                "additionalProperties": false,
                "description": "Describes the request body to move one group under another group.",
                "properties": {
                  "destinationGroupId": {
                    "description": "Identifies the group where you want to move the `sourceGroupId` within the same parent hierarchy. To get this value, run the [List groups](https://techdocs.akamai.com/iam-api/reference/get-groups) operation.",
                    "example": "{{destinationGroupId}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "sourceGroupId": {
                    "description": "Identifies the nested group you want to move to the `destinationGroupId`. To get this value, run the [List groups](https://techdocs.akamai.com/iam-api/reference/get-groups) operation.",
                    "example": "{{sourceGroupId}}",
                    "minimum": 0,
                    "type": "integer"
                  }
                },
                "required": [
                  "sourceGroupId",
                  "destinationGroupId"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/move-group-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "content": {},
            "description": "Nested group successfully moved."
          }
        },
        "summary": "Move a group",
        "tags": [
          "Move groups"
        ]
      }
    },
    "/user-admin/groups/move/{sourceGroupId}/{destinationGroupId}/affected-users": {
      "get": {
        "description": "This operation lists users who are affected when you move a group. Users may lose or gain access to resources depending on the roles and permissions inherited from the new parent group. Users with a `userType` of `lostAccess` lose their access to the source group. If the `userType` is `gainAccess`, they gain access to the resources in the source group. Users who have inherited access to a group lose access to that group if it moves out of its hierarchy that gives them those access rights. If the group moves to another parent group to which they have access, they still have access to the group you move. Likewise, when you move a group to a new location, users who inherit their access rights from the new parent group gain access to the resources in the group you move.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-move-affected-users"
        },
        "operationId": "get-move-affected-users",
        "parameters": [{
            "description": "__Enum__ Filters the list by users who have `lostAccess` or the reverse `gainAccess`.",
            "example": "{{userType}}",
            "in": "query",
            "name": "userType",
            "schema": {
              "enum": [
                "lostAccess",
                "gainAccess"
              ],
              "example": "lostAccess",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/user-type-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                    "accountId": "A-CCT7890",
                    "email": "jsmith@example.com",
                    "firstName": "John",
                    "lastLoginDate": "2017-08-03T21:15:27.000Z",
                    "lastName": "Smith",
                    "uiIdentityId": "A-B-12345",
                    "uiUserName": "jsmith@example.com"
                  },
                  {
                    "accountId": "A-CCT1234",
                    "email": "jkowalski@example.com",
                    "firstName": "Jan",
                    "lastLoginDate": "2016-09-07T00:00:00.000Z",
                    "lastName": "Kowalski",
                    "uiIdentityId": "1-2A3BCD",
                    "uiUserName": "jkowalski@example.com"
                  }
                ],
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "accountId": {
                        "description": "Unique identifier for each account.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "email": {
                        "description": "The user's email address.",
                        "format": "email",
                        "type": "string"
                      },
                      "firstName": {
                        "description": "The user's first name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "lastLoginDate": {
                        "description": "ISO 8601 timestamp indicating when the user last logged in.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "lastName": {
                        "description": "The user's surname.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "uiIdentityId": {
                        "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "uiUserName": {
                        "description": "The user's username in Control Center.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "accountId",
                      "email",
                      "firstName",
                      "lastName",
                      "uiIdentityId",
                      "uiUserName"
                    ],
                    "type": "object"
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-move-user-response.yaml"
                  }
                }
              }
            },
            "description": "The response provides the affected users."
          }
        },
        "summary": "List users affected by moving a group",
        "tags": [
          "Move groups"
        ]
      },
      "parameters": [{
          "description": "Unique identifier for a group you're putting the other group into. To get this value, run the [List groups](https://techdocs.akamai.com/iam-api/reference/get-groups) operation.",
          "example": "{{destinationGroupId}}",
          "in": "path",
          "name": "destinationGroupId",
          "required": true,
          "schema": {
            "example": 54321,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/destination-group-id-path.yaml"
          }
        },
        {
          "description": "Unique identifier for a group you want to move. To get this value, run the [List groups](https://techdocs.akamai.com/iam-api/reference/get-groups) operation.",
          "example": "{{sourceGroupId}}",
          "in": "path",
          "name": "sourceGroupId",
          "required": true,
          "schema": {
            "example": 32145,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/source-group-id-path.yaml"
          }
        }
      ]
    },
    "/user-admin/groups/{groupId}": {
      "post": {
        "description": "This operation creates a new group within the specified parent group.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/post-group"
        },
        "operationId": "post-group",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "groupName": "Digital Company"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Includes the new `groupName` you're using to replace the old `groupName`.",
                "properties": {
                  "groupName": {
                    "description": "Descriptive label for the group.",
                    "example": "{{groupName}}",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "groupName"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/group-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "jkowalski",
                  "createdDate": "2017-09-18T19:03:28.000Z",
                  "groupId": 32145,
                  "groupName": "Digital Company",
                  "modifiedBy": "adevi",
                  "modifiedDate": "2017-09-18T19:03:28.000Z",
                  "parentGroupId": 19807,
                  "subGroups": []
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies a group.",
                  "properties": {
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies activities available for the group.",
                      "properties": {
                        "delete": {
                          "description": "Whether you can remove the group from the account. You can't remove a group that contains resources or subgroups, or if users have roles on that group.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether you can modify the group.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "edit"
                      ],
                      "type": "object"
                    },
                    "createdBy": {
                      "description": "The user who created the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the group was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Unique identifier for each group.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "groupName": {
                      "description": "Descriptive label for the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "The user who last edited the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the group was last updated.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "parentGroupId": {
                      "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "subGroups": {
                      "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                      "items": {
                        "additionalProperties": true,
                        "description": "A further nested group.",
                        "properties": {},
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/groups-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array"
                    }
                  },
                  "required": [
                    "createdBy",
                    "createdDate",
                    "groupId",
                    "groupName",
                    "modifiedBy",
                    "modifiedDate",
                    "subGroups"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/group-response.yaml"
                  }
                }
              }
            },
            "description": "Group successfully created.",
            "headers": {
              "Location": {
                "description": "A URL path to the newly created object.",
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/Location.yaml"
                }
              }
            }
          }
        },
        "summary": "Create a new group",
        "tags": [
          "Groups"
        ]
      },
      "get": {
        "description": "This operation retrieves a group's details.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-group"
        },
        "operationId": "get-group",
        "parameters": [{
            "description": "Includes information about actions such as `edit` or `delete` that you can take for the object, `false` by default. Don't confuse this with the `action` parameter, which applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-api/reference/put-user-profile-tfa) operation.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/roles-filter-params-actions-actions.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "actions": {
                    "delete": false,
                    "edit": true
                  },
                  "createdBy": "szhang",
                  "createdDate": "2012-04-28T00:00:00.000Z",
                  "groupId": 12345,
                  "groupName": "Main Street Corporation",
                  "modifiedBy": "jsmith",
                  "modifiedDate": "2012-04-28T00:00:00.000Z",
                  "subGroups": [{
                    "actions": {
                      "delete": false,
                      "edit": true
                    },
                    "createdBy": "jkowalski",
                    "createdDate": "2013-10-29T19:05:52.000Z",
                    "groupId": 54321,
                    "groupName": "Internet Company",
                    "modifiedBy": "mrossi",
                    "modifiedDate": "2017-07-25T22:30:20.000Z",
                    "parentGroupId": 12345,
                    "subGroups": [{
                      "actions": {
                        "delete": false,
                        "edit": true
                      },
                      "createdBy": "adevi",
                      "createdDate": "2017-07-25T22:30:47.000Z",
                      "groupId": 32145,
                      "groupName": "Digital Company",
                      "modifiedBy": "jsmith",
                      "modifiedDate": "2017-07-25T22:30:47.000Z",
                      "parentGroupId": 11111,
                      "subGroups": []
                    }]
                  }]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies a group.",
                  "properties": {
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies activities available for the group.",
                      "properties": {
                        "delete": {
                          "description": "Whether you can remove the group from the account. You can't remove a group that contains resources or subgroups, or if users have roles on that group.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether you can modify the group.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "edit"
                      ],
                      "type": "object"
                    },
                    "createdBy": {
                      "description": "The user who created the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the group was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Unique identifier for each group.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "groupName": {
                      "description": "Descriptive label for the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "The user who last edited the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the group was last updated.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "parentGroupId": {
                      "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "subGroups": {
                      "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                      "items": {
                        "additionalProperties": true,
                        "description": "A further nested group.",
                        "properties": {},
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/groups-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array"
                    }
                  },
                  "required": [
                    "createdBy",
                    "createdDate",
                    "groupId",
                    "groupName",
                    "modifiedBy",
                    "modifiedDate",
                    "subGroups"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/group-response.yaml"
                  }
                }
              }
            },
            "description": "The response provides the group's details."
          }
        },
        "summary": "Get a group",
        "tags": [
          "Groups"
        ]
      },
      "put": {
        "description": "This operation changes a group's name.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/put-group"
        },
        "operationId": "put-group",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "groupName": "Digital Company"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Includes the new `groupName` you're using to replace the old `groupName`.",
                "properties": {
                  "groupName": {
                    "description": "Descriptive label for the group.",
                    "example": "{{groupName}}",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "groupName"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/group-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "actions": {
                    "delete": false,
                    "edit": true
                  },
                  "createdBy": "jperez",
                  "createdDate": "2012-04-28T00:00:00.000Z",
                  "groupId": 12345,
                  "groupName": "Main Street Corporation",
                  "modifiedBy": "hgildong",
                  "modifiedDate": "2012-04-28T00:00:00.000Z",
                  "subGroups": [{
                    "actions": {
                      "delete": false,
                      "edit": true
                    },
                    "createdBy": "jkowalski",
                    "createdDate": "2013-10-29T19:05:52.000Z",
                    "groupId": 12345,
                    "groupName": "Digital Company",
                    "modifiedBy": "mrossi",
                    "modifiedDate": "2017-07-25T22:30:20.000Z",
                    "parentGroupId": 12345,
                    "subGroups": [{
                      "actions": {
                        "delete": false,
                        "edit": true
                      },
                      "createdBy": "alfulani",
                      "createdDate": "2017-07-25T22:30:47.000Z",
                      "groupId": 12345,
                      "groupName": "Internet Company",
                      "modifiedBy": "mrossi",
                      "modifiedDate": "2017-07-25T22:30:47.000Z",
                      "parentGroupId": 11111,
                      "subGroups": []
                    }]
                  }]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies a group.",
                  "properties": {
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies activities available for the group.",
                      "properties": {
                        "delete": {
                          "description": "Whether you can remove the group from the account. You can't remove a group that contains resources or subgroups, or if users have roles on that group.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether you can modify the group.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "edit"
                      ],
                      "type": "object"
                    },
                    "createdBy": {
                      "description": "The user who created the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the group was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Unique identifier for each group.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "groupName": {
                      "description": "Descriptive label for the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "The user who last edited the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the group was last updated.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "parentGroupId": {
                      "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "subGroups": {
                      "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                      "items": {
                        "additionalProperties": true,
                        "description": "A further nested group.",
                        "properties": {},
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/groups-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array"
                    }
                  },
                  "required": [
                    "createdBy",
                    "createdDate",
                    "groupId",
                    "groupName",
                    "modifiedBy",
                    "modifiedDate",
                    "subGroups"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/group-response.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the modified group."
          }
        },
        "summary": "Modify a group's name",
        "tags": [
          "Groups"
        ]
      },
      "delete": {
        "description": "This operation deletes a group. You can't delete a group that contains subgroups, resources, or users with roles on that group. You need admin access to delete a group.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/delete-group"
        },
        "operationId": "delete-group",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "204": {
            "content": {},
            "description": "Group successfully deleted."
          }
        },
        "summary": "Delete a group",
        "tags": [
          "Groups"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each group. To get this value, run the [List groups](https://techdocs.akamai.com/iam-api/reference/get-groups) operation.",
        "example": "{{groupId}}",
        "in": "path",
        "name": "groupId",
        "required": true,
        "schema": {
          "example": 54321,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/group-id-path.yaml"
        }
      }]
    },
    "/user-admin/ip-acl/allowlist": {
      "post": {
        "description": "This operation adds CIDR blocks to your account's allowlist. You can add only one CIDR block at a time. Before creating the CIDR block, you may want to [validate it](https://techdocs.akamai.com/iam-api/reference/get-allowlist-validate), to check if its format is correct.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/post-allowlist"
        },
        "operationId": "post-allowlist",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "cidrBlock": "128.10.46.60/24",
                "comments": "EMEA Offices",
                "enabled": true
              },
              "schema": {
                "additionalProperties": false,
                "description": "Encapsulates all data sent while creating or updating a CIDR block.",
                "properties": {
                  "cidrBlock": {
                    "description": "The value of an IP address or IP address range.",
                    "example": "{{cidrBlock}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "comments": {
                    "description": "Descriptive label you provide for the CIDR block.",
                    "example": "{{comments}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "enabled": {
                    "description": "Enables the IP allowlist on the account.",
                    "example": "{{enabled}}",
                    "type": "boolean"
                  }
                },
                "required": [
                  "enabled",
                  "cidrBlock"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/post-ip-acl.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "actions": {
                    "delete": true,
                    "edit": false
                  },
                  "cidrBlock": "128.5.6.6/24",
                  "cidrBlockId": 2567,
                  "comments": "APAC Region",
                  "createdBy": "alfulani",
                  "createdDate": "2017-07-27T18:11:25.000Z",
                  "enabled": true,
                  "modifiedBy": "alfulani",
                  "modifiedDate": "2017-07-27T18:11:25.000Z"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates all members for a CIDR block in the IP allowlist data structure.",
                  "properties": {
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies activities available for the CIDR block.",
                      "properties": {
                        "delete": {
                          "description": "Whether you can delete this CIDR block. You can't delete a CIDR block from an IP address not on the allowlist, or if the CIDR block is the only one on the allowlist.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether you can edit this CIDR block. You can't edit  CIDR block from an IP address not on the allowlist, or if the CIDR block is the only one on the allowlist.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "edit"
                      ],
                      "type": "object"
                    },
                    "cidrBlock": {
                      "description": "The value of an IP address or IP address range.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cidrBlockId": {
                      "description": "Unique identifier for each CIDR block.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "comments": {
                      "description": "Descriptive label you provide for the CIDR block.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The user who created the CIDR block.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the CIDR block was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "enabled": {
                      "description": "Whether the IP allowlist is enabled on the account.",
                      "type": "boolean"
                    },
                    "modifiedBy": {
                      "description": "The user who last edited the CIDR block.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the CIDR block was last modified.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "cidrBlockId",
                    "enabled",
                    "cidrBlock",
                    "createdDate",
                    "createdBy",
                    "modifiedDate",
                    "modifiedBy"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/ip-acl-200.yaml"
                  }
                }
              }
            },
            "description": "CIDR block successfully created.",
            "headers": {
              "Location": {
                "description": "A URL path to the newly created object.",
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/Location.yaml"
                }
              }
            }
          }
        },
        "summary": "Create a CIDR block",
        "tags": [
          "CIDR blocks"
        ]
      },
      "get": {
        "description": "This operation lists all CIDR blocks on your current account's allowlist or other managed accounts using the `accountSwitchKey` parameter. Your API client designates the allowlist for the account.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-allowlist"
        },
        "operationId": "get-allowlist",
        "parameters": [{
            "description": "Includes actions you can perform on the object, `false` by default.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                    "actions": {
                      "delete": true,
                      "edit": true
                    },
                    "cidrBlock": "127.0.0.1/24",
                    "cidrBlockId": 921,
                    "comments": "West Coast Office",
                    "createdBy": "alfulani",
                    "createdDate": "2017-07-27T18:11:25.000Z",
                    "enabled": true,
                    "modifiedBy": "szhang",
                    "modifiedDate": "2017-07-27T18:11:25.000Z"
                  },
                  {
                    "actions": {
                      "delete": true,
                      "edit": false
                    },
                    "cidrBlock": "128.5.6.6/24",
                    "cidrBlockId": 6042,
                    "comments": "East Coast Office",
                    "createdBy": "mrossi",
                    "createdDate": "2017-07-27T18:11:25.000Z",
                    "enabled": true,
                    "modifiedBy": "jperez",
                    "modifiedDate": "2017-07-27T18:11:25.000Z"
                  }
                ],
                "schema": {
                  "description": "This object encapsulates a collection of CIDR blocks.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "actions": {
                        "additionalProperties": false,
                        "description": "Specifies activities available for the CIDR block.",
                        "properties": {
                          "delete": {
                            "description": "Whether you can delete this CIDR block. You can't delete a CIDR block from an IP address not on the allowlist, or if the CIDR block is the only one on the allowlist.",
                            "type": "boolean"
                          },
                          "edit": {
                            "description": "Whether you can edit this CIDR block. You can't edit  CIDR block from an IP address not on the allowlist, or if the CIDR block is the only one on the allowlist.",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "delete",
                          "edit"
                        ],
                        "type": "object"
                      },
                      "cidrBlock": {
                        "description": "The value of an IP address or IP address range.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "cidrBlockId": {
                        "description": "Unique identifier for each CIDR block.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "comments": {
                        "description": "Descriptive label you provide for the CIDR block.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdBy": {
                        "description": "The user who created the CIDR block.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the CIDR block was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "enabled": {
                        "description": "Whether the CIDR block is enabled.",
                        "type": "boolean"
                      },
                      "modifiedBy": {
                        "description": "The user who last edited the CIDR block.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the CIDR block was last modified.",
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "cidrBlock",
                      "cidrBlockId",
                      "comments",
                      "createdBy",
                      "createdDate",
                      "enabled",
                      "modifiedBy",
                      "modifiedDate"
                    ],
                    "type": "object"
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/ip-acls-200.yaml"
                  }
                }
              }
            },
            "description": "The response provides the CIDR blocks."
          }
        },
        "summary": "List CIDR blocks",
        "tags": [
          "CIDR blocks"
        ]
      }
    },
    "/user-admin/ip-acl/allowlist/disable": {
      "post": {
        "description": "This operation disables IP allowlist on your account. After you disable IP allowlist, users can access Control Center regardless of their IP address or who assigns it.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/post-allowlist-disable"
        },
        "operationId": "post-allowlist-disable",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "204": {
            "content": {},
            "description": "IP allowlist successfully disabled."
          }
        },
        "summary": "Disable IP allowlist",
        "tags": [
          "IP allowlists"
        ]
      }
    },
    "/user-admin/ip-acl/allowlist/enable": {
      "post": {
        "description": "This operation enables IP allowlist on your account. Before you enable IP allowlist, add at least one IP address to allow access to Control Center. The allowlist can't be empty with IP allowlist enabled.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/post-allowlist-enable"
        },
        "operationId": "post-allowlist-enable",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "204": {
            "content": {},
            "description": "IP allowlist successfully enabled."
          }
        },
        "summary": "Enable IP allowlist",
        "tags": [
          "IP allowlists"
        ]
      }
    },
    "/user-admin/ip-acl/allowlist/status": {
      "get": {
        "description": "This operation indicates whether IP allowlist is enabled or disabled on your account.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-allowlist-status"
        },
        "operationId": "get-allowlist-status",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "enabled": true
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates the status of IP allowlist on the account.",
                  "properties": {
                    "enabled": {
                      "description": "Whether the IP allowlist is enabled on the account.",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "enabled"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/account-status.yaml"
                  }
                }
              }
            },
            "description": "The response provides IP allowlist status."
          }
        },
        "summary": "View IP allowlist status",
        "tags": [
          "IP allowlists"
        ]
      }
    },
    "/user-admin/ip-acl/allowlist/validate": {
      "get": {
        "description": "This operation checks the format of a potential CIDR block. If it's validated successfully, you can [create it](https://techdocs.akamai.com/iam-api/reference/post-allowlist).",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-allowlist-validate"
        },
        "operationId": "get-allowlist-validate",
        "parameters": [{
            "description": "CIDR block or any IP address value you want to validate. Encode any slash characters as `%2F`. This isn't the same as a `cidrBlockId`.",
            "example": "{{cidrblock}}",
            "in": "query",
            "name": "cidrblock",
            "required": true,
            "schema": {
              "example": "127.0.0.1/20",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/cidr-block-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "CIDR block successfully validated."
          }
        },
        "summary": "Validate CIDR blocks",
        "tags": [
          "CIDR blocks"
        ]
      }
    },
    "/user-admin/ip-acl/allowlist/{cidrBlockId}": {
      "get": {
        "description": "This operation retrieves a CIDR block's details.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-allowlist-cidrblockid"
        },
        "operationId": "get-allowlist-cidrblockid",
        "parameters": [{
            "description": "Includes actions you can perform on the object, `false` by default.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "actions": {
                    "delete": true,
                    "edit": false
                  },
                  "cidrBlock": "128.5.6.6/24",
                  "cidrBlockId": 2567,
                  "comments": "APAC Region",
                  "createdBy": "alfulani",
                  "createdDate": "2017-07-27T18:11:25.000Z",
                  "enabled": true,
                  "modifiedBy": "alfulani",
                  "modifiedDate": "2017-07-27T18:11:25.000Z"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates all members for a CIDR block in the IP allowlist data structure.",
                  "properties": {
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies activities available for the CIDR block.",
                      "properties": {
                        "delete": {
                          "description": "Whether you can delete this CIDR block. You can't delete a CIDR block from an IP address not on the allowlist, or if the CIDR block is the only one on the allowlist.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether you can edit this CIDR block. You can't edit  CIDR block from an IP address not on the allowlist, or if the CIDR block is the only one on the allowlist.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "edit"
                      ],
                      "type": "object"
                    },
                    "cidrBlock": {
                      "description": "The value of an IP address or IP address range.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cidrBlockId": {
                      "description": "Unique identifier for each CIDR block.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "comments": {
                      "description": "Descriptive label you provide for the CIDR block.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The user who created the CIDR block.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the CIDR block was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "enabled": {
                      "description": "Whether the IP allowlist is enabled on the account.",
                      "type": "boolean"
                    },
                    "modifiedBy": {
                      "description": "The user who last edited the CIDR block.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the CIDR block was last modified.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "cidrBlockId",
                    "enabled",
                    "cidrBlock",
                    "createdDate",
                    "createdBy",
                    "modifiedDate",
                    "modifiedBy"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/ip-acl-200.yaml"
                  }
                }
              }
            },
            "description": "The response provides the CIDR block's details."
          }
        },
        "summary": "Get a CIDR block",
        "tags": [
          "CIDR blocks"
        ]
      },
      "put": {
        "description": "This operation enables or disables an existing CIDR block, updates comments, IP addresses, or ranges in the CIDR block. Note that you can only update a CIDR block with IP allowlist enabled on the account. There are several CIDR blocks on the allowlist and your attempt to make changes to the CIDR block is from an IP address that's on the allowlist. You can't edit the last CIDR block in the allowlist or the CIDR block allowing access to the current user.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/put-allowlist-cidrblockid"
        },
        "operationId": "put-allowlist-cidrblockid",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "cidrBlock": "128.10.46.60/24",
                "comments": "EMEA Offices",
                "enabled": true
              },
              "schema": {
                "additionalProperties": false,
                "description": "Encapsulates all data sent while creating or updating a CIDR block.",
                "properties": {
                  "cidrBlock": {
                    "description": "The value of an IP address or IP address range.",
                    "example": "{{cidrBlock}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "comments": {
                    "description": "Descriptive label you provide for the CIDR block.",
                    "example": "{{comments}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "enabled": {
                    "description": "Enables the IP allowlist on the account.",
                    "example": "{{enabled}}",
                    "type": "boolean"
                  }
                },
                "required": [
                  "enabled",
                  "cidrBlock"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/post-ip-acl.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "actions": {
                    "delete": true,
                    "edit": false
                  },
                  "cidrBlock": "128.5.6.6/24",
                  "cidrBlockId": 2567,
                  "comments": "APAC Region",
                  "createdBy": "alfulani",
                  "createdDate": "2017-07-27T18:11:25.000Z",
                  "enabled": true,
                  "modifiedBy": "alfulani",
                  "modifiedDate": "2017-07-27T18:11:25.000Z"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates all members for a CIDR block in the IP allowlist data structure.",
                  "properties": {
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies activities available for the CIDR block.",
                      "properties": {
                        "delete": {
                          "description": "Whether you can delete this CIDR block. You can't delete a CIDR block from an IP address not on the allowlist, or if the CIDR block is the only one on the allowlist.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether you can edit this CIDR block. You can't edit  CIDR block from an IP address not on the allowlist, or if the CIDR block is the only one on the allowlist.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "edit"
                      ],
                      "type": "object"
                    },
                    "cidrBlock": {
                      "description": "The value of an IP address or IP address range.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cidrBlockId": {
                      "description": "Unique identifier for each CIDR block.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "comments": {
                      "description": "Descriptive label you provide for the CIDR block.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The user who created the CIDR block.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the CIDR block was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "enabled": {
                      "description": "Whether the IP allowlist is enabled on the account.",
                      "type": "boolean"
                    },
                    "modifiedBy": {
                      "description": "The user who last edited the CIDR block.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the CIDR block was last modified.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "cidrBlockId",
                    "enabled",
                    "cidrBlock",
                    "createdDate",
                    "createdBy",
                    "modifiedDate",
                    "modifiedBy"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/ip-acl-200.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the modified CIDR block."
          }
        },
        "summary": "Modify a CIDR block",
        "tags": [
          "CIDR blocks"
        ]
      },
      "delete": {
        "description": "This operation deletes a CIDR block from the IP allowlist. After you delete a CIDR block, any requests from IP addresses you deleted fail the next time someone tries to log in from that address. Users accessing Control Center from an IP address you delete aren't automatically logged out of Control Center at the time you delete the IP address. With IP allowlist enabled for the account, you can't delete the last CIDR block in the allowlist or the CIDR block allowing access to the current user. There are no restrictions with IP allowlist disabled on the account.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/delete-allowlist-cidrblockid"
        },
        "operationId": "delete-allowlist-cidrblockid",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "204": {
            "content": {},
            "description": "CIDR block successfully deleted."
          }
        },
        "summary": "Delete a CIDR block",
        "tags": [
          "CIDR blocks"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each CIDR block. To get this value, run the [List CIDR blocks](https://techdocs.akamai.com/iam-api/reference/get-allowlist) operation.",
        "example": "{{cidrBlockId}}",
        "in": "path",
        "name": "cidrBlockId",
        "required": true,
        "schema": {
          "example": 6688,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/cidr-block-id-path.yaml"
        }
      }]
    },
    "/user-admin/properties": {
      "get": {
        "description": "This operation lists the properties and includes for the current account or other managed accounts using the `accountSwitchKey` parameter. Include the `groupId` parameter in your request to filter the results by group. The response returns a list of `propertyId` regardless of whether they represent a property or include in PAPI. To learn more, see [Manage access to properties and includes](https://techdocs.akamai.com/iam-api/reference/manage-access-to-properties-and-includes).",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-properties"
        },
        "operationId": "get-properties",
        "parameters": [{
            "description": "Unique identifier for each group. To get this value, run the [List groups](https://techdocs.akamai.com/iam-api/reference/get-groups) operation.",
            "example": "{{groupId}}",
            "in": "query",
            "name": "groupId",
            "schema": {
              "example": 54321,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/group-id-opt-group-id.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                    "actions": {
                      "move": true
                    },
                    "groupId": 12345,
                    "groupName": "Digital Company",
                    "propertyId": 99999999,
                    "propertyName": "0rb-digital-company-01.com",
                    "propertyTypeDescription": "On Demand Media"
                  },
                  {
                    "actions": {
                      "move": true
                    },
                    "groupId": 32145,
                    "groupName": "Internet Company",
                    "propertyId": 88888888,
                    "propertyName": "0rb-internet-company-01.com",
                    "propertyTypeDescription": "On Demand Media"
                  }
                ],
                "schema": {
                  "description": "Encapsulates information about each property.",
                  "items": {
                    "additionalProperties": false,
                    "description": "Encapsulates information about an asset.",
                    "properties": {
                      "actions": {
                        "additionalProperties": false,
                        "description": "Specifies activities available for the group.",
                        "properties": {
                          "move": {
                            "description": "Whether you can move a asset from one group to another group.",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "move"
                        ],
                        "type": "object"
                      },
                      "groupId": {
                        "description": "Unique identifier for each group. It filters down results to properties in the specified group.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "groupName": {
                        "description": "Descriptive label for the group.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "propertyId": {
                        "description": "Unique identifier for a property or include. This is what [PAPI](https://techdocs.akamai.com/property-mgr/reference/get-properties) refers to as an `assetId`. Note there\u2019s a discrepancy between how PAPI and Identity and Access Management refer to `propertyId` values. To learn more, see [Manage access to properties and includes](https://techdocs.akamai.com/iam-api/reference/manage-access-to-properties-and-includes).",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "propertyName": {
                        "description": "Name of the property [created in PAPI](https://techdocs.akamai.com/property-mgr/reference/post-properties), or the `includeName` when [creating an include](https://techdocs.akamai.com/property-mgr/reference/post-includes). To learn more, see [Manage access to properties and includes](https://techdocs.akamai.com/iam-api/reference/manage-access-to-properties-and-includes).",
                        "minLength": 1,
                        "type": "string"
                      },
                      "propertyTypeDescription": {
                        "description": "Identifies the product-type such as `On Demand Media`, `Site`, `Application`, `Live Media Streams`, or `NetStorage`.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "propertyId",
                      "groupId",
                      "groupName",
                      "propertyName",
                      "propertyTypeDescription"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/property-list-item.yaml"
                    }
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-property-list-item.yaml"
                  }
                }
              }
            },
            "description": "The response provides the assets."
          }
        },
        "summary": "List properties or includes",
        "tags": [
          "Assets"
        ]
      }
    },
    "/user-admin/properties/{assetId}": {
      "get": {
        "description": "This operation fetches a property's or include's details. The response returns details for `propertyId` regardless of whether it represent a property or include in PAPI. To learn more, see [Manage access to properties and includes](https://techdocs.akamai.com/iam-api/reference/manage-access-to-properties-and-includes).",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-property"
        },
        "operationId": "get-property",
        "parameters": [{
            "description": "Unique identifier for each group. To get this value, run the [List groups](https://techdocs.akamai.com/iam-api/reference/get-groups) operation.",
            "example": "{{groupId}}",
            "in": "query",
            "name": "groupId",
            "required": true,
            "schema": {
              "example": 32145,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/group-id-req-qp-group-id.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "arlConfigFile": "0rb-internet-company-01.com.xml",
                  "createdBy": "afero@example.com",
                  "createdDate": "2017-07-27T18:11:25.000Z",
                  "groupId": 12345,
                  "groupName": "Sales Team",
                  "modifiedBy": "adevi@example.com",
                  "modifiedDate": "2017-07-27T18:11:25.000Z",
                  "propertyId": 9678999,
                  "propertyName": "0rb-internet-company-01.com"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information about an asset.",
                  "properties": {
                    "arlConfigFile": {
                      "description": "An ARL (Akamai resource locator) configuration file, specifying versions of an object you can't purge using the URL. The `arlConfigFile` is the same as the `propertyName` with an `xml` extension.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The user who created the asset.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the asset was originally created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Unique identifier for each group. It filters down results to properties in the specified group.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "groupName": {
                      "description": "Descriptive label for the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "The user who last edited the asset.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the asset was last updated.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "propertyId": {
                      "description": "Unique identifier for a property or include. This is what [PAPI](https://techdocs.akamai.com/property-mgr/reference/get-properties) refers to as an `assetId`. Note there\u2019s a discrepancy between how PAPI and Identity and Access Management refer to `propertyId` values. To learn more, see [Manage access to properties and includes](https://techdocs.akamai.com/iam-api/reference/manage-access-to-properties-and-includes).",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "propertyName": {
                      "description": "Name of the property [created in PAPI](https://techdocs.akamai.com/property-mgr/reference/post-properties), or the `includeName` when [creating an include](https://techdocs.akamai.com/property-mgr/reference/post-includes). To learn more, see [Manage access to properties and includes](https://techdocs.akamai.com/iam-api/reference/manage-access-to-properties-and-includes).",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "createdDate",
                    "createdBy",
                    "modifiedDate",
                    "modifiedBy",
                    "groupName",
                    "groupId",
                    "arlConfigFile",
                    "propertyId",
                    "propertyName"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/property-response.yaml"
                  }
                }
              }
            },
            "description": "The response provides the asset's details."
          }
        },
        "summary": "Get a property or include",
        "tags": [
          "Assets"
        ]
      },
      "put": {
        "description": "This operation moves a property or include from one group to another group. You can only move an asset into another group within the same group hierarchy. Depending on your role in the destination group, you may lose access to resources the asset uses. Before moving an asset, run the [List users affected by moving a group](https://techdocs.akamai.com/iam-api/reference/get-move-affected-users) operation to review which users will be affected by the move.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/put-property"
        },
        "operationId": "put-property",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "destinationGroupId": 22222,
                "sourceGroupId": 11111
              },
              "schema": {
                "additionalProperties": false,
                "description": "Describes the request body for moving a property under another group.",
                "properties": {
                  "destinationGroupId": {
                    "description": "Identifies the group where you want to move the `sourceGroupId` within the same parent hierarchy. To get this value, run the [List groups](https://techdocs.akamai.com/iam-api/reference/get-groups) operation.",
                    "example": "{{destinationGroupId}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "sourceGroupId": {
                    "description": "Identifies the group from which you want to move the asset. To get this value, run the [List properties or includes](https://techdocs.akamai.com/iam-api/reference/get-properties) operation.",
                    "example": "{{sourceGroupId}}",
                    "minimum": 0,
                    "type": "integer"
                  }
                },
                "required": [
                  "sourceGroupId",
                  "destinationGroupId"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/move-property-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "content": {},
            "description": "Asset successfully moved."
          }
        },
        "summary": "Move a property or include",
        "tags": [
          "Assets"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each asset, either a property or an include. To get this value, run the [List properties or includes](https://techdocs.akamai.com/iam-api/reference/get-properties) operation.",
        "example": "{{assetId}}",
        "in": "path",
        "name": "assetId",
        "required": true,
        "schema": {
          "example": 9678999,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/asset-id-path.yaml"
        }
      }]
    },
    "/user-admin/properties/{assetId}/resources": {
      "get": {
        "description": "This operation lists resources a property or include uses to deliver your web content across Akamai's edge network. You can think of these resources as objects, like CP codes and configuration files. For example, an ARL (Akamai resource locator) configuration file specifies how Akamai purges versions of an object that you can\u2019t purge using just the URL.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-property-resources"
        },
        "operationId": "get-property-resources",
        "parameters": [{
            "description": "Unique identifier for each group. To get this value, run the [List groups](https://techdocs.akamai.com/iam-api/reference/get-groups) operation.",
            "example": "{{groupId}}",
            "in": "query",
            "name": "groupId",
            "required": true,
            "schema": {
              "example": 32145,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/group-id-req-qp-group-id.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                    "modifiedDate": "2017-09-07T17:00:58.000Z",
                    "resourceId": 111111,
                    "resourceName": "0rb-internet-company-01.com.xml",
                    "resourceType": "arlfile"
                  },
                  {
                    "modifiedDate": "2017-04-24T16:19:27.000Z",
                    "resourceId": 8988898,
                    "resourceName": "mycpcode(123456)",
                    "resourceType": "cpcode"
                  }
                ],
                "schema": {
                  "description": "Encapsulates information about resources.",
                  "items": {
                    "additionalProperties": false,
                    "description": "Encapsulates information about resources.",
                    "properties": {
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the resource was last updated.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "resourceId": {
                        "description": "Unique identifier for each resource.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "resourceName": {
                        "description": "Descriptive label for the resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "resourceType": {
                        "description": "Helps to characterize a asset's resource, either `cname`, `arlfile`, `cpcode`, `storagegroup`, `fpdomain`, or `edns`. For more information, see [View property details](https://techdocs.akamai.com/iam/docs/mng-properties).",
                        "enum": [
                          "enable",
                          "arlfile",
                          "cpcode",
                          "storagegroup",
                          "fpdomain",
                          "edns"
                        ],
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "resourceId",
                      "resourceType",
                      "resourceName",
                      "modifiedDate"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/resource-item.yaml"
                    }
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-resource-item.yaml"
                  }
                }
              }
            },
            "description": "The response provides the resources."
          }
        },
        "summary": "Get asset's resources",
        "tags": [
          "Resources"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each asset, either a property or an include. To get this value, run the [List properties or includes](https://techdocs.akamai.com/iam-api/reference/get-properties) operation.",
        "example": "{{assetId}}",
        "in": "path",
        "name": "assetId",
        "required": true,
        "schema": {
          "example": 9678999,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/asset-id-path.yaml"
        }
      }]
    },
    "/user-admin/properties/{assetId}/users": {
      "get": {
        "description": "This operation lists users who can access a property or include.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-property-users"
        },
        "operationId": "get-property-users",
        "parameters": [{
            "description": "__Enum__ Filters the list by users who have `lostAccess` or the reverse `gainAccess`.",
            "example": "{{userType}}",
            "in": "query",
            "name": "userType",
            "schema": {
              "enum": [
                "lostAccess",
                "gainAccess"
              ],
              "example": "lostAccess",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/user-type-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                    "firstName": "Media",
                    "isBlocked": true,
                    "lastName": "QA",
                    "uiIdentityId": "B-3-146FAB9",
                    "uiUserName": "szhang"
                  },
                  {
                    "firstName": "Bert",
                    "isBlocked": false,
                    "lastName": "Moody",
                    "uiIdentityId": "B-C-IP9IND",
                    "uiUserName": "mrossi"
                  }
                ],
                "schema": {
                  "description": "Encapsulates all the users of a property by property ID.",
                  "items": {
                    "additionalProperties": false,
                    "description": "Encapsulates all the users of a property by property ID.",
                    "properties": {
                      "firstName": {
                        "description": "The user's first name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "isBlocked": {
                        "description": "Whether a user's access to an asset is blocked.",
                        "type": "boolean"
                      },
                      "lastName": {
                        "description": "The user's surname.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "uiIdentityId": {
                        "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "uiUserName": {
                        "description": "The user's username in Control Center.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "uiUserName",
                      "uiIdentityId",
                      "firstName",
                      "lastName",
                      "isBlocked"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/user-property-id.yaml"
                    }
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/users-of-property-response.yaml"
                  }
                }
              }
            },
            "description": "The response provides the users accessing the property or include."
          }
        },
        "summary": "List users for property or include",
        "tags": [
          "Assets"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each asset, either a property or an include. To get this value, run the [List properties or includes](https://techdocs.akamai.com/iam-api/reference/get-properties) operation.",
        "example": "{{assetId}}",
        "in": "path",
        "name": "assetId",
        "required": true,
        "schema": {
          "example": 9678999,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/asset-id-path.yaml"
        }
      }]
    },
    "/user-admin/properties/{assetId}/users/block": {
      "put": {
        "description": "This operation blocks the users on a property or include.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/put-property-users-block"
        },
        "operationId": "put-property-users-block",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": [{
                  "uiIdentityId": "B-3-146FAB9"
                },
                {
                  "uiIdentityId": "B-C-IP9IND"
                }
              ],
              "schema": {
                "description": "Encapsulates all the users who needs to be blocked based on UI identities.",
                "items": {
                  "additionalProperties": false,
                  "description": "Encapsulates all the users who needs to be blocked based on UI identities.",
                  "properties": {
                    "uiIdentityId": {
                      "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs. To get this value, run the [List users for property or include](https://techdocs.akamai.com/iam-api/reference/get-property-users) operation.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "uiIdentityId"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/user-block-uiidentities.yaml"
                  }
                },
                "minItems": 0,
                "type": "array",
                "x-akamai": {
                  "file-path": "schemas/users-block-uiidentities.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                    "firstName": "Media",
                    "isBlocked": true,
                    "lastName": "QA",
                    "uiIdentityId": "B-3-146FAB9",
                    "uiUserName": "szhang"
                  },
                  {
                    "firstName": "Bert",
                    "isBlocked": false,
                    "lastName": "Moody",
                    "uiIdentityId": "B-C-IP9IND",
                    "uiUserName": "mrossi"
                  }
                ],
                "schema": {
                  "description": "Encapsulates all the users of a property by property ID.",
                  "items": {
                    "additionalProperties": false,
                    "description": "Encapsulates all the users of a property by property ID.",
                    "properties": {
                      "firstName": {
                        "description": "The user's first name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "isBlocked": {
                        "description": "Whether a user's access to an asset is blocked.",
                        "type": "boolean"
                      },
                      "lastName": {
                        "description": "The user's surname.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "uiIdentityId": {
                        "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "uiUserName": {
                        "description": "The user's username in Control Center.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "uiUserName",
                      "uiIdentityId",
                      "firstName",
                      "lastName",
                      "isBlocked"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/user-property-id.yaml"
                    }
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/users-of-property-response.yaml"
                  }
                }
              }
            },
            "description": "The response provides the users blocked from the asset."
          }
        },
        "summary": "Block users from a property or include",
        "tags": [
          "Assets"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each asset, either a property or an include. To get this value, run the [List properties or includes](https://techdocs.akamai.com/iam-api/reference/get-properties) operation.",
        "example": "{{assetId}}",
        "in": "path",
        "name": "assetId",
        "required": true,
        "schema": {
          "example": 9678999,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/asset-id-path.yaml"
        }
      }]
    },
    "/user-admin/roles": {
      "post": {
        "description": "This operation creates a custom role. A custom role combines [grantable roles](https://techdocs.akamai.com/iam-api/reference/get-grantable-roles) defined by Akamai. Roles exist at the account level regardless of group, but are constrained by contract type. If you create a role under one contract type, you can't apply that role to groups belonging to a different contract type, even if they're in the same account.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/post-role"
        },
        "operationId": "post-role",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "grantedRoles": [{
                  "grantedRoleId": 2051
                }],
                "roleDescription": "This role lets users edit or create reports.",
                "roleName": "Edit Reports"
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "grantedRoles": {
                    "description": "Granted roles for the account.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "grantedRoleId": {
                          "description": "Unique identifier for the grantable role. To get this value, run the [List grantable roles](https://techdocs.akamai.com/iam-api/reference/get-grantable-roles) operation.",
                          "minimum": 1,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "grantedRoleId"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "roleDescription": {
                    "description": "Descriptive label for the role to convey its use.",
                    "example": "{{roleDescription}}",
                    "maxLength": 250,
                    "minLength": 1,
                    "type": "string"
                  },
                  "roleName": {
                    "description": "Descriptive label for the role.",
                    "example": "{{roleName}}",
                    "maxLength": 70,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "roleName",
                  "roleDescription",
                  "grantedRoles"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/role-request-post.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "actions": {
                    "delete": true,
                    "edit": true
                  },
                  "createdBy": "alfulani",
                  "createdDate": "2017-09-11T13:43:54.005Z",
                  "grantedRoles": [{
                    "grantedRoleDescription": "View Real User Monitoring",
                    "grantedRoleId": 1234,
                    "grantedRoleName": "RealUserMonitoring - View Only"
                  }],
                  "modifiedBy": "mrossi",
                  "modifiedDate": "2017-09-11T13:43:54.005Z",
                  "roleDescription": "Provides users with edit and create access to reports.",
                  "roleId": 12345678,
                  "roleName": "Edit Role",
                  "type": "custom",
                  "users": [{
                    "accountId": "A-CCT5678",
                    "email": "jsmith@example.com",
                    "firstName": "John",
                    "lastLoginDate": "2016-01-13T17:53:57Z",
                    "lastName": "Smith",
                    "uiIdentityId": "A-B-12345"
                  }]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "A role that includes granted roles.",
                  "properties": {
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies activities available for the role.",
                      "properties": {
                        "delete": {
                          "description": "Whether you can remove the role.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether you can modify the role.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "edit"
                      ],
                      "type": "object"
                    },
                    "createdBy": {
                      "description": "The user who created the granted role.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the granted role was originally created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "grantedRoles": {
                      "description": "Granted roles for the account.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "grantedRoleDescription": {
                            "description": "Descriptive label for the role to convey its use.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "grantedRoleId": {
                            "description": "Unique identifier for each granted role.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "grantedRoleName": {
                            "description": "Descriptive label for the granted role.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "grantedRoleId",
                          "grantedRoleName"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "modifiedBy": {
                      "description": "The user who last edited the granted role.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the granted role was last updated.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "roleDescription": {
                      "description": "Descriptive label for the role to convey its use.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "roleId": {
                      "description": "Unique identifier for each role.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "roleName": {
                      "description": "Descriptive label for the role.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Whether it's a `standard` or `account` role defined by Akamai, or a `custom` role created by one of your account's users. You can only modify or delete `custom` roles. To learn more, see [About roles](https://techdocs.akamai.com/iam/docs/about-roles-permissions).",
                      "enum": [
                        "custom",
                        "standard",
                        "account"
                      ],
                      "type": "string"
                    },
                    "users": {
                      "description": "Users on the account who share the same role.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "accountId": {
                            "description": "Unique identifier for each account.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "email": {
                            "description": "The user's email address.",
                            "format": "email",
                            "type": "string"
                          },
                          "firstName": {
                            "description": "The user's first name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "lastLoginDate": {
                            "description": "ISO 8601 timestamp indicating when the user last logged in.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "lastName": {
                            "description": "The user's surname.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uiIdentityId": {
                            "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "uiIdentityId",
                          "firstName",
                          "lastName",
                          "accountId",
                          "email"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    }
                  },
                  "required": [
                    "roleId",
                    "roleName",
                    "roleDescription",
                    "type",
                    "createdDate",
                    "createdBy",
                    "modifiedDate",
                    "modifiedBy"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/role-with-granted-roles.yaml"
                  }
                }
              }
            },
            "description": "Custom role successfully created.",
            "headers": {
              "Location": {
                "description": "A URL path to the newly created object.",
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/Location.yaml"
                }
              }
            }
          }
        },
        "summary": "Create a role",
        "tags": [
          "Roles"
        ]
      },
      "get": {
        "description": "This operation lists roles for the current account and contract type or other accounts using the `accountSwitchKey` parameter. The account and contract type are determined by the access tokens in your API client.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-roles"
        },
        "operationId": "get-roles",
        "parameters": [{
            "description": "Includes information about actions such as `edit` or `delete` that you can take for the object, `false` by default. Don't confuse this with the `action` parameter, which applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-api/reference/put-user-profile-tfa) operation.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/roles-filter-params-actions-actions.yaml"
            }
          },
          {
            "description": "Filters roles for a specific group. To get this value, run the [List groups](https://techdocs.akamai.com/iam-api/reference/get-groups) operation.",
            "example": "{{groupId}}",
            "in": "query",
            "name": "groupId",
            "required": false,
            "schema": {
              "example": 12345,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/roles-filter-params-group-group-id.yaml"
            }
          },
          {
            "description": "Returns users assigned to the roles, `false` by default.",
            "example": "{{users}}",
            "in": "query",
            "name": "users",
            "required": false,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/roles-filter-params-users-users.yaml"
            }
          },
          {
            "description": "Returns all the roles for the current account, ignoring the contract type of your API client, `false` by default.",
            "example": "{{ignoreContext}}",
            "in": "query",
            "name": "ignoreContext",
            "required": false,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/roles-filter-params-context-ignore-context.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                    "actions": {
                      "delete": false,
                      "edit": false
                    },
                    "createdBy": "hgildong",
                    "createdDate": "2023-07-27T18:11:25.000Z",
                    "modifiedBy": "szhang",
                    "modifiedDate": "2023-07-27T18:11:25.000Z",
                    "numUsers": 2,
                    "roleDescription": "This role allows for 'read only'",
                    "roleId": 13,
                    "roleName": "Accounting",
                    "type": "standard",
                    "users": [{
                        "accountId": "A-CCT3456",
                        "email": "jsmith@example.com",
                        "firstName": "John",
                        "lastLoginDate": "2017-08-03T21:15:27.000Z",
                        "lastName": "Smith",
                        "uiIdentityId": "A-B-1BCDEF"
                      },
                      {
                        "accountId": "A-CCT1234",
                        "email": "jkowalski@example.com",
                        "firstName": "Jan",
                        "lastLoginDate": "2016-09-07T00:00:00.000Z",
                        "lastName": "Kowalski",
                        "uiIdentityId": "1-ABCDE"
                      }
                    ]
                  },
                  {
                    "actions": {
                      "delete": false,
                      "edit": false
                    },
                    "createdBy": "hgildong",
                    "createdDate": "2023-07-27T18:11:25.000Z",
                    "modifiedBy": "szhang",
                    "modifiedDate": "2023-07-27T18:11:25.000Z",
                    "numUsers": 1,
                    "roleDescription": "Users with this role can manage account settings in Identity and Access management application",
                    "roleId": 100004,
                    "roleName": "Admin for Account Settings",
                    "type": "account",
                    "users": [{
                      "accountId": "A-CCT3456",
                      "email": "jsmith@example.com",
                      "firstName": "John",
                      "lastLoginDate": "2017-08-03T21:15:27.000Z",
                      "lastName": "Smith",
                      "uiIdentityId": "A-B-1BCDEF"
                    }]
                  }
                ],
                "schema": {
                  "description": "Encapsulates information about various roles.",
                  "items": {
                    "additionalProperties": false,
                    "description": "Encapsulates information about multiple roles.",
                    "properties": {
                      "actions": {
                        "additionalProperties": false,
                        "description": "Specifies activities available for the role.",
                        "properties": {
                          "delete": {
                            "description": "Whether you can remove the role from the account. You can't remove a group that contains resources or subgroups, or if users have roles on that group.",
                            "type": "boolean"
                          },
                          "edit": {
                            "description": "Whether you can modify the role.",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "delete",
                          "edit"
                        ],
                        "type": "object"
                      },
                      "createdBy": {
                        "description": "The user who created the role.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the role was originally created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "modifiedBy": {
                        "description": "The user who last edited the role.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the role was last updated.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "numUsers": {
                        "description": "The number of users who have the role.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "roleDescription": {
                        "description": "Descriptive label for the role to convey its use.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "roleId": {
                        "description": "Unique identifier for each role.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "roleName": {
                        "description": "Descriptive label for the role.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "type": {
                        "description": "Whether it's a `standard` or `account` role defined by Akamai, or a `custom` role created by one of your account's users. You can only modify or delete `custom` roles. To learn more, see [About roles](https://techdocs.akamai.com/iam/docs/about-roles-permissions).",
                        "enum": [
                          "custom",
                          "standard",
                          "account"
                        ],
                        "type": "string"
                      },
                      "users": {
                        "description": "User details. They appear only when you set the `users` query parameter to `true`.",
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "accountId": {
                              "description": "Unique identifier for each account.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "email": {
                              "description": "The user's email address.",
                              "format": "email",
                              "type": "string"
                            },
                            "firstName": {
                              "description": "The user's first name.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "lastLoginDate": {
                              "description": "ISO 8601 timestamp indicating when the user last logged in.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "lastName": {
                              "description": "The user's surname.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "uiIdentityId": {
                              "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "required": [
                            "uiIdentityId",
                            "firstName",
                            "lastName",
                            "accountId",
                            "email",
                            "lastLoginDate"
                          ],
                          "type": "object"
                        },
                        "minItems": 0,
                        "type": "array"
                      }
                    },
                    "required": [
                      "type",
                      "roleId",
                      "roleName",
                      "roleDescription"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/role-list-item.yaml"
                    }
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-role-list-item.yaml"
                  }
                }
              }
            },
            "description": "The response provides the roles for the account."
          }
        },
        "summary": "List roles",
        "tags": [
          "Roles"
        ]
      }
    },
    "/user-admin/roles/grantable-roles": {
      "get": {
        "description": "This operation lists the grantable roles you can include in a new custom role, or add to an existing custom role.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-grantable-roles"
        },
        "operationId": "get-grantable-roles",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                    "grantedRoleDescription": "WAF Strict WhiteList",
                    "grantedRoleId": 2051,
                    "grantedRoleName": "WAF Strict WhiteList"
                  },
                  {
                    "grantedRoleDescription": "Manage License Delivery Configurations",
                    "grantedRoleId": 1032,
                    "grantedRoleName": "License Delivery Configurations - Manage"
                  },
                  {
                    "grantedRoleDescription": "View Audience Analytics Reports",
                    "grantedRoleId": 2063,
                    "grantedRoleName": "View Audience Analytics Reports"
                  },
                  {
                    "grantedRoleDescription": "View Real User Monitoring",
                    "grantedRoleId": 77852,
                    "grantedRoleName": "RealUserMonitoring - View Only"
                  },
                  {
                    "grantedRoleDescription": "Add/Edit/View Enhanced DNS - All privileges",
                    "grantedRoleId": 32,
                    "grantedRoleName": "Enhanced DNS - All privileges (add/edit/view)"
                  }
                ],
                "schema": {
                  "description": "Lists grantable roles.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "grantedRoleDescription": {
                        "description": "Descriptive label for the role to convey its use.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "grantedRoleId": {
                        "description": "Unique identifier for each granted role.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "grantedRoleName": {
                        "description": "Descriptive label for the granted role.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "grantedRoleId",
                      "grantedRoleName",
                      "grantedRoleDescription"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/granted-role.yaml"
                    }
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-granted-role.yaml"
                  }
                }
              }
            },
            "description": "The response provides grantable roles."
          }
        },
        "summary": "List grantable roles",
        "tags": [
          "Grantable roles"
        ]
      }
    },
    "/user-admin/roles/{roleId}": {
      "get": {
        "description": "This operation retrieves a role's details.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-role"
        },
        "operationId": "get-role",
        "parameters": [{
            "description": "Includes information about actions such as `edit` or `delete` that you can take for the object, `false` by default. Don't confuse this with the `action` parameter, which applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-api/reference/put-user-profile-tfa) operation.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/roles-filter-params-actions-actions.yaml"
            }
          },
          {
            "description": "Lists granted roles assigned for a role, `false` by default.",
            "example": "{{grantedRoles}}",
            "in": "query",
            "name": "grantedRoles",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/granted-roles-granted-roles.yaml"
            }
          },
          {
            "description": "Returns users assigned to the roles, `false` by default.",
            "example": "{{users}}",
            "in": "query",
            "name": "users",
            "required": false,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/roles-filter-params-users-users.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "actions": {
                    "delete": false,
                    "edit": false
                  },
                  "createdBy": "afero@example.com",
                  "createdDate": "2017-07-27T18:11:25.000Z",
                  "grantedRoles": [{
                    "grantedRoleDescription": "Security View Only",
                    "grantedRoleId": 12345,
                    "grantedRoleName": "SecurityViewOnly"
                  }],
                  "modifiedBy": "asingh@example.com",
                  "modifiedDate": "2017-07-27T18:11:25.000Z",
                  "roleDescription": "This role will allow you to look at the security reports",
                  "roleId": 123456,
                  "roleName": "Security View Only",
                  "type": "custom",
                  "users": [{
                      "accountId": "A-CCT9012",
                      "email": "jsmith@example.com",
                      "firstName": "John",
                      "lastLoginDate": "2017-08-03T21:15:27.000Z",
                      "lastName": "Smith",
                      "uiIdentityId": "A-B-12345"
                    },
                    {
                      "accountId": "A-CCT1234",
                      "email": "jkowalski@example.com",
                      "firstName": "Jan",
                      "lastLoginDate": "2016-09-07T00:00:00.000Z",
                      "lastName": "Kowalski",
                      "uiIdentityId": "1-2ABCD"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "A role that includes granted roles.",
                  "properties": {
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies activities available for the role.",
                      "properties": {
                        "delete": {
                          "description": "Whether you can remove the role.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether you can modify the role.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "edit"
                      ],
                      "type": "object"
                    },
                    "createdBy": {
                      "description": "The user who created the granted role.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the granted role was originally created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "grantedRoles": {
                      "description": "Granted roles for the account.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "grantedRoleDescription": {
                            "description": "Descriptive label for the role to convey its use.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "grantedRoleId": {
                            "description": "Unique identifier for each granted role.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "grantedRoleName": {
                            "description": "Descriptive label for the granted role.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "grantedRoleId",
                          "grantedRoleName"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "modifiedBy": {
                      "description": "The user who last edited the granted role.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the granted role was last updated.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "roleDescription": {
                      "description": "Descriptive label for the role to convey its use.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "roleId": {
                      "description": "Unique identifier for each role.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "roleName": {
                      "description": "Descriptive label for the role.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Whether it's a `standard` or `account` role defined by Akamai, or a `custom` role created by one of your account's users. You can only modify or delete `custom` roles. To learn more, see [About roles](https://techdocs.akamai.com/iam/docs/about-roles-permissions).",
                      "enum": [
                        "custom",
                        "standard",
                        "account"
                      ],
                      "type": "string"
                    },
                    "users": {
                      "description": "Users on the account who share the same role.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "accountId": {
                            "description": "Unique identifier for each account.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "email": {
                            "description": "The user's email address.",
                            "format": "email",
                            "type": "string"
                          },
                          "firstName": {
                            "description": "The user's first name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "lastLoginDate": {
                            "description": "ISO 8601 timestamp indicating when the user last logged in.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "lastName": {
                            "description": "The user's surname.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uiIdentityId": {
                            "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "uiIdentityId",
                          "firstName",
                          "lastName",
                          "accountId",
                          "email"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    }
                  },
                  "required": [
                    "roleId",
                    "roleName",
                    "roleDescription",
                    "type",
                    "createdDate",
                    "createdBy",
                    "modifiedDate",
                    "modifiedBy"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/role-with-granted-roles.yaml"
                  }
                }
              }
            },
            "description": "The response provides the role's details."
          }
        },
        "summary": "Get a role",
        "tags": [
          "Roles"
        ]
      },
      "put": {
        "description": "This operation adds or removes a role's group role assignments, along with other data such as name and description. When you modify a role, those changes affect existing API clients. Review all API clients belonging to the user before modifying a role.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/put-role"
        },
        "operationId": "put-role",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "grantedRoles": [{
                  "grantedRoleId": 2063
                }],
                "roleDescription": "Provides users with edit and create access to reports.",
                "roleName": "Edit Reports"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Add or remove role assignments. When you modify a role, those changes affect existing API clients. Review all API clients belonging to the user before modifying a role.",
                "properties": {
                  "grantedRoles": {
                    "description": "Granted roles for the account.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "grantedRoleId": {
                          "description": "Unique identifier for the grantable role. To get this value, run the [List grantable roles](https://techdocs.akamai.com/iam-api/reference/get-grantable-roles) operation.",
                          "minimum": 1,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "grantedRoleId"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "roleDescription": {
                    "description": "Descriptive label for the role to convey its use.",
                    "example": "{{roleDescription}}",
                    "maxLength": 250,
                    "minLength": 1,
                    "type": "string"
                  },
                  "roleName": {
                    "description": "Descriptive label for the role.",
                    "example": "{{roleName}}",
                    "maxLength": 70,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/role-request-put.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "actions": {
                    "delete": true,
                    "edit": true
                  },
                  "createdBy": "alfulani",
                  "createdDate": "2017-09-11T13:43:54.000Z",
                  "grantedRoles": [{
                    "grantedRoleDescription": "View Audience Analytics Reports",
                    "grantedRoleId": 2063,
                    "grantedRoleName": "View Audience Analytics Reports"
                  }],
                  "modifiedBy": "adevi",
                  "modifiedDate": "2017-09-11T13:47:32.000Z",
                  "roleDescription": "This role lets users edit and create reports.",
                  "roleId": 100645,
                  "roleName": "Edit Reports",
                  "type": "custom"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "A role that includes granted roles.",
                  "properties": {
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies activities available for the group.",
                      "properties": {
                        "delete": {
                          "description": "Whether you can remove items from the group.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether you can modify items in the group.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "edit"
                      ],
                      "type": "object"
                    },
                    "createdBy": {
                      "description": "The user who created the granted role.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the granted role was originally created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "grantedRoles": {
                      "description": "Granted roles for the account.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "grantedRoleDescription": {
                            "description": "Descriptive label for the role to convey its use.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "grantedRoleId": {
                            "description": "Unique identifier for each granted role.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "grantedRoleName": {
                            "description": "Descriptive label for the granted role.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "grantedRoleId",
                          "grantedRoleName"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "modifiedBy": {
                      "description": "The user who last edited the granted role.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the granted role was last updated.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "roleDescription": {
                      "description": "Descriptive label for the role to convey its use.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "roleId": {
                      "description": "Unique identifier for each role.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "roleName": {
                      "description": "Descriptive label for the role.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Whether it's a `standard` or `account` role defined by Akamai, or a `custom` role created by one of your account's users. You can only modify or delete `custom` roles. To learn more, see [About roles](https://techdocs.akamai.com/iam/docs/about-roles-permissions).",
                      "enum": [
                        "custom",
                        "standard",
                        "account"
                      ],
                      "type": "string"
                    },
                    "users": {
                      "description": "Users on the account who share the same role.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "accountId": {
                            "description": "Unique identifier for each account.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "email": {
                            "description": "The user's email address.",
                            "format": "email",
                            "type": "string"
                          },
                          "firstName": {
                            "description": "The user's first name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "lastLoginDate": {
                            "description": "ISO 8601 timestamp indicating when the user last logged in.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "lastName": {
                            "description": "The user's surname.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uiIdentityId": {
                            "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "uiIdentityId",
                          "firstName",
                          "lastName",
                          "accountId",
                          "email"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    }
                  },
                  "required": [
                    "roleId",
                    "roleName",
                    "roleDescription",
                    "type",
                    "createdDate",
                    "createdBy",
                    "modifiedDate",
                    "modifiedBy"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/Role.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the modified role."
          }
        },
        "summary": "Edit a role",
        "tags": [
          "Roles"
        ]
      },
      "delete": {
        "description": "This operation deletes a custom role. You can't delete a role if it's assigned to a user.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/delete-role"
        },
        "operationId": "delete-role",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "204": {
            "content": {},
            "description": "Role deleted."
          }
        },
        "summary": "Delete a role",
        "tags": [
          "Roles"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each role. To get this value, run the [List roles](https://techdocs.akamai.com/iam-api/reference/get-roles) operation.",
        "example": "{{roleId}}",
        "in": "path",
        "name": "roleId",
        "required": true,
        "schema": {
          "example": 45678,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/role-id-path.yaml"
        }
      }]
    },
    "/user-admin/ui-identities": {
      "post": {
        "description": "This operation creates a user, or clones an existing user's role assignments, in the account specified in your API client credentials. Optionally, sends a randomly generated one-time use password to the new user. If you send the email with the password directly to the user, the response for this operation doesn't include that password. If you don't send the password to the user through email, the password is included in the response.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/post-ui-identity"
        },
        "operationId": "post-ui-identity",
        "parameters": [{
            "description": "Sends a one-time password to the new user, `true` by default.",
            "example": "{{sendEmail}}",
            "in": "query",
            "name": "sendEmail",
            "schema": {
              "default": true,
              "example": false,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/send-email.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "additionalAuthentication": "TFA",
                "address": "first Street",
                "authGrants": [{
                    "groupId": 12345,
                    "groupName": "High Street Company",
                    "roleDescription": "Provides users with the maximum access to users.",
                    "roleId": 3,
                    "roleName": "Admin",
                    "subGroups": [{
                      "groupId": 54321,
                      "groupName": "Internet Company",
                      "subGroups": [{
                        "groupId": 12345,
                        "groupName": "Digital Company"
                      }]
                    }]
                  },
                  {
                    "roleId": 100004,
                    "roleName": "Admin for Account Settings"
                  }
                ],
                "city": "Santa Clara",
                "contactType": "Billing",
                "country": "USA",
                "email": "jsmith@example.com",
                "firstName": "John",
                "jobTitle": "Engineer",
                "lastName": "Smith",
                "mobilePhone": "3456787657",
                "notifications": {
                  "options": {
                    "apiClientCredentialExpiryNotification": true,
                    "newUserNotification": true,
                    "passwordExpiry": true,
                    "upgrade": [
                      "NetStorage",
                      "Other Upgrade Notifications (Planned)"
                    ]
                  },
                  "enableEmailNotifications": true
                },
                "phone": "(123) 321-1234",
                "preferredLanguage": "English",
                "secondaryEmail": "john-smith@example.com",
                "sessionTimeOut": 64800,
                "state": "CA",
                "timeZone": "GMT",
                "zipCode": "34567"
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "additionalAuthentication": {
                    "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.",
                    "enum": [
                      "TFA",
                      "MFA",
                      "NONE"
                    ],
                    "example": "{{additionalAuthentication}}",
                    "type": "string"
                  },
                  "address": {
                    "description": "The user's street address.",
                    "example": "{{address}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "authGrants": {
                    "description": "The user's role assignments, per group. The user needs to have at least one group role assigned. Account level roles are optional. Provide either this or the `cloneFrom`.",
                    "items": {
                      "oneOf": [{
                          "additionalProperties": false,
                          "description": "The user's role assignments, per group. Provide either this or the `cloneFrom`.",
                          "properties": {
                            "groupId": {
                              "description": "Unique identifier for each group. To get this value, run the [List groups](https://techdocs.akamai.com/iam-api/reference/get-groups) operation.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "groupName": {
                              "description": "Descriptive label for the group.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "isBlocked": {
                              "description": "Blocks a user's access to a group.",
                              "type": "boolean"
                            },
                            "roleDescription": {
                              "description": "Descriptive label for the role to convey its use.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "roleId": {
                              "description": "Unique identifier for each role. To get this value, run the [List roles](https://techdocs.akamai.com/iam-api/reference/get-roles) operation. You need to assign at least one role to a user. Setting the value to `null` in POST leaves the default role: either unassigned or cascaded from a parent group. For `PUT`, it clears the current assignment and reverts it to the default role.",
                              "minimum": 1,
                              "nullable": true,
                              "type": "integer"
                            },
                            "roleName": {
                              "description": "Descriptive label for the role.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "subGroups": {
                              "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "groupId": {
                                    "description": "Unique identifier for each group.",
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  "groupName": {
                                    "description": "Descriptive label for the group.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "isBlocked": {
                                    "description": "Blocks a user's access to a group.",
                                    "type": "boolean"
                                  },
                                  "roleId": {
                                    "description": "Unique identifier for each role. To get this value, run the [List roles](https://techdocs.akamai.com/iam-api/reference/get-roles) operation. You need to assign at least one role to a user. Setting the value to `null` in POST leaves the default role: either unassigned or cascaded from a parent group. For `PUT`, it clears the current assignment and reverts it to the default role.",
                                    "minimum": 1,
                                    "nullable": true,
                                    "type": "integer"
                                  },
                                  "subGroups": {
                                    "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                                    "items": {
                                      "additionalProperties": true,
                                      "description": "A further nested authorization grant.",
                                      "properties": {},
                                      "type": "object",
                                      "x-akamai": {
                                        "file-path": "schemas/auth-grant-request-nested.yaml"
                                      }
                                    },
                                    "minItems": 0,
                                    "type": "array"
                                  }
                                },
                                "type": "object",
                                "x-akamai": {
                                  "file-path": "schemas/auth-grant-request-definitions.yaml"
                                }
                              },
                              "minItems": 0,
                              "type": "array"
                            }
                          },
                          "required": [
                            "roleId",
                            "groupId"
                          ],
                          "title": "Group role",
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/auth-grant-request-group-role.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "The user's account level role assignments.",
                          "properties": {
                            "roleDescription": {
                              "description": "Descriptive label for the role to convey its use.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "roleId": {
                              "description": "Unique identifier for each role. To get this value, run the [List roles](https://techdocs.akamai.com/iam-api/reference/get-roles) operation and look for roles with the `account` type.",
                              "minimum": 1,
                              "type": "integer"
                            },
                            "roleName": {
                              "description": "Descriptive label for the role.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "required": [
                            "roleId"
                          ],
                          "title": "Account level role",
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/auth-grant-request-account-role.yaml"
                          }
                        }
                      ]
                    },
                    "type": "array"
                  },
                  "city": {
                    "description": "The user's city.",
                    "example": "{{city}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "cloneFrom": {
                    "description": "The username to clone a user's `authGrants` from. Provide either this or the `authGrants`.",
                    "example": "{{cloneFrom}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "contactType": {
                    "description": "User's contact type. To get the available values, run the [View contact types](https://techdocs.akamai.com/iam-api/reference/get-common-contact-types) operation.",
                    "example": "{{contactType}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "country": {
                    "description": "User's country. To get the available values, run the [View supported countries](https://techdocs.akamai.com/iam-api/reference/get-common-countries) operation.",
                    "example": "{{country}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "email": {
                    "description": "The user's email address. It needs to be a valid email address users can access, as they'll be sent a OTP to enter while logging in for the first time. To learn more, see [Frequently asked questions](https://techdocs.akamai.com/iam/docs/frequently-asked-questions-gss#why-am-i-asked-to-enter-a-code-while-logging-in).",
                    "example": "{{email}}",
                    "format": "email",
                    "type": "string"
                  },
                  "firstName": {
                    "description": "The user's first name.",
                    "example": "{{firstName}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "jobTitle": {
                    "description": "The user's position at the company.",
                    "example": "{{jobTitle}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "lastName": {
                    "description": "The user's surname.",
                    "example": "{{lastName}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "mobilePhone": {
                    "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`. For example, `+3551234567891` or `+441234567891`. For Canadian and US phone numbers, you can provide them with a country code (for example, `+11234567891`) or without it as a ten-digit integer within a string (for example, `1234567891`).",
                    "example": "{{mobilePhone}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "notifications": {
                    "additionalProperties": false,
                    "description": "Specifies email notifications the user receives for products.",
                    "properties": {
                      "options": {
                        "additionalProperties": false,
                        "description": "Specifies email notifications settings.",
                        "properties": {
                          "apiClientCredentialExpiryNotification": {
                            "description": "Enables notifications for expiring API client credentials.",
                            "type": "boolean"
                          },
                          "newUserNotification": {
                            "description": "Enables notifications for group administrators when the user creates other new users.",
                            "type": "boolean"
                          },
                          "passwordExpiry": {
                            "description": "Enables notifications for expiring passwords.",
                            "type": "boolean"
                          },
                          "proactive": {
                            "description": "Products for which the user gets notifications for service issues.",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "minItems": 0,
                            "type": "array"
                          },
                          "upgrade": {
                            "description": "Products for which the user receives notifications for upgrades.",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "passwordExpiry",
                          "newUserNotification"
                        ],
                        "type": "object"
                      },
                      "enableEmailNotifications": {
                        "description": "Enables email notifications.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "enableEmailNotifications"
                    ],
                    "type": "object"
                  },
                  "phone": {
                    "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`. For example, `+3551234567891` or `+441234567891`. For Canadian and US phone numbers, you can provide them with a country code (for example, `+11234567891`) or without it as a ten-digit integer within a string (for example, `1234567891`).",
                    "example": "{{phone}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "preferredLanguage": {
                    "description": "The user's language. To get the available values, run the [View languages](https://techdocs.akamai.com/iam-api/reference/get-common-languages) operation.",
                    "example": "{{preferredLanguage}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "secondaryEmail": {
                    "description": "The user's alternate email address.",
                    "example": "{{secondaryEmail}}",
                    "format": "email",
                    "type": "string"
                  },
                  "sessionTimeOut": {
                    "description": "The number of seconds it takes for the user's Control Center session to time out after no activity. To get the available values, run the [View timeout policies](https://techdocs.akamai.com/iam-api/reference/get-common-timeout-policies) operation.",
                    "example": "{{sessionTimeOut}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "state": {
                    "description": "The user's state or province if user's country is USA or Canada. To get the available values, run the [View states for a user profile](https://techdocs.akamai.com/iam-api/reference/get-user-states) operation.",
                    "example": "{{state}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "timeZone": {
                    "description": "The user's time zone. To get the available values, run the [View time zones](https://techdocs.akamai.com/iam-api/reference/get-common-timezones) operation.",
                    "example": "{{timeZone}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "zipCode": {
                    "description": "The user's five-digit postal code, represented as a string.",
                    "example": "{{zipCode}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "email",
                  "country",
                  "authGrants",
                  "additionalAuthentication"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/create-user-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "actions": {
                    "delete": true,
                    "apiClient": true,
                    "edit": true,
                    "isCloneable": true,
                    "resetPassword": true,
                    "thirdPartyAccess": false
                  },
                  "additionalAuthentication": "TFA",
                  "additionalAuthenticationConfigured": false,
                  "address": "first Street",
                  "authGrants": [{
                      "groupId": 12345,
                      "groupName": "Main Street Corporation",
                      "roleDescription": "Provides the maximum access to users.",
                      "roleId": 3,
                      "roleName": "Admin",
                      "subGroups": [{
                        "groupId": 54321,
                        "groupName": "Internet Company",
                        "subGroups": [{
                          "groupId": 54321,
                          "groupName": "Digital Company"
                        }]
                      }]
                    },
                    {
                      "roleId": 100004,
                      "roleName": "Admin for Account Settings"
                    }
                  ],
                  "city": "Santa Clara",
                  "contactType": "Billing",
                  "country": "USA",
                  "email": "jsmith@example.com",
                  "firstName": "John",
                  "lastName": "Smith",
                  "notifications": {
                    "options": {
                      "apiClientCredentialExpiryNotification": true,
                      "newUserNotification": true,
                      "passwordExpiry": true,
                      "proactive": [],
                      "upgrade": [
                        "NetStorage",
                        "Other Upgrade Notifications (Planned)"
                      ]
                    },
                    "enableEmailNotifications": true
                  },
                  "passwordExpiryDate": "2018-05-05T22:38:39.000Z",
                  "phone": "(123) 321-1234",
                  "preferredLanguage": "English",
                  "sessionTimeOut": 64800,
                  "state": "CA",
                  "timeZone": "GMT",
                  "uiIdentityId": "A-BC-1234567",
                  "uiUserName": "john.sith@example.com"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information about each user.",
                  "properties": {
                    "accountId": {
                      "description": "Unique identifier for each account.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-api/reference/put-user-profile-tfa) operation.",
                      "properties": {
                        "delete": {
                          "description": "Whether the user is deletable.",
                          "type": "boolean"
                        },
                        "apiClient": {
                          "description": "Enables the administrator to create an API client.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether the user is editable.",
                          "type": "boolean"
                        },
                        "isCloneable": {
                          "description": "Enables an administrator to create a new user with permissions cloned from this user.",
                          "type": "boolean"
                        },
                        "resetPassword": {
                          "description": "Enables an administrator to send a user a password by email or see a one-time token.",
                          "type": "boolean"
                        },
                        "thirdPartyAccess": {
                          "description": "Enables the administrator to manage extended access.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "edit",
                        "resetPassword",
                        "isCloneable",
                        "thirdPartyAccess",
                        "apiClient"
                      ],
                      "type": "object"
                    },
                    "additionalAuthentication": {
                      "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.",
                      "enum": [
                        "TFA",
                        "MFA",
                        "NONE"
                      ],
                      "type": "string"
                    },
                    "additionalAuthenticationConfigured": {
                      "description": "Whether the user has multi-factor authentication configured.",
                      "type": "boolean"
                    },
                    "address": {
                      "description": "The user's street address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "authGrants": {
                      "description": "A user's role assignments, per group.",
                      "items": {
                        "additionalProperties": false,
                        "description": "A user's role assignments, per group.",
                        "properties": {
                          "groupId": {
                            "description": "Unique identifier for each group. It's returned only for group roles.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "groupName": {
                            "description": "Descriptive label for the group.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "isBlocked": {
                            "description": "Whether a user's access to a group is blocked.",
                            "type": "boolean"
                          },
                          "roleDescription": {
                            "description": "Descriptive label for the role to convey its use.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "roleId": {
                            "description": "Unique identifier for each role.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "roleName": {
                            "description": "Descriptive label for the role.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "subGroups": {
                            "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                            "items": {
                              "additionalProperties": true,
                              "description": "A further nested group.",
                              "properties": {},
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/groups-nested.yaml"
                              }
                            },
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "roleId",
                          "roleName"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/auth-grant-response.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "city": {
                      "description": "The user's city.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "contactType": {
                      "description": "User's contact type.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "country": {
                      "description": "User's country.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "email": {
                      "description": "The user's email address.",
                      "format": "email",
                      "type": "string"
                    },
                    "emailUpdatePending": {
                      "description": "Whether there are any pending changes to the email address.",
                      "type": "boolean"
                    },
                    "firstName": {
                      "description": "The user's first name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "isLocked": {
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).",
                      "type": "boolean"
                    },
                    "jobTitle": {
                      "description": "The user's position at the company.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "lastLoginDate": {
                      "description": "ISO 8601 timestamp indicating when the user last logged in.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastName": {
                      "description": "The user's surname.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mobilePhone": {
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "notifications": {
                      "additionalProperties": false,
                      "description": "Specifies email notifications the user receives for products.",
                      "properties": {
                        "options": {
                          "additionalProperties": false,
                          "description": "Specifies email notifications settings.",
                          "properties": {
                            "apiClientCredentialExpiryNotification": {
                              "description": "Whether the user gets notifications for expiring API client credentials.",
                              "type": "boolean"
                            },
                            "newUserNotification": {
                              "description": "Whether group administrators get notifications when the user creates other new users.",
                              "type": "boolean"
                            },
                            "passwordExpiry": {
                              "description": "Whether the user gets notifications for password expiration.",
                              "type": "boolean"
                            },
                            "proactive": {
                              "description": "Products for which the user gets notifications for service issues.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            },
                            "upgrade": {
                              "description": "Products for which the user receives notifications for upgrades.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            }
                          },
                          "required": [
                            "upgrade",
                            "proactive",
                            "passwordExpiry",
                            "newUserNotification",
                            "apiClientCredentialExpiryNotification"
                          ],
                          "type": "object"
                        },
                        "enableEmailNotifications": {
                          "description": "Enables email notifications.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "options",
                        "enableEmailNotifications"
                      ],
                      "type": "object"
                    },
                    "passwordExpiryDate": {
                      "description": "The date a user's password expires.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "phone": {
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "preferredLanguage": {
                      "description": "The user's language.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "secondaryEmail": {
                      "description": "The user's alternate email address.",
                      "format": "email",
                      "type": "string"
                    },
                    "sessionTimeOut": {
                      "description": "The number of seconds it takes for the user's Control Center session to time out after no activity.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "state": {
                      "description": "The user's state or province if user's country is USA or Canada.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "tfaConfigured": {
                      "description": "Whether TFA is configured.",
                      "type": "boolean"
                    },
                    "tfaEnabled": {
                      "description": "Whether TFA is enabled.",
                      "type": "boolean"
                    },
                    "timeZone": {
                      "description": "The user's time zone. To get the available values, run the [View time zones](https://techdocs.akamai.com/iam-api/reference/get-common-timezones) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uiIdentityId": {
                      "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uiUserName": {
                      "description": "The user's username in Control Center.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "zipCode": {
                      "description": "The user's five-digit postal code, represented as a string.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "uiIdentityId",
                    "firstName",
                    "lastName",
                    "email",
                    "additionalAuthentication",
                    "country",
                    "address",
                    "timeZone",
                    "additionalAuthenticationConfigured"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/user-response.yaml"
                  }
                }
              }
            },
            "description": "User or clone successfully created.",
            "headers": {
              "Location": {
                "description": "A URL path to the newly created object.",
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/Location.yaml"
                }
              }
            }
          }
        },
        "summary": "Create a user",
        "tags": [
          "Users"
        ]
      },
      "get": {
        "description": "This operation lists the users who have access to your current account or other managed accounts using the `accountSwitchKey` parameter. The account is determined by the tokens in your API client. You can pass a `groupId` to filter users based on group. You can also return user information such as what product notifications they subscribe to, or what group and role assignments they have. Set  the `actions` parameter to `true` to return the actions you can take on each user.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-ui-identities"
        },
        "operationId": "get-ui-identities",
        "parameters": [{
            "description": "Filters roles for a specific group. To get this value, run the [List groups](https://techdocs.akamai.com/iam-api/reference/get-groups) operation.",
            "example": "{{groupId}}",
            "in": "query",
            "name": "groupId",
            "required": false,
            "schema": {
              "example": 12345,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/roles-filter-params-group-group-id.yaml"
            }
          },
          {
            "description": "Includes the list of your group and role assignments, `false` by default.",
            "example": "{{authGrants}}",
            "in": "query",
            "name": "authGrants",
            "required": false,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/auth-grants-query.yaml"
            }
          },
          {
            "description": "Includes actions such as `edit` or `delete` that a user can perform on an object, `false` by default. Don't confuse this with the `action` parameter, which applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-api/reference/put-user-profile-tfa) operation.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "required": false,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/admin-actions-actions.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                  "accountId": "A-CCT3456",
                  "actions": {
                    "delete": true,
                    "apiClient": true,
                    "canEditMFA": false,
                    "canEditNone": false,
                    "canEditTFA": false,
                    "edit": true,
                    "editProfile": true,
                    "isCloneable": true,
                    "resetPassword": true,
                    "thirdPartyAccess": true
                  },
                  "additionalAuthentication": "TFA",
                  "additionalAuthenticationConfigured": false,
                  "authGrants": [{
                      "groupId": 12345,
                      "groupName": "Internet Company",
                      "isBlocked": false,
                      "roleDescription": "Role giving admin access.",
                      "roleId": 12,
                      "roleName": "admin"
                    },
                    {
                      "roleId": 100002,
                      "roleName": "Admin for Account Roles"
                    }
                  ],
                  "email": "jsmith@example.com",
                  "firstName": "John",
                  "isLocked": false,
                  "lastLoginDate": "2016-01-13T17:53:57Z",
                  "lastName": "Smith",
                  "tfaConfigured": false,
                  "tfaEnabled": false,
                  "uiIdentityId": "A-B-123456",
                  "uiUserName": "jsmith"
                }],
                "schema": {
                  "description": "Encapsulates information about each user.",
                  "items": {
                    "additionalProperties": false,
                    "description": "Encapsulates information about each user.",
                    "properties": {
                      "accountId": {
                        "description": "Unique identifier for each account.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "actions": {
                        "additionalProperties": false,
                        "description": "Specifies permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-api/reference/put-user-profile-tfa) operation.",
                        "properties": {
                          "delete": {
                            "description": "Whether the user is deletable.",
                            "type": "boolean"
                          },
                          "apiClient": {
                            "description": "Enables the administrator to create an API client.",
                            "type": "boolean"
                          },
                          "canEditMFA": {
                            "description": "With a `true` value, the user can turn their MFA setting on or off.",
                            "type": "boolean"
                          },
                          "canEditNone": {
                            "description": "With a `true` value, the user can turn their None setting on or off.",
                            "type": "boolean"
                          },
                          "canEditTFA": {
                            "description": "With a `true` value, the user can turn their TFA setting on or off.",
                            "type": "boolean"
                          },
                          "edit": {
                            "description": "Whether the user is editable.",
                            "type": "boolean"
                          },
                          "editProfile": {
                            "description": "With a `true` value, the user can edit their user profile.",
                            "type": "boolean"
                          },
                          "isCloneable": {
                            "description": "Enables an administrator to create a new user with permissions cloned from this user.",
                            "type": "boolean"
                          },
                          "resetPassword": {
                            "description": "Enables an administrator to send a user a password by email or see a one-time token.",
                            "type": "boolean"
                          },
                          "thirdPartyAccess": {
                            "description": "Enables the administrator to manage extended access.",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "delete",
                          "edit",
                          "resetPassword",
                          "isCloneable",
                          "thirdPartyAccess",
                          "apiClient",
                          "editProfile",
                          "canEditTFA"
                        ],
                        "type": "object"
                      },
                      "additionalAuthentication": {
                        "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.",
                        "enum": [
                          "TFA",
                          "MFA",
                          "NONE"
                        ],
                        "type": "string"
                      },
                      "additionalAuthenticationConfigured": {
                        "description": "Whether the user has multi-factor authentication configured.",
                        "type": "boolean"
                      },
                      "authGrants": {
                        "description": "A user's role assignments, per group. ",
                        "items": {
                          "additionalProperties": false,
                          "description": "A user's role assignments, per group.",
                          "properties": {
                            "groupId": {
                              "description": "Unique identifier for each group. It's returned only for group roles.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "groupName": {
                              "description": "Descriptive label for the group.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "isBlocked": {
                              "description": "Whether a user's access to a group is blocked.",
                              "type": "boolean"
                            },
                            "roleDescription": {
                              "description": "Descriptive label for the role to convey its use.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "roleId": {
                              "description": "Unique identifier for each role.",
                              "minimum": 1,
                              "type": "integer"
                            },
                            "roleName": {
                              "description": "Descriptive label for the role.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "subGroups": {
                              "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                              "items": {
                                "additionalProperties": true,
                                "description": "A further nested group.",
                                "properties": {},
                                "type": "object",
                                "x-akamai": {
                                  "file-path": "schemas/groups-nested.yaml"
                                }
                              },
                              "minItems": 0,
                              "type": "array"
                            }
                          },
                          "required": [
                            "roleId",
                            "roleName"
                          ],
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/auth-grant-response.yaml"
                          }
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "email": {
                        "description": "The user's email address.",
                        "format": "email",
                        "type": "string"
                      },
                      "firstName": {
                        "description": "The user's first name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "isLocked": {
                        "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).",
                        "type": "boolean"
                      },
                      "lastLoginDate": {
                        "description": "ISO 8601 timestamp indicating when the user last logged in.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "lastName": {
                        "description": "The user's surname.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "tfaConfigured": {
                        "description": "Whether TFA is configured.",
                        "type": "boolean"
                      },
                      "tfaEnabled": {
                        "description": "Whether TFA is enabled.",
                        "type": "boolean"
                      },
                      "uiIdentityId": {
                        "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "uiUserName": {
                        "description": "The user's username in Control Center.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "uiIdentityId",
                      "firstName",
                      "lastName",
                      "uiUserName",
                      "email",
                      "accountId",
                      "additionalAuthentication",
                      "additionalAuthenticationConfigured",
                      "isLocked",
                      "tfaEnabled",
                      "tfaConfigured"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/ui-identities-response.yaml"
                    }
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-user-response.yaml"
                  }
                }
              }
            },
            "description": "The response provides the users on the account."
          }
        },
        "summary": "List users",
        "tags": [
          "Users"
        ]
      }
    },
    "/user-admin/ui-identities/{uiIdentityId}": {
      "get": {
        "description": "This operation retrieves a user's profile.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-ui-identity"
        },
        "operationId": "get-ui-identity",
        "parameters": [{
            "description": "Includes the list of your group and role assignments, `false` by default.",
            "example": "{{authGrants}}",
            "in": "query",
            "name": "authGrants",
            "required": false,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/auth-grants-query.yaml"
            }
          },
          {
            "description": "Includes product notifications you subscribe to, `false` by default.",
            "example": "{{notifications}}",
            "in": "query",
            "name": "notifications",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/notifications-query.yaml"
            }
          },
          {
            "description": "Includes actions such as `edit` or `delete` that a user can perform on an object, `false` by default. Don't confuse this with the `action` parameter, which applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-api/reference/put-user-profile-tfa) operation.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "required": false,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/admin-actions-actions.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "accountId": "A-CCT5678",
                  "actions": {
                    "delete": true,
                    "apiClient": true,
                    "edit": true,
                    "isCloneable": true,
                    "resetPassword": true,
                    "thirdPartyAccess": true
                  },
                  "additionalAuthentication": "TFA",
                  "additionalAuthenticationConfigured": false,
                  "address": "First Street",
                  "authGrants": [{
                      "groupId": 12345,
                      "groupName": "Internet Company",
                      "isBlocked": false,
                      "roleDescription": "Role providing admin access.",
                      "roleId": 12,
                      "roleName": "admin"
                    },
                    {
                      "roleId": 100002,
                      "roleName": "Admin for Account Roles"
                    }
                  ],
                  "city": "Santa Clara",
                  "contactType": "Billing",
                  "country": "USA",
                  "email": "jsmith@example.com",
                  "firstName": "John",
                  "isLocked": false,
                  "jobTitle": "engineer",
                  "lastLoginDate": "2016-01-13T17:53:57Z",
                  "lastName": "Smith",
                  "mobilePhone": "3456789999",
                  "notifications": {
                    "options": {
                      "apiClientCredentialExpiryNotification": true,
                      "newUserNotification": true,
                      "passwordExpiry": true,
                      "proactive": [
                        "EdgeScape",
                        "EdgeSuite (HTTP Content Delivery)"
                      ],
                      "upgrade": [
                        "NetStorage",
                        "Other Upgrade Notifications (Planned)"
                      ]
                    },
                    "enableEmailNotifications": true
                  },
                  "passwordExpiryDate": "2018-01-13T17:53:57Z",
                  "phone": "3456788765",
                  "preferredLanguage": "English",
                  "secondaryEmail": "john_smith@example.com",
                  "sessionTimeOut": 14400,
                  "state": "CA",
                  "timeZone": "GMT",
                  "uiIdentityId": "A-B-123456",
                  "uiUserName": "jsmith",
                  "zipCode": "34567"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information about each user.",
                  "properties": {
                    "accountId": {
                      "description": "Unique identifier for each account.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-api/reference/put-user-profile-tfa) operation.",
                      "properties": {
                        "delete": {
                          "description": "Whether the user is deletable.",
                          "type": "boolean"
                        },
                        "apiClient": {
                          "description": "Enables the administrator to create an API client.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether the user is editable.",
                          "type": "boolean"
                        },
                        "isCloneable": {
                          "description": "Enables an administrator to create a new user with permissions cloned from this user.",
                          "type": "boolean"
                        },
                        "resetPassword": {
                          "description": "Enables an administrator to send a user a password by email or see a one-time token.",
                          "type": "boolean"
                        },
                        "thirdPartyAccess": {
                          "description": "Enables the administrator to manage extended access.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "edit",
                        "resetPassword",
                        "isCloneable",
                        "thirdPartyAccess",
                        "apiClient"
                      ],
                      "type": "object"
                    },
                    "additionalAuthentication": {
                      "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.",
                      "enum": [
                        "TFA",
                        "MFA",
                        "NONE"
                      ],
                      "type": "string"
                    },
                    "additionalAuthenticationConfigured": {
                      "description": "Whether the user has multi-factor authentication configured.",
                      "type": "boolean"
                    },
                    "address": {
                      "description": "The user's street address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "authGrants": {
                      "description": "A user's role assignments, per group.",
                      "items": {
                        "additionalProperties": false,
                        "description": "A user's role assignments, per group.",
                        "properties": {
                          "groupId": {
                            "description": "Unique identifier for each group. It's returned only for group roles.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "groupName": {
                            "description": "Descriptive label for the group.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "isBlocked": {
                            "description": "Whether a user's access to a group is blocked.",
                            "type": "boolean"
                          },
                          "roleDescription": {
                            "description": "Descriptive label for the role to convey its use.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "roleId": {
                            "description": "Unique identifier for each role.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "roleName": {
                            "description": "Descriptive label for the role.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "subGroups": {
                            "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                            "items": {
                              "additionalProperties": true,
                              "description": "A further nested group.",
                              "properties": {},
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/groups-nested.yaml"
                              }
                            },
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "roleId",
                          "roleName"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/auth-grant-response.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "city": {
                      "description": "The user's city.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "contactType": {
                      "description": "User's contact type.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "country": {
                      "description": "User's country.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "email": {
                      "description": "The user's email address.",
                      "format": "email",
                      "type": "string"
                    },
                    "emailUpdatePending": {
                      "description": "Whether there are any pending changes to the email address.",
                      "type": "boolean"
                    },
                    "firstName": {
                      "description": "The user's first name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "isLocked": {
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).",
                      "type": "boolean"
                    },
                    "jobTitle": {
                      "description": "The user's position at the company.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "lastLoginDate": {
                      "description": "ISO 8601 timestamp indicating when the user last logged in.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastName": {
                      "description": "The user's surname.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mobilePhone": {
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "notifications": {
                      "additionalProperties": false,
                      "description": "Specifies email notifications the user receives for products.",
                      "properties": {
                        "options": {
                          "additionalProperties": false,
                          "description": "Specifies email notifications settings.",
                          "properties": {
                            "apiClientCredentialExpiryNotification": {
                              "description": "Whether the user gets notifications for expiring API client credentials.",
                              "type": "boolean"
                            },
                            "newUserNotification": {
                              "description": "Whether group administrators get notifications when the user creates other new users.",
                              "type": "boolean"
                            },
                            "passwordExpiry": {
                              "description": "Whether the user gets notifications for password expiration.",
                              "type": "boolean"
                            },
                            "proactive": {
                              "description": "Products for which the user gets notifications for service issues.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            },
                            "upgrade": {
                              "description": "Products for which the user receives notifications for upgrades.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            }
                          },
                          "required": [
                            "upgrade",
                            "proactive",
                            "passwordExpiry",
                            "newUserNotification",
                            "apiClientCredentialExpiryNotification"
                          ],
                          "type": "object"
                        },
                        "enableEmailNotifications": {
                          "description": "Enables email notifications.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "options",
                        "enableEmailNotifications"
                      ],
                      "type": "object"
                    },
                    "passwordExpiryDate": {
                      "description": "The date a user's password expires.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "phone": {
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "preferredLanguage": {
                      "description": "The user's language.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "secondaryEmail": {
                      "description": "The user's alternate email address.",
                      "format": "email",
                      "type": "string"
                    },
                    "sessionTimeOut": {
                      "description": "The number of seconds it takes for the user's Control Center session to time out after no activity.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "state": {
                      "description": "The user's state or province if user's country is USA or Canada.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "tfaConfigured": {
                      "description": "Whether TFA is configured.",
                      "type": "boolean"
                    },
                    "tfaEnabled": {
                      "description": "Whether TFA is enabled.",
                      "type": "boolean"
                    },
                    "timeZone": {
                      "description": "The user's time zone. To get the available values, run the [View time zones](https://techdocs.akamai.com/iam-api/reference/get-common-timezones) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uiIdentityId": {
                      "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uiUserName": {
                      "description": "The user's username in Control Center.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "zipCode": {
                      "description": "The user's five-digit postal code, represented as a string.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "uiIdentityId",
                    "firstName",
                    "lastName",
                    "email",
                    "additionalAuthentication",
                    "country",
                    "address",
                    "timeZone",
                    "additionalAuthenticationConfigured"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/user-response.yaml"
                  }
                }
              }
            },
            "description": "The response provides the user's profile."
          }
        },
        "summary": "Get a user",
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "description": "This operation deletes any user who doesn't own an API client. Before you delete a user with a client, [transfer API client ownership](https://techdocs.akamai.com/iam/docs/transfer-api-client-ownership) to another user.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/delete-ui-identity"
        },
        "operationId": "delete-ui-identity",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "204": {
            "content": {},
            "description": "User successfully deleted."
          }
        },
        "summary": "Remove a user",
        "tags": [
          "Users"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each user. To get this value, run the [List users](https://techdocs.akamai.com/iam-api/reference/get-ui-identities) operation.",
        "example": "{{uiIdentityId}}",
        "in": "path",
        "name": "uiIdentityId",
        "required": true,
        "schema": {
          "example": "1-ABCDE",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/ui-identity-id-path.yaml"
        }
      }]
    },
    "/user-admin/ui-identities/{uiIdentityId}/additionalAuthentication": {
      "put": {
        "description": "This operation sets a user's multi-factor authentication to `TFA`, `MFA`, or `NONE`. Users are allowed five login attempts with MFA or 2FA before their account is locked. If the account is locked, use the [Reset additional authentication](https://techdocs.akamai.com/iam-api/reference/put-ui-identity-reset-additional-authentication) to unlock it.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/put-ui-identity-additional-authentication"
        },
        "operationId": "put-ui-identity-additional-authentication",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "value": "TFA"
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "value": {
                    "description": "A user's multi-factor authentication method, either `TFA`, `MFA`, or `NONE`.",
                    "enum": [
                      "TFA",
                      "MFA",
                      "NONE"
                    ],
                    "example": "{{value}}",
                    "type": "string"
                  }
                },
                "required": [
                  "value"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/additional-authentication-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "content": {},
            "description": "Authentication successfully set."
          }
        },
        "summary": "Set a user's multi-factor authentication",
        "tags": [
          "User access"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each user. To get this value, run the [List users](https://techdocs.akamai.com/iam-api/reference/get-ui-identities) operation.",
        "example": "{{uiIdentityId}}",
        "in": "path",
        "name": "uiIdentityId",
        "required": true,
        "schema": {
          "example": "1-ABCDE",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/ui-identity-id-path.yaml"
        }
      }]
    },
    "/user-admin/ui-identities/{uiIdentityId}/additionalAuthentication/reset": {
      "put": {
        "description": "This operation prompts the reset of a user's multi-factor authentication method the next time they log in to Control Center. `TFA` indicates two-factor authentication. `MFA` indicates Akamai MFA authentication.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/put-ui-identity-reset-additional-authentication"
        },
        "operationId": "put-ui-identity-reset-additional-authentication",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "204": {
            "content": {},
            "description": "MFA/2FA successfully reset."
          }
        },
        "summary": "Reset a user's multi-factor authentication",
        "tags": [
          "User access"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each user. To get this value, run the [List users](https://techdocs.akamai.com/iam-api/reference/get-ui-identities) operation.",
        "example": "{{uiIdentityId}}",
        "in": "path",
        "name": "uiIdentityId",
        "required": true,
        "schema": {
          "example": "1-ABCDE",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/ui-identity-id-path.yaml"
        }
      }]
    },
    "/user-admin/ui-identities/{uiIdentityId}/auth-grants": {
      "put": {
        "description": "This operation edits what groups a user has access to, and how the user interacts with the objects in those groups.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/put-ui-uiidentity-auth-grants"
        },
        "operationId": "put-ui-uiidentity-auth-grants",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": [{
                  "groupId": 12345,
                  "roleId": 16,
                  "subGroups": [{
                    "groupId": 54321,
                    "roleId": 2222,
                    "subGroups": []
                  }]
                },
                {
                  "roleId": 100002
                },
                {
                  "roleId": 100004
                }
              ],
              "schema": {
                "description": "Roles assigned to the user. A user needs to have at least one group role assigned. Account level roles are optional.",
                "items": {
                  "oneOf": [{
                      "additionalProperties": false,
                      "description": "The user's role assignments, per group. Provide either this or the `cloneFrom`.",
                      "properties": {
                        "groupId": {
                          "description": "Unique identifier for each group. To get this value, run the [List groups](https://techdocs.akamai.com/iam-api/reference/get-groups) operation.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "groupName": {
                          "description": "Descriptive label for the group.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "isBlocked": {
                          "description": "Blocks a user's access to a group.",
                          "type": "boolean"
                        },
                        "roleDescription": {
                          "description": "Descriptive label for the role to convey its use.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "roleId": {
                          "description": "Unique identifier for each role. To get this value, run the [List roles](https://techdocs.akamai.com/iam-api/reference/get-roles) operation. You need to assign at least one role to a user. Setting the value to `null` in POST leaves the default role: either unassigned or cascaded from a parent group. For `PUT`, it clears the current assignment and reverts it to the default role.",
                          "minimum": 1,
                          "nullable": true,
                          "type": "integer"
                        },
                        "roleName": {
                          "description": "Descriptive label for the role.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "subGroups": {
                          "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "groupId": {
                                "description": "Unique identifier for each group.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "groupName": {
                                "description": "Descriptive label for the group.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "isBlocked": {
                                "description": "Blocks a user's access to a group.",
                                "type": "boolean"
                              },
                              "roleId": {
                                "description": "Unique identifier for each role. To get this value, run the [List roles](https://techdocs.akamai.com/iam-api/reference/get-roles) operation. You need to assign at least one role to a user. Setting the value to `null` in POST leaves the default role: either unassigned or cascaded from a parent group. For `PUT`, it clears the current assignment and reverts it to the default role.",
                                "minimum": 1,
                                "nullable": true,
                                "type": "integer"
                              },
                              "subGroups": {
                                "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                                "items": {
                                  "additionalProperties": true,
                                  "description": "A further nested authorization grant.",
                                  "properties": {},
                                  "type": "object",
                                  "x-akamai": {
                                    "file-path": "schemas/auth-grant-request-nested.yaml"
                                  }
                                },
                                "minItems": 0,
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/auth-grant-request-definitions.yaml"
                            }
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "roleId",
                        "groupId"
                      ],
                      "title": "Group role",
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/auth-grant-request-group-role.yaml"
                      }
                    },
                    {
                      "additionalProperties": false,
                      "description": "The user's account level role assignments.",
                      "properties": {
                        "roleDescription": {
                          "description": "Descriptive label for the role to convey its use.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "roleId": {
                          "description": "Unique identifier for each role. To get this value, run the [List roles](https://techdocs.akamai.com/iam-api/reference/get-roles) operation and look for roles with the `account` type.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "roleName": {
                          "description": "Descriptive label for the role.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "roleId"
                      ],
                      "title": "Account level role",
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/auth-grant-request-account-role.yaml"
                      }
                    }
                  ]
                },
                "minItems": 1,
                "type": "array",
                "x-akamai": {
                  "file-path": "schemas/list-of-auth-grant-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                    "groupId": 12345,
                    "groupName": "Internet Company",
                    "isBlocked": false,
                    "roleDescription": "Internet Company role.",
                    "roleId": 16,
                    "roleName": "Publisher",
                    "subGroups": [{
                      "groupId": 32145,
                      "groupName": "Digital Company",
                      "isBlocked": false,
                      "roleDescription": "",
                      "roleId": null,
                      "roleName": "",
                      "subGroups": []
                    }]
                  },
                  {
                    "roleId": 100002,
                    "roleName": "Admin for Account Roles"
                  },
                  {
                    "roleId": 100004,
                    "roleName": "Admin for Account Settings"
                  }
                ],
                "schema": {
                  "description": "A user's role assignments, per group. ",
                  "items": {
                    "additionalProperties": false,
                    "description": "A user's role assignments, per group.",
                    "properties": {
                      "groupId": {
                        "description": "Unique identifier for each group. It's returned only for group roles.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "groupName": {
                        "description": "Descriptive label for the group.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "isBlocked": {
                        "description": "Whether a user's access to a group is blocked.",
                        "type": "boolean"
                      },
                      "roleDescription": {
                        "description": "Descriptive label for the role to convey its use.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "roleId": {
                        "description": "Unique identifier for each role.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "roleName": {
                        "description": "Descriptive label for the role.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "subGroups": {
                        "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                        "items": {
                          "additionalProperties": true,
                          "description": "A further nested group.",
                          "properties": {},
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/groups-nested.yaml"
                          }
                        },
                        "minItems": 0,
                        "type": "array"
                      }
                    },
                    "required": [
                      "roleId",
                      "roleName"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/auth-grant-response.yaml"
                    }
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-auth-grant-response.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the user's modified group."
          }
        },
        "summary": "Modify a user's group and role assignments",
        "tags": [
          "User authorization settings"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each user. To get this value, run the [List users](https://techdocs.akamai.com/iam-api/reference/get-ui-identities) operation.",
        "example": "{{uiIdentityId}}",
        "in": "path",
        "name": "uiIdentityId",
        "required": true,
        "schema": {
          "example": "1-ABCDE",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/ui-identity-id-path.yaml"
        }
      }]
    },
    "/user-admin/ui-identities/{uiIdentityId}/basic-info": {
      "put": {
        "description": "This operation modifies a user's basic information. Pass the entire body of data in the request, including members you're not changing, or the unspecified data are removed. To edit detailed settings, run the [Modify a user's group and role assignments](https://techdocs.akamai.com/iam-api/reference/put-ui-uiidentity-auth-grants) or [Update a user's notifications](https://techdocs.akamai.com/iam-api/reference/put-notifications) operations.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/put-ui-identity-basic-info"
        },
        "operationId": "put-ui-identity-basic-info",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "additionalAuthentication": "TFA",
                "address": "first Street",
                "city": "Santa Clara",
                "contactType": "Billing",
                "country": "USA",
                "firstName": "John",
                "jobTitle": "Engineer",
                "lastName": "Smith",
                "mobilePhone": "3456787657",
                "phone": "3456788765",
                "preferredLanguage": "English",
                "secondaryEmail": "john.smith@example.com",
                "sessionTimeOut": 30,
                "state": "CA",
                "timeZone": "GMT",
                "zipCode": "34567"
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "additionalAuthentication": {
                    "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.",
                    "enum": [
                      "TFA",
                      "MFA",
                      "NONE"
                    ],
                    "example": "{{additionalAuthentication}}",
                    "type": "string"
                  },
                  "address": {
                    "description": "The user's street address.",
                    "example": "{{address}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "city": {
                    "description": "The user's city.",
                    "example": "{{city}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "contactType": {
                    "description": "User's contact type. To get the available values, run the [View contact types](https://techdocs.akamai.com/iam-api/reference/get-common-contact-types) operation.",
                    "example": "{{contactType}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "country": {
                    "description": "User's country. To get the available values, run the [View supported countries](https://techdocs.akamai.com/iam-api/reference/get-common-countries) operation.",
                    "example": "{{country}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "email": {
                    "description": "The user's email address.",
                    "example": "{{email}}",
                    "format": "email",
                    "type": "string"
                  },
                  "firstName": {
                    "description": "The user's first name.",
                    "example": "{{firstName}}",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  },
                  "jobTitle": {
                    "description": "The user's position at the company.",
                    "example": "{{jobTitle}}",
                    "maxLength": 75,
                    "minLength": 1,
                    "type": "string"
                  },
                  "lastName": {
                    "description": "The user's surname.",
                    "example": "{{lastName}}",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  },
                  "mobilePhone": {
                    "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`. For example, `+3551234567891` or `+441234567891`. For Canadian and US phone numbers, you can provide them with a country code (for example, `+11234567891`) or without it as a ten-digit integer within a string (for example, `1234567891`).",
                    "example": "{{mobilePhone}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "phone": {
                    "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`. For example, `+3551234567891` or `+441234567891`. For Canadian and US phone numbers, you can provide them with a country code (for example, `+11234567891`) or without it as a ten-digit integer within a string (for example, `1234567891`).",
                    "example": "{{phone}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "preferredLanguage": {
                    "description": "The user's language. To get the available values, run the [View languages](https://techdocs.akamai.com/iam-api/reference/get-common-languages) operation.",
                    "example": "{{preferredLanguage}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "secondaryEmail": {
                    "description": "The user's alternate email address.",
                    "example": "{{secondaryEmail}}",
                    "format": "email",
                    "type": "string"
                  },
                  "sessionTimeOut": {
                    "description": "The number of seconds it takes for the user's Control Center session to time out after no activity. To get the available values, run the [View timeout policies](https://techdocs.akamai.com/iam-api/reference/get-common-timeout-policies) operation.",
                    "example": "{{sessionTimeOut}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "state": {
                    "description": "The user's state or province if user's country is USA or Canada. To get the available values, run the [View states for a user profile](https://techdocs.akamai.com/iam-api/reference/get-user-states) operation.",
                    "example": "{{state}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "timeZone": {
                    "description": "The user's time zone. To get the available values, run the [View time zones](https://techdocs.akamai.com/iam-api/reference/get-common-timezones) operation.",
                    "example": "{{timeZone}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "zipCode": {
                    "description": "The user's five-digit postal code, represented as a string.",
                    "example": "{{zipCode}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "country",
                  "preferredLanguage",
                  "sessionTimeOut",
                  "timeZone"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/update-user-basic-info-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "additionalAuthentication": "TFA",
                  "additionalAuthenticationConfigured": false,
                  "address": "first Street",
                  "city": "Santa Clara",
                  "contactType": "Billing",
                  "country": "USA",
                  "email": "jsmith@example.com",
                  "firstName": "John",
                  "isLocked": false,
                  "jobTitle": "Engineer",
                  "lastLoginDate": "2016-04-12T20:54:24.000Z",
                  "lastName": "Smith",
                  "mobilePhone": "3456787657",
                  "passwordExpiryDate": "2023-04-12T20:54:24.000Z",
                  "phone": "3456788765",
                  "preferredLanguage": "English",
                  "secondaryEmail": "john-smith@example.com",
                  "sessionTimeOut": 30,
                  "state": "CA",
                  "timeZone": "GMT",
                  "uiIdentityId": "1-ABCDE",
                  "uiUserName": "jsmith",
                  "zipCode": "34567"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information about each user.",
                  "properties": {
                    "accountId": {
                      "description": "Unique identifier for each account.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "additionalAuthentication": {
                      "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.",
                      "enum": [
                        "TFA",
                        "MFA",
                        "NONE"
                      ],
                      "type": "string"
                    },
                    "additionalAuthenticationConfigured": {
                      "description": "Whether the user has multi-factor authentication configured.",
                      "type": "boolean"
                    },
                    "address": {
                      "description": "The user's street address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "city": {
                      "description": "The user's city.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "contactType": {
                      "description": "User's contact type.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "country": {
                      "description": "User's country.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "email": {
                      "description": "The user's email address.",
                      "format": "email",
                      "type": "string"
                    },
                    "emailUpdatePending": {
                      "description": "Whether there are any pending changes to the email address.",
                      "type": "boolean"
                    },
                    "firstName": {
                      "description": "The user's first name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "isLocked": {
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).",
                      "type": "boolean"
                    },
                    "jobTitle": {
                      "description": "The user's position at the company.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "lastLoginDate": {
                      "description": "ISO 8601 timestamp indicating when the user last logged in.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastName": {
                      "description": "The user's surname.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mobilePhone": {
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "passwordExpiryDate": {
                      "description": "The date a user's password expires.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "phone": {
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "preferredLanguage": {
                      "description": "The user's language.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "secondaryEmail": {
                      "description": "The user's alternate email address.",
                      "format": "email",
                      "type": "string"
                    },
                    "sessionTimeOut": {
                      "description": "The number of seconds it takes for the user's Control Center session to time out after no activity.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "state": {
                      "description": "The user's state or province if user's country is USA or Canada.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "tfaConfigured": {
                      "description": "Whether TFA is configured.",
                      "type": "boolean"
                    },
                    "tfaEnabled": {
                      "description": "Whether TFA is enabled.",
                      "type": "boolean"
                    },
                    "timeZone": {
                      "description": "The user's time zone.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uiIdentityId": {
                      "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uiUserName": {
                      "description": "The user's username in Control Center.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "zipCode": {
                      "description": "The user's five-digit postal code, represented as a string.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "uiIdentityId",
                    "firstName",
                    "lastName",
                    "email",
                    "additionalAuthentication",
                    "country"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/user-response-basic-info.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the user's modified information."
          }
        },
        "summary": "Update a user",
        "tags": [
          "Users"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each user. To get this value, run the [List users](https://techdocs.akamai.com/iam-api/reference/get-ui-identities) operation.",
        "example": "{{uiIdentityId}}",
        "in": "path",
        "name": "uiIdentityId",
        "required": true,
        "schema": {
          "example": "1-ABCDE",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/ui-identity-id-path.yaml"
        }
      }]
    },
    "/user-admin/ui-identities/{uiIdentityId}/groups/{groupId}/blocked-properties": {
      "get": {
        "description": "This operation lists all properties and includes a user doesn't have access to in a group. Note the responses's set of IDs refer to either properties or includes. To find out which each refers to, see [Manage access to properties and includes](https://techdocs.akamai.com/iam-api/reference/manage-access-to-properties-and-includes).",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-blocked-properties"
        },
        "operationId": "get-blocked-properties",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  11111111,
                  22222222
                ],
                "schema": {
                  "items": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-integer.yaml"
                  }
                }
              }
            },
            "description": "The response provides the blocked assets."
          }
        },
        "summary": "List blocked properties and includes",
        "tags": [
          "Blocked assets"
        ]
      },
      "put": {
        "description": "This operation updates the list of blocked properties and includes. By default, users can access all properties and includes in a group, and this operation specifies IDs for any to block. To find out which each refers to, see [Manage access to properties and includes](https://techdocs.akamai.com/iam-api/reference/manage-access-to-properties-and-includes). To get the list of already blocked properties run the [List blocked properties and includes](https://techdocs.akamai.com/iam-api/reference/get-blocked-properties) operation. In this request, include the whole list of properties you want to block. By not including a blocked property, you're unlocking it.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/put-blocked-properties"
        },
        "operationId": "put-blocked-properties",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": [
                11111111,
                22222222
              ],
              "schema": {
                "items": {
                  "minimum": 0,
                  "type": "integer"
                },
                "minItems": 0,
                "type": "array",
                "x-akamai": {
                  "file-path": "schemas/list-of-integer.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  11111111,
                  22222222
                ],
                "schema": {
                  "items": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-integer.yaml"
                  }
                }
              }
            },
            "description": "The response provides the unblocked properties."
          }
        },
        "summary": "Update blocked properties and includes",
        "tags": [
          "Blocked assets"
        ]
      },
      "parameters": [{
          "description": "Unique identifier for each group. To get this value, run the [List groups](https://techdocs.akamai.com/iam-api/reference/get-groups) operation.",
          "example": "{{groupId}}",
          "in": "path",
          "name": "groupId",
          "required": true,
          "schema": {
            "example": 54321,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/group-id-path.yaml"
          }
        },
        {
          "description": "Unique identifier for each user. To get this value, run the [List users](https://techdocs.akamai.com/iam-api/reference/get-ui-identities) operation.",
          "example": "{{uiIdentityId}}",
          "in": "path",
          "name": "uiIdentityId",
          "required": true,
          "schema": {
            "example": "1-ABCDE",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/ui-identity-id-path.yaml"
          }
        }
      ]
    },
    "/user-admin/ui-identities/{uiIdentityId}/lock": {
      "post": {
        "description": "This operation locks a user's account, preventing access to Control Center. The result shows in the user data as a read-only `isLocked`: `true` indicator. To allow a user access to Control Center, run the [Unlock a user's account](https://techdocs.akamai.com/iam-api/reference/post-ui-identity-unlock) operation. This sets the `isLocked` indicator to `false`.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/post-ui-identity-lock"
        },
        "operationId": "post-ui-identity-lock",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "204": {
            "content": {},
            "description": "User account successfully locked."
          }
        },
        "summary": "Lock a user's account",
        "tags": [
          "User authentication settings"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each user. To get this value, run the [List users](https://techdocs.akamai.com/iam-api/reference/get-ui-identities) operation.",
        "example": "{{uiIdentityId}}",
        "in": "path",
        "name": "uiIdentityId",
        "required": true,
        "schema": {
          "example": "1-ABCDE",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/ui-identity-id-path.yaml"
        }
      }]
    },
    "/user-admin/ui-identities/{uiIdentityId}/notifications": {
      "put": {
        "description": "This operation subscribes or unsubscribes users to product notification emails.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/put-notifications"
        },
        "operationId": "put-notifications",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "options": {
                  "apiClientCredentialExpiryNotification": true,
                  "newUserNotification": true,
                  "passwordExpiry": true,
                  "proactive": [
                    "EdgeScape",
                    "EdgeSuite (HTTP Content Delivery)"
                  ],
                  "upgrade": [
                    "NetStorage",
                    "Other Upgrade Notifications (Planned)"
                  ]
                },
                "enableEmailNotifications": true
              },
              "schema": {
                "additionalProperties": false,
                "description": "Encapsulates the types of email notifications you can receive.",
                "properties": {
                  "options": {
                    "additionalProperties": false,
                    "description": "Specifies email notifications settings.",
                    "properties": {
                      "apiClientCredentialExpiryNotification": {
                        "description": "Enables notifications for expiring API client credentials.",
                        "type": "boolean"
                      },
                      "newUserNotification": {
                        "description": "Enables notifications for group administrators when the user creates other new users.",
                        "type": "boolean"
                      },
                      "passwordExpiry": {
                        "description": "Enables notifications for expiring passwords.",
                        "type": "boolean"
                      },
                      "proactive": {
                        "description": "Products for which the user gets notifications for service issues.",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "minItems": 0,
                        "type": "array"
                      },
                      "upgrade": {
                        "description": "Products for which the user receives notifications for upgrades.",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "minItems": 0,
                        "type": "array"
                      }
                    },
                    "required": [
                      "passwordExpiry",
                      "proactive",
                      "upgrade"
                    ],
                    "type": "object"
                  },
                  "enableEmailNotifications": {
                    "description": "Enables email notifications.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "enableEmailNotifications",
                  "options"
                ],
                "x-akamai": {
                  "file-path": "schemas/notifications-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "options": {
                    "apiClientCredentialExpiryNotification": true,
                    "newUserNotification": true,
                    "passwordExpiry": true,
                    "proactive": [
                      "EdgeScape",
                      "EdgeSuite (HTTP Content Delivery)"
                    ],
                    "upgrade": [
                      "NetStorage",
                      "Other Upgrade Notifications (Planned)"
                    ]
                  },
                  "enableEmailNotifications": true
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates the types of email notifications you can receive.",
                  "properties": {
                    "options": {
                      "additionalProperties": false,
                      "description": "Specifies email notifications settings.",
                      "properties": {
                        "apiClientCredentialExpiryNotification": {
                          "description": "Whether the user gets notifications for expiring API client credentials.",
                          "type": "boolean"
                        },
                        "newUserNotification": {
                          "description": "Whether group administrators get notifications when the user creates other new users.",
                          "type": "boolean"
                        },
                        "passwordExpiry": {
                          "description": "Whether the user gets notifications for password expiration.",
                          "type": "boolean"
                        },
                        "proactive": {
                          "description": "Products for which the user gets notifications for service issues.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "upgrade": {
                          "description": "Products for which the user receives notifications for upgrades.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "newUserNotification",
                        "passwordExpiry",
                        "proactive",
                        "upgrade",
                        "apiClientCredentialExpiryNotification"
                      ],
                      "type": "object"
                    },
                    "enableEmailNotifications": {
                      "description": "Enables email notifications.",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "options",
                    "enableEmailNotifications"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/notifications-response.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the user's email notification status."
          }
        },
        "summary": "Update a user's notifications",
        "tags": [
          "User notifications"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each user. To get this value, run the [List users](https://techdocs.akamai.com/iam-api/reference/get-ui-identities) operation.",
        "example": "{{uiIdentityId}}",
        "in": "path",
        "name": "uiIdentityId",
        "required": true,
        "schema": {
          "example": "1-ABCDE",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/ui-identity-id-path.yaml"
        }
      }]
    },
    "/user-admin/ui-identities/{uiIdentityId}/reset-password": {
      "post": {
        "description": "This operation sends a one-time use password to the user. If you send the email with the password directly to the user, the response for this operation doesn't include that password. If you don't send the password to the user through email, the password is included in the response.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/post-reset-password"
        },
        "operationId": "post-reset-password",
        "parameters": [{
            "description": "Sends a one-time password to the new user, `true` by default.",
            "example": "{{sendEmail}}",
            "in": "query",
            "name": "sendEmail",
            "schema": {
              "default": true,
              "example": false,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/send-email.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "newPassword": "CompanyLogin!3"
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "newPassword": {
                      "description": "New password.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "newPassword"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/password-response.yaml"
                  }
                }
              }
            },
            "description": "Password reset."
          },
          "204": {
            "content": {},
            "description": "With `sendEmail` set to `true`, the 204 indicates the user's password was successfully reset."
          }
        },
        "summary": "Reset a user's password",
        "tags": [
          "User authentication settings"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each user. To get this value, run the [List users](https://techdocs.akamai.com/iam-api/reference/get-ui-identities) operation.",
        "example": "{{uiIdentityId}}",
        "in": "path",
        "name": "uiIdentityId",
        "required": true,
        "schema": {
          "example": "1-ABCDE",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/ui-identity-id-path.yaml"
        }
      }]
    },
    "/user-admin/ui-identities/{uiIdentityId}/set-password": {
      "post": {
        "description": "This operation sets a password for a user. This differs from [Reset a user's password](https://techdocs.akamai.com/iam-api/reference/post-reset-password) because this password may be used more than once, and isn't randomly generated.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/post-set-password"
        },
        "operationId": "post-set-password",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "newPassword": "CompanyLogin!3"
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "newPassword": {
                    "description": "New password.",
                    "example": "{{newPassword}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "newPassword"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/set-password-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "content": {},
            "description": "User's password successfully set."
          }
        },
        "summary": "Set a user's password",
        "tags": [
          "User authentication settings"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each user. To get this value, run the [List users](https://techdocs.akamai.com/iam-api/reference/get-ui-identities) operation.",
        "example": "{{uiIdentityId}}",
        "in": "path",
        "name": "uiIdentityId",
        "required": true,
        "schema": {
          "example": "1-ABCDE",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/ui-identity-id-path.yaml"
        }
      }]
    },
    "/user-admin/ui-identities/{uiIdentityId}/unlock": {
      "post": {
        "description": "This operation releases the lock on a user's account, allowing access to Control Center. The result shows in the user data as a read-only `isLocked`:`false` indicator. To prevent a user access to Control Center, run the [Lock a user's account](https://techdocs.akamai.com/iam-api/reference/post-ui-identity-lock) operation. This sets the `isLocked` indicator to `true`.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/post-ui-identity-unlock"
        },
        "operationId": "post-ui-identity-unlock",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "204": {
            "content": {},
            "description": "Account successfully unlocked."
          }
        },
        "summary": "Unlock a user's account",
        "tags": [
          "User authentication settings"
        ]
      },
      "parameters": [{
        "description": "Unique identifier for each user. To get this value, run the [List users](https://techdocs.akamai.com/iam-api/reference/get-ui-identities) operation.",
        "example": "{{uiIdentityId}}",
        "in": "path",
        "name": "uiIdentityId",
        "required": true,
        "schema": {
          "example": "1-ABCDE",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/ui-identity-id-path.yaml"
        }
      }]
    },
    "/user-profile": {
      "get": {
        "description": "This operation gets your profile information. To make changes to your profile, run the [Edit your profile](https://techdocs.akamai.com/iam-api/reference/put-user-profile-info) operation.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-user-profile"
        },
        "operationId": "get-user-profile",
        "parameters": [{
            "description": "Includes the list of your group and role assignments, `false` by default.",
            "example": "{{authGrants}}",
            "in": "query",
            "name": "authGrants",
            "required": false,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/auth-grants-query.yaml"
            }
          },
          {
            "description": "Includes product notifications you subscribe to, `false` by default.",
            "example": "{{notifications}}",
            "in": "query",
            "name": "notifications",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/notifications-query.yaml"
            }
          },
          {
            "description": "Includes information about actions such as `edit` or `delete` that you can take for the object, `false` by default. Don't confuse this with the `action` parameter, which applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-api/reference/put-user-profile-tfa) operation.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/qparams-actions-actions.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "actions": {
                    "delete": true,
                    "apiClient": true,
                    "edit": true,
                    "isCloneable": false,
                    "resetPassword": true,
                    "thirdPartyAccess": true
                  },
                  "additionalAuthentication": "TFA",
                  "additionalAuthenticationConfigured": false,
                  "address": "first Street",
                  "authGrants": [{
                    "groupId": 12345,
                    "groupName": "Internet Company",
                    "roleDescription": "A newly create role.",
                    "roleId": 16,
                    "roleName": "Publisher"
                  }],
                  "city": "Santa Clara",
                  "contactType": "Billing",
                  "country": "USA",
                  "email": "jsmith@example.com",
                  "firstName": "John",
                  "isLocked": false,
                  "jobTitle": "Engineer",
                  "lastLoginDate": "2016-01-13T17:53:57Z",
                  "lastName": "Smith",
                  "mobilePhone": "3456787657",
                  "notifications": {
                    "options": {
                      "apiClientCredentialExpiryNotification": false,
                      "newUserNotification": true,
                      "passwordExpiry": true,
                      "proactive": [
                        "EdgeScape",
                        "EdgeSuite (HTTP Content Delivery)"
                      ],
                      "upgrade": [
                        "NetStorage",
                        "Other Upgrade Notifications (Planned)"
                      ]
                    },
                    "enableEmailNotifications": true
                  },
                  "passwordExpiryDate": "2018-01-13T17:53:57Z",
                  "phone": "3456788765",
                  "preferredLanguage": "English",
                  "secondaryEmail": "john-smith@example.com",
                  "sessionTimeOut": 30,
                  "state": "CA",
                  "timeZone": "GMT",
                  "uiIdentityId": "A-B-123456",
                  "uiUserName": "jsmith@example.com",
                  "zipCode": "34567"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information about each user.",
                  "properties": {
                    "accountId": {
                      "description": "Unique identifier for each account.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-api/reference/put-user-profile-tfa) operation.",
                      "properties": {
                        "delete": {
                          "description": "Whether the user is deletable.",
                          "type": "boolean"
                        },
                        "apiClient": {
                          "description": "Enables the administrator to create an API client.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether the user is editable.",
                          "type": "boolean"
                        },
                        "isCloneable": {
                          "description": "Enables an administrator to create a new user with permissions cloned from this user.",
                          "type": "boolean"
                        },
                        "resetPassword": {
                          "description": "Enables an administrator to send a user a password by email or see a one-time token.",
                          "type": "boolean"
                        },
                        "thirdPartyAccess": {
                          "description": "Enables the administrator to manage extended access.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "edit",
                        "resetPassword",
                        "isCloneable",
                        "thirdPartyAccess",
                        "apiClient"
                      ],
                      "type": "object"
                    },
                    "additionalAuthentication": {
                      "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.",
                      "enum": [
                        "TFA",
                        "MFA",
                        "NONE"
                      ],
                      "type": "string"
                    },
                    "additionalAuthenticationConfigured": {
                      "description": "Whether the user has multi-factor authentication configured.",
                      "type": "boolean"
                    },
                    "address": {
                      "description": "The user's street address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "authGrants": {
                      "description": "A user's role assignments, per group.",
                      "items": {
                        "additionalProperties": false,
                        "description": "A user's role assignments, per group.",
                        "properties": {
                          "groupId": {
                            "description": "Unique identifier for each group. It's returned only for group roles.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "groupName": {
                            "description": "Descriptive label for the group.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "isBlocked": {
                            "description": "Whether a user's access to a group is blocked.",
                            "type": "boolean"
                          },
                          "roleDescription": {
                            "description": "Descriptive label for the role to convey its use.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "roleId": {
                            "description": "Unique identifier for each role.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "roleName": {
                            "description": "Descriptive label for the role.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "subGroups": {
                            "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                            "items": {
                              "additionalProperties": true,
                              "description": "A further nested group.",
                              "properties": {},
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/groups-nested.yaml"
                              }
                            },
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "roleId",
                          "roleName"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/auth-grant-response.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "city": {
                      "description": "The user's city.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "contactType": {
                      "description": "User's contact type.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "country": {
                      "description": "User's country.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "email": {
                      "description": "The user's email address.",
                      "format": "email",
                      "type": "string"
                    },
                    "emailUpdatePending": {
                      "description": "Whether there are any pending changes to the email address.",
                      "type": "boolean"
                    },
                    "firstName": {
                      "description": "The user's first name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "isLocked": {
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).",
                      "type": "boolean"
                    },
                    "jobTitle": {
                      "description": "The user's position at the company.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "lastLoginDate": {
                      "description": "ISO 8601 timestamp indicating when the user last logged in.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastName": {
                      "description": "The user's surname.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mobilePhone": {
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "notifications": {
                      "additionalProperties": false,
                      "description": "Specifies email notifications the user receives for products.",
                      "properties": {
                        "options": {
                          "additionalProperties": false,
                          "description": "Specifies email notifications settings.",
                          "properties": {
                            "apiClientCredentialExpiryNotification": {
                              "description": "Whether the user gets notifications for expiring API client credentials.",
                              "type": "boolean"
                            },
                            "newUserNotification": {
                              "description": "Whether group administrators get notifications when the user creates other new users.",
                              "type": "boolean"
                            },
                            "passwordExpiry": {
                              "description": "Whether the user gets notifications for password expiration.",
                              "type": "boolean"
                            },
                            "proactive": {
                              "description": "Products for which the user gets notifications for service issues.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            },
                            "upgrade": {
                              "description": "Products for which the user receives notifications for upgrades.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            }
                          },
                          "required": [
                            "upgrade",
                            "proactive",
                            "passwordExpiry",
                            "newUserNotification",
                            "apiClientCredentialExpiryNotification"
                          ],
                          "type": "object"
                        },
                        "enableEmailNotifications": {
                          "description": "Enables email notifications.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "options",
                        "enableEmailNotifications"
                      ],
                      "type": "object"
                    },
                    "passwordExpiryDate": {
                      "description": "The date a user's password expires.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "phone": {
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "preferredLanguage": {
                      "description": "The user's language.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "secondaryEmail": {
                      "description": "The user's alternate email address.",
                      "format": "email",
                      "type": "string"
                    },
                    "sessionTimeOut": {
                      "description": "The number of seconds it takes for the user's Control Center session to time out after no activity.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "state": {
                      "description": "The user's state or province if user's country is USA or Canada.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "tfaConfigured": {
                      "description": "Whether TFA is configured.",
                      "type": "boolean"
                    },
                    "tfaEnabled": {
                      "description": "Whether TFA is enabled.",
                      "type": "boolean"
                    },
                    "timeZone": {
                      "description": "The user's time zone. To get the available values, run the [View time zones](https://techdocs.akamai.com/iam-api/reference/get-common-timezones) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uiIdentityId": {
                      "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uiUserName": {
                      "description": "The user's username in Control Center.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "zipCode": {
                      "description": "The user's five-digit postal code, represented as a string.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "uiIdentityId",
                    "firstName",
                    "lastName",
                    "email",
                    "additionalAuthentication",
                    "country",
                    "address",
                    "timeZone",
                    "additionalAuthenticationConfigured"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/user-response.yaml"
                  }
                }
              }
            },
            "description": "The response provides your profile."
          }
        },
        "summary": "View your profile",
        "tags": [
          "Profile"
        ]
      }
    },
    "/user-profile/additionalAuthentication": {
      "put": {
        "description": "This operation sets multi-factor authentication to `TFA`, `MFA`, or `NONE`. You have five login attempts with MFA or 2FA before your account is locked. If your account is locked, use the [Reset multi-factor authentication for your user profile](https://techdocs.akamai.com/iam-api/reference/put-user-profile-reset-additional-authentication) operation to unlock it.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/put-user-profile-additional-authentication"
        },
        "operationId": "put-user-profile-additional-authentication",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "value": "TFA"
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "value": {
                    "description": "A user's multi-factor authentication method, either `TFA`, `MFA`, or `NONE`.",
                    "enum": [
                      "TFA",
                      "MFA",
                      "NONE"
                    ],
                    "example": "{{value}}",
                    "type": "string"
                  }
                },
                "required": [
                  "value"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/additional-authentication-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "content": {},
            "description": "Authentication successfully set."
          }
        },
        "summary": "Set multi-factor authentication for your user profile",
        "tags": [
          "User authentication settings"
        ]
      }
    },
    "/user-profile/additionalAuthentication/reset": {
      "put": {
        "description": "This operation resets your multi-factor authentication.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/put-user-profile-reset-additional-authentication"
        },
        "operationId": "put-user-profile-reset-additional-authentication",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "204": {
            "content": {},
            "description": "Authentication successfully reset."
          }
        },
        "summary": "Reset multi-factor authentication for your user profile",
        "tags": [
          "User authentication settings"
        ]
      }
    },
    "/user-profile/basic-info": {
      "put": {
        "description": "This operation updates your basic profile information, such as your name or phone number. To edit detailed settings, run the [Update your notifications](https://techdocs.akamai.com/iam-api/reference/put-user-profile-notifications) or [Modify a user's group and role assignments](https://techdocs.akamai.com/iam-api/reference/put-ui-uiidentity-auth-grants) operations.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/put-user-profile-info"
        },
        "operationId": "put-user-profile-info",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "additionalAuthentication": "TFA",
                "address": "first Street",
                "city": "Santa Clara",
                "contactType": "Billing",
                "country": "USA",
                "firstName": "John",
                "jobTitle": "Engineer",
                "lastName": "Smith",
                "mobilePhone": "3456787657",
                "phone": "3456788765",
                "preferredLanguage": "English",
                "secondaryEmail": "john.smith@example.com",
                "sessionTimeOut": 30,
                "state": "CA",
                "timeZone": "GMT",
                "zipCode": "34567"
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "additionalAuthentication": {
                    "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.",
                    "enum": [
                      "TFA",
                      "MFA",
                      "NONE"
                    ],
                    "example": "{{additionalAuthentication}}",
                    "type": "string"
                  },
                  "address": {
                    "description": "The user's street address.",
                    "example": "{{address}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "city": {
                    "description": "The user's city.",
                    "example": "{{city}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "contactType": {
                    "description": "User's contact type. To get the available values, run the [View contact types](https://techdocs.akamai.com/iam-api/reference/get-common-contact-types) operation.",
                    "example": "{{contactType}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "country": {
                    "description": "User's country. To get the available values, run the [View supported countries](https://techdocs.akamai.com/iam-api/reference/get-common-countries) operation.",
                    "example": "{{country}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "email": {
                    "description": "The user's email address.",
                    "example": "{{email}}",
                    "format": "email",
                    "type": "string"
                  },
                  "firstName": {
                    "description": "The user's first name.",
                    "example": "{{firstName}}",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  },
                  "jobTitle": {
                    "description": "The user's position at the company.",
                    "example": "{{jobTitle}}",
                    "maxLength": 75,
                    "minLength": 1,
                    "type": "string"
                  },
                  "lastName": {
                    "description": "The user's surname.",
                    "example": "{{lastName}}",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  },
                  "mobilePhone": {
                    "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`. For example, `+3551234567891` or `+441234567891`. For Canadian and US phone numbers, you can provide them with a country code (for example, `+11234567891`) or without it as a ten-digit integer within a string (for example, `1234567891`).",
                    "example": "{{mobilePhone}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "phone": {
                    "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`. For example, `+3551234567891` or `+441234567891`. For Canadian and US phone numbers, you can provide them with a country code (for example, `+11234567891`) or without it as a ten-digit integer within a string (for example, `1234567891`).",
                    "example": "{{phone}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "preferredLanguage": {
                    "description": "The user's language. To get the available values, run the [View languages](https://techdocs.akamai.com/iam-api/reference/get-common-languages) operation.",
                    "example": "{{preferredLanguage}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "secondaryEmail": {
                    "description": "The user's alternate email address.",
                    "example": "{{secondaryEmail}}",
                    "format": "email",
                    "type": "string"
                  },
                  "sessionTimeOut": {
                    "description": "The number of seconds it takes for the user's Control Center session to time out after no activity. To get the available values, run the [View timeout policies](https://techdocs.akamai.com/iam-api/reference/get-common-timeout-policies) operation.",
                    "example": "{{sessionTimeOut}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "state": {
                    "description": "The user's state or province if user's country is USA or Canada. To get the available values, run the [View states for a user profile](https://techdocs.akamai.com/iam-api/reference/get-user-states) operation.",
                    "example": "{{state}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "timeZone": {
                    "description": "The user's time zone. To get the available values, run the [View time zones](https://techdocs.akamai.com/iam-api/reference/get-common-timezones) operation.",
                    "example": "{{timeZone}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "zipCode": {
                    "description": "The user's five-digit postal code, represented as a string.",
                    "example": "{{zipCode}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "country",
                  "preferredLanguage",
                  "sessionTimeOut",
                  "timeZone"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/update-user-basic-info-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "additionalAuthentication": "TFA",
                  "additionalAuthenticationConfigured": false,
                  "address": "first Street",
                  "city": "Santa Clara",
                  "contactType": "Billing",
                  "country": "USA",
                  "email": "jsmith@example.com",
                  "firstName": "John",
                  "isLocked": false,
                  "jobTitle": "Engineer",
                  "lastLoginDate": "2016-04-12T20:54:24.000Z",
                  "lastName": "Smith",
                  "mobilePhone": "3456787657",
                  "passwordExpiryDate": "2023-04-12T20:54:24.000Z",
                  "phone": "3456788765",
                  "preferredLanguage": "English",
                  "secondaryEmail": "john-smith@example.com",
                  "sessionTimeOut": 30,
                  "state": "CA",
                  "timeZone": "GMT",
                  "uiIdentityId": "1-ABCDE",
                  "uiUserName": "jsmith",
                  "zipCode": "34567"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information about each user.",
                  "properties": {
                    "accountId": {
                      "description": "Unique identifier for each account.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-api/reference/put-user-profile-tfa) operation.",
                      "properties": {
                        "delete": {
                          "description": "Whether the user is deletable.",
                          "type": "boolean"
                        },
                        "apiClient": {
                          "description": "Enables the administrator to create an API client.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether the user is editable.",
                          "type": "boolean"
                        },
                        "isCloneable": {
                          "description": "Enables an administrator to create a new user with permissions cloned from this user.",
                          "type": "boolean"
                        },
                        "resetPassword": {
                          "description": "Enables an administrator to send a user a password by email or see a one-time token.",
                          "type": "boolean"
                        },
                        "thirdPartyAccess": {
                          "description": "Enables the administrator to manage extended access.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "edit",
                        "resetPassword",
                        "isCloneable",
                        "thirdPartyAccess",
                        "apiClient"
                      ],
                      "type": "object"
                    },
                    "additionalAuthentication": {
                      "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.",
                      "enum": [
                        "TFA",
                        "MFA",
                        "NONE"
                      ],
                      "type": "string"
                    },
                    "additionalAuthenticationConfigured": {
                      "description": "Whether the user has multi-factor authentication configured.",
                      "type": "boolean"
                    },
                    "address": {
                      "description": "The user's street address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "authGrants": {
                      "description": "A user's role assignments, per group.",
                      "items": {
                        "additionalProperties": false,
                        "description": "A user's role assignments, per group.",
                        "properties": {
                          "groupId": {
                            "description": "Unique identifier for each group. It's returned only for group roles.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "groupName": {
                            "description": "Descriptive label for the group.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "isBlocked": {
                            "description": "Whether a user's access to a group is blocked.",
                            "type": "boolean"
                          },
                          "roleDescription": {
                            "description": "Descriptive label for the role to convey its use.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "roleId": {
                            "description": "Unique identifier for each role.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "roleName": {
                            "description": "Descriptive label for the role.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "subGroups": {
                            "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                            "items": {
                              "additionalProperties": true,
                              "description": "A further nested group.",
                              "properties": {},
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/groups-nested.yaml"
                              }
                            },
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "roleId",
                          "roleName"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/auth-grant-response.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "city": {
                      "description": "The user's city.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "contactType": {
                      "description": "User's contact type.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "country": {
                      "description": "User's country.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "email": {
                      "description": "The user's email address.",
                      "format": "email",
                      "type": "string"
                    },
                    "emailUpdatePending": {
                      "description": "Whether there are any pending changes to the email address.",
                      "type": "boolean"
                    },
                    "firstName": {
                      "description": "The user's first name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "isLocked": {
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).",
                      "type": "boolean"
                    },
                    "jobTitle": {
                      "description": "The user's position at the company.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "lastLoginDate": {
                      "description": "ISO 8601 timestamp indicating when the user last logged in.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastName": {
                      "description": "The user's surname.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mobilePhone": {
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "notifications": {
                      "additionalProperties": false,
                      "description": "Specifies email notifications the user receives for products.",
                      "properties": {
                        "options": {
                          "additionalProperties": false,
                          "description": "Specifies email notifications settings.",
                          "properties": {
                            "apiClientCredentialExpiryNotification": {
                              "description": "Whether the user gets notifications for expiring API client credentials.",
                              "type": "boolean"
                            },
                            "newUserNotification": {
                              "description": "Whether group administrators get notifications when the user creates other new users.",
                              "type": "boolean"
                            },
                            "passwordExpiry": {
                              "description": "Whether the user gets notifications for password expiration.",
                              "type": "boolean"
                            },
                            "proactive": {
                              "description": "Products for which the user gets notifications for service issues.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            },
                            "upgrade": {
                              "description": "Products for which the user receives notifications for upgrades.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            }
                          },
                          "required": [
                            "upgrade",
                            "proactive",
                            "passwordExpiry",
                            "newUserNotification",
                            "apiClientCredentialExpiryNotification"
                          ],
                          "type": "object"
                        },
                        "enableEmailNotifications": {
                          "description": "Enables email notifications.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "options",
                        "enableEmailNotifications"
                      ],
                      "type": "object"
                    },
                    "passwordExpiryDate": {
                      "description": "The date a user's password expires.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "phone": {
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "preferredLanguage": {
                      "description": "The user's language.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "secondaryEmail": {
                      "description": "The user's alternate email address.",
                      "format": "email",
                      "type": "string"
                    },
                    "sessionTimeOut": {
                      "description": "The number of seconds it takes for the user's Control Center session to time out after no activity.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "state": {
                      "description": "The user's state or province if user's country is USA or Canada.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "tfaConfigured": {
                      "description": "Whether TFA is configured.",
                      "type": "boolean"
                    },
                    "tfaEnabled": {
                      "description": "Whether TFA is enabled.",
                      "type": "boolean"
                    },
                    "timeZone": {
                      "description": "The user's time zone. To get the available values, run the [View time zones](https://techdocs.akamai.com/iam-api/reference/get-common-timezones) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uiIdentityId": {
                      "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uiUserName": {
                      "description": "The user's username in Control Center.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "zipCode": {
                      "description": "The user's five-digit postal code, represented as a string.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "uiIdentityId",
                    "firstName",
                    "lastName",
                    "email",
                    "additionalAuthentication",
                    "country",
                    "address",
                    "timeZone",
                    "additionalAuthenticationConfigured"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/user-response.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the user's modified profile."
          }
        },
        "summary": "Edit your profile",
        "tags": [
          "Profile"
        ]
      }
    },
    "/user-profile/change-password": {
      "post": {
        "description": "This operation changes your password. Include your old password and your new password in the request body. Before you create your new password, run the [View password policy](https://techdocs.akamai.com/iam-api/reference/get-common-password-policy) operation to ensure it adheres to your policy. If you include your existing password incorrectly and make too many login attempts, your account locks.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/post-profile-change-password"
        },
        "operationId": "post-profile-change-password",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "currentPassword": "CompanyLogin!3",
                "newPassword": "CompanyLogin!3"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Uses the old password to authenticate you are who you say you are when you update your password. Includes the new password.",
                "properties": {
                  "currentPassword": {
                    "description": "Your existing password.",
                    "example": "{{currentPassword}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "newPassword": {
                    "description": "New password.",
                    "example": "{{newPassword}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "currentPassword",
                  "newPassword"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/change-password-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "content": {},
            "description": "Password successfully rotated."
          }
        },
        "summary": "Rotate your password",
        "tags": [
          "User authentication settings"
        ]
      }
    },
    "/user-profile/common/contact-types": {
      "get": {
        "description": "This operation lists the supported contact types. Users should use the values from this operation to add or update their `contactType`. Administrators should run the [View contact types](https://techdocs.akamai.com/iam-api/reference/get-common-contact-types) operation before modifying a user's contact type.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-user-contact-types"
        },
        "operationId": "get-user-contact-types",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  "Billing",
                  "Technical Decision Maker",
                  "Business Decision Maker",
                  "Security"
                ],
                "schema": {
                  "items": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-string.yaml"
                  }
                }
              }
            },
            "description": "The response provides the supported contact types."
          }
        },
        "summary": "View contact types for a user profile",
        "tags": [
          "Contact types"
        ]
      }
    },
    "/user-profile/common/countries": {
      "get": {
        "description": "This operation lists the supported countries. Users should use the values from this operation to add or update their `country`. Administrators should run the [View supported countries](https://techdocs.akamai.com/iam-api/reference/get-common-countries) operation before modifying a user's country.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-user-countries"
        },
        "operationId": "get-user-countries",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  "Lao People's Democratic Republ",
                  "Greece",
                  "Greenland",
                  "Grenada",
                  "Tanzania, United Republic of",
                  "Thailand",
                  "Togo",
                  "Tokelau",
                  "Tonga",
                  "Djibouti",
                  "Dominica",
                  "Christmas Island",
                  "Cocos (Keeling) Islands",
                  "Colombia",
                  "Comoros",
                  "Curacao"
                ],
                "schema": {
                  "items": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-string.yaml"
                  }
                }
              }
            },
            "description": "The response provides the supported countries."
          }
        },
        "summary": "View supported countries for a user profile",
        "tags": [
          "Locale"
        ]
      }
    },
    "/user-profile/common/countries/{country}/states": {
      "get": {
        "description": "This operation lists the supported U.S. states or Canadian provinces. Users should use the values from this operation to add or update their `state`. Administrators should run the [View states](https://techdocs.akamai.com/iam-api/reference/get-common-states) operation before modifying a user's state.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-user-states"
        },
        "operationId": "get-user-states",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  "AB",
                  "BC",
                  "PQ",
                  "NS",
                  "NT",
                  "NU",
                  "QC",
                  "YK",
                  "NB",
                  "MB",
                  "PE",
                  "TBD",
                  "NF",
                  "SK",
                  "ON"
                ],
                "schema": {
                  "items": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-string.yaml"
                  }
                }
              }
            },
            "description": "The response provides the supported U.S. states or Canadian provinces."
          }
        },
        "summary": "View states for a user profile",
        "tags": [
          "Locale"
        ]
      },
      "parameters": [{
        "description": "Filters the results by country, but only returns lists of states and provinces for `USA` and `Canada`.",
        "example": "{{country}}",
        "in": "path",
        "name": "country",
        "required": true,
        "schema": {
          "example": "canada",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/country-path.yaml"
        }
      }]
    },
    "/user-profile/common/notification-products": {
      "get": {
        "description": "This operation lists the products a user can subscribe to and receive notifications for on the account. The account is determined by the tokens in your API client. Users should use the values from this operation to set their product notifications. Administrators should run the [View products](https://techdocs.akamai.com/iam-api/reference/get-common-notification-products) operation before setting a user's product notifications.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-user-notification-products"
        },
        "operationId": "get-user-notification-products",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  "EdgeComputing for Java",
                  "Streaming",
                  "Enhanced DNS",
                  "Site Delivery",
                  "Secure FreeFlow (HTTPS Content Delivery using ARLs)",
                  "Log Delivery Service",
                  "Site Acceleration",
                  "Web Application Accelerator",
                  "EdgeScape",
                  "Security",
                  "NetStorage"
                ],
                "schema": {
                  "items": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-string.yaml"
                  }
                }
              }
            },
            "description": "The response provides the supported products."
          }
        },
        "summary": "View products for a user profile",
        "tags": [
          "Products"
        ]
      }
    },
    "/user-profile/common/password-policy": {
      "get": {
        "description": "This operation lists the password policy for the account. The account is determined by the tokens in your API client. Users should use the values from this operation to set their password policy.  Administrators should run the [View password policy](https://techdocs.akamai.com/iam-api/reference/get-common-password-policy) operation before setting a user's password policy.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-user-password-policy"
        },
        "operationId": "get-user-password-policy",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "caseDif": 0,
                  "maxRepeating": 2,
                  "minDigits": 1,
                  "minLength": 8,
                  "minLetters": 1,
                  "minNonAlpha": 0,
                  "minReuse": 4,
                  "pwclass": "aka90",
                  "rotateFrequency": 90
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates all information for a password policy.",
                  "properties": {
                    "caseDif": {
                      "description": "The number of characters that, at minimum, need to be in a different case. For example, a value of 1 means at least one letter needs to be uppercase if the rest are lowercase.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "maxRepeating": {
                      "description": "The maximum allowed number of repeating characters.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minDigits": {
                      "description": "The minimum number of digits in a password.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minLength": {
                      "description": "The minimum length of a password.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minLetters": {
                      "description": "The minimum number of letters in a password.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minNonAlpha": {
                      "description": "The minimum number of non-alphabetic characters in a password.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minReuse": {
                      "description": "The minimum number of previous passwords to retain to prevent password reuse.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "pwclass": {
                      "description": "Unique identifier for a password policy.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "rotateFrequency": {
                      "description": "The number of days a password is valid.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "pwclass",
                    "minLength",
                    "minLetters",
                    "minDigits",
                    "caseDif",
                    "minNonAlpha",
                    "maxRepeating",
                    "minReuse"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/portal-password-class.yaml"
                  }
                }
              }
            },
            "description": "The response provides the password policy."
          }
        },
        "summary": "View password policy for a user profile",
        "tags": [
          "Policies"
        ]
      }
    },
    "/user-profile/common/supported-languages": {
      "get": {
        "description": "This operation lists the supported languages. Users should use the values from this operation to set their preferred language. Administrators should run the [View languages](https://techdocs.akamai.com/iam-api/reference/get-common-languages) operation before setting a user's preferred language.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-user-languages"
        },
        "operationId": "get-user-languages",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  "Deutsch",
                  "English",
                  "Espa\u00f1ol",
                  "Espa\u00f1ol (Espa\u00f1a)",
                  "Fran\u00e7ais",
                  "Italiano",
                  "Portugu\u00eas",
                  "\u4e2d\u6587 (\u7b80\u4f53)",
                  "\u4e2d\u6587 (\u7e41\u9ad4)",
                  "\u65e5\u672c\u8a9e",
                  "\ud55c\uad6d\uc5b4"
                ],
                "schema": {
                  "items": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-string.yaml"
                  }
                }
              }
            },
            "description": "The response provides the supported languages."
          }
        },
        "summary": "View languages for a user profile",
        "tags": [
          "Locale"
        ]
      }
    },
    "/user-profile/common/timeout-policies": {
      "get": {
        "description": "This operation lists the supported session timeout policies. The `name` for each timeout period is in minutes, and the time `value` is in seconds. Users should use the values from this operation to set their `sessionTimeout`. Administrators should run the [View timeout policies](https://techdocs.akamai.com/iam-api/reference/get-common-timeout-policies) operation before setting a user's timeout policy.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-user-timeout-policies"
        },
        "operationId": "get-user-timeout-policies",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                    "name": "after15Minutes",
                    "value": 900
                  },
                  {
                    "name": "after30Minutes",
                    "value": 1800
                  },
                  {
                    "name": "after45Minutes",
                    "value": 2700
                  },
                  {
                    "name": "after1Hour",
                    "value": 3600
                  },
                  {
                    "name": "after2Hours",
                    "value": 7200
                  },
                  {
                    "name": "after4Hours",
                    "value": 14400
                  },
                  {
                    "name": "after18Hours",
                    "value": 64800
                  }
                ],
                "schema": {
                  "description": "Specifies session timeout policy options that can be assigned to each user.",
                  "items": {
                    "additionalProperties": false,
                    "description": "Specifies session timeout policy options that can be assigned to users.",
                    "properties": {
                      "name": {
                        "description": "Descriptive name for the timeout.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "value": {
                        "description": "Number of seconds until session timeout.",
                        "minimum": 0,
                        "type": "integer"
                      }
                    },
                    "required": [
                      "name",
                      "value"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/session-timeout-policy.yaml"
                    }
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-session-timeout-policy.yaml"
                  }
                }
              }
            },
            "description": "This operation lists the supported session timeout policies."
          }
        },
        "summary": "View timeout policies for a user profile",
        "tags": [
          "Policies"
        ]
      }
    },
    "/user-profile/common/timezones": {
      "get": {
        "description": "This operation lists the supported time zones in the ISO 8601 format. Users should use the values from this operation to set their `timeZone`. Administrators should run the [View time zones](https://techdocs.akamai.com/iam-api/reference/get-common-timezones) operation before setting a user's time zone.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-user-timezones"
        },
        "operationId": "get-user-timezones",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                    "description": "Asia/Rangoon GMT+6",
                    "offset": "+6",
                    "posix": "Asia/Rangoon",
                    "timezone": "Asia/Rangoon"
                  },
                  {
                    "description": "Australia/Sydney GMT+10",
                    "offset": "+10",
                    "posix": "Australia/Sydney",
                    "timezone": "Australia/Sydney"
                  },
                  {
                    "description": "Etc/GMT+3",
                    "offset": "+3",
                    "posix": "Etc/GMT-3",
                    "timezone": "Etc/GMT+3"
                  }
                ],
                "schema": {
                  "description": "Specifies time zones that can be assigned to each user.",
                  "items": {
                    "additionalProperties": false,
                    "description": "Specifies time zones that can be assigned to each user.",
                    "properties": {
                      "description": {
                        "description": "Descriptive label for the time zone, including the `+` or `-` offset from GMT.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "offset": {
                        "description": "The time zone offset from GMT.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "posix": {
                        "description": "The time zone posix.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "timezone": {
                        "description": "The time zone ID.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "timezone",
                      "description"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/time-zone.yaml"
                    }
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/list-of-time-zones.yaml"
                  }
                }
              }
            },
            "description": "The response provides the supported time zones."
          }
        },
        "summary": "View time zones for a user profile",
        "tags": [
          "Locale"
        ]
      }
    },
    "/user-profile/notifications": {
      "put": {
        "description": "This operation subscribes to notifications emails for password expiration reminders, proactive maintenance emails, and upgrade notification emails.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/put-user-profile-notifications"
        },
        "operationId": "put-user-profile-notifications",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "options": {
                  "apiClientCredentialExpiryNotification": true,
                  "newUserNotification": true,
                  "passwordExpiry": true,
                  "proactive": [
                    "EdgeScape",
                    "EdgeSuite (HTTP Content Delivery)"
                  ],
                  "upgrade": [
                    "NetStorage",
                    "Other Upgrade Notifications (Planned)"
                  ]
                },
                "enableEmailNotifications": true
              },
              "schema": {
                "additionalProperties": false,
                "description": "Encapsulates the types of email notifications you can receive.",
                "properties": {
                  "options": {
                    "additionalProperties": false,
                    "description": "Specifies email notifications settings.",
                    "properties": {
                      "apiClientCredentialExpiryNotification": {
                        "description": "Enables notifications for expiring API client credentials.",
                        "type": "boolean"
                      },
                      "newUserNotification": {
                        "description": "Enables notifications for group administrators when the user creates other new users.",
                        "type": "boolean"
                      },
                      "passwordExpiry": {
                        "description": "Enables notifications for expiring passwords.",
                        "type": "boolean"
                      },
                      "proactive": {
                        "description": "Products for which the user gets notifications for service issues.",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "minItems": 0,
                        "type": "array"
                      },
                      "upgrade": {
                        "description": "Products for which the user receives notifications for upgrades.",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "minItems": 0,
                        "type": "array"
                      }
                    },
                    "required": [
                      "passwordExpiry",
                      "proactive",
                      "upgrade"
                    ],
                    "type": "object"
                  },
                  "enableEmailNotifications": {
                    "description": "Enables email notifications.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "enableEmailNotifications",
                  "options"
                ],
                "x-akamai": {
                  "file-path": "schemas/notifications-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "options": {
                    "apiClientCredentialExpiryNotification": true,
                    "newUserNotification": true,
                    "passwordExpiry": true,
                    "proactive": [
                      "EdgeScape",
                      "EdgeSuite (HTTP Content Delivery)"
                    ],
                    "upgrade": [
                      "NetStorage",
                      "Other Upgrade Notifications (Planned)"
                    ]
                  },
                  "enableEmailNotifications": true
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates the types of email notifications you can receive.",
                  "properties": {
                    "options": {
                      "additionalProperties": false,
                      "description": "Specifies email notifications settings.",
                      "properties": {
                        "apiClientCredentialExpiryNotification": {
                          "description": "Whether the user gets notifications for expiring API client credentials.",
                          "type": "boolean"
                        },
                        "newUserNotification": {
                          "description": "Whether group administrators get notifications when the user creates other new users.",
                          "type": "boolean"
                        },
                        "passwordExpiry": {
                          "description": "Whether the user gets notifications for password expiration.",
                          "type": "boolean"
                        },
                        "proactive": {
                          "description": "Products for which the user gets notifications for service issues.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "upgrade": {
                          "description": "Products for which the user receives notifications for upgrades.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "newUserNotification",
                        "passwordExpiry",
                        "proactive",
                        "upgrade",
                        "apiClientCredentialExpiryNotification"
                      ],
                      "type": "object"
                    },
                    "enableEmailNotifications": {
                      "description": "Enables email notifications.",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "options",
                    "enableEmailNotifications"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/notifications-response.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the modified notifications emails."
          }
        },
        "summary": "Update your notifications",
        "tags": [
          "User notifications"
        ]
      }
    },
    "/users": {
      "get": {
        "description": "This operation lists authorized API client users.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-api-clients-users"
        },
        "operationId": "get-api-clients-users",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                    "email": "hgildong@example.com",
                    "firstName": "Mon",
                    "lastName": "Arch",
                    "uiIdentityId": "B-C-IYSLYL",
                    "username": "hgildong"
                  },
                  {
                    "email": "jsmith@example.com",
                    "firstName": "john",
                    "lastName": "smith",
                    "uiIdentityId": "B-P-2SGTC09",
                    "username": "jsmith"
                  }
                ],
                "schema": {
                  "description": "Authorized user on an account.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "email": {
                        "description": "The user's email address.",
                        "format": "email",
                        "type": "string"
                      },
                      "firstName": {
                        "description": "The user's first name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "lastName": {
                        "description": "The user's surname.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "uiIdentityId": {
                        "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "username": {
                        "description": "The user's Control Center sign-in name.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "email",
                      "firstName",
                      "lastName",
                      "uiIdentityId",
                      "username"
                    ],
                    "type": "object"
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/authorized-users.yaml"
                  }
                }
              }
            },
            "description": "The response provides the authorized users."
          }
        },
        "summary": "List authorized users",
        "tags": [
          "Helper"
        ]
      }
    },
    "/users/{username}/allowed-apis": {
      "get": {
        "description": "This operation lists available APIs for a user.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-allowed-apis"
        },
        "operationId": "get-api-clients-users-allowed-apis",
        "parameters": [{
            "description": "__Enum__ Filters data by client type, either `USER_CLIENT`, `SERVICE_ACCOUNT`, or default `CLIENT`.",
            "example": "{{clientType}}",
            "in": "query",
            "name": "clientType",
            "schema": {
              "default": "CLIENT",
              "enum": [
                "USER_CLIENT",
                "SERVICE_ACCOUNT",
                "CLIENT"
              ],
              "example": "CLIENT",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/client-type-query.yaml"
            }
          },
          {
            "description": "Includes account a user can switch to, `false` by default.",
            "example": "{{allowAccountSwitch}}",
            "in": "query",
            "name": "allowAccountSwitch",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/allow-account-switch-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                    "accessLevels": [
                      "READ-WRITE"
                    ],
                    "apiId": 146,
                    "apiName": "Property Manager (PAPI)",
                    "description": "Property Manager (PAPI). PAPI requires access to Edge Hostnames. Please edit your authorizations to add HAPI to your API Client.",
                    "documentationUrl": "https://developer.akamai.com/api/luna/papi/overview.html",
                    "endPoint": "/papi",
                    "hasAccess": true,
                    "serviceProviderId": 1
                  },
                  {
                    "accessLevels": [
                      "READ-ONLY",
                      "READ-WRITE"
                    ],
                    "apiId": 11,
                    "apiName": "Event Center",
                    "description": "Event Center",
                    "documentationUrl": "https://developer.akamai.com/api/luna/events/overview.html",
                    "endPoint": "/events",
                    "hasAccess": true,
                    "serviceProviderId": 1
                  }
                ],
                "schema": {
                  "description": "APIs available to the user.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "accessLevels": {
                        "description": "API access levels, possible values are `READ-ONLY` and `READ-WRITE`.",
                        "items": {
                          "enum": [
                            "READ-ONLY",
                            "READ-WRITE"
                          ],
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "apiId": {
                        "description": "Unique identifier for each API.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "apiName": {
                        "description": "Descriptive label for the API.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "description": {
                        "description": "Descriptive label for the API.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "documentationUrl": {
                        "description": "Link to more information about the API.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "endPoint": {
                        "description": "Specifies where the API can access resources.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "hasAccess": {
                        "description": "Confirms access to the API.",
                        "type": "boolean"
                      },
                      "serviceProviderId": {
                        "description": "Unique identifier for the API's service provider.",
                        "minimum": 0,
                        "type": "integer"
                      }
                    },
                    "required": [
                      "description",
                      "accessLevels",
                      "apiId",
                      "apiName",
                      "documentationUrl",
                      "endPoint",
                      "hasAccess",
                      "serviceProviderId"
                    ],
                    "type": "object"
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/allowed-apis-response.yaml"
                  }
                }
              }
            },
            "description": "The response provides APIs available to the user."
          }
        },
        "summary": "List allowed APIs",
        "tags": [
          "Helper"
        ]
      },
      "parameters": [{
        "description": "Unique username for each user. To get this value, run the [List authorized users](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users) operation.",
        "example": "{{username}}",
        "in": "path",
        "name": "username",
        "required": true,
        "schema": {
          "example": "jsmith",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/username-path.yaml"
        }
      }]
    },
    "/users/{username}/allowed-cpcodes": {
      "post": {
        "description": "This operation lists available CP codes for a user.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/post-api-clients-users-allowed-cpcodes"
        },
        "operationId": "post-api-clients-users-allowed-cpcodes",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "clientType": "CLIENT",
                "groups": [{
                    "groupId": 32145,
                    "groupName": "Main Street Corporation",
                    "isBlocked": false,
                    "roleDescription": "CPCode RolePermissions Automation",
                    "roleId": 114492,
                    "roleName": "CP Code Automation role",
                    "subGroups": []
                  },
                  {
                    "groupId": 54321,
                    "groupName": "High Street Company",
                    "isBlocked": false,
                    "roleDescription": "Admin role and Authz Case Management read role",
                    "roleId": 142838,
                    "roleName": "Admin and Authz Case Management Read",
                    "subGroups": [{
                        "groupId": 12345,
                        "groupName": "Internet Company",
                        "parentGroupId": 19717,
                        "subGroups": []
                      },
                      {
                        "groupId": 54321,
                        "groupName": "Digital Company",
                        "parentGroupId": 19717,
                        "subGroups": []
                      }
                    ]
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "POST allowed CP codes.",
                "properties": {
                  "clientType": {
                    "default": "CLIENT",
                    "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.",
                    "enum": [
                      "CLIENT",
                      "USER_CLIENT",
                      "SERVICE_ACCOUNT"
                    ],
                    "example": "{{clientType}}",
                    "type": "string"
                  },
                  "groups": {
                    "description": "Groups the API client can access.",
                    "items": {
                      "additionalProperties": false,
                      "description": "Groups the API client can access.",
                      "properties": {
                        "groupId": {
                          "description": "Unique identifier for each group. To get this value, run the [List accessible groups](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-group-access) operation.",
                          "type": "integer"
                        },
                        "groupName": {
                          "description": "Descriptive label for the group.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "isBlocked": {
                          "description": "Blocks the API client access to the group's child groups.",
                          "type": "boolean"
                        },
                        "parentGroupId": {
                          "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                          "type": "integer"
                        },
                        "roleDescription": {
                          "description": "Descriptive label for the role to convey its use.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "roleId": {
                          "description": "Unique identifier for each role. To get this value, run the [List roles](https://techdocs.akamai.com/iam-api/reference/get-roles) operation.",
                          "type": "integer"
                        },
                        "roleName": {
                          "description": "Descriptive label for the role.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "subGroups": {
                          "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                          "items": {
                            "additionalProperties": true,
                            "description": "A further nested group.",
                            "properties": {},
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/groups-nested.yaml"
                            }
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "roleId",
                        "groupId"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array"
                  }
                },
                "required": [
                  "clientType",
                  "groups"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/allowed-cpcodes-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                    "name": "Stream Analyzer (36915)",
                    "value": 36915
                  },
                  {
                    "name": "plopessa-uvod-ns (373118)",
                    "value": 373118
                  },
                  {
                    "name": "ArunNS (866797)",
                    "value": 866797
                  },
                  {
                    "name": "1234 (933076)",
                    "value": 933076
                  }
                ],
                "schema": {
                  "description": "A schema for name value pair.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "description": "Descriptive label for the CP code.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "value": {
                        "description": "Unique identifier for the CP code.",
                        "minimum": 0,
                        "type": "integer"
                      }
                    },
                    "required": [
                      "name",
                      "value"
                    ],
                    "type": "object"
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/allowed-cpcodes-response.yaml"
                  }
                }
              }
            },
            "description": "The response provides CP codes available to the user."
          }
        },
        "summary": "List allowed CP codes",
        "tags": [
          "Helper"
        ]
      },
      "parameters": [{
        "description": "Unique username for each user. To get this value, run the [List authorized users](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users) operation.",
        "example": "{{username}}",
        "in": "path",
        "name": "username",
        "required": true,
        "schema": {
          "example": "jsmith",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/username-path.yaml"
        }
      }]
    },
    "/users/{username}/group-access": {
      "get": {
        "description": "This operation lists groups available to a user.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-api/reference/get-api-clients-users-group-access"
        },
        "operationId": "get-api-clients-users-group-access",
        "parameters": [{
          "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
          "example": "{{accountSwitchKey}}",
          "in": "query",
          "name": "accountSwitchKey",
          "required": false,
          "schema": {
            "example": "1-5C0YLB:1-8BYUX",
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [{
                    "groupId": 54321,
                    "groupName": "Main Street Corporation",
                    "isBlocked": false,
                    "roleDescription": "CPCode RolePermissions Automation",
                    "roleId": 114492,
                    "roleName": "CP Code Automation Role",
                    "subGroups": []
                  },
                  {
                    "groupId": 12345,
                    "groupName": "High Street Company",
                    "isBlocked": false,
                    "roleDescription": "Admin role and Authz Case Management Read role for PRTLDEVOPS-50807",
                    "roleId": 142838,
                    "roleName": "Admin plus Authz Case Management Read",
                    "subGroups": [{
                        "groupId": 32145,
                        "groupName": "Digital Company",
                        "parentGroupId": 19717,
                        "subGroups": []
                      },
                      {
                        "groupId": 54321,
                        "groupName": "Internet Company",
                        "parentGroupId": 19717,
                        "subGroups": []
                      }
                    ]
                  }
                ],
                "schema": {
                  "description": "Accessible groups.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "groupId": {
                        "description": "Unique identifier for each group.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "groupName": {
                        "description": "Descriptive label for the group.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "isBlocked": {
                        "description": "Whether a user's access to a group is blocked.",
                        "type": "boolean"
                      },
                      "roleDescription": {
                        "description": "Descriptive label for the role to convey its use.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "roleId": {
                        "description": "Unique identifier for each role.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "roleName": {
                        "description": "Descriptive label for the role.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "subGroups": {
                        "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                        "items": {
                          "additionalProperties": true,
                          "description": "A further nested group.",
                          "properties": {},
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/groups-nested.yaml"
                          }
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "groupId",
                      "groupName",
                      "isBlocked",
                      "roleDescription",
                      "roleId",
                      "roleName",
                      "subGroups"
                    ],
                    "type": "object"
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/group-access-response.yaml"
                  }
                }
              }
            },
            "description": "The response provides groups available to the user."
          }
        },
        "summary": "List accessible groups",
        "tags": [
          "Helper"
        ]
      },
      "parameters": [{
        "description": "Unique username for each user. To get this value, run the [List authorized users](https://techdocs.akamai.com/iam-api/reference/get-api-clients-users) operation.",
        "example": "{{username}}",
        "in": "path",
        "name": "username",
        "required": true,
        "schema": {
          "example": "jsmith",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/username-path.yaml"
        }
      }]
    }
  },
  "servers": [{
    "url": "https://{hostname}/identity-management/v3"
  }],
  "tags": [{
      "description": "Manage groups for your account. Groups are organizational containers for the objects you use in Control Center.",
      "name": "Groups"
    },
    {
      "description": "Move nested groups within the same parent hierarchy.",
      "name": "Move groups"
    },
    {
      "description": "Fetch properties and includes used by an account with their details, including their users.",
      "name": "Assets"
    },
    {
      "description": "Fetch resources used by a property or include.",
      "name": "Resources"
    },
    {
      "description": "Create and manage the roles for an account. Roles are lists of permissions that are explicitly tied to both a user and a group.",
      "name": "Roles"
    },
    {
      "description": "Get information about roles you can include in a new custom role.",
      "name": "Grantable roles"
    },
    {
      "description": "If you're an administrator, use these operations to create and manage users on your account.",
      "name": "Users"
    },
    {
      "description": "If you're an administrator, use these operations to manage the list of properties and includes blocked for a user.",
      "name": "Blocked assets"
    },
    {
      "description": "Use these operations to manage your or, if you're an administrator, other users' authentication settings.",
      "name": "User authentication settings"
    },
    {
      "description": "If you're an administrator, use these operations to manage a user's multi-factor authentication.",
      "name": "User access"
    },
    {
      "description": "If you're an administrator, use these operations to Set up email notifications to remind users about maintenance tasks.",
      "name": "User notifications"
    },
    {
      "description": "If you're an administrator, use these operations toManage a user's group and role assignments.",
      "name": "User authorization settings"
    },
    {
      "description": "Manage your profile, password, or multi-factor authentication. Users can edit their own profiles, but only administrators can edit profiles belonging to other users.",
      "name": "Profile"
    },
    {
      "description": "List contact types you can use when creating a user account.",
      "name": "Contact types"
    },
    {
      "description": "List locale information you can use when creating a user account.",
      "name": "Locale"
    },
    {
      "description": "List products information you can use when creating a user account.",
      "name": "Products"
    },
    {
      "description": "List policies you can use when creating a user account.",
      "name": "Policies"
    },
    {
      "description": "Manage the CIDR blocks in your account's allowlist.",
      "name": "CIDR blocks"
    },
    {
      "description": "Manage the IP allowlist for an account.",
      "name": "IP allowlists"
    },
    {
      "description": "Use helper calls to get information necessary to create an API client.",
      "name": "Helper"
    },
    {
      "description": "Manage your own API clients.",
      "name": "API client: self"
    },
    {
      "description": "Manage API clients for the account.",
      "name": "API clients"
    }
  ],
  "x-readme": {
    "samples-languages": [
      "curl",
      "python",
      "node"
    ]
  }
}