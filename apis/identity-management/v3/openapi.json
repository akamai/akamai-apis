{
  "openapi": "3.0.0",
  "externalDocs": {
    "description": "See documentation for Akamai's Identity and Access Management API",
    "url": "https://techdocs.akamai.com/iam-user-admin/reference"
  },
  "info": {
    "title": "Akamai: Identity and Access Management API",
    "version": "3",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/api-clients": {
      "post": {
        "description": "This operation creates a new API client. Optionally, you can automatically assign a credential for the client when you create it. If you choose not to assign the credential automatically, see [Create authentication credentials](https://techdocs.akamai.com/developer/docs/set-up-authentication-credentials) for details.",
        "operationId": "post-api-clients",
        "summary": "Create an API client",
        "tags": [
          "API clients"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/post-api-clients"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "allowAccountSwitch": false,
                "canAutoCreateCredential": false,
                "clientDescription": "Provides access to the reporting data.",
                "clientName": "report_data",
                "clientType": "CLIENT",
                "createCredential": false,
                "authorizedUsers": [
                  "user_1"
                ],
                "notificationEmails": [
                  "jdoe@altostrat.com",
                  "jsmith@altostrat.com"
                ],
                "apiAccess": {
                  "allAccessibleApis": false,
                  "apis": [
                    {
                      "accessLevel": "READ-ONLY",
                      "apiId": 5000
                    }
                  ]
                },
                "groupAccess": {
                  "cloneAuthorizedUserGroups": false,
                  "groups": [
                    {
                      "groupId": 18385,
                      "groupName": "Akamai Internal Sales",
                      "isBlocked": false,
                      "roleDescription": "Sales role",
                      "roleId": 1,
                      "roleName": "Sales role",
                      "subGroups": [
                        {
                          "groupId": 18436,
                          "groupName": "Akamai Default Subgroup",
                          "isBlocked": false,
                          "parentGroupId": 18385,
                          "roleDescription": "Sales role",
                          "roleId": 2,
                          "roleName": "Sales",
                          "subGroups": []
                        }
                      ]
                    }
                  ]
                },
                "ipAcl": {
                  "enable": true,
                  "cidr": [
                    "192.0.2.236",
                    "192.0.2.67/24"
                  ]
                },
                "purgeOptions": {
                  "canPurgeByCacheTag": false,
                  "canPurgeByCpcode": true,
                  "cpcodeAccess": {
                    "allCurrentAndNewCpcodes": false,
                    "cpcodes": [
                      461295,
                      461145
                    ]
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "type": "object",
                "required": [
                  "clientType",
                  "clientName",
                  "apiAccess",
                  "groupAccess",
                  "authorizedUsers"
                ],
                "properties": {
                  "allowAccountSwitch": {
                    "default": false,
                    "description": "When enabled, the API client can manage more than one account.",
                    "example": "{{allowAccountSwitch}}",
                    "type": "boolean"
                  },
                  "apiAccess": {
                    "additionalProperties": false,
                    "description": "The APIs the API client can access.",
                    "type": "object",
                    "required": [
                      "allAccessibleApis",
                      "apis"
                    ],
                    "properties": {
                      "allAccessibleApis": {
                        "description": "When enabled, the API client has access to all available APIs. Otherwise, the client's access is limited to a specific set of `apis`.",
                        "type": "boolean"
                      },
                      "apis": {
                        "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "description",
                            "apiId",
                            "apiName",
                            "documentationUrl",
                            "endPoint",
                            "accessLevel"
                          ],
                          "properties": {
                            "accessLevel": {
                              "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.",
                              "type": "string",
                              "enum": [
                                "READ-ONLY",
                                "READ-WRITE"
                              ]
                            },
                            "apiId": {
                              "description": "Unique identifier for the API.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "apiName": {
                              "description": "Descriptive label for the API, like Edge Diagnostic Tools, or Identity and Access Management API.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "description": {
                              "description": "Descriptive text about the API.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "documentationUrl": {
                              "description": "Link to more information about the API.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "endPoint": {
                              "description": "Specifies where the API can access resources.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "authorizedUsers": {
                    "description": "The API client's valid users. When the `clientType` is either `CLIENT` or `USER_CLIENT`, you need to specify a single `username` in the array.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "canAutoCreateCredential": {
                    "default": false,
                    "description": "When enabled, this API client can automatically create credentials for a new API client. The default is `false`.",
                    "example": "{{canAutoCreateCredential}}",
                    "type": "boolean"
                  },
                  "clientDescription": {
                    "description": "Descriptive text about the API client.",
                    "example": "{{clientDescription}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "clientName": {
                    "description": "Descriptive label for the API client.",
                    "example": "{{clientName}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "clientType": {
                    "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials",
                    "example": "{{clientType}}",
                    "type": "string",
                    "enum": [
                      "CLIENT",
                      "USER_CLIENT"
                    ]
                  },
                  "createCredential": {
                    "default": false,
                    "description": "With `canAutoCreateCredential` enabled, setting this to `true` creates new credentials along with a new API client. The default is `false`.",
                    "example": "{{createCredential}}",
                    "type": "boolean"
                  },
                  "groupAccess": {
                    "additionalProperties": false,
                    "description": "Specifies the groups the API client can access.",
                    "type": "object",
                    "required": [
                      "cloneAuthorizedUserGroups",
                      "groups"
                    ],
                    "properties": {
                      "cloneAuthorizedUserGroups": {
                        "description": "When set to `true`, the client's group access is the same as the authorized user.",
                        "type": "boolean"
                      },
                      "groups": {
                        "description": "Groups the client can access.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "The groups an API client can access.",
                          "type": "object",
                          "properties": {
                            "groupId": {
                              "description": "The group's unique identifier.",
                              "type": "integer"
                            },
                            "groupName": {
                              "description": "The human-readable name for a group.",
                              "type": "string"
                            },
                            "isBlocked": {
                              "description": "If `true`, the API client has access to the group's parent, but can't access the child group.",
                              "type": "boolean"
                            },
                            "parentGroupId": {
                              "description": "The unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                              "type": "string"
                            },
                            "roleDescription": {
                              "description": "The human-readable description for a role.",
                              "type": "string"
                            },
                            "roleId": {
                              "description": "A role's unique identifier.",
                              "type": "integer"
                            },
                            "roleName": {
                              "description": "The human-readable name for a role.",
                              "type": "string"
                            },
                            "subGroups": {
                              "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                              "type": "array",
                              "items": {
                                "description": "A further-nested group.",
                                "type": "object",
                                "x-akamai": {
                                  "file-path": "schemas/groups-nested.yaml"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "ipAcl": {
                    "additionalProperties": false,
                    "description": "Specifies the API client's IP list restriction.",
                    "type": "object",
                    "required": [
                      "enable",
                      "cidr"
                    ],
                    "properties": {
                      "cidr": {
                        "description": "IP addresses or CIDR blocks the API client can access.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "enable": {
                        "description": "With a `true` value, the API client can access to the IP ACL.",
                        "type": "boolean"
                      }
                    }
                  },
                  "notificationEmails": {
                    "description": "Email addresses to notify users of expiring credentials.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "purgeOptions": {
                    "additionalProperties": false,
                    "description": "Configures the API client for access to CCU API in `apis`.",
                    "type": "object",
                    "required": [
                      "canPurgeByCacheTag",
                      "canPurgeByCpcode",
                      "cpcodeAccess"
                    ],
                    "properties": {
                      "canPurgeByCacheTag": {
                        "description": "When enabled, the API client can purge content by cache tag.",
                        "type": "boolean"
                      },
                      "canPurgeByCpcode": {
                        "description": "When enabled, the API client can purge content by CP code.",
                        "type": "boolean"
                      },
                      "cpcodeAccess": {
                        "additionalProperties": false,
                        "description": "CP codes the API client can purge.",
                        "type": "object",
                        "required": [
                          "allCurrentAndNewCpcodes",
                          "cpcodes"
                        ],
                        "properties": {
                          "allCurrentAndNewCpcodes": {
                            "description": "When enabled, the API client can purge content by cache tag.",
                            "type": "boolean"
                          },
                          "cpcodes": {
                            "description": "CP codes the API client can purge.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/api-client-post-request-v3.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The response provides the newly created API client.",
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-eol24zwha6c2huw6-3at564pdmaggqrro",
                  "activeCredentialCount": 0,
                  "allowAccountSwitch": false,
                  "baseURL": "https://akaa-g3bclnoojfn7jvua-ic3mtmz7dwkot4jw.luna-dev.akamaiapis.net",
                  "canAutoCreateCredential": false,
                  "clientDescription": "Used to create users across partner accounts.",
                  "clientId": "2cdgugz2tjbtowmy",
                  "clientName": "create_new_users",
                  "clientType": "CLIENT",
                  "createdBy": "jperez",
                  "createdDate": "2022-05-23T19:56:27.000Z",
                  "isLocked": false,
                  "authorizedUsers": [
                    "jdoe"
                  ],
                  "notificationEmails": [
                    "jdoe@altostrat.com"
                  ],
                  "actions": {
                    "delete": true,
                    "deactivateAll": false,
                    "edit": true,
                    "editApis": true,
                    "editAuth": true,
                    "editGroups": true,
                    "editIpAcl": true,
                    "editSwitchAccount": false,
                    "lock": true,
                    "transfer": true,
                    "unlock": false
                  },
                  "apiAccess": {
                    "allAccessibleApis": true,
                    "apis": [
                      {
                        "accessLevel": "READ-WRITE",
                        "apiId": 5320,
                        "apiName": "NetStorage",
                        "description": "NetStorage API to create and update storage group, upload account.",
                        "documentationUrl": "https://developer.akamai.com/api/luna/configure-storage/overview.html",
                        "endPoint": "/configure-storage"
                      },
                      {
                        "accessLevel": "READ-WRITE",
                        "apiId": 5101,
                        "apiName": "Reporting API",
                        "description": "Control Center reporting API",
                        "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                        "endPoint": "/reporting-api"
                      }
                    ]
                  },
                  "groupAccess": {
                    "cloneAuthorizedUserGroups": true,
                    "groups": [
                      {
                        "groupId": 87611,
                        "groupName": "Fala Internal-2-2EZBD",
                        "isBlocked": false,
                        "roleDescription": "CPCodeTest RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": []
                      },
                      {
                        "groupId": 19742,
                        "groupName": "Akamai Internal-1-IZI1J",
                        "isBlocked": false,
                        "roleDescription": "CPCodeTest RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": []
                      },
                      {
                        "groupId": 19717,
                        "groupName": "Akamai Internal-1-7KLGU",
                        "isBlocked": false,
                        "roleDescription": "Admin Role plus Authz Case Management Read Role for PRTLDEVOPS-50807",
                        "roleId": 142838,
                        "roleName": "Admin plus Authz Case Management Read",
                        "subGroups": [
                          {
                            "groupId": 176670,
                            "groupName": "Cloud Access Manager",
                            "isBlocked": false,
                            "parentGroupId": 19717,
                            "roleDescription": "Cloud Access Manager Admin",
                            "roleId": 114776,
                            "roleName": "Cloud Access Manager Admin",
                            "subGroups": []
                          }
                        ]
                      },
                      {
                        "groupId": 19715,
                        "groupName": "Akamai Internal-1-5QRKWT",
                        "isBlocked": false,
                        "roleDescription": "CPCodeTest RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": []
                      },
                      {
                        "groupId": 19760,
                        "groupName": "Akamai Internal-3-984FEB",
                        "isBlocked": false,
                        "roleDescription": "CPCodeTest RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": [
                          {
                            "groupId": 44999,
                            "groupName": "TestGroup",
                            "isBlocked": true,
                            "parentGroupId": 19760,
                            "roleDescription": "Provides users with 'read only' access to Control Center and reports.",
                            "roleId": 13,
                            "roleName": "Viewer",
                            "subGroups": []
                          }
                        ]
                      }
                    ]
                  },
                  "purgeOptions": {
                    "canPurgeByCacheTag": false,
                    "canPurgeByCpcode": false,
                    "cpcodeAccess": {
                      "allCurrentAndNewCpcodes": true,
                      "cpcodes": []
                    }
                  },
                  "credentials": [
                    {
                      "clientToken": "akaa-rrev4gsxxxxxxxxxx-wiyoxxxxxxxxxxxx",
                      "createdOn": "2022-08-25T17:35:07.000Z",
                      "credentialId": 16852304,
                      "description": "",
                      "expiresOn": "2024-08-25T17:35:07.000Z",
                      "status": "INACTIVE",
                      "actions": {
                        "delete": true,
                        "activate": true,
                        "deactivate": false,
                        "editDescription": true,
                        "editExpiration": true
                      }
                    },
                    {
                      "clientToken": "akaa-gmpchkxxxxxxxxxx-usrlxxxxxxxxxxxx",
                      "createdOn": "2022-08-31T17:12:36.000Z",
                      "credentialId": 16852344,
                      "description": "",
                      "expiresOn": "2024-08-31T17:12:36.000Z",
                      "status": "ACTIVE",
                      "actions": {
                        "delete": false,
                        "activate": false,
                        "deactivate": true,
                        "editDescription": true,
                        "editExpiration": true
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates the response schema for creating v3 API client.",
                  "type": "object",
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "baseURL",
                    "canAutoCreateCredential",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails"
                  ],
                  "properties": {
                    "accessToken": {
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Encapsulates activities performed on the API client.",
                      "type": "object",
                      "required": [
                        "delete",
                        "deactivateAll",
                        "edit",
                        "editApis",
                        "editAuth",
                        "editGroups",
                        "editIpAcl",
                        "editSwitchAccount",
                        "lock",
                        "transfer",
                        "unlock"
                      ],
                      "properties": {
                        "delete": {
                          "description": "When enabled, you can remove the API client.",
                          "type": "boolean"
                        },
                        "deactivateAll": {
                          "description": "When enabled, you can deactivate the API client's credentials.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "When enabled, you can update the API client.",
                          "type": "boolean"
                        },
                        "editApis": {
                          "description": "When enabled, you can update the `apis` the API client can access.",
                          "type": "boolean"
                        },
                        "editAuth": {
                          "description": "When enabled, you can update the `groups` or `apis` the API client can access.",
                          "type": "boolean"
                        },
                        "editGroups": {
                          "description": "When enabled, you can update the `groups` the API client can access.",
                          "type": "boolean"
                        },
                        "editIpAcl": {
                          "description": "When enabled, you can update the `ipAcl` the API client can access.",
                          "type": "boolean"
                        },
                        "editSwitchAccount": {
                          "description": "When enabled, you can update the API client's option to manage many accounts.",
                          "type": "boolean"
                        },
                        "lock": {
                          "description": "When enabled, you can lock the API client.",
                          "type": "boolean"
                        },
                        "transfer": {
                          "description": "When enabled, you can transfer the API client to a new owner.",
                          "type": "boolean"
                        },
                        "unlock": {
                          "description": "When enabled, you can unlock the API client.",
                          "type": "boolean"
                        }
                      }
                    },
                    "activeCredentialCount": {
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "allowAccountSwitch": {
                      "description": "Indicates whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client)",
                      "type": "boolean"
                    },
                    "apiAccess": {
                      "additionalProperties": false,
                      "description": "The APIs the API client can access.",
                      "type": "object",
                      "required": [
                        "allAccessibleApis",
                        "apis"
                      ],
                      "properties": {
                        "allAccessibleApis": {
                          "description": "When enabled, the API client has access to all available APIs. Otherwise, the client's access is limited to a specific set of `apis`.",
                          "type": "boolean"
                        },
                        "apis": {
                          "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "description",
                              "apiId",
                              "apiName",
                              "documentationUrl",
                              "endPoint",
                              "accessLevel"
                            ],
                            "properties": {
                              "accessLevel": {
                                "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "apiId": {
                                "description": "Unique identifier for the API.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "apiName": {
                                "description": "Descriptive label for the API, like Edge Diagnostic Tools, or Identity and Access Management API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "description": {
                                "description": "Descriptive text about the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "Link to more information about the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "endPoint": {
                                "description": "Specifies where the API can access resources.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "authorizedUsers": {
                      "description": "The API client's valid users.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "baseURL": {
                      "description": "The base URL for the service.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "canAutoCreateCredential": {
                      "description": "When enabled, the API client can create a credential for a new API client. The default is `false`.",
                      "type": "boolean"
                    },
                    "clientDescription": {
                      "description": "Descriptive text about the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientId": {
                      "description": "Unique identifier for an API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientName": {
                      "description": "Descriptive label for the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientType": {
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.",
                      "type": "string",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT",
                        "SERVICE_ACCOUNT"
                      ]
                    },
                    "createdBy": {
                      "description": "The user who created the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the API client was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentials": {
                      "description": "The API client's of credentials.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "description",
                          "actions",
                          "clientToken",
                          "createdOn",
                          "credentialId",
                          "expiresOn",
                          "status"
                        ],
                        "properties": {
                          "actions": {
                            "additionalProperties": false,
                            "description": "Encapsulates activities you can perform on the credential.",
                            "type": "object",
                            "required": [
                              "delete",
                              "activate",
                              "deactivate",
                              "editDescription",
                              "editExpiration"
                            ],
                            "properties": {
                              "delete": {
                                "description": "When enabled, you can remove the credential.",
                                "type": "boolean"
                              },
                              "activate": {
                                "description": "When enabled, you can activate the credential.",
                                "type": "boolean"
                              },
                              "deactivate": {
                                "description": "When enabled, you can deactivate the credential.",
                                "type": "boolean"
                              },
                              "editDescription": {
                                "description": "When enabled, you can modify the credential's description.",
                                "type": "boolean"
                              },
                              "editExpiration": {
                                "description": "When enabled, you can modify the credential's expiration date.",
                                "type": "boolean"
                              }
                            }
                          },
                          "clientToken": {
                            "description": "Part of the credential that identifies the API client.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdOn": {
                            "description": "ISO 8601 timestamp indicating when the credential was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "credentialId": {
                            "description": "Unique identifier for the credential.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "description": {
                            "description": "A descriptive label for the API client.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "expiresOn": {
                            "description": "ISO 8601 timestamp indicating when the credential expires.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "status": {
                            "description": "Specifies whether you can use the credential. `ACTIVE` indicates the credential can be used. `INACTIVE`indicates the credential can't be used. `DELETED` indicates the credential doesn't exist.",
                            "type": "string",
                            "enum": [
                              "ACTIVE",
                              "INACTIVE",
                              "DELETED"
                            ]
                          }
                        }
                      }
                    },
                    "groupAccess": {
                      "additionalProperties": false,
                      "description": "Identifies the API client's group access.",
                      "type": "object",
                      "required": [
                        "cloneAuthorizedUserGroups",
                        "groups"
                      ],
                      "properties": {
                        "cloneAuthorizedUserGroups": {
                          "description": "With a `true` value, the API client's group access is the same as the authorized user.",
                          "type": "boolean"
                        },
                        "groups": {
                          "description": "Groups the API client can access.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "The groups an API client can access.",
                            "type": "object",
                            "properties": {
                              "groupId": {
                                "description": "The group's unique identifier.",
                                "type": "integer"
                              },
                              "groupName": {
                                "description": "The human-readable name for a group.",
                                "type": "string"
                              },
                              "isBlocked": {
                                "description": "If `true`, the API client has access to the group's parent, but can't access the child group.",
                                "type": "boolean"
                              },
                              "parentGroupId": {
                                "description": "The unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                                "type": "string"
                              },
                              "roleDescription": {
                                "description": "The human-readable description for a role.",
                                "type": "string"
                              },
                              "roleId": {
                                "description": "A role's unique identifier.",
                                "type": "integer"
                              },
                              "roleName": {
                                "description": "The human-readable name for a role.",
                                "type": "string"
                              },
                              "subGroups": {
                                "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                                "type": "array",
                                "items": {
                                  "description": "A further-nested group.",
                                  "type": "object",
                                  "x-akamai": {
                                    "file-path": "schemas/groups-nested.yaml"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ipAcl": {
                      "additionalProperties": false,
                      "description": "Specifies the API client's IP list restriction.",
                      "type": "object",
                      "required": [
                        "enable",
                        "cidr"
                      ],
                      "properties": {
                        "cidr": {
                          "description": "IP addresses or CIDR blocks the API client can access.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "enable": {
                          "description": "With a `true` value, the API client can access the IP ACL.",
                          "type": "boolean"
                        }
                      }
                    },
                    "isLocked": {
                      "description": "When enabled, restricts the API clients's access to Control Center services.",
                      "type": "boolean"
                    },
                    "notificationEmails": {
                      "description": "Email addresses to notify users of expiring credentials.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "purgeOptions": {
                      "additionalProperties": false,
                      "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api) in `apis`.",
                      "type": "object",
                      "required": [
                        "canPurgeByCacheTag",
                        "canPurgeByCpcode",
                        "cpcodeAccess"
                      ],
                      "properties": {
                        "canPurgeByCacheTag": {
                          "description": "When enabled, the API client can purge content by cache tag.",
                          "type": "boolean"
                        },
                        "canPurgeByCpcode": {
                          "description": "When enabled, the API client can purge content by CP code.",
                          "type": "boolean"
                        },
                        "cpcodeAccess": {
                          "additionalProperties": false,
                          "description": "CP codes the API client can purge.",
                          "type": "object",
                          "required": [
                            "allCurrentAndNewCpcodes",
                            "cpcodes"
                          ],
                          "properties": {
                            "allCurrentAndNewCpcodes": {
                              "description": "When enabled, the API client can purge content by cache tag.",
                              "type": "boolean"
                            },
                            "cpcodes": {
                              "description": "CP codes the API client can purge.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minimum": 0,
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    },
                    "serviceProviderId": {
                      "description": "Unique identifier for the API's service provider.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/api-client-detail-v3.yaml"
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "description": "A URL path to the newly created object.",
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/Location.yaml"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "This operation lists API clients an administrator can manage.",
        "operationId": "get-api-clients",
        "summary": "List API clients",
        "tags": [
          "API clients"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-api-clients"
        },
        "responses": {
          "200": {
            "description": "The response provides a list of API clients an administrator can manage.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "API clients on the account.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "API clients on the account.",
                    "type": "object",
                    "properties": {
                      "accessToken": {
                        "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.",
                        "type": "string"
                      },
                      "actions": {
                        "additionalProperties": false,
                        "description": "Encapsulates activities performed on the API client.",
                        "type": "object",
                        "properties": {
                          "delete": {
                            "description": "When enabled, you can remove the API client.",
                            "type": "boolean"
                          },
                          "deactivateAll": {
                            "description": "When enabled, you can deactivate the API client's credentials.",
                            "type": "boolean"
                          },
                          "edit": {
                            "description": "When enabled, you can update the API client.",
                            "type": "boolean"
                          },
                          "lock": {
                            "description": "When enabled, you can lock the API client.",
                            "type": "boolean"
                          },
                          "transfer": {
                            "description": "When enabled, you can transfer the API client to a new owner.",
                            "type": "boolean"
                          },
                          "unlock": {
                            "description": "When enabled, you can unlock the API client.",
                            "type": "boolean"
                          }
                        }
                      },
                      "activeCredentialCount": {
                        "description": "Number of credentials active for the API client. When the count is `0`, you can delete the API client without interruption.",
                        "type": "integer"
                      },
                      "allowAccountSwitch": {
                        "description": "Indicates whether the API client can manage more than one account.",
                        "type": "boolean"
                      },
                      "authorizedUsers": {
                        "description": "The API client's valid users.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "canAutoCreateCredential": {
                        "description": "When enabled, the API client can create a credential for a new API client. The default is `false`.",
                        "type": "boolean"
                      },
                      "clientDescription": {
                        "description": "Descriptive text about the API client.",
                        "type": "string"
                      },
                      "clientId": {
                        "description": "Unique identifier for the API client.",
                        "type": "string"
                      },
                      "clientName": {
                        "description": "Descriptive label for the API client.",
                        "type": "string"
                      },
                      "clientType": {
                        "default": "CLIENT",
                        "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.",
                        "type": "string",
                        "enum": [
                          "CLIENT",
                          "USER_CLIENT",
                          "SERVICE_ACCOUNT"
                        ]
                      },
                      "createdBy": {
                        "description": "The user who created the API client.",
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the API client was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "isLocked": {
                        "description": "When enabled, restricts the API clients's access to Control Center services.",
                        "type": "boolean"
                      },
                      "notificationEmails": {
                        "description": "Email addresses to notify users of expiring credentials.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "serviceConsumerToken": {
                        "description": "Unique identifier for the service hostname.",
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/api-client-v3.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/api-clients-v3.yaml"
                  }
                },
                "example": [
                  {
                    "accessToken": "akaa-ly55myu4fbtajqck-o7oubkbiytbjxywe",
                    "activeCredentialCount": 1,
                    "allowAccountSwitch": false,
                    "canAutoCreateCredential": false,
                    "clientDescription": "Provides access to the reporting data.",
                    "clientId": "xfz2n5d43mogkdim",
                    "clientName": "report_data",
                    "clientType": "CLIENT",
                    "createdBy": "hgildong",
                    "createdDate": "2022-05-13T20:04:35.000Z",
                    "isLocked": false,
                    "serviceConsumerToken": "akaa-lb77cyyf3guivns3-sxmd4sxxxxxxxxxx",
                    "authorizedUsers": [
                      "jdoe"
                    ],
                    "notificationEmails": [
                      "jdoe@altostrat.com"
                    ],
                    "actions": {
                      "delete": false,
                      "deactivateAll": false,
                      "edit": true,
                      "lock": false,
                      "transfer": true,
                      "unlock": false
                    }
                  },
                  {
                    "accessToken": "akaa-whlw7vibvujyoowg-rrp2q4xxxxxxxxxx",
                    "activeCredentialCount": 1,
                    "allowAccountSwitch": false,
                    "canAutoCreateCredential": false,
                    "clientDescription": "Provides all offload estimates.",
                    "clientId": "4f3cxdie6adyalyg",
                    "clientName": "offload_est",
                    "clientType": "CLIENT",
                    "createdBy": "jsmith",
                    "createdDate": "2022-05-09T10:43:49.000Z",
                    "isLocked": false,
                    "serviceConsumerToken": "akaa-csrfyd3yzysqybe3-3dwjebxxxxxxxxxx",
                    "authorizedUsers": [
                      "jsmith"
                    ],
                    "notificationEmails": [
                      "jsmith@altostrat.com"
                    ],
                    "actions": {
                      "delete": false,
                      "deactivateAll": false,
                      "edit": true,
                      "lock": false,
                      "transfer": true,
                      "unlock": false
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Optionally enable `actions` to include them as part of the response object.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/api-clients/self": {
      "get": {
        "description": "This operation provides details about your API client.",
        "operationId": "get-api-client-self",
        "summary": "Get your API client",
        "tags": [
          "API client: self"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-api-client-self"
        },
        "responses": {
          "200": {
            "description": "The response provides the API client.",
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-whlw7vibvujyoowg-rrp2q4cj362hke5t",
                  "activeCredentialCount": 1,
                  "allowAccountSwitch": false,
                  "baseURL": "https://akaa-csrfyd3yzysqybe3-3dwjebsqo6ecu63m.luna-dev.akamaiapis.net",
                  "canAutoCreateCredential": false,
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "4f3cxdie6adyalyg",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "tyamada",
                  "createdDate": "2022-05-09T10:43:49.000Z",
                  "isLocked": false,
                  "authorizedUsers": [
                    "jdoe"
                  ],
                  "notificationEmails": [
                    "jdoe@altostrat.com"
                  ],
                  "actions": {
                    "delete": false,
                    "deactivateAll": false,
                    "edit": true,
                    "editApis": false,
                    "editAuth": false,
                    "editGroups": false,
                    "editIpAcl": false,
                    "editSwitchAccount": false,
                    "lock": false,
                    "transfer": true,
                    "unlock": false
                  },
                  "apiAccess": {
                    "allAccessibleApis": true,
                    "apis": [
                      {
                        "accessLevel": "READ-ONLY",
                        "apiId": 5580,
                        "apiName": "Search Data Feed",
                        "description": "Search Data Feed",
                        "documentationUrl": "/",
                        "endPoint": "/search-portal-data-feed-api/"
                      },
                      {
                        "accessLevel": "READ-WRITE",
                        "apiId": 5101,
                        "apiName": "Reporting API",
                        "description": "Luna Reporting API",
                        "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                        "endPoint": "/reporting-api"
                      }
                    ]
                  },
                  "groupAccess": {
                    "cloneAuthorizedUserGroups": true,
                    "groups": [
                      {
                        "groupId": 87611,
                        "groupName": "Fala Internal-2-2EZBD",
                        "isBlocked": false,
                        "roleDescription": "CPCodeTest RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": []
                      },
                      {
                        "groupId": 19742,
                        "groupName": "Akamai Internal-1-IZI1J",
                        "isBlocked": false,
                        "roleDescription": "CPCodeTest RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": []
                      },
                      {
                        "groupId": 19717,
                        "groupName": "Akamai Internal-1-7KLGU",
                        "isBlocked": false,
                        "roleDescription": "Admin Role plus Authz Case Management Read Role for PRTLDEVOPS-50807",
                        "roleId": 142838,
                        "roleName": "Admin plus Authz Case Management Read",
                        "subGroups": [
                          {
                            "groupId": 176670,
                            "groupName": "Cloud Access Manager",
                            "isBlocked": false,
                            "parentGroupId": 19717,
                            "roleDescription": "Cloud Access Manager Admin",
                            "roleId": 114776,
                            "roleName": "Cloud Access Manager Admin",
                            "subGroups": []
                          }
                        ]
                      },
                      {
                        "groupId": 19715,
                        "groupName": "Akamai Internal-1-5QRKWT",
                        "isBlocked": false,
                        "roleDescription": "CPCodeTest RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": []
                      },
                      {
                        "groupId": 19760,
                        "groupName": "Akamai Internal-3-984FEB",
                        "isBlocked": false,
                        "roleDescription": "CPCodeTest RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": [
                          {
                            "groupId": 44999,
                            "groupName": "TestGroup",
                            "isBlocked": true,
                            "parentGroupId": 19760,
                            "roleDescription": "This role allows for 'read only' views of the portal and is assigned to enable users to review and monitor reports",
                            "roleId": 13,
                            "roleName": "Viewer",
                            "subGroups": []
                          }
                        ]
                      }
                    ]
                  },
                  "ipAcl": {
                    "enable": true,
                    "cidr": [
                      "192.0.2.35",
                      "2.2.2.2/24"
                    ]
                  },
                  "purgeOptions": {
                    "canPurgeByCacheTag": false,
                    "canPurgeByCpcode": false,
                    "cpcodeAccess": {
                      "allCurrentAndNewCpcodes": true,
                      "cpcodes": []
                    }
                  },
                  "credentials": [
                    {
                      "clientToken": "akaa-hzflcz2fbxhakjzl-5p3hxhuxw55ymxxz",
                      "createdOn": "2022-05-09T10:43:50.000Z",
                      "credentialId": 16850686,
                      "description": "",
                      "expiresOn": "2024-05-09T10:43:50.000Z",
                      "status": "ACTIVE",
                      "actions": {
                        "delete": false,
                        "activate": false,
                        "deactivate": false,
                        "editDescription": false,
                        "editExpiration": false
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates the response schema for creating v3 API client.",
                  "type": "object",
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "baseURL",
                    "canAutoCreateCredential",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails"
                  ],
                  "properties": {
                    "accessToken": {
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Encapsulates activities performed on the API client.",
                      "type": "object",
                      "required": [
                        "delete",
                        "deactivateAll",
                        "edit",
                        "editApis",
                        "editAuth",
                        "editGroups",
                        "editIpAcl",
                        "editSwitchAccount",
                        "lock",
                        "transfer",
                        "unlock"
                      ],
                      "properties": {
                        "delete": {
                          "description": "When enabled, you can remove the API client.",
                          "type": "boolean"
                        },
                        "deactivateAll": {
                          "description": "When enabled, you can deactivate the API client's credentials.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "When enabled, you can update the API client.",
                          "type": "boolean"
                        },
                        "editApis": {
                          "description": "When enabled, you can update the `apis` the API client can access.",
                          "type": "boolean"
                        },
                        "editAuth": {
                          "description": "When enabled, you can update the `groups` or `apis` the API client can access.",
                          "type": "boolean"
                        },
                        "editGroups": {
                          "description": "When enabled, you can update the `groups` the API client can access.",
                          "type": "boolean"
                        },
                        "editIpAcl": {
                          "description": "When enabled, you can update the `ipAcl` the API client can access.",
                          "type": "boolean"
                        },
                        "editSwitchAccount": {
                          "description": "When enabled, you can update the API client's option to manage many accounts.",
                          "type": "boolean"
                        },
                        "lock": {
                          "description": "When enabled, you can lock the API client.",
                          "type": "boolean"
                        },
                        "transfer": {
                          "description": "When enabled, you can transfer the API client to a new owner.",
                          "type": "boolean"
                        },
                        "unlock": {
                          "description": "When enabled, you can unlock the API client.",
                          "type": "boolean"
                        }
                      }
                    },
                    "activeCredentialCount": {
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "allowAccountSwitch": {
                      "description": "Indicates whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client)",
                      "type": "boolean"
                    },
                    "apiAccess": {
                      "additionalProperties": false,
                      "description": "The APIs the API client can access.",
                      "type": "object",
                      "required": [
                        "allAccessibleApis",
                        "apis"
                      ],
                      "properties": {
                        "allAccessibleApis": {
                          "description": "When enabled, the API client has access to all available APIs. Otherwise, the client's access is limited to a specific set of `apis`.",
                          "type": "boolean"
                        },
                        "apis": {
                          "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "description",
                              "apiId",
                              "apiName",
                              "documentationUrl",
                              "endPoint",
                              "accessLevel"
                            ],
                            "properties": {
                              "accessLevel": {
                                "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "apiId": {
                                "description": "Unique identifier for the API.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "apiName": {
                                "description": "Descriptive label for the API, like Edge Diagnostic Tools, or Identity and Access Management API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "description": {
                                "description": "Descriptive text about the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "Link to more information about the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "endPoint": {
                                "description": "Specifies where the API can access resources.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "authorizedUsers": {
                      "description": "The API client's valid users.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "baseURL": {
                      "description": "The base URL for the service.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "canAutoCreateCredential": {
                      "description": "When enabled, the API client can create a credential for a new API client. The default is `false`.",
                      "type": "boolean"
                    },
                    "clientDescription": {
                      "description": "Descriptive text about the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientId": {
                      "description": "Unique identifier for an API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientName": {
                      "description": "Descriptive label for the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientType": {
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.",
                      "type": "string",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT",
                        "SERVICE_ACCOUNT"
                      ]
                    },
                    "createdBy": {
                      "description": "The user who created the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the API client was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentials": {
                      "description": "The API client's of credentials.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "description",
                          "actions",
                          "clientToken",
                          "createdOn",
                          "credentialId",
                          "expiresOn",
                          "status"
                        ],
                        "properties": {
                          "actions": {
                            "additionalProperties": false,
                            "description": "Encapsulates activities you can perform on the credential.",
                            "type": "object",
                            "required": [
                              "delete",
                              "activate",
                              "deactivate",
                              "editDescription",
                              "editExpiration"
                            ],
                            "properties": {
                              "delete": {
                                "description": "When enabled, you can remove the credential.",
                                "type": "boolean"
                              },
                              "activate": {
                                "description": "When enabled, you can activate the credential.",
                                "type": "boolean"
                              },
                              "deactivate": {
                                "description": "When enabled, you can deactivate the credential.",
                                "type": "boolean"
                              },
                              "editDescription": {
                                "description": "When enabled, you can modify the credential's description.",
                                "type": "boolean"
                              },
                              "editExpiration": {
                                "description": "When enabled, you can modify the credential's expiration date.",
                                "type": "boolean"
                              }
                            }
                          },
                          "clientToken": {
                            "description": "Part of the credential that identifies the API client.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdOn": {
                            "description": "ISO 8601 timestamp indicating when the credential was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "credentialId": {
                            "description": "Unique identifier for the credential.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "description": {
                            "description": "A descriptive label for the API client.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "expiresOn": {
                            "description": "ISO 8601 timestamp indicating when the credential expires.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "status": {
                            "description": "Specifies whether you can use the credential. `ACTIVE` indicates the credential can be used. `INACTIVE`indicates the credential can't be used. `DELETED` indicates the credential doesn't exist.",
                            "type": "string",
                            "enum": [
                              "ACTIVE",
                              "INACTIVE",
                              "DELETED"
                            ]
                          }
                        }
                      }
                    },
                    "groupAccess": {
                      "additionalProperties": false,
                      "description": "Identifies the API client's group access.",
                      "type": "object",
                      "required": [
                        "cloneAuthorizedUserGroups",
                        "groups"
                      ],
                      "properties": {
                        "cloneAuthorizedUserGroups": {
                          "description": "With a `true` value, the API client's group access is the same as the authorized user.",
                          "type": "boolean"
                        },
                        "groups": {
                          "description": "Groups the API client can access.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "The groups an API client can access.",
                            "type": "object",
                            "properties": {
                              "groupId": {
                                "description": "The group's unique identifier.",
                                "type": "integer"
                              },
                              "groupName": {
                                "description": "The human-readable name for a group.",
                                "type": "string"
                              },
                              "isBlocked": {
                                "description": "If `true`, the API client has access to the group's parent, but can't access the child group.",
                                "type": "boolean"
                              },
                              "parentGroupId": {
                                "description": "The unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                                "type": "string"
                              },
                              "roleDescription": {
                                "description": "The human-readable description for a role.",
                                "type": "string"
                              },
                              "roleId": {
                                "description": "A role's unique identifier.",
                                "type": "integer"
                              },
                              "roleName": {
                                "description": "The human-readable name for a role.",
                                "type": "string"
                              },
                              "subGroups": {
                                "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                                "type": "array",
                                "items": {
                                  "description": "A further-nested group.",
                                  "type": "object",
                                  "x-akamai": {
                                    "file-path": "schemas/groups-nested.yaml"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ipAcl": {
                      "additionalProperties": false,
                      "description": "Specifies the API client's IP list restriction.",
                      "type": "object",
                      "required": [
                        "enable",
                        "cidr"
                      ],
                      "properties": {
                        "cidr": {
                          "description": "IP addresses or CIDR blocks the API client can access.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "enable": {
                          "description": "With a `true` value, the API client can access the IP ACL.",
                          "type": "boolean"
                        }
                      }
                    },
                    "isLocked": {
                      "description": "When enabled, restricts the API clients's access to Control Center services.",
                      "type": "boolean"
                    },
                    "notificationEmails": {
                      "description": "Email addresses to notify users of expiring credentials.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "purgeOptions": {
                      "additionalProperties": false,
                      "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api) in `apis`.",
                      "type": "object",
                      "required": [
                        "canPurgeByCacheTag",
                        "canPurgeByCpcode",
                        "cpcodeAccess"
                      ],
                      "properties": {
                        "canPurgeByCacheTag": {
                          "description": "When enabled, the API client can purge content by cache tag.",
                          "type": "boolean"
                        },
                        "canPurgeByCpcode": {
                          "description": "When enabled, the API client can purge content by CP code.",
                          "type": "boolean"
                        },
                        "cpcodeAccess": {
                          "additionalProperties": false,
                          "description": "CP codes the API client can purge.",
                          "type": "object",
                          "required": [
                            "allCurrentAndNewCpcodes",
                            "cpcodes"
                          ],
                          "properties": {
                            "allCurrentAndNewCpcodes": {
                              "description": "When enabled, the API client can purge content by cache tag.",
                              "type": "boolean"
                            },
                            "cpcodes": {
                              "description": "CP codes the API client can purge.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minimum": 0,
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    },
                    "serviceProviderId": {
                      "description": "Unique identifier for the API's service provider.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/api-client-detail-v3.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Optionally enable `actions` to include them as part of the response object.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          },
          {
            "description": "Optionally enable `groupAccess` to include them as part of the response object.",
            "example": "{{groupAccess}}",
            "in": "query",
            "name": "groupAccess",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/groupAccess-query.yaml"
            }
          },
          {
            "description": "Optionally enable `apiAccess` to include them as part of the response object.",
            "example": "{{apiAccess}}",
            "in": "query",
            "name": "apiAccess",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/apisAccess-query.yaml"
            }
          },
          {
            "description": "Optionally enable `credentials` to include them as part of the response object.",
            "example": "{{credentials}}",
            "in": "query",
            "name": "credentials",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/credentials-query.yaml"
            }
          },
          {
            "description": "Optionally enable `ipAcl` to include them as part of the response object.",
            "example": "{{ipAcl}}",
            "in": "query",
            "name": "ipAcl",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/ipAcl-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "This operation updates your API client.",
        "operationId": "put-api-clients-self",
        "summary": "Update your API client",
        "tags": [
          "API client: self"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/put-api-clients-self"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "allowAccountSwitch": false,
                "canAutoCreateCredential": false,
                "clientDescription": "Provides access to the reporting data.",
                "clientName": "report_data",
                "authorizedUsers": [
                  "jdoe"
                ],
                "notificationEmails": [
                  "jdoe@altostrat.com"
                ],
                "apiAccess": {
                  "allAccessibleApis": false,
                  "apis": [
                    {
                      "accessLevel": "READ-ONLY",
                      "apiId": 109230
                    },
                    {
                      "accessLevel": "READ-ONLY",
                      "apiId": 3515
                    }
                  ]
                },
                "groupAccess": {
                  "cloneAuthorizedUserGroups": false,
                  "groups": [
                    {
                      "groupId": 19760,
                      "groupName": "Akamai Internal-3-984FEB",
                      "isBlocked": false,
                      "roleDescription": "Please add a description",
                      "roleId": 73695,
                      "roleName": "Custom role # 73695",
                      "subGroups": [
                        {
                          "groupId": 44999,
                          "groupName": "TestGroup",
                          "isBlocked": false,
                          "parentGroupId": 19760,
                          "roleId": null,
                          "roleName": null,
                          "subGroups": [
                            {
                              "groupId": 171377,
                              "groupName": "testsub123",
                              "isBlocked": false,
                              "parentGroupId": 44999,
                              "roleId": null,
                              "roleName": null,
                              "subGroups": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "ipAcl": {}
              },
              "schema": {
                "additionalProperties": false,
                "type": "object",
                "required": [
                  "clientName",
                  "apiAccess",
                  "groupAccess",
                  "authorizedUsers"
                ],
                "properties": {
                  "allowAccountSwitch": {
                    "description": "Indicates whether the API client can manage more than one account.",
                    "example": "{{allowAccountSwitch}}",
                    "type": "boolean"
                  },
                  "apiAccess": {
                    "additionalProperties": false,
                    "description": "The APIs the API client can access.",
                    "type": "object",
                    "required": [
                      "allAccessibleApis",
                      "apis"
                    ],
                    "properties": {
                      "allAccessibleApis": {
                        "description": "When enabled, the API client has access to all available APIs. Otherwise, the client's access is limited to a specific set of `apis`.",
                        "type": "boolean"
                      },
                      "apis": {
                        "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "description",
                            "apiId",
                            "apiName",
                            "documentationUrl",
                            "endPoint",
                            "accessLevel"
                          ],
                          "properties": {
                            "accessLevel": {
                              "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.",
                              "type": "string",
                              "enum": [
                                "READ-ONLY",
                                "READ-WRITE"
                              ]
                            },
                            "apiId": {
                              "description": "Unique identifier for the API.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "apiName": {
                              "description": "Descriptive label for the API, like Edge Diagnostic Tools, or Identity and Access Management API.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "description": {
                              "description": "Descriptive text for the API.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "documentationUrl": {
                              "description": "Link to more information about the API.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "endPoint": {
                              "description": "Specifies where the API can access resources.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "authorizedUsers": {
                    "description": "The API client's valid users.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "canAutoCreateCredential": {
                    "default": false,
                    "description": "When enabled, the API client can create a credential for a new API client. The default is `false`.",
                    "example": "{{canAutoCreateCredential}}",
                    "type": "boolean"
                  },
                  "clientDescription": {
                    "description": "Descriptive text about the API client.",
                    "example": "{{clientDescription}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "clientName": {
                    "description": "Descriptive label for the API client.",
                    "example": "{{clientName}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "groupAccess": {
                    "additionalProperties": false,
                    "description": "Identifies the API client's group access.",
                    "type": "object",
                    "required": [
                      "cloneAuthorizedUserGroups",
                      "groups"
                    ],
                    "properties": {
                      "cloneAuthorizedUserGroups": {
                        "description": "With a `true` value, the API client's group access is the same as the authorized user.",
                        "type": "boolean"
                      },
                      "groups": {
                        "description": "Groups an API client can access.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "The groups an API client can access.",
                          "type": "object",
                          "properties": {
                            "groupId": {
                              "description": "The group's unique identifier.",
                              "type": "integer"
                            },
                            "groupName": {
                              "description": "The human-readable name for a group.",
                              "type": "string"
                            },
                            "isBlocked": {
                              "description": "If `true`, the API client has access to the group's parent, but can't access the child group.",
                              "type": "boolean"
                            },
                            "parentGroupId": {
                              "description": "The unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                              "type": "string"
                            },
                            "roleDescription": {
                              "description": "The human-readable description for a role.",
                              "type": "string"
                            },
                            "roleId": {
                              "description": "A role's unique identifier.",
                              "type": "integer"
                            },
                            "roleName": {
                              "description": "The human-readable name for a role.",
                              "type": "string"
                            },
                            "subGroups": {
                              "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                              "type": "array",
                              "items": {
                                "description": "A further-nested group.",
                                "type": "object",
                                "x-akamai": {
                                  "file-path": "schemas/groups-nested.yaml"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "ipAcl": {
                    "additionalProperties": false,
                    "description": "Specifies the API client's IP list restriction.",
                    "type": "object",
                    "required": [
                      "enable",
                      "cidr"
                    ],
                    "properties": {
                      "cidr": {
                        "description": "IP addresses or CIDR blocks the API client can access.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "enable": {
                        "description": "With a `true` value, the API client can access to the IP ACL.",
                        "type": "boolean"
                      }
                    }
                  },
                  "notificationEmails": {
                    "description": "Email addresses to notify users of expiring credentials.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "purgeOptions": {
                    "additionalProperties": false,
                    "description": "Configures the API client for access to the CCU API in `apis`.",
                    "type": "object",
                    "required": [
                      "canPurgeByCacheTag",
                      "canPurgeByCpcode",
                      "cpcodeAccess"
                    ],
                    "properties": {
                      "canPurgeByCacheTag": {
                        "description": "When enabled, the API client can purge content by cache tag.",
                        "type": "boolean"
                      },
                      "canPurgeByCpcode": {
                        "description": "When enabled, the API client can purge content by CP code.",
                        "type": "boolean"
                      },
                      "cpcodeAccess": {
                        "additionalProperties": false,
                        "description": "CP codes the API client can purge.",
                        "type": "object",
                        "required": [
                          "allCurrentAndNewCpcodes",
                          "cpcodes"
                        ],
                        "properties": {
                          "allCurrentAndNewCpcodes": {
                            "description": "When enabled, the API client can purge content by cache tag.",
                            "type": "boolean"
                          },
                          "cpcodes": {
                            "description": "CP codes the API client can purge.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/api-client-update-request-v3.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response reflects the modified API client.",
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-eol24zwha6c2huw6-3at564pdmaggqrro",
                  "activeCredentialCount": 0,
                  "allowAccountSwitch": false,
                  "baseURL": "https://akaa-g3bclnoojfn7jvua-ic3mtmz7dwkot4jw.luna-dev.akamaiapis.net",
                  "canAutoCreateCredential": false,
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "2cdgugz2tjbtowmy",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "alfulani",
                  "createdDate": "2022-05-23T19:56:27.000Z",
                  "isLocked": false,
                  "authorizedUsers": [
                    "jdoe"
                  ],
                  "notificationEmails": [
                    "jdoe@altostrat.com"
                  ],
                  "actions": {
                    "delete": true,
                    "deactivateAll": false,
                    "edit": true,
                    "editApis": true,
                    "editAuth": true,
                    "editGroups": true,
                    "editIpAcl": true,
                    "editSwitchAccount": false,
                    "lock": true,
                    "transfer": true,
                    "unlock": false
                  },
                  "apiAccess": {
                    "allAccessibleApis": true,
                    "apis": [
                      {
                        "accessLevel": "READ-ONLY",
                        "apiId": 5580,
                        "apiName": "Search Data Feed",
                        "description": "Search Data Feed",
                        "documentationUrl": "/",
                        "endPoint": "/search-portal-data-feed-api/"
                      },
                      {
                        "accessLevel": "READ-WRITE",
                        "apiId": 5101,
                        "apiName": "Reporting API",
                        "description": "Reporting API",
                        "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                        "endPoint": "/reporting-api"
                      }
                    ]
                  },
                  "groupAccess": {
                    "cloneAuthorizedUserGroups": true,
                    "groups": [
                      {
                        "groupId": 87611,
                        "groupName": "Fala Internal-2-2EZBD",
                        "isBlocked": false,
                        "roleDescription": "CPCodeTest RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": []
                      },
                      {
                        "groupId": 19742,
                        "groupName": "Akamai Internal-1-IZI1J",
                        "isBlocked": false,
                        "roleDescription": "CPCodeTest RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": []
                      },
                      {
                        "groupId": 19717,
                        "groupName": "Akamai Internal-1-7KLGU",
                        "isBlocked": false,
                        "roleDescription": "Admin Role plus Authz Case Management Read Role for PRTLDEVOPS-50807",
                        "roleId": 142838,
                        "roleName": "Admin plus Authz Case Management Read",
                        "subGroups": [
                          {
                            "groupId": 176670,
                            "groupName": "Cloud Access Manager",
                            "isBlocked": false,
                            "parentGroupId": 19717,
                            "roleDescription": "Cloud Access Manager Admin",
                            "roleId": 114776,
                            "roleName": "Cloud Access Manager Admin",
                            "subGroups": []
                          }
                        ]
                      },
                      {
                        "groupId": 19715,
                        "groupName": "Akamai Internal-1-5QRKWT",
                        "isBlocked": false,
                        "roleDescription": "CPCodeTest RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": []
                      },
                      {
                        "groupId": 19760,
                        "groupName": "Akamai Internal-3-984FEB",
                        "isBlocked": false,
                        "roleDescription": "CPCodeTest RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": [
                          {
                            "groupId": 44999,
                            "groupName": "TestGroup",
                            "isBlocked": true,
                            "parentGroupId": 19760,
                            "roleDescription": "Provides users with read-only access to Control Center and to monitor reports.",
                            "roleId": 13,
                            "roleName": "Viewer",
                            "subGroups": []
                          }
                        ]
                      }
                    ]
                  },
                  "purgeOptions": {
                    "canPurgeByCacheTag": false,
                    "canPurgeByCpcode": false,
                    "cpcodeAccess": {
                      "allCurrentAndNewCpcodes": true,
                      "cpcodes": []
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates the response schema for creating v3 API client.",
                  "type": "object",
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "baseURL",
                    "canAutoCreateCredential",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails"
                  ],
                  "properties": {
                    "accessToken": {
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Encapsulates activities performed on the API client.",
                      "type": "object",
                      "required": [
                        "delete",
                        "deactivateAll",
                        "edit",
                        "editApis",
                        "editAuth",
                        "editGroups",
                        "editIpAcl",
                        "editSwitchAccount",
                        "lock",
                        "transfer",
                        "unlock"
                      ],
                      "properties": {
                        "delete": {
                          "description": "When enabled, you can remove the API client.",
                          "type": "boolean"
                        },
                        "deactivateAll": {
                          "description": "When enabled, you can deactivate the API client's credentials.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "When enabled, you can update the API client.",
                          "type": "boolean"
                        },
                        "editApis": {
                          "description": "When enabled, you can update the `apis` the API client can access.",
                          "type": "boolean"
                        },
                        "editAuth": {
                          "description": "When enabled, you can update the `groups` or `apis` the API client can access.",
                          "type": "boolean"
                        },
                        "editGroups": {
                          "description": "When enabled, you can update the `groups` the API client can access.",
                          "type": "boolean"
                        },
                        "editIpAcl": {
                          "description": "When enabled, you can update the `ipAcl` the API client can access.",
                          "type": "boolean"
                        },
                        "editSwitchAccount": {
                          "description": "When enabled, you can update the API client's option to manage many accounts.",
                          "type": "boolean"
                        },
                        "lock": {
                          "description": "When enabled, you can lock the API client.",
                          "type": "boolean"
                        },
                        "transfer": {
                          "description": "When enabled, you can transfer the API client to a new owner.",
                          "type": "boolean"
                        },
                        "unlock": {
                          "description": "When enabled, you can unlock the API client.",
                          "type": "boolean"
                        }
                      }
                    },
                    "activeCredentialCount": {
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "allowAccountSwitch": {
                      "description": "Indicates whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client)",
                      "type": "boolean"
                    },
                    "apiAccess": {
                      "additionalProperties": false,
                      "description": "The APIs the API client can access.",
                      "type": "object",
                      "required": [
                        "allAccessibleApis",
                        "apis"
                      ],
                      "properties": {
                        "allAccessibleApis": {
                          "description": "When enabled, the API client has access to all available APIs. Otherwise, the client's access is limited to a specific set of `apis`.",
                          "type": "boolean"
                        },
                        "apis": {
                          "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "description",
                              "apiId",
                              "apiName",
                              "documentationUrl",
                              "endPoint",
                              "accessLevel"
                            ],
                            "properties": {
                              "accessLevel": {
                                "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "apiId": {
                                "description": "Unique identifier for the API.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "apiName": {
                                "description": "Descriptive label for the API, like Edge Diagnostic Tools, or Identity and Access Management API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "description": {
                                "description": "Descriptive text about the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "Link to more information about the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "endPoint": {
                                "description": "Specifies where the API can access resources.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "authorizedUsers": {
                      "description": "The API client's valid users.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "baseURL": {
                      "description": "The base URL for the service.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "canAutoCreateCredential": {
                      "description": "When enabled, the API client can create a credential for a new API client. The default is `false`.",
                      "type": "boolean"
                    },
                    "clientDescription": {
                      "description": "Descriptive text about the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientId": {
                      "description": "Unique identifier for an API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientName": {
                      "description": "Descriptive label for the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientType": {
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.",
                      "type": "string",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT",
                        "SERVICE_ACCOUNT"
                      ]
                    },
                    "createdBy": {
                      "description": "The user who created the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the API client was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentials": {
                      "description": "The API client's of credentials.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "description",
                          "actions",
                          "clientToken",
                          "createdOn",
                          "credentialId",
                          "expiresOn",
                          "status"
                        ],
                        "properties": {
                          "actions": {
                            "additionalProperties": false,
                            "description": "Encapsulates activities you can perform on the credential.",
                            "type": "object",
                            "required": [
                              "delete",
                              "activate",
                              "deactivate",
                              "editDescription",
                              "editExpiration"
                            ],
                            "properties": {
                              "delete": {
                                "description": "When enabled, you can remove the credential.",
                                "type": "boolean"
                              },
                              "activate": {
                                "description": "When enabled, you can activate the credential.",
                                "type": "boolean"
                              },
                              "deactivate": {
                                "description": "When enabled, you can deactivate the credential.",
                                "type": "boolean"
                              },
                              "editDescription": {
                                "description": "When enabled, you can modify the credential's description.",
                                "type": "boolean"
                              },
                              "editExpiration": {
                                "description": "When enabled, you can modify the credential's expiration date.",
                                "type": "boolean"
                              }
                            }
                          },
                          "clientToken": {
                            "description": "Part of the credential that identifies the API client.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdOn": {
                            "description": "ISO 8601 timestamp indicating when the credential was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "credentialId": {
                            "description": "Unique identifier for the credential.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "description": {
                            "description": "A descriptive label for the API client.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "expiresOn": {
                            "description": "ISO 8601 timestamp indicating when the credential expires.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "status": {
                            "description": "Specifies whether you can use the credential. `ACTIVE` indicates the credential can be used. `INACTIVE`indicates the credential can't be used. `DELETED` indicates the credential doesn't exist.",
                            "type": "string",
                            "enum": [
                              "ACTIVE",
                              "INACTIVE",
                              "DELETED"
                            ]
                          }
                        }
                      }
                    },
                    "groupAccess": {
                      "additionalProperties": false,
                      "description": "Identifies the API client's group access.",
                      "type": "object",
                      "required": [
                        "cloneAuthorizedUserGroups",
                        "groups"
                      ],
                      "properties": {
                        "cloneAuthorizedUserGroups": {
                          "description": "With a `true` value, the API client's group access is the same as the authorized user.",
                          "type": "boolean"
                        },
                        "groups": {
                          "description": "Groups the API client can access.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "The groups an API client can access.",
                            "type": "object",
                            "properties": {
                              "groupId": {
                                "description": "The group's unique identifier.",
                                "type": "integer"
                              },
                              "groupName": {
                                "description": "The human-readable name for a group.",
                                "type": "string"
                              },
                              "isBlocked": {
                                "description": "If `true`, the API client has access to the group's parent, but can't access the child group.",
                                "type": "boolean"
                              },
                              "parentGroupId": {
                                "description": "The unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                                "type": "string"
                              },
                              "roleDescription": {
                                "description": "The human-readable description for a role.",
                                "type": "string"
                              },
                              "roleId": {
                                "description": "A role's unique identifier.",
                                "type": "integer"
                              },
                              "roleName": {
                                "description": "The human-readable name for a role.",
                                "type": "string"
                              },
                              "subGroups": {
                                "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                                "type": "array",
                                "items": {
                                  "description": "A further-nested group.",
                                  "type": "object",
                                  "x-akamai": {
                                    "file-path": "schemas/groups-nested.yaml"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ipAcl": {
                      "additionalProperties": false,
                      "description": "Specifies the API client's IP list restriction.",
                      "type": "object",
                      "required": [
                        "enable",
                        "cidr"
                      ],
                      "properties": {
                        "cidr": {
                          "description": "IP addresses or CIDR blocks the API client can access.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "enable": {
                          "description": "With a `true` value, the API client can access the IP ACL.",
                          "type": "boolean"
                        }
                      }
                    },
                    "isLocked": {
                      "description": "When enabled, restricts the API clients's access to Control Center services.",
                      "type": "boolean"
                    },
                    "notificationEmails": {
                      "description": "Email addresses to notify users of expiring credentials.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "purgeOptions": {
                      "additionalProperties": false,
                      "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api) in `apis`.",
                      "type": "object",
                      "required": [
                        "canPurgeByCacheTag",
                        "canPurgeByCpcode",
                        "cpcodeAccess"
                      ],
                      "properties": {
                        "canPurgeByCacheTag": {
                          "description": "When enabled, the API client can purge content by cache tag.",
                          "type": "boolean"
                        },
                        "canPurgeByCpcode": {
                          "description": "When enabled, the API client can purge content by CP code.",
                          "type": "boolean"
                        },
                        "cpcodeAccess": {
                          "additionalProperties": false,
                          "description": "CP codes the API client can purge.",
                          "type": "object",
                          "required": [
                            "allCurrentAndNewCpcodes",
                            "cpcodes"
                          ],
                          "properties": {
                            "allCurrentAndNewCpcodes": {
                              "description": "When enabled, the API client can purge content by cache tag.",
                              "type": "boolean"
                            },
                            "cpcodes": {
                              "description": "CP codes the API client can purge.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minimum": 0,
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    },
                    "serviceProviderId": {
                      "description": "Unique identifier for the API's service provider.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/api-client-detail-v3.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "This operation permanently deletes an API client you own, without active credentials. It also breaks any API connections with the client. Before deleting your API client, deactivate all credentials and make sure there aren't any API integrations or scripts using them.",
        "operationId": "delete-api-client-self",
        "summary": "Delete your API client",
        "tags": [
          "API client: self"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/delete-api-client-self"
        },
        "responses": {
          "204": {
            "description": "API client successfully deleted.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/api-clients/self/account-switch-keys": {
      "get": {
        "description": "This operation lists your `accountSwitchKeys` and `accountNames`. Use the `accountSwitchKeys` [to make an API call to another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).",
        "operationId": "get-self-account-switch-keys",
        "summary": "List your account switch keys",
        "tags": [
          "API client: self"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-self-account-switch-keys"
        },
        "responses": {
          "200": {
            "description": "The response provides your account switch keys and account names.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Encapsulates a collection of contexts the client can manage.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "accountName",
                      "accountSwitchKey"
                    ],
                    "properties": {
                      "accountName": {
                        "description": "The name you supply for an account.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "accountSwitchKey": {
                        "description": "The identifier for an account other than your API client's default.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/self-account-switch-keys.yaml"
                  }
                },
                "example": [
                  {
                    "accountName": "Internet Company",
                    "accountSwitchKey": "1-EFGH"
                  },
                  {
                    "accountName": "Main Street Corporation",
                    "accountSwitchKey": "1-ABCD:Z-XYZ"
                  },
                  {
                    "accountName": "High Street Company",
                    "accountSwitchKey": "1-ABCD:Z-PQR"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Optionally filter results by `accountId` or `accountName`. Enter at least three characters in the string to filter the results.",
            "example": "{{search}}",
            "in": "query",
            "name": "search",
            "schema": {
              "example": "indirect",
              "minLength": 3,
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/accountSwitchKeys-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/api-clients/self/credentials": {
      "post": {
        "description": "This operation creates a new credential for your API client. Only you may create credentials for this client. Credentials are in `active` status at creation. They expire two years from their creation date. However, when the API client's permissions are based on Control Center permissions, credentials expire differently and follow the same rotation schedule listed for user passwords on those accounts. Run the [Update a credential](https://techdocs.akamai.com/iam-user-admin/reference/put-client-credential) operation to change the expiration date, description, or status. Save the values from the response, such as the `credentialID` for future use. This is the only time you'll see the client secret. Save the credential at this time to avoid the need to create a new one.",
        "operationId": "post-self-credentials",
        "summary": "Create your credential",
        "tags": [
          "API client: self"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/post-self-credentials"
        },
        "responses": {
          "201": {
            "description": "The response provides the newly created credential.",
            "content": {
              "application/json": {
                "example": {
                  "clientSecret": "aasd3adHRjBfroGqYC/rc/jDaZTZxssdaa/YjD6uA=",
                  "clientToken": "akaa-abcdakjsdkfnanva-abcdakjsdkfnanv",
                  "createdOn": "2018-11-01T23:06:59.000Z",
                  "credentialId": 14111,
                  "description": "New credential for John.",
                  "expiresOn": "2020-11-01T23:06:59.000Z",
                  "status": "ACTIVE"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates all members for the credential data structure.",
                  "type": "object",
                  "required": [
                    "credentialId",
                    "clientToken",
                    "createdOn",
                    "expiresOn",
                    "status",
                    "description"
                  ],
                  "properties": {
                    "clientSecret": {
                      "description": "The client secret.",
                      "type": "string"
                    },
                    "clientToken": {
                      "description": "Part of the credential that identifies the API client.",
                      "type": "string"
                    },
                    "createdOn": {
                      "description": "An ISO 8601 timestamp indicating when the credential was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentialId": {
                      "description": "Unique identifier for the credential.",
                      "type": "integer"
                    },
                    "description": {
                      "description": "Descriptive text for the credential.",
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "An ISO 8601 timestamp indicating when the credential expires. A credential expires two years from the `createdOn` date, at the time it was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Indicates whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. You can switch a credential's `status` between `ACTIVE` and `INACTIVE`. Note that once you change the status to `DELETED`, you've actually deleted it and it can't be reactivated.",
                      "type": "string",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE",
                        "DELETED"
                      ]
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/credential.yaml"
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "description": "A URL path to the newly created object.",
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/Location.yaml"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "This operation lists your API client's credentials.",
        "operationId": "get-self-credentials",
        "summary": "List your credentials",
        "tags": [
          "API client: self"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-self-credentials"
        },
        "responses": {
          "200": {
            "description": "The response provides the credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "A collection of credentials",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "credentialId",
                      "clientToken",
                      "createdOn",
                      "expiresOn",
                      "status",
                      "description"
                    ],
                    "properties": {
                      "clientToken": {
                        "description": "Identifies your client.",
                        "type": "string"
                      },
                      "createdOn": {
                        "description": "ISO 8601 timestamp for when the credential was made.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "credentialId": {
                        "description": "Uniquely identifies each credential.",
                        "type": "integer"
                      },
                      "description": {
                        "description": "Lets you add your own notes or description for your credential.",
                        "type": "string"
                      },
                      "expiresOn": {
                        "description": "An ISO 8601 timestamp indicating when the credential expires.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "status": {
                        "description": "Indicates whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. You can switch a credential's `status` between `ACTIVE` and `INACTIVE`. Note that once you change the status to `DELETED`, you've actually deleted it and it can't be reactivated.",
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/credential-nosecret.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/credentials.yaml"
                  }
                },
                "example": [
                  {
                    "clientToken": "akaa-abcdakjsdkfnanva-abcdakjsdkfnanv",
                    "createdOn": "2019-11-01T23:06:59.000Z",
                    "credentialId": 99999,
                    "description": "John's access to Property Manager",
                    "expiresOn": "2020-11-01T23:06:59.000Z",
                    "status": "ACTIVE"
                  },
                  {
                    "clientToken": "akaa-abcdakjsdkfnanva-abcdakjsdkouoiuo",
                    "createdOn": "2019-11-01T23:06:59.000Z",
                    "credentialId": 88888,
                    "description": "John's access to Event Center",
                    "expiresOn": "2020-11-01T23:06:59.000Z",
                    "status": "INACTIVE"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Optionally enable `actions` to include them as part of the response object.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/api-clients/self/credentials/deactivate": {
      "post": {
        "description": "This operation deactivates all credentials for your API client. This doesn't delete the API client or the credentials. To deactivate a single credential, use the [Update your credential](https://techdocs.akamai.com/iam-user-admin/reference/put-self-credential) operation and set the status to `INACTIVE`.",
        "operationId": "post-self-credentials-deactivate",
        "summary": "Deactivate your credentials",
        "tags": [
          "API client: self"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/post-self-credentials-deactivate"
        },
        "responses": {
          "204": {
            "description": "Credentials successfully deactivated.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/api-clients/self/credentials/{credentialId}": {
      "get": {
        "description": "This operation provides details about a specific credential for your API client. To change the credential's expiration date or toggle its activation status, run the [Update a credential](https://techdocs.akamai.com/iam-user-admin/reference/put-client-credential) operation.",
        "operationId": "get-self-credential",
        "summary": "Get your credential",
        "tags": [
          "API client: self"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-self-credential"
        },
        "responses": {
          "200": {
            "description": "The response provides the credential.",
            "content": {
              "application/json": {
                "example": {
                  "clientToken": "akaa-abcdakjsdkfnanva-abcdakjsdkfnanv",
                  "createdOn": "2020-11-01T23:06:59.000Z",
                  "credentialId": 99999,
                  "description": "Credential with no secret",
                  "expiresOn": "2021-11-01T23:06:59.000Z",
                  "status": "ACTIVE"
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "credentialId",
                    "clientToken",
                    "createdOn",
                    "expiresOn",
                    "status",
                    "description"
                  ],
                  "properties": {
                    "clientToken": {
                      "description": "Identifies your client.",
                      "type": "string"
                    },
                    "createdOn": {
                      "description": "ISO 8601 timestamp for when the credential was made.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentialId": {
                      "description": "Uniquely identifies each credential.",
                      "type": "integer"
                    },
                    "description": {
                      "description": "Lets you add your own notes or description for your credential.",
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "An ISO 8601 timestamp indicating when the credential expires.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Indicates whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. You can switch a credential's `status` between `ACTIVE` and `INACTIVE`. Note that once you change the status to `DELETED`, you've actually deleted it and it can't be reactivated.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/credential-nosecret.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Optionally enable `actions` to include them as part of the response object.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "This operation updates a specific credential for your API client. You can change the expiration date, description, or toggle the activation status. This isn't the same as rotating a credential. For details, see [Rotate credentials](https://techdocs.akamai.com/iam-user-admin/reference/rotate-credentials).",
        "operationId": "put-self-credential",
        "summary": "Update your credential",
        "tags": [
          "API client: self"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/put-self-credential"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "description": "Update this credential",
                "expiresOn": "2020-10-11T23:06:59.000Z",
                "status": "ACTIVE"
              },
              "schema": {
                "additionalProperties": false,
                "type": "object",
                "required": [
                  "expiresOn",
                  "status"
                ],
                "properties": {
                  "description": {
                    "description": "Your own notes or description for the credential.",
                    "example": "{{description}}",
                    "type": "string"
                  },
                  "expiresOn": {
                    "description": "ISO 8601 timestamp for when the credential no longer provides access. The default expiration date is two years from the creation date.",
                    "example": "{{expiresOn}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "status": {
                    "description": "Indicates whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. You can switch a credential's `status` between `ACTIVE` and `INACTIVE`. Note that once you change the status to `DELETED`, you've actually deleted it and it can't be reactivated.",
                    "example": "{{status}}",
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/update-credential.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response reflects the modified credential.",
            "content": {
              "application/json": {
                "example": {
                  "description": "Update this credential",
                  "expiresOn": "2020-10-11T23:06:59.000Z",
                  "status": "ACTIVE"
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "expiresOn",
                    "status"
                  ],
                  "properties": {
                    "description": {
                      "description": "Your own notes or description for the credential.",
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "ISO 8601 timestamp for when the credential no longer provides access. The default expiration date is two years from the creation date.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Indicates whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. You can switch a credential's `status` between `ACTIVE` and `INACTIVE`. Note that once you change the status to `DELETED`, you've actually deleted it and it can't be reactivated.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/update-credential.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "This operation deletes a specific credential from your API client. You can only delete inactive credentials.",
        "operationId": "delete-self-credential",
        "summary": "Remove your credential",
        "tags": [
          "API client: self"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/delete-self-credential"
        },
        "responses": {
          "204": {
            "description": "Credential successfully deleted.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A credential's unique identifier.",
          "example": "{{credentialId}}",
          "in": "path",
          "name": "credentialId",
          "required": true,
          "schema": {
            "example": 123456,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/credentialId-path.yaml"
          }
        }
      ]
    },
    "/api-clients/self/credentials/{credentialId}/deactivate": {
      "post": {
        "description": "This operation deactivates a specific credential for your API client. This doesn't delete the client or the credentials. To update a specific credential, run the [Update your credential](https://techdocs.akamai.com/iam-user-admin/reference/put-self-credential) operation.",
        "operationId": "post-self-credential-deactivate",
        "summary": "Deactivate your credential",
        "tags": [
          "API client: self"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/post-self-credential-deactivate"
        },
        "responses": {
          "204": {
            "description": "Credential successfully deactivated.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A credential's unique identifier.",
          "example": "{{credentialId}}",
          "in": "path",
          "name": "credentialId",
          "required": true,
          "schema": {
            "example": 123456,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/credentialId-path.yaml"
          }
        }
      ]
    },
    "/api-clients/self/lock": {
      "put": {
        "description": "This operation locks your API client. You can't use the API client while it's locked. To unlock your client, run the [Unlock an API client](https://techdocs.akamai.com/iam-user-admin/reference/put-unlock-api-client) operation.",
        "operationId": "put-lock-api-client-self",
        "summary": "Lock your API client",
        "tags": [
          "API client: self"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/put-lock-api-client-self"
        },
        "responses": {
          "200": {
            "description": "The response provides the locked API client.",
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-ly55myu4fbtajqck-o7oubkbiytbjxywe",
                  "activeCredentialCount": 1,
                  "allowAccountSwitch": false,
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "xfz2n5d43mogkdim",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "jperez",
                  "createdDate": "2022-05-13T20:04:35.000Z",
                  "isLocked": true,
                  "serviceConsumerToken": "akaa-lb77cyyf3guivns3-sxmd4sims2mihn67",
                  "authorizedUsers": [
                    "jdoe"
                  ],
                  "notificationEmails": [
                    "jdoe@altostrat.com"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "list of api clients",
                  "type": "object",
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "canAutoCreateCredential",
                    "authorizedUsers",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails",
                    "serviceConsumerToken"
                  ],
                  "properties": {
                    "accessToken": {
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "activeCredentialCount": {
                      "description": "Number of credentials active for the API client.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "allowAccountSwitch": {
                      "description": "Indicates whether the API client can manage more than one account.",
                      "type": "boolean"
                    },
                    "authorizedUsers": {
                      "description": "The API client's valid users.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "canAutoCreateCredential": {
                      "default": false,
                      "description": "When enabled, the API client can create a credential for a new API client. The default is `false`.",
                      "type": "boolean"
                    },
                    "clientDescription": {
                      "description": "Descriptive text about the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientId": {
                      "description": "Unique identifier for the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientName": {
                      "description": "Descriptive label for the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientType": {
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.",
                      "type": "string",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT",
                        "SERVICE_ACCOUNT"
                      ]
                    },
                    "createdBy": {
                      "description": "The user who created the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the API client was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "isLocked": {
                      "description": "When enabled, restricts the API clients's access to Control Center services.",
                      "type": "boolean"
                    },
                    "notificationEmails": {
                      "description": "Email addresses to notify users of expiring credentials.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "serviceConsumerToken": {
                      "description": "Unique identifier for the service hostname.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/api-client-simple-v3.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/api-clients/{clientId}": {
      "get": {
        "description": "This operation provides details about an API client.",
        "operationId": "get-api-client",
        "summary": "Get an API client",
        "tags": [
          "API clients"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-api-client"
        },
        "responses": {
          "200": {
            "description": "The response provides the API client.",
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-whlw7vibvujyoowg-rrp2q4cj362hke5t",
                  "activeCredentialCount": 1,
                  "allowAccountSwitch": false,
                  "baseURL": "https://akaa-csrfyd3yzysqybe3-3dwjebsqo6ecu63m.luna-dev.akamaiapis.net",
                  "canAutoCreateCredential": false,
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "4f3cxdie6adyalyg",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "alfulani",
                  "createdDate": "2022-05-09T10:43:49.000Z",
                  "isLocked": false,
                  "authorizedUsers": [
                    "jdoe"
                  ],
                  "notificationEmails": [
                    "jdoe@altostrat.com"
                  ],
                  "actions": {
                    "delete": false,
                    "deactivateAll": false,
                    "edit": true,
                    "editApis": false,
                    "editAuth": false,
                    "editGroups": false,
                    "editIpAcl": false,
                    "editSwitchAccount": false,
                    "lock": false,
                    "transfer": true,
                    "unlock": false
                  },
                  "apiAccess": {
                    "allAccessibleApis": true,
                    "apis": [
                      {
                        "accessLevel": "READ-ONLY",
                        "apiId": 5580,
                        "apiName": "Search Data Feed",
                        "description": "Search Data Feed",
                        "documentationUrl": "/",
                        "endPoint": "/search-portal-data-feed-api/"
                      },
                      {
                        "accessLevel": "READ-WRITE",
                        "apiId": 5101,
                        "apiName": "Reporting API",
                        "description": "Luna Reporting API",
                        "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                        "endPoint": "/reporting-api"
                      }
                    ]
                  },
                  "groupAccess": {
                    "cloneAuthorizedUserGroups": true,
                    "groups": [
                      {
                        "groupId": 87611,
                        "groupName": "Fala Internal-2-2EZBD",
                        "isBlocked": false,
                        "roleDescription": "CPCodeTest RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": []
                      },
                      {
                        "groupId": 19742,
                        "groupName": "Akamai Internal-1-IZI1J",
                        "isBlocked": false,
                        "roleDescription": "CPCodeTest RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": []
                      },
                      {
                        "groupId": 19717,
                        "groupName": "Akamai Internal-1-7KLGU",
                        "isBlocked": false,
                        "roleDescription": "Admin Role plus Authz Case Management Read Role for PRTLDEVOPS-50807",
                        "roleId": 142838,
                        "roleName": "Admin plus Authz Case Management Read",
                        "subGroups": [
                          {
                            "groupId": 176670,
                            "groupName": "Cloud Access Manager",
                            "isBlocked": false,
                            "parentGroupId": 19717,
                            "roleDescription": "Cloud Access Manager Admin",
                            "roleId": 114776,
                            "roleName": "Cloud Access Manager Admin",
                            "subGroups": []
                          }
                        ]
                      },
                      {
                        "groupId": 19715,
                        "groupName": "Akamai Internal-1-5QRKWT",
                        "isBlocked": false,
                        "roleDescription": "CPCodeTest RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": []
                      },
                      {
                        "groupId": 19760,
                        "groupName": "Akamai Internal-3-984FEB",
                        "isBlocked": false,
                        "roleDescription": "CPCodeTest RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": [
                          {
                            "groupId": 44999,
                            "groupName": "TestGroup",
                            "isBlocked": true,
                            "parentGroupId": 19760,
                            "roleDescription": "This role allows for 'read only' views of the portal and is assigned to enable users to review and monitor reports",
                            "roleId": 13,
                            "roleName": "Viewer",
                            "subGroups": []
                          }
                        ]
                      }
                    ]
                  },
                  "ipAcl": {
                    "enable": true,
                    "cidr": [
                      "192.0.2.228",
                      "2.2.2.2/24"
                    ]
                  },
                  "purgeOptions": {
                    "canPurgeByCacheTag": false,
                    "canPurgeByCpcode": false,
                    "cpcodeAccess": {
                      "allCurrentAndNewCpcodes": true,
                      "cpcodes": []
                    }
                  },
                  "credentials": [
                    {
                      "clientToken": "akaa-hzflcz2fbxhakjzl-5p3hxhuxw55ymxxz",
                      "createdOn": "2022-05-09T10:43:50.000Z",
                      "credentialId": 16850686,
                      "description": "",
                      "expiresOn": "2024-05-09T10:43:50.000Z",
                      "status": "ACTIVE",
                      "actions": {
                        "delete": false,
                        "activate": false,
                        "deactivate": false,
                        "editDescription": false,
                        "editExpiration": false
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates the response schema for creating v3 API client.",
                  "type": "object",
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "baseURL",
                    "canAutoCreateCredential",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails"
                  ],
                  "properties": {
                    "accessToken": {
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Encapsulates activities performed on the API client.",
                      "type": "object",
                      "required": [
                        "delete",
                        "deactivateAll",
                        "edit",
                        "editApis",
                        "editAuth",
                        "editGroups",
                        "editIpAcl",
                        "editSwitchAccount",
                        "lock",
                        "transfer",
                        "unlock"
                      ],
                      "properties": {
                        "delete": {
                          "description": "When enabled, you can remove the API client.",
                          "type": "boolean"
                        },
                        "deactivateAll": {
                          "description": "When enabled, you can deactivate the API client's credentials.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "When enabled, you can update the API client.",
                          "type": "boolean"
                        },
                        "editApis": {
                          "description": "When enabled, you can update the `apis` the API client can access.",
                          "type": "boolean"
                        },
                        "editAuth": {
                          "description": "When enabled, you can update the `groups` or `apis` the API client can access.",
                          "type": "boolean"
                        },
                        "editGroups": {
                          "description": "When enabled, you can update the `groups` the API client can access.",
                          "type": "boolean"
                        },
                        "editIpAcl": {
                          "description": "When enabled, you can update the `ipAcl` the API client can access.",
                          "type": "boolean"
                        },
                        "editSwitchAccount": {
                          "description": "When enabled, you can update the API client's option to manage many accounts.",
                          "type": "boolean"
                        },
                        "lock": {
                          "description": "When enabled, you can lock the API client.",
                          "type": "boolean"
                        },
                        "transfer": {
                          "description": "When enabled, you can transfer the API client to a new owner.",
                          "type": "boolean"
                        },
                        "unlock": {
                          "description": "When enabled, you can unlock the API client.",
                          "type": "boolean"
                        }
                      }
                    },
                    "activeCredentialCount": {
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "allowAccountSwitch": {
                      "description": "Indicates whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client)",
                      "type": "boolean"
                    },
                    "apiAccess": {
                      "additionalProperties": false,
                      "description": "The APIs the API client can access.",
                      "type": "object",
                      "required": [
                        "allAccessibleApis",
                        "apis"
                      ],
                      "properties": {
                        "allAccessibleApis": {
                          "description": "When enabled, the API client has access to all available APIs. Otherwise, the client's access is limited to a specific set of `apis`.",
                          "type": "boolean"
                        },
                        "apis": {
                          "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "description",
                              "apiId",
                              "apiName",
                              "documentationUrl",
                              "endPoint",
                              "accessLevel"
                            ],
                            "properties": {
                              "accessLevel": {
                                "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "apiId": {
                                "description": "Unique identifier for the API.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "apiName": {
                                "description": "Descriptive label for the API, like Edge Diagnostic Tools, or Identity and Access Management API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "description": {
                                "description": "Descriptive text about the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "Link to more information about the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "endPoint": {
                                "description": "Specifies where the API can access resources.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "authorizedUsers": {
                      "description": "The API client's valid users.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "baseURL": {
                      "description": "The base URL for the service.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "canAutoCreateCredential": {
                      "description": "When enabled, the API client can create a credential for a new API client. The default is `false`.",
                      "type": "boolean"
                    },
                    "clientDescription": {
                      "description": "Descriptive text about the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientId": {
                      "description": "Unique identifier for an API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientName": {
                      "description": "Descriptive label for the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientType": {
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.",
                      "type": "string",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT",
                        "SERVICE_ACCOUNT"
                      ]
                    },
                    "createdBy": {
                      "description": "The user who created the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the API client was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentials": {
                      "description": "The API client's of credentials.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "description",
                          "actions",
                          "clientToken",
                          "createdOn",
                          "credentialId",
                          "expiresOn",
                          "status"
                        ],
                        "properties": {
                          "actions": {
                            "additionalProperties": false,
                            "description": "Encapsulates activities you can perform on the credential.",
                            "type": "object",
                            "required": [
                              "delete",
                              "activate",
                              "deactivate",
                              "editDescription",
                              "editExpiration"
                            ],
                            "properties": {
                              "delete": {
                                "description": "When enabled, you can remove the credential.",
                                "type": "boolean"
                              },
                              "activate": {
                                "description": "When enabled, you can activate the credential.",
                                "type": "boolean"
                              },
                              "deactivate": {
                                "description": "When enabled, you can deactivate the credential.",
                                "type": "boolean"
                              },
                              "editDescription": {
                                "description": "When enabled, you can modify the credential's description.",
                                "type": "boolean"
                              },
                              "editExpiration": {
                                "description": "When enabled, you can modify the credential's expiration date.",
                                "type": "boolean"
                              }
                            }
                          },
                          "clientToken": {
                            "description": "Part of the credential that identifies the API client.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdOn": {
                            "description": "ISO 8601 timestamp indicating when the credential was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "credentialId": {
                            "description": "Unique identifier for the credential.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "description": {
                            "description": "A descriptive label for the API client.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "expiresOn": {
                            "description": "ISO 8601 timestamp indicating when the credential expires.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "status": {
                            "description": "Specifies whether you can use the credential. `ACTIVE` indicates the credential can be used. `INACTIVE`indicates the credential can't be used. `DELETED` indicates the credential doesn't exist.",
                            "type": "string",
                            "enum": [
                              "ACTIVE",
                              "INACTIVE",
                              "DELETED"
                            ]
                          }
                        }
                      }
                    },
                    "groupAccess": {
                      "additionalProperties": false,
                      "description": "Identifies the API client's group access.",
                      "type": "object",
                      "required": [
                        "cloneAuthorizedUserGroups",
                        "groups"
                      ],
                      "properties": {
                        "cloneAuthorizedUserGroups": {
                          "description": "With a `true` value, the API client's group access is the same as the authorized user.",
                          "type": "boolean"
                        },
                        "groups": {
                          "description": "Groups the API client can access.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "The groups an API client can access.",
                            "type": "object",
                            "properties": {
                              "groupId": {
                                "description": "The group's unique identifier.",
                                "type": "integer"
                              },
                              "groupName": {
                                "description": "The human-readable name for a group.",
                                "type": "string"
                              },
                              "isBlocked": {
                                "description": "If `true`, the API client has access to the group's parent, but can't access the child group.",
                                "type": "boolean"
                              },
                              "parentGroupId": {
                                "description": "The unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                                "type": "string"
                              },
                              "roleDescription": {
                                "description": "The human-readable description for a role.",
                                "type": "string"
                              },
                              "roleId": {
                                "description": "A role's unique identifier.",
                                "type": "integer"
                              },
                              "roleName": {
                                "description": "The human-readable name for a role.",
                                "type": "string"
                              },
                              "subGroups": {
                                "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                                "type": "array",
                                "items": {
                                  "description": "A further-nested group.",
                                  "type": "object",
                                  "x-akamai": {
                                    "file-path": "schemas/groups-nested.yaml"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ipAcl": {
                      "additionalProperties": false,
                      "description": "Specifies the API client's IP list restriction.",
                      "type": "object",
                      "required": [
                        "enable",
                        "cidr"
                      ],
                      "properties": {
                        "cidr": {
                          "description": "IP addresses or CIDR blocks the API client can access.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "enable": {
                          "description": "With a `true` value, the API client can access the IP ACL.",
                          "type": "boolean"
                        }
                      }
                    },
                    "isLocked": {
                      "description": "When enabled, restricts the API clients's access to Control Center services.",
                      "type": "boolean"
                    },
                    "notificationEmails": {
                      "description": "Email addresses to notify users of expiring credentials.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "purgeOptions": {
                      "additionalProperties": false,
                      "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api) in `apis`.",
                      "type": "object",
                      "required": [
                        "canPurgeByCacheTag",
                        "canPurgeByCpcode",
                        "cpcodeAccess"
                      ],
                      "properties": {
                        "canPurgeByCacheTag": {
                          "description": "When enabled, the API client can purge content by cache tag.",
                          "type": "boolean"
                        },
                        "canPurgeByCpcode": {
                          "description": "When enabled, the API client can purge content by CP code.",
                          "type": "boolean"
                        },
                        "cpcodeAccess": {
                          "additionalProperties": false,
                          "description": "CP codes the API client can purge.",
                          "type": "object",
                          "required": [
                            "allCurrentAndNewCpcodes",
                            "cpcodes"
                          ],
                          "properties": {
                            "allCurrentAndNewCpcodes": {
                              "description": "When enabled, the API client can purge content by cache tag.",
                              "type": "boolean"
                            },
                            "cpcodes": {
                              "description": "CP codes the API client can purge.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minimum": 0,
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    },
                    "serviceProviderId": {
                      "description": "Unique identifier for the API's service provider.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/api-client-detail-v3.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Optionally enable `actions` to include them as part of the response object.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          },
          {
            "description": "Optionally enable `groupAccess` to include them as part of the response object.",
            "example": "{{groupAccess}}",
            "in": "query",
            "name": "groupAccess",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/groupAccess-query.yaml"
            }
          },
          {
            "description": "Optionally enable `apiAccess` to include them as part of the response object.",
            "example": "{{apiAccess}}",
            "in": "query",
            "name": "apiAccess",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/apisAccess-query.yaml"
            }
          },
          {
            "description": "Optionally enable `credentials` to include them as part of the response object.",
            "example": "{{credentials}}",
            "in": "query",
            "name": "credentials",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/credentials-query.yaml"
            }
          },
          {
            "description": "Optionally enable `ipAcl` to include them as part of the response object.",
            "example": "{{ipAcl}}",
            "in": "query",
            "name": "ipAcl",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/ipAcl-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "This operation updates an API client.",
        "operationId": "put-api-clients",
        "summary": "Update an API client",
        "tags": [
          "API clients"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/put-api-clients"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "allowAccountSwitch": false,
                "canAutoCreateCredential": false,
                "clientDescription": "Provides access to the reporting data.",
                "clientName": "report_data",
                "authorizedUsers": [
                  "jdoe"
                ],
                "notificationEmails": [
                  "jdoe@altostrat.com"
                ],
                "apiAccess": {
                  "allAccessibleApis": false,
                  "apis": [
                    {
                      "accessLevel": "READ-ONLY",
                      "apiId": 109230
                    },
                    {
                      "accessLevel": "READ-ONLY",
                      "apiId": 3515
                    }
                  ]
                },
                "groupAccess": {
                  "cloneAuthorizedUserGroups": false,
                  "groups": [
                    {
                      "groupId": 19760,
                      "groupName": "Akamai Internal-3-984FEB",
                      "isBlocked": false,
                      "roleDescription": "Please add a description",
                      "roleId": 73695,
                      "roleName": "Custom role # 73695",
                      "subGroups": [
                        {
                          "groupId": 44999,
                          "groupName": "TestGroup",
                          "isBlocked": false,
                          "parentGroupId": 19760,
                          "roleId": null,
                          "roleName": null,
                          "subGroups": [
                            {
                              "groupId": 171377,
                              "groupName": "testsub123",
                              "isBlocked": false,
                              "parentGroupId": 44999,
                              "roleId": null,
                              "roleName": null,
                              "subGroups": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "ipAcl": {}
              },
              "schema": {
                "additionalProperties": false,
                "type": "object",
                "required": [
                  "clientName",
                  "apiAccess",
                  "groupAccess",
                  "authorizedUsers"
                ],
                "properties": {
                  "allowAccountSwitch": {
                    "description": "Indicates whether the API client can manage more than one account.",
                    "example": "{{allowAccountSwitch}}",
                    "type": "boolean"
                  },
                  "apiAccess": {
                    "additionalProperties": false,
                    "description": "The APIs the API client can access.",
                    "type": "object",
                    "required": [
                      "allAccessibleApis",
                      "apis"
                    ],
                    "properties": {
                      "allAccessibleApis": {
                        "description": "When enabled, the API client has access to all available APIs. Otherwise, the client's access is limited to a specific set of `apis`.",
                        "type": "boolean"
                      },
                      "apis": {
                        "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "description",
                            "apiId",
                            "apiName",
                            "documentationUrl",
                            "endPoint",
                            "accessLevel"
                          ],
                          "properties": {
                            "accessLevel": {
                              "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.",
                              "type": "string",
                              "enum": [
                                "READ-ONLY",
                                "READ-WRITE"
                              ]
                            },
                            "apiId": {
                              "description": "Unique identifier for the API.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "apiName": {
                              "description": "Descriptive label for the API, like Edge Diagnostic Tools, or Identity and Access Management API.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "description": {
                              "description": "Descriptive text for the API.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "documentationUrl": {
                              "description": "Link to more information about the API.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "endPoint": {
                              "description": "Specifies where the API can access resources.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "authorizedUsers": {
                    "description": "The API client's valid users.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "canAutoCreateCredential": {
                    "default": false,
                    "description": "When enabled, the API client can create a credential for a new API client. The default is `false`.",
                    "example": "{{canAutoCreateCredential}}",
                    "type": "boolean"
                  },
                  "clientDescription": {
                    "description": "Descriptive text about the API client.",
                    "example": "{{clientDescription}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "clientName": {
                    "description": "Descriptive label for the API client.",
                    "example": "{{clientName}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "groupAccess": {
                    "additionalProperties": false,
                    "description": "Identifies the API client's group access.",
                    "type": "object",
                    "required": [
                      "cloneAuthorizedUserGroups",
                      "groups"
                    ],
                    "properties": {
                      "cloneAuthorizedUserGroups": {
                        "description": "With a `true` value, the API client's group access is the same as the authorized user.",
                        "type": "boolean"
                      },
                      "groups": {
                        "description": "Groups an API client can access.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "The groups an API client can access.",
                          "type": "object",
                          "properties": {
                            "groupId": {
                              "description": "The group's unique identifier.",
                              "type": "integer"
                            },
                            "groupName": {
                              "description": "The human-readable name for a group.",
                              "type": "string"
                            },
                            "isBlocked": {
                              "description": "If `true`, the API client has access to the group's parent, but can't access the child group.",
                              "type": "boolean"
                            },
                            "parentGroupId": {
                              "description": "The unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                              "type": "string"
                            },
                            "roleDescription": {
                              "description": "The human-readable description for a role.",
                              "type": "string"
                            },
                            "roleId": {
                              "description": "A role's unique identifier.",
                              "type": "integer"
                            },
                            "roleName": {
                              "description": "The human-readable name for a role.",
                              "type": "string"
                            },
                            "subGroups": {
                              "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                              "type": "array",
                              "items": {
                                "description": "A further-nested group.",
                                "type": "object",
                                "x-akamai": {
                                  "file-path": "schemas/groups-nested.yaml"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "ipAcl": {
                    "additionalProperties": false,
                    "description": "Specifies the API client's IP list restriction.",
                    "type": "object",
                    "required": [
                      "enable",
                      "cidr"
                    ],
                    "properties": {
                      "cidr": {
                        "description": "IP addresses or CIDR blocks the API client can access.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "enable": {
                        "description": "With a `true` value, the API client can access to the IP ACL.",
                        "type": "boolean"
                      }
                    }
                  },
                  "notificationEmails": {
                    "description": "Email addresses to notify users of expiring credentials.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "purgeOptions": {
                    "additionalProperties": false,
                    "description": "Configures the API client for access to the CCU API in `apis`.",
                    "type": "object",
                    "required": [
                      "canPurgeByCacheTag",
                      "canPurgeByCpcode",
                      "cpcodeAccess"
                    ],
                    "properties": {
                      "canPurgeByCacheTag": {
                        "description": "When enabled, the API client can purge content by cache tag.",
                        "type": "boolean"
                      },
                      "canPurgeByCpcode": {
                        "description": "When enabled, the API client can purge content by CP code.",
                        "type": "boolean"
                      },
                      "cpcodeAccess": {
                        "additionalProperties": false,
                        "description": "CP codes the API client can purge.",
                        "type": "object",
                        "required": [
                          "allCurrentAndNewCpcodes",
                          "cpcodes"
                        ],
                        "properties": {
                          "allCurrentAndNewCpcodes": {
                            "description": "When enabled, the API client can purge content by cache tag.",
                            "type": "boolean"
                          },
                          "cpcodes": {
                            "description": "CP codes the API client can purge.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/api-client-update-request-v3.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response reflects the modified API client.",
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-eol24zwha6c2huw6-3at564pdmaggqrro",
                  "activeCredentialCount": 0,
                  "allowAccountSwitch": false,
                  "baseURL": "https://akaa-g3bclnoojfn7jvua-ic3mtmz7dwkot4jw.luna-dev.akamaiapis.net",
                  "canAutoCreateCredential": false,
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "2cdgugz2tjbtowmy",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "szhang",
                  "createdDate": "2022-05-23T19:56:27.000Z",
                  "isLocked": false,
                  "authorizedUsers": [
                    "jdoe"
                  ],
                  "notificationEmails": [
                    "jdoe@altostrat.com"
                  ],
                  "actions": {
                    "delete": true,
                    "deactivateAll": false,
                    "edit": true,
                    "editApis": true,
                    "editAuth": true,
                    "editGroups": true,
                    "editIpAcl": true,
                    "editSwitchAccount": false,
                    "lock": true,
                    "transfer": true,
                    "unlock": false
                  },
                  "apiAccess": {
                    "allAccessibleApis": true,
                    "apis": [
                      {
                        "accessLevel": "READ-ONLY",
                        "apiId": 5580,
                        "apiName": "Search Data Feed",
                        "description": "Search Data Feed",
                        "documentationUrl": "/",
                        "endPoint": "/search-portal-data-feed-api/"
                      },
                      {
                        "accessLevel": "READ-WRITE",
                        "apiId": 5101,
                        "apiName": "Reporting API",
                        "description": "Reporting API",
                        "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                        "endPoint": "/reporting-api"
                      }
                    ]
                  },
                  "groupAccess": {
                    "cloneAuthorizedUserGroups": true,
                    "groups": [
                      {
                        "groupId": 87611,
                        "groupName": "Fala Internal-2-2EZBD",
                        "isBlocked": false,
                        "roleDescription": "CPCodeTest RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": []
                      },
                      {
                        "groupId": 19742,
                        "groupName": "Akamai Internal-1-IZI1J",
                        "isBlocked": false,
                        "roleDescription": "CPCodeTest RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": []
                      },
                      {
                        "groupId": 19717,
                        "groupName": "Akamai Internal-1-7KLGU",
                        "isBlocked": false,
                        "roleDescription": "Admin Role plus Authz Case Management Read Role for PRTLDEVOPS-50807",
                        "roleId": 142838,
                        "roleName": "Admin plus Authz Case Management Read",
                        "subGroups": [
                          {
                            "groupId": 176670,
                            "groupName": "Cloud Access Manager",
                            "isBlocked": false,
                            "parentGroupId": 19717,
                            "roleDescription": "Cloud Access Manager Admin",
                            "roleId": 114776,
                            "roleName": "Cloud Access Manager Admin",
                            "subGroups": []
                          }
                        ]
                      },
                      {
                        "groupId": 19715,
                        "groupName": "Akamai Internal-1-5QRKWT",
                        "isBlocked": false,
                        "roleDescription": "CPCodeTest RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": []
                      },
                      {
                        "groupId": 19760,
                        "groupName": "Akamai Internal-3-984FEB",
                        "isBlocked": false,
                        "roleDescription": "CPCodeTest RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": [
                          {
                            "groupId": 44999,
                            "groupName": "TestGroup",
                            "isBlocked": true,
                            "parentGroupId": 19760,
                            "roleDescription": "Provides users with read-only access to Control Center and to monitor reports.",
                            "roleId": 13,
                            "roleName": "Viewer",
                            "subGroups": []
                          }
                        ]
                      }
                    ]
                  },
                  "purgeOptions": {
                    "canPurgeByCacheTag": false,
                    "canPurgeByCpcode": false,
                    "cpcodeAccess": {
                      "allCurrentAndNewCpcodes": true,
                      "cpcodes": []
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates the response schema for creating v3 API client.",
                  "type": "object",
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "baseURL",
                    "canAutoCreateCredential",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails"
                  ],
                  "properties": {
                    "accessToken": {
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Encapsulates activities performed on the API client.",
                      "type": "object",
                      "required": [
                        "delete",
                        "deactivateAll",
                        "edit",
                        "editApis",
                        "editAuth",
                        "editGroups",
                        "editIpAcl",
                        "editSwitchAccount",
                        "lock",
                        "transfer",
                        "unlock"
                      ],
                      "properties": {
                        "delete": {
                          "description": "When enabled, you can remove the API client.",
                          "type": "boolean"
                        },
                        "deactivateAll": {
                          "description": "When enabled, you can deactivate the API client's credentials.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "When enabled, you can update the API client.",
                          "type": "boolean"
                        },
                        "editApis": {
                          "description": "When enabled, you can update the `apis` the API client can access.",
                          "type": "boolean"
                        },
                        "editAuth": {
                          "description": "When enabled, you can update the `groups` or `apis` the API client can access.",
                          "type": "boolean"
                        },
                        "editGroups": {
                          "description": "When enabled, you can update the `groups` the API client can access.",
                          "type": "boolean"
                        },
                        "editIpAcl": {
                          "description": "When enabled, you can update the `ipAcl` the API client can access.",
                          "type": "boolean"
                        },
                        "editSwitchAccount": {
                          "description": "When enabled, you can update the API client's option to manage many accounts.",
                          "type": "boolean"
                        },
                        "lock": {
                          "description": "When enabled, you can lock the API client.",
                          "type": "boolean"
                        },
                        "transfer": {
                          "description": "When enabled, you can transfer the API client to a new owner.",
                          "type": "boolean"
                        },
                        "unlock": {
                          "description": "When enabled, you can unlock the API client.",
                          "type": "boolean"
                        }
                      }
                    },
                    "activeCredentialCount": {
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "allowAccountSwitch": {
                      "description": "Indicates whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client)",
                      "type": "boolean"
                    },
                    "apiAccess": {
                      "additionalProperties": false,
                      "description": "The APIs the API client can access.",
                      "type": "object",
                      "required": [
                        "allAccessibleApis",
                        "apis"
                      ],
                      "properties": {
                        "allAccessibleApis": {
                          "description": "When enabled, the API client has access to all available APIs. Otherwise, the client's access is limited to a specific set of `apis`.",
                          "type": "boolean"
                        },
                        "apis": {
                          "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "description",
                              "apiId",
                              "apiName",
                              "documentationUrl",
                              "endPoint",
                              "accessLevel"
                            ],
                            "properties": {
                              "accessLevel": {
                                "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "apiId": {
                                "description": "Unique identifier for the API.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "apiName": {
                                "description": "Descriptive label for the API, like Edge Diagnostic Tools, or Identity and Access Management API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "description": {
                                "description": "Descriptive text about the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "Link to more information about the API.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "endPoint": {
                                "description": "Specifies where the API can access resources.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "authorizedUsers": {
                      "description": "The API client's valid users.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "baseURL": {
                      "description": "The base URL for the service.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "canAutoCreateCredential": {
                      "description": "When enabled, the API client can create a credential for a new API client. The default is `false`.",
                      "type": "boolean"
                    },
                    "clientDescription": {
                      "description": "Descriptive text about the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientId": {
                      "description": "Unique identifier for an API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientName": {
                      "description": "Descriptive label for the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientType": {
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.",
                      "type": "string",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT",
                        "SERVICE_ACCOUNT"
                      ]
                    },
                    "createdBy": {
                      "description": "The user who created the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the API client was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentials": {
                      "description": "The API client's of credentials.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "description",
                          "actions",
                          "clientToken",
                          "createdOn",
                          "credentialId",
                          "expiresOn",
                          "status"
                        ],
                        "properties": {
                          "actions": {
                            "additionalProperties": false,
                            "description": "Encapsulates activities you can perform on the credential.",
                            "type": "object",
                            "required": [
                              "delete",
                              "activate",
                              "deactivate",
                              "editDescription",
                              "editExpiration"
                            ],
                            "properties": {
                              "delete": {
                                "description": "When enabled, you can remove the credential.",
                                "type": "boolean"
                              },
                              "activate": {
                                "description": "When enabled, you can activate the credential.",
                                "type": "boolean"
                              },
                              "deactivate": {
                                "description": "When enabled, you can deactivate the credential.",
                                "type": "boolean"
                              },
                              "editDescription": {
                                "description": "When enabled, you can modify the credential's description.",
                                "type": "boolean"
                              },
                              "editExpiration": {
                                "description": "When enabled, you can modify the credential's expiration date.",
                                "type": "boolean"
                              }
                            }
                          },
                          "clientToken": {
                            "description": "Part of the credential that identifies the API client.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdOn": {
                            "description": "ISO 8601 timestamp indicating when the credential was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "credentialId": {
                            "description": "Unique identifier for the credential.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "description": {
                            "description": "A descriptive label for the API client.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "expiresOn": {
                            "description": "ISO 8601 timestamp indicating when the credential expires.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "status": {
                            "description": "Specifies whether you can use the credential. `ACTIVE` indicates the credential can be used. `INACTIVE`indicates the credential can't be used. `DELETED` indicates the credential doesn't exist.",
                            "type": "string",
                            "enum": [
                              "ACTIVE",
                              "INACTIVE",
                              "DELETED"
                            ]
                          }
                        }
                      }
                    },
                    "groupAccess": {
                      "additionalProperties": false,
                      "description": "Identifies the API client's group access.",
                      "type": "object",
                      "required": [
                        "cloneAuthorizedUserGroups",
                        "groups"
                      ],
                      "properties": {
                        "cloneAuthorizedUserGroups": {
                          "description": "With a `true` value, the API client's group access is the same as the authorized user.",
                          "type": "boolean"
                        },
                        "groups": {
                          "description": "Groups the API client can access.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "The groups an API client can access.",
                            "type": "object",
                            "properties": {
                              "groupId": {
                                "description": "The group's unique identifier.",
                                "type": "integer"
                              },
                              "groupName": {
                                "description": "The human-readable name for a group.",
                                "type": "string"
                              },
                              "isBlocked": {
                                "description": "If `true`, the API client has access to the group's parent, but can't access the child group.",
                                "type": "boolean"
                              },
                              "parentGroupId": {
                                "description": "The unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                                "type": "string"
                              },
                              "roleDescription": {
                                "description": "The human-readable description for a role.",
                                "type": "string"
                              },
                              "roleId": {
                                "description": "A role's unique identifier.",
                                "type": "integer"
                              },
                              "roleName": {
                                "description": "The human-readable name for a role.",
                                "type": "string"
                              },
                              "subGroups": {
                                "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                                "type": "array",
                                "items": {
                                  "description": "A further-nested group.",
                                  "type": "object",
                                  "x-akamai": {
                                    "file-path": "schemas/groups-nested.yaml"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ipAcl": {
                      "additionalProperties": false,
                      "description": "Specifies the API client's IP list restriction.",
                      "type": "object",
                      "required": [
                        "enable",
                        "cidr"
                      ],
                      "properties": {
                        "cidr": {
                          "description": "IP addresses or CIDR blocks the API client can access.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "enable": {
                          "description": "With a `true` value, the API client can access the IP ACL.",
                          "type": "boolean"
                        }
                      }
                    },
                    "isLocked": {
                      "description": "When enabled, restricts the API clients's access to Control Center services.",
                      "type": "boolean"
                    },
                    "notificationEmails": {
                      "description": "Email addresses to notify users of expiring credentials.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "purgeOptions": {
                      "additionalProperties": false,
                      "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api) in `apis`.",
                      "type": "object",
                      "required": [
                        "canPurgeByCacheTag",
                        "canPurgeByCpcode",
                        "cpcodeAccess"
                      ],
                      "properties": {
                        "canPurgeByCacheTag": {
                          "description": "When enabled, the API client can purge content by cache tag.",
                          "type": "boolean"
                        },
                        "canPurgeByCpcode": {
                          "description": "When enabled, the API client can purge content by CP code.",
                          "type": "boolean"
                        },
                        "cpcodeAccess": {
                          "additionalProperties": false,
                          "description": "CP codes the API client can purge.",
                          "type": "object",
                          "required": [
                            "allCurrentAndNewCpcodes",
                            "cpcodes"
                          ],
                          "properties": {
                            "allCurrentAndNewCpcodes": {
                              "description": "When enabled, the API client can purge content by cache tag.",
                              "type": "boolean"
                            },
                            "cpcodes": {
                              "description": "CP codes the API client can purge.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minimum": 0,
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    },
                    "serviceProviderId": {
                      "description": "Unique identifier for the API's service provider.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/api-client-detail-v3.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "This operation permanently deletes the API client, breaking any API connections with the client. To delete a client, you need to own the client, or have admin access on a given group. Before deleting an API client, make sure there aren't any API integrations or scripts using it.",
        "operationId": "delete-api-client",
        "summary": "Delete an API client",
        "tags": [
          "API clients"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/delete-api-client"
        },
        "responses": {
          "204": {
            "description": "API client successfully deleted.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each API client.",
          "example": "{{clientId}}",
          "in": "path",
          "name": "clientId",
          "required": true,
          "schema": {
            "example": "2cdgugz2tjbtowmy",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/clientId-path.yaml"
          }
        }
      ]
    },
    "/api-clients/{clientId}/account-switch-keys": {
      "get": {
        "description": "This operation lists the `accountSwitchKeys` and `accountNames` available to a given API client. Use the `accountSwitchKeys` [to make an API call to another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).",
        "operationId": "get-client-account-switch-keys",
        "summary": "List account switch keys",
        "tags": [
          "API clients"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-client-account-switch-keys"
        },
        "responses": {
          "200": {
            "description": "The response provides account switch keys and account names available to you.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Encapsulates a collection of contexts the client can manage.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "accountName",
                      "accountSwitchKey"
                    ],
                    "properties": {
                      "accountName": {
                        "description": "Descriptive label for the account.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "accountSwitchKey": {
                        "description": "The identifier for an account other than your API client's default.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/client-account-switch-keys.yaml"
                  }
                },
                "example": [
                  {
                    "accountName": "High Street Company",
                    "accountSwitchKey": "1-EFGH"
                  },
                  {
                    "accountName": "Internet Company",
                    "accountSwitchKey": "1-ABCD:Z-XYZ"
                  },
                  {
                    "accountName": "Main Street Corporation",
                    "accountSwitchKey": "1-ABCD:Z-PQR"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Optionally filter results by `accountId` or `accountName`. Enter at least three characters in the string to filter the results.",
            "example": "{{search}}",
            "in": "query",
            "name": "search",
            "schema": {
              "example": "indirect",
              "minLength": 3,
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/accountSwitchKeys-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each API client.",
          "example": "{{clientId}}",
          "in": "path",
          "name": "clientId",
          "required": true,
          "schema": {
            "example": "2cdgugz2tjbtowmy",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/clientId-path.yaml"
          }
        }
      ]
    },
    "/api-clients/{clientId}/credentials": {
      "post": {
        "description": "This operation creates a new credential for a specific API client. Only the client's owner may create credentials for the client. Credentials are in `active` status at creation. They expire two years from their creation date. However, when the API client's permissions are based on Control Center permissions, credentials expire differently and follow the same rotation schedule listed for user passwords on those accounts. Run the [Update a credential](https://techdocs.akamai.com/iam-user-admin/reference/put-client-credential) operation to change the expiration date, description, or status. Save the values from the response, such as the `credentialID`, for future use. This is the only time you'll see the client secret. Save the credential to avoid the need to create a new one.",
        "operationId": "post-client-credentials",
        "summary": "Create a credential",
        "tags": [
          "API clients"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/post-client-credentials"
        },
        "responses": {
          "201": {
            "description": "The response provides a newly created credential.",
            "content": {
              "application/json": {
                "example": {
                  "clientSecret": "aasd3adHRjBfroGqYC/rc/jDaZTZxssdaa/YjD6uA=",
                  "clientToken": "akaa-abcdakjsdkfnanva-abcdakjsdkfnanv",
                  "createdOn": "2018-11-01T23:06:59.000Z",
                  "credentialId": 14111,
                  "description": "New credential for John.",
                  "expiresOn": "2020-11-01T23:06:59.000Z",
                  "status": "ACTIVE"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates all members for the credential data structure.",
                  "type": "object",
                  "required": [
                    "credentialId",
                    "clientToken",
                    "createdOn",
                    "expiresOn",
                    "status",
                    "description"
                  ],
                  "properties": {
                    "clientSecret": {
                      "description": "The client secret.",
                      "type": "string"
                    },
                    "clientToken": {
                      "description": "Part of the credential that identifies the API client.",
                      "type": "string"
                    },
                    "createdOn": {
                      "description": "An ISO 8601 timestamp indicating when the credential was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentialId": {
                      "description": "Unique identifier for the credential.",
                      "type": "integer"
                    },
                    "description": {
                      "description": "Descriptive text for the credential.",
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "An ISO 8601 timestamp indicating when the credential expires. A credential expires two years from the `createdOn` date, at the time it was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Indicates whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. You can switch a credential's `status` between `ACTIVE` and `INACTIVE`. Note that once you change the status to `DELETED`, you've actually deleted it and it can't be reactivated.",
                      "type": "string",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE",
                        "DELETED"
                      ]
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/credential.yaml"
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "description": "A URL path to the newly created object.",
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/Location.yaml"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "This operation lists credentials for an API client.",
        "operationId": "get-client-credentials",
        "summary": "List credentials",
        "tags": [
          "API clients"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-client-credentials"
        },
        "responses": {
          "200": {
            "description": "The response provides the API client's credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "A collection of credentials",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "credentialId",
                      "clientToken",
                      "createdOn",
                      "expiresOn",
                      "status",
                      "description"
                    ],
                    "properties": {
                      "clientToken": {
                        "description": "Identifies your client.",
                        "type": "string"
                      },
                      "createdOn": {
                        "description": "ISO 8601 timestamp for when the credential was made.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "credentialId": {
                        "description": "Uniquely identifies each credential.",
                        "type": "integer"
                      },
                      "description": {
                        "description": "Lets you add your own notes or description for your credential.",
                        "type": "string"
                      },
                      "expiresOn": {
                        "description": "An ISO 8601 timestamp indicating when the credential expires.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "status": {
                        "description": "Indicates whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. You can switch a credential's `status` between `ACTIVE` and `INACTIVE`. Note that once you change the status to `DELETED`, you've actually deleted it and it can't be reactivated.",
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/credential-nosecret.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/credentials.yaml"
                  }
                },
                "example": [
                  {
                    "clientToken": "akaa-abcdakjsdkfnanva-abcdakjsdkfnanv",
                    "createdOn": "2019-11-01T23:06:59.000Z",
                    "credentialId": 99999,
                    "description": "John's access to Property Manager",
                    "expiresOn": "2020-11-01T23:06:59.000Z",
                    "status": "ACTIVE"
                  },
                  {
                    "clientToken": "akaa-abcdakjsdkfnanva-abcdakjsdkouoiuo",
                    "createdOn": "2019-11-01T23:06:59.000Z",
                    "credentialId": 88888,
                    "description": "John's access to Event Center",
                    "expiresOn": "2020-11-01T23:06:59.000Z",
                    "status": "INACTIVE"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Optionally enable `actions` to include them as part of the response object.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each API client.",
          "example": "{{clientId}}",
          "in": "path",
          "name": "clientId",
          "required": true,
          "schema": {
            "example": "2cdgugz2tjbtowmy",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/clientId-path.yaml"
          }
        }
      ]
    },
    "/api-clients/{clientId}/credentials/deactivate": {
      "post": {
        "description": "This operation deactivates all credentials for a specific API client. This doesn't delete the API client or the credentials. To deactivate a single credential, run the [Update a credential](https://techdocs.akamai.com/iam-user-admin/reference/put-client-credential) operation and set the status to `INACTIVE`.",
        "operationId": "post-client-credentials-deactivate",
        "summary": "Deactivate credentials",
        "tags": [
          "API clients"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/post-client-credentials-deactivate"
        },
        "responses": {
          "204": {
            "description": "Credentials successfully deactivated.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each API client.",
          "example": "{{clientId}}",
          "in": "path",
          "name": "clientId",
          "required": true,
          "schema": {
            "example": "2cdgugz2tjbtowmy",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/clientId-path.yaml"
          }
        }
      ]
    },
    "/api-clients/{clientId}/credentials/{credentialId}": {
      "get": {
        "description": "This operation returns details about a specific credential for an API client. To change the credential's expiration date or toggle its activation status, run the [Update credential for an API client](https://techdocs.akamai.com/iam-user-admin/reference/put-client-credential) operation.",
        "operationId": "get-client-credential",
        "summary": "Get a credential",
        "tags": [
          "API clients"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-client-credential"
        },
        "responses": {
          "200": {
            "description": "The response provides the credential.",
            "content": {
              "application/json": {
                "example": {
                  "clientToken": "akaa-abcdakjsdkfnanva-abcdakjsdkfnanv",
                  "createdOn": "2020-11-01T23:06:59.000Z",
                  "credentialId": 99999,
                  "description": "Credential with no secret",
                  "expiresOn": "2021-11-01T23:06:59.000Z",
                  "status": "ACTIVE"
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "credentialId",
                    "clientToken",
                    "createdOn",
                    "expiresOn",
                    "status",
                    "description"
                  ],
                  "properties": {
                    "clientToken": {
                      "description": "Identifies your client.",
                      "type": "string"
                    },
                    "createdOn": {
                      "description": "ISO 8601 timestamp for when the credential was made.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentialId": {
                      "description": "Uniquely identifies each credential.",
                      "type": "integer"
                    },
                    "description": {
                      "description": "Lets you add your own notes or description for your credential.",
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "An ISO 8601 timestamp indicating when the credential expires.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Indicates whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. You can switch a credential's `status` between `ACTIVE` and `INACTIVE`. Note that once you change the status to `DELETED`, you've actually deleted it and it can't be reactivated.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/credential-nosecret.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Optionally enable `actions` to include them as part of the response object.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "schema": {
              "example": true,
              "type": "boolean"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "This operation updates a specific credential for an API client. You can change the expiration date, description, or toggle the activation status. This isn't the same as rotating a credential. For details, see [Rotate credentials](https://techdocs.akamai.com/iam-user-admin/reference/rotate-credentials).",
        "operationId": "put-client-credential",
        "summary": "Update a credential",
        "tags": [
          "API clients"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/put-client-credential"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "description": "Update this credential",
                "expiresOn": "2020-10-11T23:06:59.000Z",
                "status": "ACTIVE"
              },
              "schema": {
                "additionalProperties": false,
                "type": "object",
                "required": [
                  "expiresOn",
                  "status"
                ],
                "properties": {
                  "description": {
                    "description": "Your own notes or description for the credential.",
                    "example": "{{description}}",
                    "type": "string"
                  },
                  "expiresOn": {
                    "description": "ISO 8601 timestamp for when the credential no longer provides access. The default expiration date is two years from the creation date.",
                    "example": "{{expiresOn}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "status": {
                    "description": "Indicates whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. You can switch a credential's `status` between `ACTIVE` and `INACTIVE`. Note that once you change the status to `DELETED`, you've actually deleted it and it can't be reactivated.",
                    "example": "{{status}}",
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/update-credential.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response reflects the modified credential.",
            "content": {
              "application/json": {
                "example": {
                  "description": "Update this credential",
                  "expiresOn": "2020-10-11T23:06:59.000Z",
                  "status": "ACTIVE"
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "expiresOn",
                    "status"
                  ],
                  "properties": {
                    "description": {
                      "description": "Your own notes or description for the credential.",
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "ISO 8601 timestamp for when the credential no longer provides access. The default expiration date is two years from the creation date.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Indicates whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. You can switch a credential's `status` between `ACTIVE` and `INACTIVE`. Note that once you change the status to `DELETED`, you've actually deleted it and it can't be reactivated.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/update-credential.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "This operation deletes a specific credential from an API client. You can only delete inactive credentials.",
        "operationId": "delete-client-credential",
        "summary": "Remove a credential",
        "tags": [
          "API clients"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/delete-client-credential"
        },
        "responses": {
          "204": {
            "description": "Credential successfully deleted.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A credential's unique identifier.",
          "example": "{{credentialId}}",
          "in": "path",
          "name": "credentialId",
          "required": true,
          "schema": {
            "example": 123456,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/credentialId-path.yaml"
          }
        },
        {
          "description": "A unique identifier for each API client.",
          "example": "{{clientId}}",
          "in": "path",
          "name": "clientId",
          "required": true,
          "schema": {
            "example": "2cdgugz2tjbtowmy",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/clientId-path.yaml"
          }
        }
      ]
    },
    "/api-clients/{clientId}/credentials/{credentialId}/deactivate": {
      "post": {
        "description": "This operation deactivates a specific credential for an API client. This doesn't delete the API client, or the other credentials.",
        "operationId": "post-client-credential-deactivate",
        "summary": "Deactivate a credential",
        "tags": [
          "API clients"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/post-client-credential-deactivate"
        },
        "responses": {
          "204": {
            "description": "Credential successfully deactivated.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A credential's unique identifier.",
          "example": "{{credentialId}}",
          "in": "path",
          "name": "credentialId",
          "required": true,
          "schema": {
            "example": 123456,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/credentialId-path.yaml"
          }
        },
        {
          "description": "A unique identifier for each API client.",
          "example": "{{clientId}}",
          "in": "path",
          "name": "clientId",
          "required": true,
          "schema": {
            "example": "2cdgugz2tjbtowmy",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/clientId-path.yaml"
          }
        }
      ]
    },
    "/api-clients/{clientId}/lock": {
      "put": {
        "description": "This operation locks an API client. You can't use the API client while it's locked. To unlock a client, run the [Unlock an API client](https://techdocs.akamai.com/iam-user-admin/reference/put-unlock-api-client) operation.",
        "operationId": "put-lock-api-client",
        "summary": "Lock an API client",
        "tags": [
          "API clients"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/put-lock-api-client"
        },
        "responses": {
          "200": {
            "description": "The response provides the locked API client.",
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-ly55myu4fbtajqck-o7oubkbiytbjxywe",
                  "activeCredentialCount": 1,
                  "allowAccountSwitch": false,
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "xfz2n5d43mogkdim",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "adevi",
                  "createdDate": "2022-05-13T20:04:35.000Z",
                  "isLocked": true,
                  "serviceConsumerToken": "akaa-lb77cyyf3guivns3-sxmd4sims2mihn67",
                  "authorizedUsers": [
                    "jdoe"
                  ],
                  "notificationEmails": [
                    "jdoe@altostrat.com"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "list of api clients",
                  "type": "object",
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "canAutoCreateCredential",
                    "authorizedUsers",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails",
                    "serviceConsumerToken"
                  ],
                  "properties": {
                    "accessToken": {
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "activeCredentialCount": {
                      "description": "Number of credentials active for the API client.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "allowAccountSwitch": {
                      "description": "Indicates whether the API client can manage more than one account.",
                      "type": "boolean"
                    },
                    "authorizedUsers": {
                      "description": "The API client's valid users.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "canAutoCreateCredential": {
                      "default": false,
                      "description": "When enabled, the API client can create a credential for a new API client. The default is `false`.",
                      "type": "boolean"
                    },
                    "clientDescription": {
                      "description": "Descriptive text about the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientId": {
                      "description": "Unique identifier for the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientName": {
                      "description": "Descriptive label for the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientType": {
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.",
                      "type": "string",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT",
                        "SERVICE_ACCOUNT"
                      ]
                    },
                    "createdBy": {
                      "description": "The user who created the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the API client was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "isLocked": {
                      "description": "When enabled, restricts the API clients's access to Control Center services.",
                      "type": "boolean"
                    },
                    "notificationEmails": {
                      "description": "Email addresses to notify users of expiring credentials.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "serviceConsumerToken": {
                      "description": "Unique identifier for the service hostname.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/api-client-simple-v3.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each API client.",
          "example": "{{clientId}}",
          "in": "path",
          "name": "clientId",
          "required": true,
          "schema": {
            "example": "2cdgugz2tjbtowmy",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/clientId-path.yaml"
          }
        }
      ]
    },
    "/api-clients/{clientId}/unlock": {
      "put": {
        "description": "This operation unlocks an API client.",
        "operationId": "put-unlock-api-client",
        "summary": "Unlock an API client",
        "tags": [
          "API clients"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/put-unlock-api-client"
        },
        "responses": {
          "200": {
            "description": "The response provides the unlocked API client.",
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-ly55myu4fbtajqck-o7oubkbiytbjxywe",
                  "activeCredentialCount": 1,
                  "allowAccountSwitch": false,
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "xfz2n5d43mogkdim",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "jsmith",
                  "createdDate": "2022-05-13T20:04:35.000Z",
                  "isLocked": true,
                  "serviceConsumerToken": "akaa-lb77cyyf3guivns3-sxmd4sims2mihn67",
                  "authorizedUsers": [
                    "jdoe"
                  ],
                  "notificationEmails": [
                    "jdoe@altostrat.com"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "list of api clients",
                  "type": "object",
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "canAutoCreateCredential",
                    "authorizedUsers",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails",
                    "serviceConsumerToken"
                  ],
                  "properties": {
                    "accessToken": {
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "activeCredentialCount": {
                      "description": "Number of credentials active for the API client.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "allowAccountSwitch": {
                      "description": "Indicates whether the API client can manage more than one account.",
                      "type": "boolean"
                    },
                    "authorizedUsers": {
                      "description": "The API client's valid users.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "canAutoCreateCredential": {
                      "default": false,
                      "description": "When enabled, the API client can create a credential for a new API client. The default is `false`.",
                      "type": "boolean"
                    },
                    "clientDescription": {
                      "description": "Descriptive text about the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientId": {
                      "description": "Unique identifier for the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientName": {
                      "description": "Descriptive label for the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientType": {
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.",
                      "type": "string",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT",
                        "SERVICE_ACCOUNT"
                      ]
                    },
                    "createdBy": {
                      "description": "The user who created the API client.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the API client was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "isLocked": {
                      "description": "When enabled, restricts the API clients's access to Control Center services.",
                      "type": "boolean"
                    },
                    "notificationEmails": {
                      "description": "Email addresses to notify users of expiring credentials.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "serviceConsumerToken": {
                      "description": "Unique identifier for the service hostname.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/api-client-simple-v3.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each API client.",
          "example": "{{clientId}}",
          "in": "path",
          "name": "clientId",
          "required": true,
          "schema": {
            "example": "2cdgugz2tjbtowmy",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/clientId-path.yaml"
          }
        }
      ]
    },
    "/user-admin/common/contact-types": {
      "get": {
        "description": "This operation lists the supported contact types. Administrators should use the values from this operation to add or update a user's `contactType`. Users should run the [View contact types for a user profile](https://techdocs.akamai.com/iam-user-admin/reference/get-user-contact-types) operation before modifying their contact type.",
        "operationId": "get-common-contact-types",
        "summary": "View contact types",
        "tags": [
          "Contact types"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-common-contact-types"
        },
        "responses": {
          "200": {
            "description": "The response provides the supported contact types.",
            "content": {
              "application/json": {
                "example": [
                  "Billing",
                  "Technical Decision Maker",
                  "Business Decision Maker",
                  "Security"
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfString.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-admin/common/countries": {
      "get": {
        "description": "This operation lists the supported countries. Administrators should use the values from this operation to add or update a user's `country`. Users should run the [View supported countries for a user profile](https://techdocs.akamai.com/iam-user-admin/reference/get-user-countries) operation before modifying their country.",
        "operationId": "get-common-countries",
        "summary": "View countries",
        "tags": [
          "Locale"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-common-countries"
        },
        "responses": {
          "200": {
            "description": "The response provides the supported countries.",
            "content": {
              "application/json": {
                "example": [
                  "Lao People's Democratic Republ",
                  "Greece",
                  "Greenland",
                  "Grenada",
                  "Tanzania, United Republic of",
                  "Thailand",
                  "Togo",
                  "Tokelau",
                  "Tonga",
                  "Djibouti",
                  "Dominica",
                  "Christmas Island",
                  "Cocos (Keeling) Islands",
                  "Colombia",
                  "Comoros",
                  "Curacao"
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfString.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-admin/common/countries/{country}/states": {
      "get": {
        "description": "This operation lists the supported U.S. states or Canadian provinces. Administrators should use the values from this operation to add or update a user's `state`. If a user's state or province is unknown, use `TBD`. Users should run the [View states for a user profile](https://techdocs.akamai.com/iam-user-admin/reference/get-user-states) operation before modifying their state.",
        "operationId": "get-common-states",
        "summary": "View states",
        "tags": [
          "Locale"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-common-states"
        },
        "responses": {
          "200": {
            "description": "The response provides the supported U.S. states or Canadian provinces.",
            "content": {
              "application/json": {
                "example": [
                  "AB",
                  "BC",
                  "PQ",
                  "NS",
                  "NT",
                  "NU",
                  "QC",
                  "YK",
                  "NB",
                  "MB",
                  "PE",
                  "TBD",
                  "NF",
                  "SK",
                  "ON"
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfString.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Can be set to any country name, but only returns lists of states and provinces for `USA` and `Canada`.",
          "example": "{{country}}",
          "in": "path",
          "name": "country",
          "required": true,
          "schema": {
            "example": "canada",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/country-path.yaml"
          }
        }
      ]
    },
    "/user-admin/common/notification-products": {
      "get": {
        "description": "This operation lists the products a user can subscribe to and receive notifications for on the account. The tokens in your API client determine the account. Administrators should use the values from this operation to set a user's product notifications. Users should run the [View products for a user profile](https://techdocs.akamai.com/iam-user-admin/reference/get-user-notification-products) operation before setting their product notifications.",
        "operationId": "get-common-notification-products",
        "summary": "View products",
        "tags": [
          "Products"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-common-notification-products"
        },
        "responses": {
          "200": {
            "description": "The response provides the supported products.",
            "content": {
              "application/json": {
                "example": [
                  "EdgeComputing for Java",
                  "Streaming",
                  "Enhanced DNS",
                  "Site Delivery",
                  "Secure FreeFlow (HTTPS Content Delivery using ARLs)",
                  "Log Delivery Service",
                  "Site Acceleration",
                  "Web Application Accelerator",
                  "EdgeScape",
                  "Security",
                  "NetStorage"
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfString.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-admin/common/password-policy": {
      "get": {
        "description": "This operation lists the password policy for the account. The tokens in your API client determine the account. Administrators should use the values from this operation to set a user's password policy. Users should run the [View password policy for a user profile](https://techdocs.akamai.com/iam-user-admin/reference/get-user-password-policy) operation before setting their password policy.",
        "operationId": "get-common-password-policy",
        "summary": "View password policy",
        "tags": [
          "Policies"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-common-password-policy"
        },
        "responses": {
          "200": {
            "description": "The response provides the password policy.",
            "content": {
              "application/json": {
                "example": {
                  "caseDif": 0,
                  "maxRepeating": 2,
                  "minDigits": 1,
                  "minLength": 8,
                  "minLetters": 1,
                  "minNonAlpha": 0,
                  "minReuse": 4,
                  "pwclass": "aka90",
                  "rotateFrequency": 90
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates all information for a password policy.",
                  "type": "object",
                  "required": [
                    "pwclass",
                    "minLength",
                    "minLetters",
                    "minDigits",
                    "caseDif",
                    "minNonAlpha",
                    "maxRepeating",
                    "minReuse"
                  ],
                  "properties": {
                    "caseDif": {
                      "description": "The number of characters that, at minimum, need to be in a different case. For example, a value of 1 means at least one letter needs to be uppercase if the rest are lowercase.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "maxRepeating": {
                      "description": "The maximum allowed number of repeating characters.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minDigits": {
                      "description": "The minimum number of digits in a password.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minLength": {
                      "description": "The minimum length of a password.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minLetters": {
                      "description": "The minimum number of letters in a password.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minNonAlpha": {
                      "description": "The minimum number of non-alphabetic characters in a password.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minReuse": {
                      "description": "The minimum number of previous passwords to retain to prevent password reuse.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "pwclass": {
                      "description": "Unique identifier for a password policy.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "rotateFrequency": {
                      "description": "The number of days a password is valid.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/PortalPasswordClass.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-admin/common/supported-languages": {
      "get": {
        "description": "This operation lists the supported languages. Administrators should use the values from this operation to set a user's `preferredLanguage`. Users should run the [View languages for a user profile](https://techdocs.akamai.com/iam-user-admin/reference/get-user-languages) operation before setting their preferred language.",
        "operationId": "get-common-languages",
        "summary": "View languages",
        "tags": [
          "Locale"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-common-languages"
        },
        "responses": {
          "200": {
            "description": "The response provides the supported languages.",
            "content": {
              "application/json": {
                "example": [
                  "Deutsch",
                  "English",
                  "Español",
                  "Español (España)",
                  "Français",
                  "Italiano",
                  "Português",
                  "中文 (简体)",
                  "中文 (繁體)",
                  "日本語",
                  "한국어"
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfString.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-admin/common/timeout-policies": {
      "get": {
        "description": "This operation lists the supported session timeout policies. The `name` for each timeout period is in minutes, and the time `value` is in seconds. Administrators should use the `sessionTimeout` values from this operation to set a user's timeout policy. Users should run the [View timeout policies for a user profile](https://techdocs.akamai.com/iam-user-admin/reference/get-user-timeout-policies) operation before setting their timeout policy.",
        "operationId": "get-common-timeout-policies",
        "summary": "View timeout policies",
        "tags": [
          "Policies"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-common-timeout-policies"
        },
        "responses": {
          "200": {
            "description": "This operation lists the supported session timeout policies.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Specifies session timeout policy options that can be assigned to each user.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Specifies session timeout policy options that can be assigned to users.",
                    "type": "object",
                    "required": [
                      "name",
                      "value"
                    ],
                    "properties": {
                      "name": {
                        "description": "The unit of time in which the timeout is measured. The timeout is measured in seconds.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "value": {
                        "description": "Number of seconds until session timeout.",
                        "minimum": 0,
                        "type": "integer"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/SessionTimeoutPolicy.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfSessionTimeoutPolicy.yaml"
                  }
                },
                "example": [
                  {
                    "name": "after15Minutes",
                    "value": 900
                  },
                  {
                    "name": "after30Minutes",
                    "value": 1800
                  },
                  {
                    "name": "after45Minutes",
                    "value": 2700
                  },
                  {
                    "name": "after1Hour",
                    "value": 3600
                  },
                  {
                    "name": "after2Hours",
                    "value": 7200
                  },
                  {
                    "name": "after4Hours",
                    "value": 14400
                  },
                  {
                    "name": "after18Hours",
                    "value": 64800
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-admin/common/timezones": {
      "get": {
        "description": "This operation lists the supported time zones. Time zones are in ISO 8601 format. Administrators should use the values from this operation to set a user's `timeZone`. Users should run the [View time zones for a user profile](https://techdocs.akamai.com/iam-user-admin/reference/get-user-timezones) operation before setting their time zone.",
        "operationId": "get-common-timezones",
        "summary": "View time zones",
        "tags": [
          "Locale"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-common-timezones"
        },
        "responses": {
          "200": {
            "description": "The response provides the supported time zones.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Specifies time zones that can be assigned to each user.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Specifies time zones that can be assigned to each user.",
                    "type": "object",
                    "required": [
                      "timezone",
                      "description"
                    ],
                    "properties": {
                      "description": {
                        "description": "The description of a time zone, including the GMT +/-.",
                        "type": "string"
                      },
                      "offset": {
                        "description": "The time zone offset from GMT.",
                        "type": "string"
                      },
                      "posix": {
                        "description": "The time zone posix.",
                        "type": "string"
                      },
                      "timezone": {
                        "description": "The time zone ID.",
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/TimeZone.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfTimeZones.yaml"
                  }
                },
                "example": [
                  {
                    "description": "Asia/Rangoon GMT+6",
                    "offset": "+6",
                    "posix": "Asia/Rangoon",
                    "timezone": "Asia/Rangoon"
                  },
                  {
                    "description": "Australia/Sydney GMT+10",
                    "offset": "+10",
                    "posix": "Australia/Sydney",
                    "timezone": "Australia/Sydney"
                  },
                  {
                    "description": "Etc/GMT+3",
                    "offset": "+3",
                    "posix": "Etc/GMT-3",
                    "timezone": "Etc/GMT+3"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-admin/groups": {
      "get": {
        "description": "This operation lists all groups the administrator can manage for the current account and contract type. The account and contract type are determined by the access tokens in your API client.",
        "operationId": "get-groups",
        "summary": "List groups",
        "tags": [
          "Groups"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-groups"
        },
        "responses": {
          "200": {
            "description": "The response provides the groups.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Encapsulates information about a group.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Encapsulates information about a group.",
                    "type": "object",
                    "required": [
                      "actions",
                      "createdBy",
                      "createdDate",
                      "groupId",
                      "groupName",
                      "modifiedBy",
                      "modifiedDate",
                      "parentGroupId",
                      "subGroups"
                    ],
                    "properties": {
                      "actions": {
                        "additionalProperties": false,
                        "description": "Encapsulates activities performed on the group.",
                        "type": "object",
                        "required": [
                          "delete",
                          "edit"
                        ],
                        "properties": {
                          "delete": {
                            "description": "When enabled, you can remove the group from the account. You can't remove a group that contains resources or subgroups, or if users have roles on that group.",
                            "type": "boolean"
                          },
                          "edit": {
                            "description": "When enabled, you can modify the group.",
                            "type": "boolean"
                          }
                        }
                      },
                      "createdBy": {
                        "description": "The user who created the group.",
                        "minLength": 1,
                        "readOnly": true,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the group was created.",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      },
                      "groupId": {
                        "description": "Unique identifier for each group.",
                        "minimum": 0,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "groupName": {
                        "description": "Descriptive label for the group.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "modifiedBy": {
                        "description": "The user who last edited the group.",
                        "minLength": 1,
                        "readOnly": true,
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the group was last updated.",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      },
                      "parentGroupId": {
                        "description": "For nested groups, uniquely identifies the parent group to which the current group belongs.",
                        "minimum": 0,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "subGroups": {
                        "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                        "minItems": 0,
                        "readOnly": true,
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/GroupResponse.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfGroupResponse.yaml"
                  }
                },
                "example": [
                  {
                    "createdBy": "hgildong",
                    "createdDate": "2012-04-28T00:00:00.000Z",
                    "groupId": 12345,
                    "groupName": "Top Level group",
                    "modifiedBy": "alfulani",
                    "modifiedDate": "2012-04-28T00:00:00.000Z",
                    "actions": {
                      "delete": false,
                      "edit": true
                    },
                    "subGroups": [
                      {
                        "createdBy": "adevi",
                        "createdDate": "2013-10-29T19:05:52.000Z",
                        "groupId": 11111,
                        "groupName": "First Level SubGroup",
                        "modifiedBy": "jperez",
                        "modifiedDate": "2017-07-25T22:30:20.000Z",
                        "parentGroupId": 12345,
                        "actions": {
                          "delete": false,
                          "edit": true
                        },
                        "subGroups": [
                          {
                            "createdBy": "tyamada",
                            "createdDate": "2017-07-25T22:30:47.000Z",
                            "groupId": 54321,
                            "groupName": "Second Level SubGroup",
                            "modifiedBy": "hgildong",
                            "modifiedDate": "2017-07-25T22:30:47.000Z",
                            "parentGroupId": 11111,
                            "subGroups": [],
                            "actions": {
                              "delete": false,
                              "edit": true
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "When enabled, the response includes information about actions such as `edit` or `delete` that you can take for the object. Not to be confused with the `action` parameter, which applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-user-admin/reference/put-user-profile-tfa) operation.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "required": true,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/rolesFilterParamsActions_actions.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-admin/groups/move": {
      "post": {
        "description": "This operation moves a nested group under another group within the same parent hierarchy.",
        "operationId": "post-groups-move",
        "summary": "Move a group",
        "tags": [
          "Move groups"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/post-groups-move"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "destinationGroupId": 54321,
                "sourceGroupId": 12345
              },
              "schema": {
                "additionalProperties": false,
                "description": "Describes the request body to move one group under another group.",
                "type": "object",
                "required": [
                  "sourceGroupId",
                  "destinationGroupId"
                ],
                "properties": {
                  "destinationGroupId": {
                    "description": "Identifies the group where you want to move the `sourceGroupId` within the same parent hierarchy.",
                    "example": "{{destinationGroupId}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "sourceGroupId": {
                    "description": "Identifies the nested group you want to move to the `destinationGroupId`.",
                    "example": "{{sourceGroupId}}",
                    "minimum": 0,
                    "type": "integer"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/MoveGroupRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Nested group successfully moved.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-admin/groups/move/{sourceGroupId}/{destinationGroupId}/affected-users": {
      "get": {
        "description": "This operation lists users who are affected when you move a group. Users may lose or gain access to resources depending on the roles and permissions inherited from the new parent group. Users with a `userType` of `lostAccess` lose their access to the source group. If the `userType` is `gainAccess`, they gain access to the resources in the source group. Users who have inherited access to a group lose access to that group if it moves out of its the hierarchy that gives them those access rights. If the group moves to another parent group to which they have access, they still have access to the group you move. Likewise, when you move a group to a new location, users who inherit their access rights from the new parent group gain access to the resources in the group you move.",
        "operationId": "get-move-affected-users",
        "summary": "List users affected by moving a group",
        "tags": [
          "Move groups"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-move-affected-users"
        },
        "responses": {
          "200": {
            "description": "The response provides the affected users.",
            "content": {
              "application/json": {
                "schema": {
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "accountId",
                      "email",
                      "firstName",
                      "lastLoginDate",
                      "lastName",
                      "uiIdentityId",
                      "uiUserName"
                    ],
                    "properties": {
                      "accountId": {
                        "description": "The user's account ID.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "email": {
                        "description": "The user's email address.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "firstName": {
                        "description": "The user's first name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "lastLoginDate": {
                        "description": "ISO 8601 timestamp indicating when the user last logged in.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "lastName": {
                        "description": "The user's surname.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "uiIdentityId": {
                        "description": "The user's ACC ID.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "uiUserName": {
                        "description": "The user's ACC username.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfMoveUserResponse.yaml"
                  }
                },
                "example": [
                  {
                    "accountId": "A-CCT1234",
                    "email": "john-doe@example.com",
                    "firstName": "John",
                    "lastLoginDate": "2017-08-03T21:15:27.000Z",
                    "lastName": "Doe",
                    "uiIdentityId": "A-B-12345",
                    "uiUserName": "john-doe@example.com"
                  },
                  {
                    "accountId": "A-CCT9012",
                    "email": "email@example.com",
                    "firstName": "Lionel",
                    "lastLoginDate": "2016-09-07T00:00:00.000Z",
                    "lastName": "Messi",
                    "uiIdentityId": "1-2A3BCD",
                    "uiUserName": "email@example.com"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "__Enum__ Indicates the type of users to get, either those who have `lostAccess` or the reverse `gainAccess`.",
            "example": "{{userType}}",
            "in": "query",
            "name": "userType",
            "schema": {
              "example": "lostAccess",
              "type": "string",
              "enum": [
                "lostAccess",
                "gainAccess"
              ]
            },
            "x-akamai": {
              "file-path": "parameters/userType-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "The `groupId` for the group you're putting the other group into.",
          "example": "{{destinationGroupId}}",
          "in": "path",
          "name": "destinationGroupId",
          "required": true,
          "schema": {
            "example": 19807,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/destinationGroupId-path.yaml"
          }
        },
        {
          "description": "The `groupId` for the group you want to move.",
          "example": "{{sourceGroupId}}",
          "in": "path",
          "name": "sourceGroupId",
          "required": true,
          "schema": {
            "example": 106532,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/sourceGroupId-path.yaml"
          }
        }
      ]
    },
    "/user-admin/groups/{groupId}": {
      "post": {
        "description": "This operation creates a new group within the specified parent group.",
        "operationId": "post-group",
        "summary": "Create a new group",
        "tags": [
          "Groups"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/post-group"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "groupName": "New Sub Group"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Includes the new `groupName` you're using to replace the old `groupName`.",
                "type": "object",
                "required": [
                  "groupName"
                ],
                "properties": {
                  "groupName": {
                    "description": "Descriptive label for the group.",
                    "example": "{{groupName}}",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/GroupRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Group successfully created.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "szhang",
                  "createdDate": "2017-09-18T19:03:28.000Z",
                  "groupId": 111898,
                  "groupName": "New Sub Group",
                  "modifiedBy": "jsmith",
                  "modifiedDate": "2017-09-18T19:03:28.000Z",
                  "parentGroupId": 19807
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information about a group.",
                  "type": "object",
                  "required": [
                    "actions",
                    "createdBy",
                    "createdDate",
                    "groupId",
                    "groupName",
                    "modifiedBy",
                    "modifiedDate",
                    "parentGroupId",
                    "subGroups"
                  ],
                  "properties": {
                    "actions": {
                      "additionalProperties": false,
                      "description": "Encapsulates activities performed on the group.",
                      "type": "object",
                      "required": [
                        "delete",
                        "edit"
                      ],
                      "properties": {
                        "delete": {
                          "description": "When enabled, you can remove the group from the account. You can't remove a group that contains resources or subgroups, or if users have roles on that group.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "When enabled, you can modify the group.",
                          "type": "boolean"
                        }
                      }
                    },
                    "createdBy": {
                      "description": "The user who created the group.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the group was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Unique identifier for each group.",
                      "minimum": 0,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "groupName": {
                      "description": "Descriptive label for the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "The user who last edited the group.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the group was last updated.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "parentGroupId": {
                      "description": "For nested groups, uniquely identifies the parent group to which the current group belongs.",
                      "minimum": 0,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "subGroups": {
                      "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                      "minItems": 0,
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/GroupResponse.yaml"
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "description": "A URL path to the newly created object.",
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/Location.yaml"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "This operation retrieves a group's details.",
        "operationId": "get-group",
        "summary": "Get a group",
        "tags": [
          "Groups"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-group"
        },
        "responses": {
          "200": {
            "description": "The response provides the group's details.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "jsmith",
                  "createdDate": "2012-04-28T00:00:00.000Z",
                  "groupId": 12345,
                  "groupName": "TopLevelGroup",
                  "modifiedBy": "hgildong",
                  "modifiedDate": "2012-04-28T00:00:00.000Z",
                  "actions": {
                    "delete": false,
                    "edit": true
                  },
                  "subGroups": [
                    {
                      "createdBy": "jsmith",
                      "createdDate": "2013-10-29T19:05:52.000Z",
                      "groupId": 11111,
                      "groupName": "First Level SubGroup",
                      "modifiedBy": "jkowalski",
                      "modifiedDate": "2017-07-25T22:30:20.000Z",
                      "parentGroupId": 12345,
                      "actions": {
                        "delete": false,
                        "edit": true
                      },
                      "subGroups": [
                        {
                          "createdBy": "jperez",
                          "createdDate": "2017-07-25T22:30:47.000Z",
                          "groupId": 123456,
                          "groupName": "Second Level SubGroup",
                          "modifiedBy": "szhang",
                          "modifiedDate": "2017-07-25T22:30:47.000Z",
                          "parentGroupId": 11111,
                          "subGroups": [],
                          "actions": {
                            "delete": false,
                            "edit": true
                          }
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information about a group.",
                  "type": "object",
                  "required": [
                    "actions",
                    "createdBy",
                    "createdDate",
                    "groupId",
                    "groupName",
                    "modifiedBy",
                    "modifiedDate",
                    "parentGroupId",
                    "subGroups"
                  ],
                  "properties": {
                    "actions": {
                      "additionalProperties": false,
                      "description": "Encapsulates activities performed on the group.",
                      "type": "object",
                      "required": [
                        "delete",
                        "edit"
                      ],
                      "properties": {
                        "delete": {
                          "description": "When enabled, you can remove the group from the account. You can't remove a group that contains resources or subgroups, or if users have roles on that group.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "When enabled, you can modify the group.",
                          "type": "boolean"
                        }
                      }
                    },
                    "createdBy": {
                      "description": "The user who created the group.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the group was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Unique identifier for each group.",
                      "minimum": 0,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "groupName": {
                      "description": "Descriptive label for the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "The user who last edited the group.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the group was last updated.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "parentGroupId": {
                      "description": "For nested groups, uniquely identifies the parent group to which the current group belongs.",
                      "minimum": 0,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "subGroups": {
                      "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                      "minItems": 0,
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/GroupResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "When enabled, the response includes information about actions such as `edit` or `delete` that you can take for the object. Not to be confused with the `action` parameter, which applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-user-admin/reference/put-user-profile-tfa) operation.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "required": true,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/rolesFilterParamsActions_actions.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "This operation changes a group's name.",
        "operationId": "put-group",
        "summary": "Modify a group's name",
        "tags": [
          "Groups"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/put-group"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "groupName": "Change Group Name"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Includes the new `groupName` you're using to replace the old `groupName`.",
                "type": "object",
                "required": [
                  "groupName"
                ],
                "properties": {
                  "groupName": {
                    "description": "Descriptive label for the group.",
                    "example": "{{groupName}}",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/GroupRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The response reflects the modified group.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "hgildong",
                  "createdDate": "2012-04-28T00:00:00.000Z",
                  "groupId": 12345,
                  "groupName": "Change Group Name",
                  "modifiedBy": "jkowalski",
                  "modifiedDate": "2012-04-28T00:00:00.000Z",
                  "actions": {
                    "delete": false,
                    "edit": true
                  },
                  "subGroups": [
                    {
                      "createdBy": "alfulani",
                      "createdDate": "2013-10-29T19:05:52.000Z",
                      "groupId": 11111,
                      "groupName": "First Level SubGroup",
                      "modifiedBy": "jperez",
                      "modifiedDate": "2017-07-25T22:30:20.000Z",
                      "parentGroupId": 12345,
                      "actions": {
                        "delete": false,
                        "edit": true
                      },
                      "subGroups": [
                        {
                          "createdBy": "adevi",
                          "createdDate": "2017-07-25T22:30:47.000Z",
                          "groupId": 67890,
                          "groupName": "Second Level SubGroup",
                          "modifiedBy": "hgildong",
                          "modifiedDate": "2017-07-25T22:30:47.000Z",
                          "parentGroupId": 11111,
                          "subGroups": [],
                          "actions": {
                            "delete": false,
                            "edit": true
                          }
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information about a group.",
                  "type": "object",
                  "required": [
                    "actions",
                    "createdBy",
                    "createdDate",
                    "groupId",
                    "groupName",
                    "modifiedBy",
                    "modifiedDate",
                    "parentGroupId",
                    "subGroups"
                  ],
                  "properties": {
                    "actions": {
                      "additionalProperties": false,
                      "description": "Encapsulates activities performed on the group.",
                      "type": "object",
                      "required": [
                        "delete",
                        "edit"
                      ],
                      "properties": {
                        "delete": {
                          "description": "When enabled, you can remove the group from the account. You can't remove a group that contains resources or subgroups, or if users have roles on that group.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "When enabled, you can modify the group.",
                          "type": "boolean"
                        }
                      }
                    },
                    "createdBy": {
                      "description": "The user who created the group.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the group was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Unique identifier for each group.",
                      "minimum": 0,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "groupName": {
                      "description": "Descriptive label for the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "The user who last edited the group.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the group was last updated.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "parentGroupId": {
                      "description": "For nested groups, uniquely identifies the parent group to which the current group belongs.",
                      "minimum": 0,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "subGroups": {
                      "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                      "minItems": 0,
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/GroupResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "This operation deletes a group. You can't delete a group that contains subgroups, resources, or users with roles on that group. You need admin access to delete a group. ",
        "operationId": "delete-group",
        "summary": "Delete a group",
        "tags": [
          "Groups"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/delete-group"
        },
        "responses": {
          "204": {
            "description": "Group successfully deleted.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for a group.",
          "example": "{{groupId}}",
          "in": "path",
          "name": "groupId",
          "required": true,
          "schema": {
            "example": 19807,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/groupId-path.yaml"
          }
        }
      ]
    },
    "/user-admin/ip-acl/allowlist": {
      "post": {
        "description": "This operation adds CIDR blocks to your account's allowlist. You can add only one CIDR block at a time.",
        "operationId": "post-allowlist",
        "summary": "Create a CIDR block",
        "tags": [
          "CIDR blocks"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/post-allowlist"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "cidrBlock": "128.10.46.60/24",
                "comments": "EMEA Offices",
                "enabled": true
              },
              "schema": {
                "additionalProperties": false,
                "description": "Encapsulates all data sent while creating or updating a CIDR block.",
                "type": "object",
                "required": [
                  "enabled",
                  "cidrBlock"
                ],
                "properties": {
                  "cidrBlock": {
                    "description": "The value of an IP address or IP address range.",
                    "example": "{{cidrBlock}}",
                    "type": "string"
                  },
                  "comments": {
                    "description": "Descriptive text you provide for the CIDR block.",
                    "example": "{{comments}}",
                    "type": "string"
                  },
                  "enabled": {
                    "description": "If `false`, the allowlist ignores the CIDR block.",
                    "example": "{{enabled}}",
                    "type": "boolean"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/post-ip-acl.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "CIDR block successfully created.",
            "content": {
              "application/json": {
                "example": {
                  "cidrBlock": "128.5.6.6/24",
                  "cidrBlockId": 2567,
                  "comments": "APAC Region",
                  "createdBy": "hgildong",
                  "createdDate": "2017-07-27T18:11:25.000Z",
                  "enabled": true,
                  "modifiedBy": "mrossi",
                  "modifiedDate": "2017-07-27T18:11:25.000Z",
                  "actions": {
                    "delete": true,
                    "edit": false
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates all members for a CIDR block in the IP allowlist data structure.",
                  "type": "object",
                  "required": [
                    "cidrBlockId",
                    "enabled",
                    "cidrBlock",
                    "createdDate",
                    "createdBy",
                    "modifiedDate",
                    "modifiedBy"
                  ],
                  "properties": {
                    "actions": {
                      "additionalProperties": false,
                      "description": "Encapsulates the actions you can perform against a CIDR block.",
                      "type": "object",
                      "required": [
                        "delete",
                        "edit"
                      ],
                      "properties": {
                        "delete": {
                          "description": "Indicates whether you can delete this CIDR block. You can't delete a CIDR block from an IP address not on the allowlist, or if the CIDR block is the only one on the allowlist.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Indicates whether you can edit this CIDR block. You can't edit  CIDR block from an IP address not on the allowlist, or if the CIDR block is the only one on the allowlist.",
                          "type": "boolean"
                        }
                      }
                    },
                    "cidrBlock": {
                      "description": "The value of an IP address or IP address range.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cidrBlockId": {
                      "description": "A unique identifier for a CIDR block.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "comments": {
                      "description": "Descriptive text you provide for the CIDR block.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The user who created the CIDR block.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "The ISO 8601 timestamp indicating when the CIDR block was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "enabled": {
                      "description": "Indicates IP allowlist is enabled on the account.",
                      "type": "boolean"
                    },
                    "modifiedBy": {
                      "description": "The user who last edited the CIDR block.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "The ISO 8601 timestamp indicating when the CIDR block was last modified.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/ip-acl-200.yaml"
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "description": "A URL path to the newly created object.",
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/Location.yaml"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "This operation lists all CIDR blocks on your account's allowlist. Your API client designates the allowlist for the account.",
        "operationId": "get-allowlist",
        "summary": "List CIDR blocks",
        "tags": [
          "CIDR blocks"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-allowlist"
        },
        "responses": {
          "200": {
            "description": "The response provides the CIDR blocks.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "This object encapsulates a collection of CIDR blocks.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "actions",
                      "cidrBlock",
                      "cidrBlockId",
                      "comments",
                      "createdBy",
                      "createdDate",
                      "enabled",
                      "modifiedBy",
                      "modifiedDate"
                    ],
                    "properties": {
                      "actions": {
                        "additionalProperties": false,
                        "description": "Encapsulates the actions you can take against a CIDR block.",
                        "type": "object",
                        "required": [
                          "delete",
                          "edit"
                        ],
                        "properties": {
                          "delete": {
                            "description": "Indicates whether you can delete this CIDR block. You may not be able to delete a CIDR block if you're trying to delete it from an IP address not on the allowlist, or if the CIDR block is the only one on the allowlist.",
                            "type": "boolean"
                          },
                          "edit": {
                            "description": "Indicates whether you can edit this CIDR block. You may not be able to edit a CIDR block if you're trying to modify it from an IP address not on the allowlist, or if the CIDR block is the only one on the allowlist.",
                            "type": "boolean"
                          }
                        }
                      },
                      "cidrBlock": {
                        "description": "The value of an IP address or IP address range.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "cidrBlockId": {
                        "description": "Uniquely identifies each CIDR block.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "comments": {
                        "description": "Descriptive text you provide for the CIDR block.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdBy": {
                        "description": "The user who created the CIDR block.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "The ISO 8601 timestamp indicating when the CIDR block was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "enabled": {
                        "description": "Indicates the CIDR block is enabled.",
                        "type": "boolean"
                      },
                      "modifiedBy": {
                        "description": "The user who last edited the CIDR block.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "The ISO 8601 timestamp indicating when the CIDR block was last modified.",
                        "format": "date-time",
                        "type": "string"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/ip-acls-200.yaml"
                  }
                },
                "example": [
                  {
                    "cidrBlock": "127.0.0.1/24",
                    "cidrBlockId": 921,
                    "comments": "West Coast Office",
                    "createdBy": "jsmith",
                    "createdDate": "2017-07-27T18:11:25.000Z",
                    "enabled": true,
                    "modifiedBy": "jperez",
                    "modifiedDate": "2017-07-27T18:11:25.000Z",
                    "actions": {
                      "delete": true,
                      "edit": true
                    }
                  },
                  {
                    "cidrBlock": "128.5.6.6/24",
                    "cidrBlockId": 6042,
                    "comments": "East Coast Office",
                    "createdBy": "adevi",
                    "createdDate": "2017-07-27T18:11:25.000Z",
                    "enabled": true,
                    "modifiedBy": "szhang",
                    "modifiedDate": "2017-07-27T18:11:25.000Z",
                    "actions": {
                      "delete": true,
                      "edit": false
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Optionally enable `actions` to include them as part of the response object.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-admin/ip-acl/allowlist/disable": {
      "post": {
        "description": "This operation disables IP allowlist on your account. After you disable IP allowlist, users can access Control Center regardless of their IP address or who assigns it.",
        "operationId": "post-allowlist-disable",
        "summary": "Disable IP allowlist",
        "tags": [
          "IP allowlists"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/post-allowlist-disable"
        },
        "responses": {
          "204": {
            "description": "IP allowlist successfully disabled.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-admin/ip-acl/allowlist/enable": {
      "post": {
        "description": "This operation enables IP allowlist on your account. Before you enable IP allowlist, add at least one IP address to allow access to Control Center. The allowlist can't be empty with IP allowlist enabled.",
        "operationId": "post-allowlist-enable",
        "summary": "Enable IP allowlist",
        "tags": [
          "IP allowlists"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/post-allowlist-enable"
        },
        "responses": {
          "204": {
            "description": "IP allowlist successfully enabled.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-admin/ip-acl/allowlist/status": {
      "get": {
        "description": "This operation indicates whether IP allowlist is enabled or disabled on your account.",
        "operationId": "get-allowlist-status",
        "summary": "View IP allowlist status",
        "tags": [
          "IP allowlists"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-allowlist-status"
        },
        "responses": {
          "200": {
            "description": "The response provides IP allowlist status.",
            "content": {
              "application/json": {
                "example": {
                  "enabled": true
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates the status of IP allowlist on the account.",
                  "type": "object",
                  "required": [
                    "enabled"
                  ],
                  "properties": {
                    "enabled": {
                      "description": "Indicates whether IP allowlist is enabled on the account.",
                      "type": "boolean"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/account-status.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-admin/ip-acl/allowlist/validate": {
      "get": {
        "description": "This operation checks the format of your CIDR blocks. To validate, pass in the CIDR block or any IP address as the `cidrblock` query parameter. Encode any slash characters as `%2F`.",
        "operationId": "get-allowlist-validate",
        "summary": "Validate CIDR blocks",
        "tags": [
          "CIDR blocks"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-allowlist-validate"
        },
        "responses": {
          "204": {
            "description": "CIDR block successfully validated.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The CIDR block value you want to validate. This isn't the same as a `cidrBlockId`.",
            "example": "{{cidrblock}}",
            "in": "query",
            "name": "cidrblock",
            "required": true,
            "schema": {
              "example": "127.0.0.1/20",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/cidrblock-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-admin/ip-acl/allowlist/{cidrBlockId}": {
      "get": {
        "description": "This operation retrieves a CIDR block's details.",
        "operationId": "get-allowlist-cidrblockid",
        "summary": "View CIDR block details",
        "tags": [
          "CIDR blocks"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-allowlist-cidrblockid"
        },
        "responses": {
          "200": {
            "description": "The response provides the CIDR block's details.",
            "content": {
              "application/json": {
                "example": {
                  "cidrBlock": "128.5.6.6/24",
                  "cidrBlockId": 2567,
                  "comments": "APAC Region",
                  "createdBy": "mrossi",
                  "createdDate": "2017-07-27T18:11:25.000Z",
                  "enabled": true,
                  "modifiedBy": "tyamada",
                  "modifiedDate": "2017-07-27T18:11:25.000Z",
                  "actions": {
                    "delete": true,
                    "edit": false
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates all members for a CIDR block in the IP allowlist data structure.",
                  "type": "object",
                  "required": [
                    "cidrBlockId",
                    "enabled",
                    "cidrBlock",
                    "createdDate",
                    "createdBy",
                    "modifiedDate",
                    "modifiedBy"
                  ],
                  "properties": {
                    "actions": {
                      "additionalProperties": false,
                      "description": "Encapsulates the actions you can perform against a CIDR block.",
                      "type": "object",
                      "required": [
                        "delete",
                        "edit"
                      ],
                      "properties": {
                        "delete": {
                          "description": "Indicates whether you can delete this CIDR block. You can't delete a CIDR block from an IP address not on the allowlist, or if the CIDR block is the only one on the allowlist.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Indicates whether you can edit this CIDR block. You can't edit  CIDR block from an IP address not on the allowlist, or if the CIDR block is the only one on the allowlist.",
                          "type": "boolean"
                        }
                      }
                    },
                    "cidrBlock": {
                      "description": "The value of an IP address or IP address range.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cidrBlockId": {
                      "description": "A unique identifier for a CIDR block.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "comments": {
                      "description": "Descriptive text you provide for the CIDR block.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The user who created the CIDR block.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "The ISO 8601 timestamp indicating when the CIDR block was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "enabled": {
                      "description": "Indicates IP allowlist is enabled on the account.",
                      "type": "boolean"
                    },
                    "modifiedBy": {
                      "description": "The user who last edited the CIDR block.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "The ISO 8601 timestamp indicating when the CIDR block was last modified.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/ip-acl-200.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Optionally enable `actions` to include them as part of the response object.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "This operation enables or disables an existing CIDR block, updates comments, IP addresses, or ranges in the CIDR block. Note that you can only update a CIDR block with IP allowlist enabled on the account. There are several CIDR blocks on the allowlist and your attempt to make changes to the CIDR block is from an IP address that's on the allowlist. You can't edit the last CIDR block in the allowlist or the CIDR block allowing access to the current user.",
        "operationId": "put-allowlist-cidrblockid",
        "summary": "Modify a CIDR block",
        "tags": [
          "CIDR blocks"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/put-allowlist-cidrblockid"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "cidrBlock": "128.10.46.60/24",
                "comments": "EMEA Offices",
                "enabled": true
              },
              "schema": {
                "additionalProperties": false,
                "description": "Encapsulates all data sent while creating or updating a CIDR block.",
                "type": "object",
                "required": [
                  "enabled",
                  "cidrBlock"
                ],
                "properties": {
                  "cidrBlock": {
                    "description": "The value of an IP address or IP address range.",
                    "example": "{{cidrBlock}}",
                    "type": "string"
                  },
                  "comments": {
                    "description": "Descriptive text you provide for the CIDR block.",
                    "example": "{{comments}}",
                    "type": "string"
                  },
                  "enabled": {
                    "description": "If `false`, the allowlist ignores the CIDR block.",
                    "example": "{{enabled}}",
                    "type": "boolean"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/post-ip-acl.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response reflects the modified CIDR block.",
            "content": {
              "application/json": {
                "example": {
                  "cidrBlock": "128.5.6.6/24",
                  "cidrBlockId": 2567,
                  "comments": "APAC Region",
                  "createdBy": "jsmith",
                  "createdDate": "2017-07-27T18:11:25.000Z",
                  "enabled": true,
                  "modifiedBy": "adevi",
                  "modifiedDate": "2017-07-27T18:11:25.000Z",
                  "actions": {
                    "delete": true,
                    "edit": false
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates all members for a CIDR block in the IP allowlist data structure.",
                  "type": "object",
                  "required": [
                    "cidrBlockId",
                    "enabled",
                    "cidrBlock",
                    "createdDate",
                    "createdBy",
                    "modifiedDate",
                    "modifiedBy"
                  ],
                  "properties": {
                    "actions": {
                      "additionalProperties": false,
                      "description": "Encapsulates the actions you can perform against a CIDR block.",
                      "type": "object",
                      "required": [
                        "delete",
                        "edit"
                      ],
                      "properties": {
                        "delete": {
                          "description": "Indicates whether you can delete this CIDR block. You can't delete a CIDR block from an IP address not on the allowlist, or if the CIDR block is the only one on the allowlist.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Indicates whether you can edit this CIDR block. You can't edit  CIDR block from an IP address not on the allowlist, or if the CIDR block is the only one on the allowlist.",
                          "type": "boolean"
                        }
                      }
                    },
                    "cidrBlock": {
                      "description": "The value of an IP address or IP address range.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cidrBlockId": {
                      "description": "A unique identifier for a CIDR block.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "comments": {
                      "description": "Descriptive text you provide for the CIDR block.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The user who created the CIDR block.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "The ISO 8601 timestamp indicating when the CIDR block was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "enabled": {
                      "description": "Indicates IP allowlist is enabled on the account.",
                      "type": "boolean"
                    },
                    "modifiedBy": {
                      "description": "The user who last edited the CIDR block.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "The ISO 8601 timestamp indicating when the CIDR block was last modified.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/ip-acl-200.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "This operation deletes a CIDR block from the IP allowlist. After you delete a CIDR block, any requests from IP addresses you deleted fail the next time someone tries to log in from that address. Users accessing Control Center from an IP address you delete aren't automatically logged out of Control Center at the time you delete the IP address. With IP allowlist enabled for the account, you can't delete the last CIDR block in the allowlist or the CIDR block allowing access to the current user. There are no restrictions with IP allowlist disabled on the account.",
        "operationId": "delete-allowlist-cidrblockid",
        "summary": "Delete a CIDR block",
        "tags": [
          "CIDR blocks"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/delete-allowlist-cidrblockid"
        },
        "responses": {
          "204": {
            "description": "CIDR block successfully deleted.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A Unique identifier for a CIDR block.",
          "example": "{{cidrBlockId}}",
          "in": "path",
          "name": "cidrBlockId",
          "required": true,
          "schema": {
            "example": 6688,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/cidrBlockId-path.yaml"
          }
        }
      ]
    },
    "/user-admin/properties": {
      "get": {
        "description": "This operation lists the properties for an account. Include the `groupId` parameter in your request to filter the results by group.",
        "operationId": "get-properties",
        "summary": "List properties",
        "tags": [
          "Properties"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-properties"
        },
        "responses": {
          "200": {
            "description": "The response provides the properties.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Encapsulates information about each property.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Encapsulates information about a property.",
                    "type": "object",
                    "required": [
                      "propertyId",
                      "groupId",
                      "groupName",
                      "propertyName",
                      "propertyTypeDescription",
                      "actions"
                    ],
                    "properties": {
                      "actions": {
                        "additionalProperties": false,
                        "description": "Encapsulates the activity performed on the group.",
                        "type": "object",
                        "required": [
                          "move"
                        ],
                        "properties": {
                          "move": {
                            "description": "When enabled, you can move a property from one group to another group.",
                            "type": "boolean"
                          }
                        }
                      },
                      "groupId": {
                        "description": "Unique identifier for a group. It filters down results to properties in the specified group.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "groupName": {
                        "description": "Descriptive label for the group.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "propertyId": {
                        "description": "Unique identifier for a property. This is what PAPI [https://techdocs.akamai.com/property-mgr/reference/get-properties] refers to as an `assetId`. Note there's a discrepancy between how PAPI refers to `propertyId` and Identity and Access Management.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "propertyName": {
                        "description": "Descriptive label for the property.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "propertyTypeDescription": {
                        "description": "Identifies the product-type such as `On Demand Media`, `Site`, `Application`, `Live Media Streams`, or `NetStorage`.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/PropertyListItem.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfPropertyListItem.yaml"
                  }
                },
                "example": [
                  {
                    "groupId": 99999,
                    "groupName": "Group 1",
                    "propertyId": 99999999,
                    "propertyName": "0rb-test-01.com",
                    "propertyTypeDescription": "On Demand Media",
                    "actions": {
                      "move": true
                    }
                  },
                  {
                    "groupId": 99999,
                    "groupName": "Group 2",
                    "propertyId": 88888888,
                    "propertyName": "0rb-test-01.com_clone",
                    "propertyTypeDescription": "On Demand Media",
                    "actions": {
                      "move": true
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A unique identifier for a group.",
            "example": "{{groupId}}",
            "in": "query",
            "name": "groupId",
            "schema": {
              "example": 3456789,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/groupIdopt_groupId.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-admin/properties/{propertyId}": {
      "get": {
        "description": "This operation lists a property's details.",
        "operationId": "get-property",
        "summary": "Get a property",
        "tags": [
          "Properties"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-property"
        },
        "responses": {
          "200": {
            "description": "The response provides the property's details.",
            "content": {
              "application/json": {
                "example": {
                  "arlConfigFile": "abc-dn123-abcde.akamaiorigin.net.xml",
                  "createdBy": "jperez",
                  "createdDate": "2017-07-27T18:11:25.000Z",
                  "groupId": 45678,
                  "groupName": "Sales Team",
                  "modifiedBy": "adevi",
                  "modifiedDate": "2017-07-27T18:11:25.000Z",
                  "propertyId": 9678999,
                  "propertyName": "abc-dn123-abcde.akamaiorigin.net"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information about a property.",
                  "type": "object",
                  "required": [
                    "createdDate",
                    "createdBy",
                    "modifiedDate",
                    "modifiedBy",
                    "groupName",
                    "groupId",
                    "arlConfigFile",
                    "propertyId",
                    "propertyName"
                  ],
                  "properties": {
                    "arlConfigFile": {
                      "description": "An ARL (Akamai resource locator) configuration file, specifying versions of an object you can't purge using the URL. The `arlConfigFile` is the same as the `propertyName` with an `xml` extension.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The user who created the property.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the property was originally created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Unique identifier for each group that's used to filter down results to properties in the specified group.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "groupName": {
                      "description": "Descriptive label for the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "The user who last edited the property.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the property was last updated.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "propertyId": {
                      "description": "Unique identifier for a property. This is what PAPI [https://techdocs.akamai.com/property-mgr/reference/get-properties] refers to as an `assetId`. Note there's a discrepancy between how PAPI refers to `propertyId` and Identity and Access Management.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "propertyName": {
                      "description": "Descriptive label for the property.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/PropertyResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A unique identifier for a group.",
            "example": "{{groupId}}",
            "in": "query",
            "name": "groupId",
            "required": true,
            "schema": {
              "example": 45678,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/groupIdreqQP_groupId.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "This operation moves a property from one group to another group. You can only move a property into another group within the same group hierarchy. Depending on your role in the destination group, you may lose access to resources the property uses. After moving a property, run the [List users affected by moving a group](https://techdocs.akamai.com/iam-user-admin/reference/get-move-affected-users) operation to determine which users gained or lost access.",
        "operationId": "put-property",
        "summary": "Move a property",
        "tags": [
          "Properties"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/put-property"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "destinationGroupId": 22222,
                "sourceGroupId": 11111
              },
              "schema": {
                "additionalProperties": false,
                "description": "Describes the request body for moving a property under another group.",
                "type": "object",
                "required": [
                  "sourceGroupId",
                  "destinationGroupId"
                ],
                "properties": {
                  "destinationGroupId": {
                    "description": "Identifies the group to which you want to move the property.",
                    "example": "{{destinationGroupId}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "sourceGroupId": {
                    "description": "Identifies the group from which you want to move the property.",
                    "example": "{{sourceGroupId}}",
                    "minimum": 0,
                    "type": "integer"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/MovePropertyRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Property successfully moved.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for a property.",
          "example": "{{propertyId}}",
          "in": "path",
          "name": "propertyId",
          "required": true,
          "schema": {
            "example": 9678999,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/propertyId-path.yaml"
          }
        }
      ]
    },
    "/user-admin/properties/{propertyId}/resources": {
      "get": {
        "description": "This operation lists resources a property uses to deliver your web content across Akamai's edge network. You can think of these resources as objects, like CP codes and configuration files. For example, an ARL (Akamai resource locator) configuration file specifies how Akamai purges versions of an object that you can't purge using just the URL.",
        "operationId": "get-property-resources",
        "summary": "Get a property's resources",
        "tags": [
          "Resources"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-property-resources"
        },
        "responses": {
          "200": {
            "description": "The response provides the resources.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Encapsulates information about resources.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Encapsulates information about resources.",
                    "type": "object",
                    "required": [
                      "resourceId",
                      "resourceType",
                      "resourceName",
                      "modifiedDate"
                    ],
                    "properties": {
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the resource was last updated.",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      },
                      "resourceId": {
                        "description": "Unique identifier for each resource.",
                        "minimum": 0,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "resourceName": {
                        "description": "Descriptive label for the resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "resourceType": {
                        "description": "Helps to characterize a property's resource, either `cname`, `arlfile`, `cpcode`, `storagegroup`, `fpdomain`, or `edns`. For more information, see [View property details](https://techdocs.akamai.com/iam/docs/mng-properties).",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/ResourceItem.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfResourceItem.yaml"
                  }
                },
                "example": [
                  {
                    "modifiedDate": "2017-09-07T17:00:58.000Z",
                    "resourceId": 111111,
                    "resourceName": "abc-dn123-abcde.akamaiorigin.net.xml",
                    "resourceType": "arlfile"
                  },
                  {
                    "modifiedDate": "2017-04-24T16:19:27.000Z",
                    "resourceId": 8988898,
                    "resourceName": "mycpcodeexample(123456)",
                    "resourceType": "cpcode"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A unique identifier for a group.",
            "example": "{{groupId}}",
            "in": "query",
            "name": "groupId",
            "required": true,
            "schema": {
              "example": 45678,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/groupIdreqQP_groupId.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for a property.",
          "example": "{{propertyId}}",
          "in": "path",
          "name": "propertyId",
          "required": true,
          "schema": {
            "example": 9678999,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/propertyId-path.yaml"
          }
        }
      ]
    },
    "/user-admin/properties/{propertyId}/users": {
      "get": {
        "description": "This operation lists users who can access a property.",
        "operationId": "get-property-users",
        "summary": "List users for property",
        "tags": [
          "Properties"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-property-users"
        },
        "responses": {
          "200": {
            "description": "The response provides the users accessing the property.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Encapsulates all the users of a property by property ID.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Encapsulates all the users of a property by property ID.",
                    "type": "object",
                    "required": [
                      "uiUserName",
                      "uiIdentityId",
                      "firstName",
                      "lastName",
                      "isBlocked"
                    ],
                    "properties": {
                      "firstName": {
                        "description": "The user's first name.",
                        "type": "string"
                      },
                      "isBlocked": {
                        "description": "Shows if the user is blocked",
                        "type": "boolean"
                      },
                      "lastName": {
                        "description": "The user's surname.",
                        "type": "string"
                      },
                      "uiIdentityId": {
                        "description": "A unique identifier for a user. Also known as a `contactId` in other APIs.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "uiUserName": {
                        "description": "The full name for the user, as it appears in interfaces.",
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/UserPropertyId.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/UsersOfPropertyResponse.yaml"
                  }
                },
                "example": [
                  {
                    "firstName": "Media",
                    "isBlocked": true,
                    "lastName": "QA",
                    "uiIdentityId": "B-3-146FAB9",
                    "uiUserName": "aditparikh"
                  },
                  {
                    "firstName": "Bert",
                    "isBlocked": false,
                    "lastName": "Moody",
                    "uiIdentityId": "B-C-IP9IND",
                    "uiUserName": "amoody"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "__Enum__ Indicates the type of users to get, either those who have `lostAccess` or the reverse `gainAccess`.",
            "example": "{{userType}}",
            "in": "query",
            "name": "userType",
            "schema": {
              "example": "lostAccess",
              "type": "string",
              "enum": [
                "lostAccess",
                "gainAccess"
              ]
            },
            "x-akamai": {
              "file-path": "parameters/userType-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for a property.",
          "example": "{{propertyId}}",
          "in": "path",
          "name": "propertyId",
          "required": true,
          "schema": {
            "example": 9678999,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/propertyId-path.yaml"
          }
        }
      ]
    },
    "/user-admin/properties/{propertyId}/users/block": {
      "put": {
        "description": "This operation blocks the users on a property.",
        "operationId": "put-property-users-block",
        "summary": "Block users",
        "tags": [
          "Properties"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/put-property-users-block"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Encapsulates all the users who needs to be blocked based on UI identities.",
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "description": "Encapsulates all the users who needs to be blocked based on UI identities.",
                  "type": "object",
                  "required": [
                    "uiIdentityId"
                  ],
                  "properties": {
                    "uiIdentityId": {
                      "description": "A unique identifier for a user. Also known as a `contactId` in other APIs.",
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/UserBlockUIIdentities.yaml"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/UsersBlockUIIdentities.yaml"
                }
              },
              "example": [
                {
                  "uiIdentityId": "B-3-146FAB9"
                },
                {
                  "uiIdentityId": "B-C-IP9IND"
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response provides the users blocked from the property.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Encapsulates all the users of a property by property ID.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Encapsulates all the users of a property by property ID.",
                    "type": "object",
                    "required": [
                      "uiUserName",
                      "uiIdentityId",
                      "firstName",
                      "lastName",
                      "isBlocked"
                    ],
                    "properties": {
                      "firstName": {
                        "description": "The user's first name.",
                        "type": "string"
                      },
                      "isBlocked": {
                        "description": "Shows if the user is blocked",
                        "type": "boolean"
                      },
                      "lastName": {
                        "description": "The user's surname.",
                        "type": "string"
                      },
                      "uiIdentityId": {
                        "description": "A unique identifier for a user. Also known as a `contactId` in other APIs.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "uiUserName": {
                        "description": "The full name for the user, as it appears in interfaces.",
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/UserPropertyId.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/UsersOfPropertyResponse.yaml"
                  }
                },
                "example": [
                  {
                    "firstName": "Media",
                    "isBlocked": true,
                    "lastName": "QA",
                    "uiIdentityId": "B-3-146FAB9",
                    "uiUserName": "aditparikh"
                  },
                  {
                    "firstName": "Bert",
                    "isBlocked": false,
                    "lastName": "Moody",
                    "uiIdentityId": "B-C-IP9IND",
                    "uiUserName": "amoody"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for a property.",
          "example": "{{propertyId}}",
          "in": "path",
          "name": "propertyId",
          "required": true,
          "schema": {
            "example": 9678999,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/propertyId-path.yaml"
          }
        }
      ]
    },
    "/user-admin/roles": {
      "post": {
        "description": "This operation creates a custom role. Roles exist at the account level regardless of group, but are constrained by contract type. If you create a role under one contract type, you can't apply that role to groups belonging to a different contract type, even if they're in the same account.",
        "operationId": "post-role",
        "summary": "Create a role",
        "tags": [
          "Roles"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/post-role"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "roleDescription": "This role lets users edit or create reports.",
                "roleName": "Edit Reports",
                "grantedRoles": [
                  {
                    "grantedRoleId": 2051
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "type": "object",
                "required": [
                  "roleName",
                  "roleDescription",
                  "grantedRoles"
                ],
                "properties": {
                  "grantedRoles": {
                    "description": "Grantable roles for the account.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "grantedRoleId"
                      ],
                      "properties": {
                        "grantedRoleId": {
                          "description": "Unique identifier for the granted role.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "roleDescription": {
                    "description": "Descriptive text for the role to convey its use.",
                    "example": "{{roleDescription}}",
                    "maxLength": 250,
                    "minLength": 1,
                    "type": "string"
                  },
                  "roleName": {
                    "description": "Descriptive label for the role.",
                    "example": "{{roleName}}",
                    "maxLength": 70,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/RoleRequestPost.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Custom role successfully created.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "tyamada",
                  "createdDate": "2017-09-11T13:43:54.005Z",
                  "modifiedBy": "hgildong",
                  "modifiedDate": "2017-09-11T13:43:54.005Z",
                  "roleDescription": "Provides users with edit and create access to reports.",
                  "roleId": 12345678,
                  "roleName": "Edit Role",
                  "type": "custom",
                  "actions": {
                    "delete": true,
                    "edit": true
                  },
                  "grantedRoles": [
                    {
                      "grantedRoleDescription": "View Real User Monitoring",
                      "grantedRoleId": 1234,
                      "grantedRoleName": "RealUserMonitoring - View Only"
                    }
                  ],
                  "users": [
                    {
                      "accountId": "A-CCT1234",
                      "email": "john-doe@example.com",
                      "firstName": "John",
                      "lastLoginDate": "2016-01-13T17:53:57Z",
                      "lastName": "Doe",
                      "uiIdentityId": "A-B-12345"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "A role that includes granted roles.",
                  "type": "object",
                  "required": [
                    "roleId",
                    "roleName",
                    "roleDescription",
                    "type",
                    "createdDate",
                    "createdBy",
                    "modifiedDate",
                    "modifiedBy"
                  ],
                  "properties": {
                    "actions": {
                      "additionalProperties": false,
                      "description": "Indicates whether you can perform specific activities on the role.",
                      "type": "object",
                      "required": [
                        "delete",
                        "edit"
                      ],
                      "properties": {
                        "delete": {
                          "description": "When enabled, you can remove the role from the group.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "When enabled, you can modify the role in the group.",
                          "type": "boolean"
                        }
                      }
                    },
                    "createdBy": {
                      "description": "The user who created the granted role.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the granted role was originally created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "grantedRoles": {
                      "description": "Subset of roles within the role, giving you access to objects in a group.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "grantedRoleId",
                          "grantedRoleName"
                        ],
                        "properties": {
                          "grantedRoleDescription": {
                            "description": "The description you supply for the granted role.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "grantedRoleId": {
                            "description": "Unique identifier for each granted role.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "grantedRoleName": {
                            "description": "The name you supply for the granted role.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "modifiedBy": {
                      "description": "The user who last edited the granted role.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the granted role was last updated.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "roleDescription": {
                      "description": "Descriptive text for the role.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "roleId": {
                      "description": "Unique identifier for each role.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "roleName": {
                      "description": "The name you supply for the role.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Indicates whether it's a `standard` role provided by Akamai or a `custom` role for the account.",
                      "type": "string",
                      "enum": [
                        "custom",
                        "standard"
                      ]
                    },
                    "users": {
                      "description": "List of people who share the same role.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "uiIdentityId",
                          "firstName",
                          "lastName",
                          "accountId",
                          "email"
                        ],
                        "properties": {
                          "accountId": {
                            "description": "Unique identifier for each account.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "email": {
                            "description": "The user's email address.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "firstName": {
                            "description": "The user's first name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "lastLoginDate": {
                            "description": "ISO 8601 timestamp indicating when the user last logged in.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "lastName": {
                            "description": "The user's surname.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uiIdentityId": {
                            "description": "Unique identifier for a user's profile, which corresponds to their Control Center profile or client ID.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/RoleWithGrantedRoles.yaml"
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "description": "A URL path to the newly created object.",
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/Location.yaml"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "This operation lists roles for the current account and contract type. The account and contract type are determined by the access tokens in your API client.",
        "operationId": "get-roles",
        "summary": "List roles",
        "tags": [
          "Roles"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-roles"
        },
        "responses": {
          "200": {
            "description": "The response provides the roles for the account.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Encapsulates information about various roles.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Encapsulates information about multiple roles.",
                    "type": "object",
                    "required": [
                      "type",
                      "roleId",
                      "roleName",
                      "roleDescription",
                      "createdDate",
                      "createdBy",
                      "modifiedDate",
                      "modifiedBy",
                      "actions",
                      "numUsers",
                      "users"
                    ],
                    "properties": {
                      "actions": {
                        "description": "Encapsulates activities performed on the group.",
                        "type": "object",
                        "required": [
                          "delete",
                          "edit"
                        ],
                        "additionalProperties": {
                          "description": "Indicates whether you can perform specific activities on the role.",
                          "type": "boolean"
                        }
                      },
                      "createdBy": {
                        "description": "The user who created the role.",
                        "minLength": 1,
                        "readOnly": true,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the role was originally created.",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      },
                      "modifiedBy": {
                        "description": "The user who last edited the role.",
                        "minLength": 1,
                        "readOnly": true,
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the role was last updated.",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      },
                      "numUsers": {
                        "description": "The number of users who have the role.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "roleDescription": {
                        "description": "Descriptive text for the role to convey its use.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "roleId": {
                        "description": "Unique identifier for the role.",
                        "minimum": 0,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "roleName": {
                        "description": "Descriptive label for the role.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "type": {
                        "description": "Specifies a `standard` role provided by Akamai or a `custom` role you create for the account. You can't modify a `standard` role.",
                        "type": "string",
                        "enum": [
                          "custom",
                          "standard"
                        ]
                      },
                      "users": {
                        "description": "User details.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "uiIdentityId",
                            "firstName",
                            "lastName",
                            "accountId",
                            "email",
                            "lastLoginDate"
                          ],
                          "properties": {
                            "accountId": {
                              "description": "Unique identifier for an account.",
                              "minLength": 1,
                              "readOnly": true,
                              "type": "string"
                            },
                            "email": {
                              "description": "The user's email address.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "firstName": {
                              "description": "The user's first name.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "lastLoginDate": {
                              "description": "ISO 8601 timestamp indicating when the user last logged in.",
                              "format": "date-time",
                              "readOnly": true,
                              "type": "string"
                            },
                            "lastName": {
                              "description": "The user's surname.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "uiIdentityId": {
                              "description": "Unique identifier for a user's profile, which corresponds to their Control Center profile or client ID.",
                              "minLength": 1,
                              "readOnly": true,
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/RoleListItem.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfRoleListItem.yaml"
                  }
                },
                "example": [
                  {
                    "createdBy": "tyamada",
                    "createdDate": "2017-07-27T18:11:25.000Z",
                    "modifiedBy": "tyamada",
                    "modifiedDate": "2017-07-27T18:11:25.000Z",
                    "roleDescription": "This role will allow you to view",
                    "roleId": 123456,
                    "roleName": "View Only",
                    "type": "custom",
                    "actions": {
                      "delete": true,
                      "edit": true
                    }
                  },
                  {
                    "createdBy": "jperez",
                    "modifiedBy": "szhang",
                    "numUsers": 2,
                    "roleDescription": "This role allows for 'read only'",
                    "roleId": 13,
                    "roleName": "Accounting",
                    "type": "standard",
                    "actions": {
                      "delete": false,
                      "edit": false
                    },
                    "users": [
                      {
                        "accountId": "A-CCT1234",
                        "email": "john-doe@example.com",
                        "firstName": "John",
                        "lastLoginDate": "2017-08-03T21:15:27.000Z",
                        "lastName": "Doe",
                        "uiIdentityId": "A-B-1BCDEF"
                      },
                      {
                        "accountId": "A-CCT3456",
                        "email": "doe-jane@example.com",
                        "firstName": "Jane",
                        "lastLoginDate": "2016-09-07T00:00:00.000Z",
                        "lastName": "Doe",
                        "uiIdentityId": "1-ABCDE"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "When enabled, the response includes information about actions such as `edit` or `delete` that you can take for the object. Not to be confused with the `action` parameter, which applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-user-admin/reference/put-user-profile-tfa) operation.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "required": true,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/rolesFilterParamsActions_actions.yaml"
            }
          },
          {
            "description": "Unique identifier for a group. It filters down results to properties in the specified group.",
            "example": "{{groupId}}",
            "in": "query",
            "name": "groupId",
            "required": false,
            "schema": {
              "example": 19807,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/rolesFilterParamsGroup_groupId.yaml"
            }
          },
          {
            "description": "When enabled, returns users assigned to the roles.",
            "example": "{{users}}",
            "in": "query",
            "name": "users",
            "required": false,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/rolesFilterParamsUsers_users.yaml"
            }
          },
          {
            "description": "When enabled, returns all the roles for the current account, ignoring the contract type associated with your API client.",
            "example": "{{ignoreContext}}",
            "in": "query",
            "name": "ignoreContext",
            "required": false,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/rolesFilterParamsContext_ignoreContext.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-admin/roles/grantable-roles": {
      "get": {
        "description": "This operation lists the grantable roles you can include in a new custom role, or add to an existing custom role.",
        "operationId": "get-grantable-roles",
        "summary": "List grantable roles",
        "tags": [
          "Grantable roles"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-grantable-roles"
        },
        "responses": {
          "200": {
            "description": "The response provides grantable roles.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Testing to see where it appears?",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "grantedRoleId",
                      "grantedRoleName",
                      "grantedRoleDescription"
                    ],
                    "properties": {
                      "grantedRoleDescription": {
                        "description": "Descriptive text for the granted role to convey its use.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "grantedRoleId": {
                        "description": "Unique identifier for the granted role.",
                        "minimum": 0,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "grantedRoleName": {
                        "description": "Descriptive label for the granted role.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/GrantedRole.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfGrantedRole.yaml"
                  }
                },
                "example": [
                  {
                    "grantedRoleDescription": "WAF Strict WhiteList",
                    "grantedRoleId": 2051,
                    "grantedRoleName": "WAF Strict WhiteList"
                  },
                  {
                    "grantedRoleDescription": "Manage License Delivery Configurations",
                    "grantedRoleId": 1032,
                    "grantedRoleName": "License Delivery Configurations - Manage"
                  },
                  {
                    "grantedRoleDescription": "View Audience Analytics Reports",
                    "grantedRoleId": 2063,
                    "grantedRoleName": "View Audience Analytics Reports"
                  },
                  {
                    "grantedRoleDescription": "View Real User Monitoring",
                    "grantedRoleId": 77852,
                    "grantedRoleName": "RealUserMonitoring - View Only"
                  },
                  {
                    "grantedRoleDescription": "Add/Edit/View Enhanced DNS - All privileges",
                    "grantedRoleId": 32,
                    "grantedRoleName": "Enhanced DNS - All privileges (add/edit/view)"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-admin/roles/{roleId}": {
      "get": {
        "description": "This operation retrieves a role's details.",
        "operationId": "get-role",
        "summary": "Get a role",
        "tags": [
          "Roles"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-role"
        },
        "responses": {
          "200": {
            "description": "The response provides the role's details.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "mrossi",
                  "createdDate": "2017-07-27T18:11:25.000Z",
                  "modifiedBy": "mrossi",
                  "modifiedDate": "2017-07-27T18:11:25.000Z",
                  "roleDescription": "This role will allow you to look at the security reports",
                  "roleId": 123456,
                  "roleName": "Security View Only",
                  "type": "custom",
                  "actions": {
                    "delete": false,
                    "edit": false
                  },
                  "grantedRoles": [
                    {
                      "grantedRoleDescription": "Security View Only",
                      "grantedRoleId": 12345,
                      "grantedRoleName": "SecurityViewOnly"
                    }
                  ],
                  "users": [
                    {
                      "accountId": "A-CCT3456",
                      "email": "john-doe@example.com",
                      "firstName": "John",
                      "lastLoginDate": "2017-08-03T21:15:27.000Z",
                      "lastName": "Doe",
                      "uiIdentityId": "A-B-12345"
                    },
                    {
                      "accountId": "A-CCT3456",
                      "email": "doe-jane@example.com",
                      "firstName": "Jane",
                      "lastLoginDate": "2016-09-07T00:00:00.000Z",
                      "lastName": "Doe",
                      "uiIdentityId": "1-2ABCD"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "A role that includes granted roles.",
                  "type": "object",
                  "required": [
                    "roleId",
                    "roleName",
                    "roleDescription",
                    "type",
                    "createdDate",
                    "createdBy",
                    "modifiedDate",
                    "modifiedBy"
                  ],
                  "properties": {
                    "actions": {
                      "additionalProperties": false,
                      "description": "Indicates whether you can perform specific activities on the role.",
                      "type": "object",
                      "required": [
                        "delete",
                        "edit"
                      ],
                      "properties": {
                        "delete": {
                          "description": "When enabled, you can remove the role from the group.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "When enabled, you can modify the role in the group.",
                          "type": "boolean"
                        }
                      }
                    },
                    "createdBy": {
                      "description": "The user who created the granted role.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the granted role was originally created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "grantedRoles": {
                      "description": "Subset of roles within the role, giving you access to objects in a group.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "grantedRoleId",
                          "grantedRoleName"
                        ],
                        "properties": {
                          "grantedRoleDescription": {
                            "description": "The description you supply for the granted role.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "grantedRoleId": {
                            "description": "Unique identifier for each granted role.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "grantedRoleName": {
                            "description": "The name you supply for the granted role.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "modifiedBy": {
                      "description": "The user who last edited the granted role.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the granted role was last updated.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "roleDescription": {
                      "description": "Descriptive text for the role.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "roleId": {
                      "description": "Unique identifier for each role.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "roleName": {
                      "description": "The name you supply for the role.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Indicates whether it's a `standard` role provided by Akamai or a `custom` role for the account.",
                      "type": "string",
                      "enum": [
                        "custom",
                        "standard"
                      ]
                    },
                    "users": {
                      "description": "List of people who share the same role.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "uiIdentityId",
                          "firstName",
                          "lastName",
                          "accountId",
                          "email"
                        ],
                        "properties": {
                          "accountId": {
                            "description": "Unique identifier for each account.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "email": {
                            "description": "The user's email address.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "firstName": {
                            "description": "The user's first name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "lastLoginDate": {
                            "description": "ISO 8601 timestamp indicating when the user last logged in.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "lastName": {
                            "description": "The user's surname.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uiIdentityId": {
                            "description": "Unique identifier for a user's profile, which corresponds to their Control Center profile or client ID.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/RoleWithGrantedRoles.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "When enabled, the response includes information about actions such as `edit` or `delete` that you can take for the object. Not to be confused with the `action` parameter, which applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-user-admin/reference/put-user-profile-tfa) operation.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "required": true,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/rolesFilterParamsActions_actions.yaml"
            }
          },
          {
            "description": "When enabled, the response lists granted roles assigned for a role.",
            "example": "{{grantedRoles}}",
            "in": "query",
            "name": "grantedRoles",
            "required": true,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/grantedRoles_grantedRoles.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "This operation adds or removes a role's group role assignments, along with other data such as name and description. When you modify a role, those changes affect existing API clients. Review all API clients belonging to the user before modifying a role.",
        "operationId": "put-role",
        "summary": "Edit a role",
        "tags": [
          "Roles"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/put-role"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "roleDescription": "Provides users with edit and create access to reports.",
                "roleName": "Edit Reports",
                "grantedRoles": [
                  {
                    "grantedRoleId": 2063
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Add or remove role assignments. When you modify a role, those changes affect existing API clients. Review all API clients belonging to the user before modifying a role.",
                "type": "object",
                "required": [
                  "grantedRoles",
                  "roleDescription",
                  "roleName"
                ],
                "properties": {
                  "grantedRoles": {
                    "description": "Grantable roles for the account.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "grantedRoleId"
                      ],
                      "properties": {
                        "grantedRoleId": {
                          "description": "Unique identifier for the granted role.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "roleDescription": {
                    "description": "Descriptive text for the role to convey its use.",
                    "example": "{{roleDescription}}",
                    "maxLength": 250,
                    "minLength": 1,
                    "type": "string"
                  },
                  "roleName": {
                    "description": "Descriptive label for the role.",
                    "example": "{{roleName}}",
                    "maxLength": 70,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/RoleRequestPut.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response reflects the modified role.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "alfulani",
                  "createdDate": "2017-09-11T13:43:54.000Z",
                  "modifiedBy": "jsmith",
                  "modifiedDate": "2017-09-11T13:47:32.000Z",
                  "roleDescription": "This role lets users edit and create reports.",
                  "roleId": 100645,
                  "roleName": "Edit Reports",
                  "type": "custom",
                  "actions": {
                    "delete": true,
                    "edit": true
                  },
                  "grantedRoles": [
                    {
                      "grantedRoleDescription": "View Audience Analytics Reports",
                      "grantedRoleId": 2063,
                      "grantedRoleName": "View Audience Analytics Reports"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "A role that includes granted roles.",
                  "type": "object",
                  "required": [
                    "roleId",
                    "roleName",
                    "roleDescription",
                    "type",
                    "createdDate",
                    "createdBy",
                    "modifiedDate",
                    "modifiedBy"
                  ],
                  "properties": {
                    "actions": {
                      "additionalProperties": false,
                      "description": "Encapsulates activities performed on the group.",
                      "type": "object",
                      "required": [
                        "delete",
                        "edit"
                      ],
                      "properties": {
                        "delete": {
                          "description": "Indicates whether you can remove items from the group.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Indicates whether you can modify items in the group.",
                          "type": "boolean"
                        }
                      }
                    },
                    "createdBy": {
                      "description": "The user who created the granted role.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the granted role was originally created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "grantedRoles": {
                      "description": "Subset of roles within the role, giving you access to objects in a group.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "grantedRoleId",
                          "grantedRoleName"
                        ],
                        "properties": {
                          "grantedRoleDescription": {
                            "description": "Descriptive text for the granted role to convey its use.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "grantedRoleId": {
                            "description": "Unique identifier for the granted role.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "grantedRoleName": {
                            "description": "Descriptive label for the granted role.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "modifiedBy": {
                      "description": "The user who last edited the granted role.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the granted role was last updated.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "roleDescription": {
                      "description": "Descriptive text for the granted role to convey its use.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "roleId": {
                      "description": "Unique identifier for the role.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "roleName": {
                      "description": "Indicates whether it's a `standard` role provided by Akamai or a `custom` role you can create for the account. Note that you can't modify a `standard` role.",
                      "minLength": 1,
                      "type": "string",
                      "enum": [
                        "custom",
                        "standard"
                      ]
                    },
                    "type": {
                      "description": "Specifies a `standard` role provided by Akamai or a `custom` role you create for the account. You can't modify a `standard` role.",
                      "type": "string",
                      "enum": [
                        "custom",
                        "standard"
                      ]
                    },
                    "users": {
                      "description": "Users on the account who share the same role.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "uiIdentityId",
                          "firstName",
                          "lastName",
                          "accountId",
                          "email"
                        ],
                        "properties": {
                          "accountId": {
                            "description": "Unique identifier for the account.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "email": {
                            "description": "The user's email address.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "firstName": {
                            "description": "The user's first name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "lastLoginDate": {
                            "description": "ISO 8601 timestamp indicating when the user last logged in.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "lastName": {
                            "description": "The user's surname.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uiIdentityId": {
                            "description": "Unique identifier for a user's profile, which corresponds to their Control Center profile or client ID.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/Role.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "This operation deletes a role. You can't delete a role if it's assigned to a user.",
        "operationId": "delete-role",
        "summary": "Delete a role",
        "tags": [
          "Roles"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/delete-role"
        },
        "responses": {
          "204": {
            "description": "Successful response",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for a role.",
          "example": "{{roleId}}",
          "in": "path",
          "name": "roleId",
          "required": true,
          "schema": {
            "example": 45678,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/roleId-path.yaml"
          }
        }
      ]
    },
    "/user-admin/ui-identities": {
      "post": {
        "description": "This operation creates a user, or clones an existing user's role assignments, in the account specified in your API client credentials. Optionally, send a randomly generated one-time use password to the new user. If you send the email with the password directly to the user, the response for this operation doesn't include that password. If you don't send the password to the user through email, the password is included in the response.",
        "operationId": "post-ui-identity",
        "summary": "Create a user",
        "tags": [
          "Users"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/post-ui-identity"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "additionalAuthentication": "TFA",
                "address": "TBD",
                "city": "TBD",
                "contactType": "Billing",
                "country": "USA",
                "email": "john-doe@example.com",
                "firstName": "John",
                "jobTitle": "Engineer",
                "lastName": "Doe",
                "mobilePhone": "3456787657",
                "phone": "(123) 321-1234",
                "preferredLanguage": "English",
                "secondaryEmail": "john-doe@example.com",
                "sessionTimeOut": 64800,
                "state": "CA",
                "timeZone": "GMT",
                "zipCode": "34567",
                "notifications": {
                  "enableEmailNotifications": true,
                  "options": {
                    "newUserNotification": true,
                    "passwordExpiry": true,
                    "proactive": [
                      "EdgeScape",
                      "EdgeSuite (HTTP Content Delivery)"
                    ],
                    "upgrade": [
                      "NetStorage",
                      "Other Upgrade Notifications (Planned)"
                    ]
                  }
                },
                "authGrants": [
                  {
                    "groupId": 12345,
                    "groupName": "MyGroup",
                    "roleDescription": "Provides users with the maximum access to users.",
                    "roleId": 3,
                    "roleName": "Admin",
                    "subGroups": [
                      {
                        "groupId": 54321,
                        "groupName": "MySubGroup",
                        "subGroups": [
                          {
                            "groupId": 56789,
                            "groupName": "MyNewSubGroup"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "type": "object",
                "required": [
                  "firstName",
                  "lastName",
                  "email",
                  "phone",
                  "state",
                  "country",
                  "authGrants",
                  "additionalAuthentication"
                ],
                "properties": {
                  "additionalAuthentication": {
                    "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`. When `NONE` is selected, there's no additional authentication.",
                    "example": "{{additionalAuthentication}}",
                    "type": "string",
                    "enum": [
                      "TFA",
                      "MFA",
                      "NONE"
                    ]
                  },
                  "address": {
                    "description": "The user's street address.",
                    "example": "{{address}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "authGrants": {
                    "description": "The user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "isBlocked",
                        "roleId",
                        "groupId",
                        "groupName",
                        "roleName",
                        "roleDescription",
                        "subGroups"
                      ],
                      "properties": {
                        "groupId": {
                          "description": "Unique identifier for the group.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "groupName": {
                          "description": "Descriptive label for the group.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "isBlocked": {
                          "description": "Indicates whether the user can access the group.",
                          "type": "boolean"
                        },
                        "roleDescription": {
                          "description": "Descriptive text for the role to convey its use.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "roleId": {
                          "description": "Unique identifier for the role.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "roleName": {
                          "description": "Descriptive label for the role.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "subGroups": {
                          "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "groupId": {
                                "description": "Unique identifier for each group.",
                                "type": "integer"
                              },
                              "groupName": {
                                "description": "Group name.",
                                "type": "string"
                              },
                              "isBlocked": {
                                "description": "Indicates whether a user's access to a group is blocked.",
                                "type": "boolean"
                              },
                              "roleId": {
                                "description": "Unique identifier for each role.",
                                "type": "integer"
                              },
                              "subGroups": {
                                "description": "Array of nested groups.",
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "groupId": {
                                      "description": "Unique identifier for each group.",
                                      "type": "integer"
                                    },
                                    "groupName": {
                                      "description": "Group name.",
                                      "type": "string"
                                    },
                                    "isBlocked": {
                                      "description": "Indicates whether a user's access to a group is blocked.",
                                      "type": "boolean"
                                    },
                                    "roleId": {
                                      "description": "Unique identifier for each role.",
                                      "type": "integer"
                                    },
                                    "subGroups": {
                                      "description": "Array of nested groups.",
                                      "type": "array",
                                      "items": {
                                        "description": "A further nested authorization grant.",
                                        "type": "object",
                                        "x-akamai": {
                                          "file-path": "schemas/AuthGrantRequest-nested.yaml"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/AuthGrantRequest.yaml"
                      }
                    }
                  },
                  "city": {
                    "description": "The city where the user is located.",
                    "example": "{{city}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "cloneFrom": {
                    "description": "The username to clone a user's `authGrants` from. If you provide this member in a POST request, don't include the `authGrants` member in the request too.",
                    "example": "{{cloneFrom}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "contactType": {
                    "description": "Helps characterize the user. For values, see the [View contact types](https://techdocs.akamai.com/iam-user-admin/reference/get-common-contact-types) operation.",
                    "example": "{{contactType}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "country": {
                    "description": "Part of the user's location. For values, see the [View supported countries](https://techdocs.akamai.com/iam-user-admin/reference/get-common-countries) operation.",
                    "example": "{{country}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "email": {
                    "description": "The user's email address.",
                    "example": "{{email}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "firstName": {
                    "description": "The user's first name.",
                    "example": "{{firstName}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "jobTitle": {
                    "description": "The user's position at the company.",
                    "example": "{{jobTitle}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "lastName": {
                    "description": "The user's surname.",
                    "example": "{{lastName}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "mobilePhone": {
                    "description": "The user's mobile phone number, represented as a ten-digit integer within a string.",
                    "example": "{{mobilePhone}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "notifications": {
                    "additionalProperties": false,
                    "description": "Emails the user can receive for their products.",
                    "type": "object",
                    "required": [
                      "options",
                      "enableEmailNotifications"
                    ],
                    "properties": {
                      "options": {
                        "additionalProperties": false,
                        "description": "Notification settings options for the request.",
                        "type": "object",
                        "required": [
                          "upgrade",
                          "proactive",
                          "passwordExpiry",
                          "newUserNotification"
                        ],
                        "properties": {
                          "newUserNotification": {
                            "description": "When enabled, the new user receives an email notification.",
                            "type": "boolean"
                          },
                          "passwordExpiry": {
                            "description": "When enabled, the user receives a password expiration email.",
                            "type": "boolean"
                          },
                          "proactive": {
                            "description": "Products subscribed to for proactive notifications.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "upgrade": {
                            "description": "Products subscribed to for upgrade notifications.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        }
                      },
                      "enableEmailNotifications": {
                        "description": "When enabled, the user receives email notifications.",
                        "type": "boolean"
                      }
                    }
                  },
                  "phone": {
                    "description": "The user's main phone number, represented as a ten-digit integer within a string.",
                    "example": "{{phone}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "preferredLanguage": {
                    "description": "The user's language. For values, see the [View languages](https://techdocs.akamai.com/iam-user-admin/reference/get-common-languages) operation.",
                    "example": "{{preferredLanguage}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "secondaryEmail": {
                    "description": "The user's alternate email address.",
                    "example": "{{secondaryEmail}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "sessionTimeOut": {
                    "description": "The number of seconds it takes for the user's Control Center session to time out if there hasn't been any activity. This corresponds to the response value from the [View timeout policies](https://techdocs.akamai.com/iam-user-admin/reference/get-common-timeout-policies) operation.",
                    "example": "{{sessionTimeOut}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "state": {
                    "description": "The state where the user is located.",
                    "example": "{{state}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "timeZone": {
                    "description": "The user's time zone. For values, see the [View time zones](https://techdocs.akamai.com/iam-user-admin/reference/get-common-timezones) operation.",
                    "example": "{{timeZone}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "timezone": {
                    "description": "The user's time zone. For values, see the [View time zones](https://techdocs.akamai.com/iam-user-admin/reference/get-common-timezones) operation.",
                    "example": "{{timezone}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "zipCode": {
                    "description": "The user's five-digit postal code, represented as a string.",
                    "example": "{{zipCode}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/CreateUserRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User or clone successfully created.",
            "content": {
              "application/json": {
                "example": {
                  "additionalAuthentication": "TFA",
                  "address": "TBD",
                  "city": "TBD",
                  "contactType": "Billing",
                  "country": "USA",
                  "email": "john-doe@example.com",
                  "firstName": "John",
                  "lastName": "Doe",
                  "passwordExpiryDate": "2018-05-05T22:38:39.000Z",
                  "phone": "(123) 321-1234",
                  "preferredLanguage": "English",
                  "sessionTimeOut": 64800,
                  "state": "CA",
                  "timeZone": "GMT",
                  "uiIdentityId": "A-BC-1234567",
                  "uiUserName": "john-doe@example.com",
                  "actions": {
                    "delete": true,
                    "apiClient": true,
                    "edit": true,
                    "isCloneable": true,
                    "resetPassword": true,
                    "thirdPartyAccess": false
                  },
                  "notifications": {
                    "enableEmailNotifications": true,
                    "options": {
                      "newUserNotification": true,
                      "passwordExpiry": true,
                      "proactive": [
                        "Security"
                      ],
                      "upgrade": [
                        "24x7"
                      ]
                    }
                  },
                  "authGrants": [
                    {
                      "groupId": 12345,
                      "groupName": "MyGroup",
                      "roleDescription": "Provides the maximum access to users.",
                      "roleId": 3,
                      "roleName": "Admin",
                      "subGroups": [
                        {
                          "groupId": 54321,
                          "groupName": "MySubGroup",
                          "subGroups": [
                            {
                              "groupId": 56789,
                              "groupName": "MyNewSubGroup"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information about each user.",
                  "type": "object",
                  "required": [
                    "uiIdentityId",
                    "firstName",
                    "lastName",
                    "email",
                    "additionalAuthentication",
                    "country",
                    "phone",
                    "address",
                    "timeZone"
                  ],
                  "properties": {
                    "accountId": {
                      "description": "Account Id",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Encapsulates permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-user-admin/reference/put-user-profile-tfa) operation.",
                      "type": "object",
                      "required": [
                        "delete",
                        "edit",
                        "resetPassword",
                        "isCloneable",
                        "thirdPartyAccess",
                        "apiClient"
                      ],
                      "properties": {
                        "delete": {
                          "description": "Indicates whether the user is deletable.",
                          "type": "boolean"
                        },
                        "apiClient": {
                          "description": "Allows the administrator to create an API client.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Indicates whether the user is editable.",
                          "type": "boolean"
                        },
                        "isCloneable": {
                          "description": "If `true` an administrator can create a new user with the same permissions as this user.",
                          "type": "boolean"
                        },
                        "resetPassword": {
                          "description": "Allows an administrator to send a user a password by email or see a one-time token.",
                          "type": "boolean"
                        },
                        "thirdPartyAccess": {
                          "description": "Allows the administrator to manage extended access.",
                          "type": "boolean"
                        }
                      }
                    },
                    "additionalAuthentication": {
                      "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`. When `NONE` is selected, there's no additional authentication.",
                      "type": "string",
                      "enum": [
                        "TFA",
                        "MFA",
                        "NONE"
                      ]
                    },
                    "address": {
                      "description": "The user's street address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "authGrants": {
                      "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.",
                        "type": "object",
                        "required": [
                          "groupId",
                          "roleId",
                          "groupName",
                          "roleName",
                          "roleDescription",
                          "isBlocked",
                          "subGroups"
                        ],
                        "properties": {
                          "groupId": {
                            "description": "Unique identifier for the group.",
                            "minimum": 0,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "groupName": {
                            "description": "Descriptive label for the group.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "isBlocked": {
                            "description": "Indicates whether the user can access the group.",
                            "type": "boolean"
                          },
                          "roleDescription": {
                            "description": "Descriptive text for the role to convey its use.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "roleId": {
                            "description": "Unique identifier for the role.",
                            "minimum": 0,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "roleName": {
                            "description": "Descriptive label for the role.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "subGroups": {
                            "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "description": "A further-nested group.",
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/groups-nested.yaml"
                              }
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/AuthGrantResponse.yaml"
                        }
                      }
                    },
                    "city": {
                      "description": "The user's city.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "contactType": {
                      "description": "To help characterize the user, the value can be any that are available from the [View contact types](https://techdocs.akamai.com/iam-user-admin/reference/get-common-contact-types) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "country": {
                      "description": "As part of the user's location, the value can be any that are available from the [View supported countries](https://techdocs.akamai.com/iam-user-admin/reference/get-common-countries) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "email": {
                      "description": "The user's email address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "firstName": {
                      "description": "The user's first name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "isLocked": {
                      "description": "The user's lock status.",
                      "type": "boolean"
                    },
                    "jobTitle": {
                      "description": "The user's position at your company.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "lastLoginDate": {
                      "description": "ISO 8601 timestamp indicating when the user last logged in.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "lastName": {
                      "description": "The user's surname.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mobilePhone": {
                      "description": "The user's mobile phone number, represented as a ten-digit integer within a string.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "notifications": {
                      "additionalProperties": false,
                      "description": "The notification emails the user receives for products.",
                      "type": "object",
                      "required": [
                        "options",
                        "enableEmailNotifications"
                      ],
                      "properties": {
                        "options": {
                          "additionalProperties": false,
                          "description": "The types of notification emails the user receives.",
                          "type": "object",
                          "required": [
                            "upgrade",
                            "proactive",
                            "passwordExpiry",
                            "newUserNotification"
                          ],
                          "properties": {
                            "newUserNotification": {
                              "description": "Send emails to group administrators when creating new users.",
                              "type": "boolean"
                            },
                            "passwordExpiry": {
                              "description": "Send emails regarding password expiration.",
                              "type": "boolean"
                            },
                            "proactive": {
                              "description": "Lists products for which the user receives notification emails about service issues.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "upgrade": {
                              "description": "Lists products for which the user receives notification emails about upgrades.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "enableEmailNotifications": {
                          "description": "Enables email notifications. When set to `true`, sends email notifications for new user creation, API client credential and password expiration, and general product information.",
                          "type": "boolean"
                        }
                      }
                    },
                    "passwordExpiryDate": {
                      "description": "The date a user's password expires.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "phone": {
                      "description": "The user's main phone number, represented as a ten-digit integer within a string.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "preferredLanguage": {
                      "description": "The value can be any that are available from the [View languages](https://techdocs.akamai.com/iam-user-admin/reference/get-common-languages) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "secondaryEmail": {
                      "description": "The user's secondary email address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "sessionTimeOut": {
                      "description": "The number of seconds it takes for the user's Control Center session to time out after no activity. This corresponds to the `value` output of the [View timeout policies](https://techdocs.akamai.com/iam-user-admin/reference/get-common-timeout-policies) operation.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "state": {
                      "description": "The user's state.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "timeZone": {
                      "description": "The user's time zone. The value can be any that are available from the [View time zones](https://techdocs.akamai.com/iam-user-admin/reference/get-common-timezones) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uiIdentityId": {
                      "description": "A unique identifier for a user's profile, which corresponds to a user's actual profile or client ID.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "uiUserName": {
                      "description": "A user's `loginId`. Typically, a user's email address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "zipCode": {
                      "description": "The user's five-digit postal code, represented as a string.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/UserResponse.yaml"
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "description": "A URL path to the newly created object.",
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/Location.yaml"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "When `sendEmail=true`, send a one-time password to the new user.",
            "example": "{{sendEmail}}",
            "in": "query",
            "name": "sendEmail",
            "schema": {
              "default": false,
              "example": false,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/sendEmail_sendEmail.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "This operation lists the users who have access on an account. The account is determined by the tokens in your API client. You can pass a `groupId` to filter users based on group. You can also return user information such as what product notifications they subscribe to, or what group and role assignments they have. Set  the `actions` parameter to `true` to return the actions you can take on each user.",
        "operationId": "get-ui-identities",
        "summary": "List users",
        "tags": [
          "Users"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-ui-identities"
        },
        "responses": {
          "200": {
            "description": "The response provides the users on the account.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Encapsulates information about each user.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Encapsulates information about each user.",
                    "type": "object",
                    "required": [
                      "uiIdentityId",
                      "firstName",
                      "lastName",
                      "uiUserName",
                      "email",
                      "accountId",
                      "lastLoginDate",
                      "additionalAuthentication",
                      "additionalAuthenticationConfigured",
                      "isLocked"
                    ],
                    "properties": {
                      "accountId": {
                        "description": "The user's account id.",
                        "type": "string"
                      },
                      "actions": {
                        "additionalProperties": false,
                        "description": "Encapsulates permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter, which applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-user-admin/reference/put-user-profile-tfa) operation.",
                        "type": "object",
                        "required": [
                          "delete",
                          "edit",
                          "resetPassword",
                          "isCloneable",
                          "thirdPartyAccess",
                          "apiClient",
                          "editProfile",
                          "canEditTFA"
                        ],
                        "properties": {
                          "delete": {
                            "description": "Whether the user is deletable.",
                            "type": "boolean"
                          },
                          "apiClient": {
                            "description": "Allows the admin to create an API client.",
                            "type": "boolean"
                          },
                          "canEditMFA": {
                            "description": "With a `true` value, the user can turn their MFA setting on or off.",
                            "type": "boolean"
                          },
                          "canEditNone": {
                            "description": "With a `true` value, the user can turn their None setting on or off.",
                            "type": "boolean"
                          },
                          "canEditTFA": {
                            "description": "With a `true` value, the user can turn their TFA setting on or off.",
                            "type": "boolean"
                          },
                          "edit": {
                            "description": "Whether the user is editable.",
                            "type": "boolean"
                          },
                          "editProfile": {
                            "description": "With a `true` value, the user can edit their user profile.",
                            "type": "boolean"
                          },
                          "isCloneable": {
                            "description": "With a `true` value, an admin can create a new user with the same permissions as this user.",
                            "type": "boolean"
                          },
                          "resetPassword": {
                            "description": "Allows an admin to send a user a password by email or see a one-time token.",
                            "type": "boolean"
                          },
                          "thirdPartyAccess": {
                            "description": "Allows the admin to manage extended access.",
                            "type": "boolean"
                          }
                        }
                      },
                      "additionalAuthentication": {
                        "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.",
                        "type": "string",
                        "enum": [
                          "TFA",
                          "MFA",
                          "NONE"
                        ]
                      },
                      "additionalAuthenticationConfigured": {
                        "description": "Whether the user has multi-factor authentication configured",
                        "type": "boolean"
                      },
                      "authGrants": {
                        "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.",
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.",
                          "type": "object",
                          "required": [
                            "groupId",
                            "roleId",
                            "groupName",
                            "roleName",
                            "roleDescription",
                            "isBlocked",
                            "subGroups"
                          ],
                          "properties": {
                            "groupId": {
                              "description": "Unique identifier for the group.",
                              "minimum": 0,
                              "readOnly": true,
                              "type": "integer"
                            },
                            "groupName": {
                              "description": "Descriptive label for the group.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "isBlocked": {
                              "description": "Indicates whether the user can access the group.",
                              "type": "boolean"
                            },
                            "roleDescription": {
                              "description": "Descriptive text for the role to convey its use.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "roleId": {
                              "description": "Unique identifier for the role.",
                              "minimum": 0,
                              "readOnly": true,
                              "type": "integer"
                            },
                            "roleName": {
                              "description": "Descriptive label for the role.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "subGroups": {
                              "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "description": "A further-nested group.",
                                "type": "object",
                                "x-akamai": {
                                  "file-path": "schemas/groups-nested.yaml"
                                }
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/AuthGrantResponse.yaml"
                          }
                        }
                      },
                      "email": {
                        "description": "The user's email address.",
                        "type": "string"
                      },
                      "firstName": {
                        "description": "The user's first name.",
                        "type": "string"
                      },
                      "isLocked": {
                        "description": "The user's lock status.",
                        "type": "boolean"
                      },
                      "lastLoginDate": {
                        "description": "ISO 8601 timestamp indicating when the user last logged in.",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      },
                      "lastName": {
                        "description": "The user's surname.",
                        "type": "string"
                      },
                      "uiIdentityId": {
                        "description": "A unique identifier for a user's profile, which corresponds to a user's actual profile or client ID.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "uiUserName": {
                        "description": "A user's `loginId`. Typically, a user's email address.",
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/UiIdentitiesResponse.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfUserResponse.yaml"
                  }
                },
                "example": [
                  {
                    "accountId": "A-CCT9012",
                    "additionalAuthentication": "TFA",
                    "additionalAuthenticationConfigured": false,
                    "email": "john-doe@example.com",
                    "firstName": "John",
                    "isLocked": false,
                    "lastLoginDate": "2016-01-13T17:53:57Z",
                    "lastName": "Doe",
                    "uiIdentityId": "A-B-123456",
                    "uiUserName": "johndoe",
                    "actions": {
                      "delete": true,
                      "apiClient": true,
                      "canEditMFA": false,
                      "canEditNone": false,
                      "canEditTFA": false,
                      "edit": true,
                      "editProfile": true,
                      "isCloneable": true,
                      "resetPassword": true,
                      "thirdPartyAccess": true
                    },
                    "authGrants": [
                      {
                        "groupId": 12345,
                        "groupName": "mygroup",
                        "isBlocked": false,
                        "roleDescription": "A newly created role.",
                        "roleId": 12,
                        "roleName": "admin"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Unique identifier for a group. It filters down results to properties in the specified group.",
            "example": "{{groupId}}",
            "in": "query",
            "name": "groupId",
            "required": false,
            "schema": {
              "example": 19807,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/rolesFilterParamsGroup_groupId.yaml"
            }
          },
          {
            "description": "When enabled, include the list of your group and role assignments.",
            "example": "{{authGrants}}",
            "in": "query",
            "name": "authGrants",
            "required": false,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/authGrants-query.yaml"
            }
          },
          {
            "description": "When enabled, the response includes actions such as `edit` or `delete` that a user can perform on an object. Don't confuse this with the `action` parameter, which applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-user-admin/reference/put-user-profile-tfa) operation.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "required": false,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/adminActions_actions.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-admin/ui-identities/{uiIdentityId}": {
      "get": {
        "description": "This operation retrieves a user's profile.",
        "operationId": "get-ui-identity",
        "summary": "Get a user",
        "tags": [
          "Users"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-ui-identity"
        },
        "responses": {
          "200": {
            "description": "The response provides the user's profile.",
            "content": {
              "application/json": {
                "example": {
                  "accountId": "A-CCT1234",
                  "additionalAuthentication": "TFA",
                  "address": "First Street",
                  "city": "Santa Clara",
                  "contactType": "Billing",
                  "country": "USA",
                  "email": "john-doe@example.com",
                  "firstName": "John",
                  "isLocked": false,
                  "jobTitle": "engineer",
                  "lastLoginDate": "2016-01-13T17:53:57Z",
                  "lastName": "Doe",
                  "mobilePhone": "3456789999",
                  "passwordExpiryDate": "2018-01-13T17:53:57Z",
                  "phone": "3456788765",
                  "preferredLanguage": "English",
                  "secondaryEmail": "john_doe@example.com",
                  "sessionTimeOut": 14400,
                  "state": "CA",
                  "timeZone": "GMT",
                  "uiIdentityId": "A-B-123456",
                  "uiUserName": "johndoe",
                  "zipCode": "34567",
                  "actions": {
                    "delete": true,
                    "apiClient": true,
                    "edit": true,
                    "isCloneable": true,
                    "resetPassword": true,
                    "thirdPartyAccess": true
                  },
                  "notifications": {
                    "enableEmailNotifications": true,
                    "options": {
                      "newUserNotification": true,
                      "passwordExpiry": true,
                      "proactive": [
                        "EdgeScape",
                        "EdgeSuite (HTTP Content Delivery)"
                      ],
                      "upgrade": [
                        "NetStorage",
                        "Other Upgrade Notifications (Planned)"
                      ]
                    }
                  },
                  "authGrants": [
                    {
                      "groupId": 12345,
                      "groupName": "mygroup",
                      "isBlocked": false,
                      "roleDescription": "A newly created role.",
                      "roleId": 12,
                      "roleName": "admin"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information about each user.",
                  "type": "object",
                  "required": [
                    "uiIdentityId",
                    "firstName",
                    "lastName",
                    "email",
                    "additionalAuthentication",
                    "country",
                    "phone",
                    "address",
                    "timeZone"
                  ],
                  "properties": {
                    "accountId": {
                      "description": "Account Id",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Encapsulates permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-user-admin/reference/put-user-profile-tfa) operation.",
                      "type": "object",
                      "required": [
                        "delete",
                        "edit",
                        "resetPassword",
                        "isCloneable",
                        "thirdPartyAccess",
                        "apiClient"
                      ],
                      "properties": {
                        "delete": {
                          "description": "Indicates whether the user is deletable.",
                          "type": "boolean"
                        },
                        "apiClient": {
                          "description": "Allows the administrator to create an API client.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Indicates whether the user is editable.",
                          "type": "boolean"
                        },
                        "isCloneable": {
                          "description": "If `true` an administrator can create a new user with the same permissions as this user.",
                          "type": "boolean"
                        },
                        "resetPassword": {
                          "description": "Allows an administrator to send a user a password by email or see a one-time token.",
                          "type": "boolean"
                        },
                        "thirdPartyAccess": {
                          "description": "Allows the administrator to manage extended access.",
                          "type": "boolean"
                        }
                      }
                    },
                    "additionalAuthentication": {
                      "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`. When `NONE` is selected, there's no additional authentication.",
                      "type": "string",
                      "enum": [
                        "TFA",
                        "MFA",
                        "NONE"
                      ]
                    },
                    "address": {
                      "description": "The user's street address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "authGrants": {
                      "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.",
                        "type": "object",
                        "required": [
                          "groupId",
                          "roleId",
                          "groupName",
                          "roleName",
                          "roleDescription",
                          "isBlocked",
                          "subGroups"
                        ],
                        "properties": {
                          "groupId": {
                            "description": "Unique identifier for the group.",
                            "minimum": 0,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "groupName": {
                            "description": "Descriptive label for the group.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "isBlocked": {
                            "description": "Indicates whether the user can access the group.",
                            "type": "boolean"
                          },
                          "roleDescription": {
                            "description": "Descriptive text for the role to convey its use.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "roleId": {
                            "description": "Unique identifier for the role.",
                            "minimum": 0,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "roleName": {
                            "description": "Descriptive label for the role.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "subGroups": {
                            "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "description": "A further-nested group.",
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/groups-nested.yaml"
                              }
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/AuthGrantResponse.yaml"
                        }
                      }
                    },
                    "city": {
                      "description": "The user's city.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "contactType": {
                      "description": "To help characterize the user, the value can be any that are available from the [View contact types](https://techdocs.akamai.com/iam-user-admin/reference/get-common-contact-types) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "country": {
                      "description": "As part of the user's location, the value can be any that are available from the [View supported countries](https://techdocs.akamai.com/iam-user-admin/reference/get-common-countries) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "email": {
                      "description": "The user's email address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "firstName": {
                      "description": "The user's first name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "isLocked": {
                      "description": "The user's lock status.",
                      "type": "boolean"
                    },
                    "jobTitle": {
                      "description": "The user's position at your company.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "lastLoginDate": {
                      "description": "ISO 8601 timestamp indicating when the user last logged in.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "lastName": {
                      "description": "The user's surname.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mobilePhone": {
                      "description": "The user's mobile phone number, represented as a ten-digit integer within a string.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "notifications": {
                      "additionalProperties": false,
                      "description": "The notification emails the user receives for products.",
                      "type": "object",
                      "required": [
                        "options",
                        "enableEmailNotifications"
                      ],
                      "properties": {
                        "options": {
                          "additionalProperties": false,
                          "description": "The types of notification emails the user receives.",
                          "type": "object",
                          "required": [
                            "upgrade",
                            "proactive",
                            "passwordExpiry",
                            "newUserNotification"
                          ],
                          "properties": {
                            "newUserNotification": {
                              "description": "Send emails to group administrators when creating new users.",
                              "type": "boolean"
                            },
                            "passwordExpiry": {
                              "description": "Send emails regarding password expiration.",
                              "type": "boolean"
                            },
                            "proactive": {
                              "description": "Lists products for which the user receives notification emails about service issues.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "upgrade": {
                              "description": "Lists products for which the user receives notification emails about upgrades.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "enableEmailNotifications": {
                          "description": "Enables email notifications. When set to `true`, sends email notifications for new user creation, API client credential and password expiration, and general product information.",
                          "type": "boolean"
                        }
                      }
                    },
                    "passwordExpiryDate": {
                      "description": "The date a user's password expires.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "phone": {
                      "description": "The user's main phone number, represented as a ten-digit integer within a string.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "preferredLanguage": {
                      "description": "The value can be any that are available from the [View languages](https://techdocs.akamai.com/iam-user-admin/reference/get-common-languages) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "secondaryEmail": {
                      "description": "The user's secondary email address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "sessionTimeOut": {
                      "description": "The number of seconds it takes for the user's Control Center session to time out after no activity. This corresponds to the `value` output of the [View timeout policies](https://techdocs.akamai.com/iam-user-admin/reference/get-common-timeout-policies) operation.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "state": {
                      "description": "The user's state.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "timeZone": {
                      "description": "The user's time zone. The value can be any that are available from the [View time zones](https://techdocs.akamai.com/iam-user-admin/reference/get-common-timezones) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uiIdentityId": {
                      "description": "A unique identifier for a user's profile, which corresponds to a user's actual profile or client ID.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "uiUserName": {
                      "description": "A user's `loginId`. Typically, a user's email address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "zipCode": {
                      "description": "The user's five-digit postal code, represented as a string.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/UserResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "When enabled, include the list of your group and role assignments.",
            "example": "{{authGrants}}",
            "in": "query",
            "name": "authGrants",
            "required": false,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/authGrants-query.yaml"
            }
          },
          {
            "description": "When enabled, include which product notifications you subscribe to.",
            "example": "{{notifications}}",
            "in": "query",
            "name": "notifications",
            "required": true,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/notifications-query.yaml"
            }
          },
          {
            "description": "When enabled, the response includes actions such as `edit` or `delete` that a user can perform on an object. Don't confuse this with the `action` parameter, which applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-user-admin/reference/put-user-profile-tfa) operation.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "required": false,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/adminActions_actions.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "This operation deletes any user who doesn't own an API client. Before you delete a user with a client, [transfer API client ownership](https://techdocs.akamai.com/iam/docs/transfer-api-client-ownership) to another user.",
        "operationId": "delete-ui-identity",
        "summary": "Remove a user",
        "tags": [
          "Users"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/delete-ui-identity"
        },
        "responses": {
          "204": {
            "description": "User successfully deleted.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for a user.",
          "example": "{{uiIdentityId}}",
          "in": "path",
          "name": "uiIdentityId",
          "required": true,
          "schema": {
            "example": "1-ABCDE",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/uiIdentityId-path.yaml"
          }
        }
      ]
    },
    "/user-admin/ui-identities/{uiIdentityId}/additionalAuthentication": {
      "put": {
        "description": "This operation sets a user's multi-factor authentication (TFA/MFA/NONE). Users are allowed five login attempts with MFA or 2FA before their account is locked. If the account is locked, use the [Reset additional authentication](https://techdocs.akamai.com/iam-user-admin/reference/put-ui-identity-reset-additional-authentication) to unlock it.",
        "operationId": "put-ui-identity-additional-authentication",
        "summary": "Set a user's multi-factor authentication",
        "tags": [
          "User access"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/put-ui-identity-additional-authentication"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "value": "TFA"
              },
              "schema": {
                "additionalProperties": false,
                "type": "object",
                "required": [
                  "value"
                ],
                "properties": {
                  "value": {
                    "description": "A user's multi-factor authentication method, either `TFA`, `MFA`, or `NONE`.",
                    "example": "{{value}}",
                    "type": "string",
                    "enum": [
                      "TFA",
                      "MFA",
                      "NONE"
                    ]
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/AdditionalAuthenticationRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "MFA/2FA successfully set.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for a user.",
          "example": "{{uiIdentityId}}",
          "in": "path",
          "name": "uiIdentityId",
          "required": true,
          "schema": {
            "example": "1-ABCDE",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/uiIdentityId-path.yaml"
          }
        }
      ]
    },
    "/user-admin/ui-identities/{uiIdentityId}/additionalAuthentication/reset": {
      "put": {
        "description": "This operation prompts the reset of a user's multi-factor authentication method the next time they log in to Control Center. `TFA` indicates two-factor authentication. `MFA` indicates Akamai MFA authentication. ",
        "operationId": "put-ui-identity-reset-additional-authentication",
        "summary": "Reset a user's multi-factor authentication",
        "tags": [
          "User access"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/put-ui-identity-reset-additional-authentication"
        },
        "responses": {
          "204": {
            "description": "MFA/2FA successfully reset.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for a user.",
          "example": "{{uiIdentityId}}",
          "in": "path",
          "name": "uiIdentityId",
          "required": true,
          "schema": {
            "example": "1-ABCDE",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/uiIdentityId-path.yaml"
          }
        }
      ]
    },
    "/user-admin/ui-identities/{uiIdentityId}/auth-grants": {
      "put": {
        "description": "This operation edits what groups a user has access to, and how the user interacts with the objects in those groups.",
        "operationId": "put-ui-uiidentity-auth-grants",
        "summary": "Modify a user's group and role assignments",
        "tags": [
          "User authorization settings"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/put-ui-uiidentity-auth-grants"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "isBlocked",
                    "roleId",
                    "groupId",
                    "groupName",
                    "roleName",
                    "roleDescription",
                    "subGroups"
                  ],
                  "properties": {
                    "groupId": {
                      "description": "Unique identifier for the group.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "groupName": {
                      "description": "Descriptive label for the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "isBlocked": {
                      "description": "Indicates whether the user can access the group.",
                      "type": "boolean"
                    },
                    "roleDescription": {
                      "description": "Descriptive text for the role to convey its use.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "roleId": {
                      "description": "Unique identifier for the role.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "roleName": {
                      "description": "Descriptive label for the role.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "subGroups": {
                      "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "groupId": {
                            "description": "Unique identifier for each group.",
                            "type": "integer"
                          },
                          "groupName": {
                            "description": "Group name.",
                            "type": "string"
                          },
                          "isBlocked": {
                            "description": "Indicates whether a user's access to a group is blocked.",
                            "type": "boolean"
                          },
                          "roleId": {
                            "description": "Unique identifier for each role.",
                            "type": "integer"
                          },
                          "subGroups": {
                            "description": "Array of nested groups.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "groupId": {
                                  "description": "Unique identifier for each group.",
                                  "type": "integer"
                                },
                                "groupName": {
                                  "description": "Group name.",
                                  "type": "string"
                                },
                                "isBlocked": {
                                  "description": "Indicates whether a user's access to a group is blocked.",
                                  "type": "boolean"
                                },
                                "roleId": {
                                  "description": "Unique identifier for each role.",
                                  "type": "integer"
                                },
                                "subGroups": {
                                  "description": "Array of nested groups.",
                                  "type": "array",
                                  "items": {
                                    "description": "A further nested authorization grant.",
                                    "type": "object",
                                    "x-akamai": {
                                      "file-path": "schemas/AuthGrantRequest-nested.yaml"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/AuthGrantRequest.yaml"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/ListOfAuthGrantRequest.yaml"
                }
              },
              "example": [
                {
                  "groupId": 12345,
                  "roleId": 16,
                  "subGroups": [
                    {
                      "groupId": 54321,
                      "roleId": 2222,
                      "subGroups": []
                    }
                  ]
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response reflects the user's modified group.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.",
                    "type": "object",
                    "required": [
                      "groupId",
                      "roleId",
                      "groupName",
                      "roleName",
                      "roleDescription",
                      "isBlocked",
                      "subGroups"
                    ],
                    "properties": {
                      "groupId": {
                        "description": "Unique identifier for the group.",
                        "minimum": 0,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "groupName": {
                        "description": "Descriptive label for the group.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "isBlocked": {
                        "description": "Indicates whether the user can access the group.",
                        "type": "boolean"
                      },
                      "roleDescription": {
                        "description": "Descriptive text for the role to convey its use.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "roleId": {
                        "description": "Unique identifier for the role.",
                        "minimum": 0,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "roleName": {
                        "description": "Descriptive label for the role.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "subGroups": {
                        "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "description": "A further-nested group.",
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/groups-nested.yaml"
                          }
                        }
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/AuthGrantResponse.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfAuthGrantResponse.yaml"
                  }
                },
                "example": [
                  {
                    "groupId": 12345,
                    "groupName": "Company",
                    "isBlocked": false,
                    "roleDescription": "A newly created role.",
                    "roleId": 16,
                    "roleName": "Publisher",
                    "subGroups": [
                      {
                        "groupId": 11111,
                        "groupName": "Sub Group",
                        "isBlocked": false,
                        "roleDescription": "",
                        "roleId": null,
                        "roleName": "",
                        "subGroups": []
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for a user.",
          "example": "{{uiIdentityId}}",
          "in": "path",
          "name": "uiIdentityId",
          "required": true,
          "schema": {
            "example": "1-ABCDE",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/uiIdentityId-path.yaml"
          }
        }
      ]
    },
    "/user-admin/ui-identities/{uiIdentityId}/basic-info": {
      "put": {
        "description": "This operation modifies a user's information. Pass the entire body of data in the request, including members you're not changing, or the unspecified data are removed.",
        "operationId": "put-ui-identity-basic-info",
        "summary": "Update a user",
        "tags": [
          "Users"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/put-ui-identity-basic-info"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "additionalAuthentication": "TFA",
                "address": "first Street",
                "city": "Santa Clara",
                "contactType": "Billing",
                "country": "USA",
                "firstName": "John",
                "jobTitle": "Engineer",
                "lastName": "Doe",
                "mobilePhone": "3456787657",
                "phone": "3456788765",
                "preferredLanguage": "English",
                "secondaryEmail": "john-doe@example.com",
                "sessionTimeOut": 30,
                "state": "CA",
                "timeZone": "GMT",
                "zipCode": "34567"
              },
              "schema": {
                "additionalProperties": false,
                "type": "object",
                "required": [
                  "firstName",
                  "lastName",
                  "phone",
                  "country",
                  "preferredLanguage",
                  "sessionTimeOut",
                  "contactType"
                ],
                "properties": {
                  "additionalAuthentication": {
                    "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`. When `NONE` is selected, there's no additional authentication.",
                    "example": "{{additionalAuthentication}}",
                    "type": "string",
                    "enum": [
                      "TFA",
                      "MFA",
                      "NONE"
                    ]
                  },
                  "address": {
                    "description": "The user's street address.",
                    "example": "{{address}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "city": {
                    "description": "The city where the user is located.",
                    "example": "{{city}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "contactType": {
                    "description": "Helps characterize the user. For values, see the [View contact types](https://techdocs.akamai.com/iam-user-admin/reference/get-common-contact-types) operation.",
                    "example": "{{contactType}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "country": {
                    "description": "Part of the user's location. For values, see the [View supported countries](https://techdocs.akamai.com/iam-user-admin/reference/get-common-countries) operation.",
                    "example": "{{country}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "email": {
                    "description": "The user's email address.",
                    "example": "{{email}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "firstName": {
                    "description": "The user's first name.",
                    "example": "{{firstName}}",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  },
                  "jobTitle": {
                    "description": "The user's position at the company.",
                    "example": "{{jobTitle}}",
                    "maxLength": 75,
                    "minLength": 1,
                    "type": "string"
                  },
                  "lastName": {
                    "description": "The user's surname.",
                    "example": "{{lastName}}",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  },
                  "mobilePhone": {
                    "description": "The user's mobile phone number, represented as a ten-digit integer within a string.",
                    "example": "{{mobilePhone}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "phone": {
                    "description": "The user's main phone number, represented as a ten-digit integer within a string.",
                    "example": "{{phone}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "preferredLanguage": {
                    "description": "The user's language. For values, see the [View languages](https://techdocs.akamai.com/iam-user-admin/reference/get-common-languages) operation.",
                    "example": "{{preferredLanguage}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "secondaryEmail": {
                    "description": "The user's alternate email address.",
                    "example": "{{secondaryEmail}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "sessionTimeOut": {
                    "description": "The number of seconds it takes for the user's Control Center session to time out after no activity. This corresponds to the `value` output of the [View timeout policies](https://techdocs.akamai.com/iam-user-admin/reference/get-common-timeout-policies) operation.",
                    "example": "{{sessionTimeOut}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "state": {
                    "description": "The user's state if `country=USA`, or the user's province if `country=Canada`. For all other countries, this field is optional.",
                    "example": "{{state}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "timeZone": {
                    "description": "The user's time zone. For values, see the [View time zones](https://techdocs.akamai.com/iam-user-admin/reference/get-common-timezones) operation.",
                    "example": "{{timeZone}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "zipCode": {
                    "description": "The user's five-digit postal code, represented as a string.",
                    "example": "{{zipCode}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/UpdateUserBasicInfoRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response reflects the user's modified information.",
            "content": {
              "application/json": {
                "example": {
                  "additionalAuthentication": "TFA",
                  "address": "first Street",
                  "city": "Santa Clara",
                  "contactType": "Billing",
                  "country": "USA",
                  "email": "john-doe@example.com",
                  "firstName": "John",
                  "isLocked": false,
                  "jobTitle": "Engineer",
                  "lastLoginDate": "2016-04-12T20:54:24.000Z",
                  "lastName": "Doe",
                  "mobilePhone": "3456787657",
                  "passwordExpiryDate": "2023-04-12T20:54:24.000Z",
                  "phone": "3456788765",
                  "preferredLanguage": "English",
                  "secondaryEmail": "john-doe@example.com",
                  "sessionTimeOut": 30,
                  "state": "CA",
                  "timeZone": "GMT",
                  "uiIdentityId": "1-ABCDE",
                  "uiUserName": "ddetest",
                  "zipCode": "34567"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information about each user.",
                  "type": "object",
                  "required": [
                    "uiIdentityId",
                    "firstName",
                    "lastName",
                    "email",
                    "additionalAuthentication",
                    "country",
                    "phone"
                  ],
                  "properties": {
                    "additionalAuthentication": {
                      "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`. When `NONE` is selected, there's no additional authentication.",
                      "type": "string",
                      "enum": [
                        "TFA",
                        "MFA",
                        "NONE"
                      ]
                    },
                    "address": {
                      "description": "The user's street address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "city": {
                      "description": "The city where the user is located.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "contactType": {
                      "description": "Helps characterize the user. For values, see the [View contact types](https://techdocs.akamai.com/iam-user-admin/reference/get-common-contact-types) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "country": {
                      "description": "Part of the user's location. For values, see the [View supported countries](https://techdocs.akamai.com/iam-user-admin/reference/get-common-countries) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "email": {
                      "description": "The user's email address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "firstName": {
                      "description": "The user's first name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "isLocked": {
                      "description": "Restricts the user's login access to Control Center. ",
                      "type": "boolean"
                    },
                    "jobTitle": {
                      "description": "The user's position at your company.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "lastLoginDate": {
                      "description": "ISO 8601 timestamp indicating when the user last logged in.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "lastName": {
                      "description": "The user's surname.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mobilePhone": {
                      "description": "The user's mobile phone number, represented as a ten-digit integer within a string.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "passwordExpiryDate": {
                      "description": "The date a user's password expires.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "phone": {
                      "description": "The user's main phone number, represented as a ten-digit integer within a string.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "preferredLanguage": {
                      "description": "The user's language. For values, see the [View languages](https://techdocs.akamai.com/iam-user-admin/reference/get-common-languages) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "secondaryEmail": {
                      "description": "The user's alternate email address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "sessionTimeOut": {
                      "description": "The number of seconds it takes for the user's Control Center session to time out after no activity. This corresponds to the `value` output of the [View timeout policies](https://techdocs.akamai.com/iam-user-admin/reference/get-common-timeout-policies) operation.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "state": {
                      "description": "The user's state if `country=USA`, or the user's province if `country=Canada`. For all other countries, this field is optional.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "timeZone": {
                      "description": "The user's time zone. For values, see the [View time zones](https://techdocs.akamai.com/iam-user-admin/reference/get-common-timezones) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uiIdentityId": {
                      "description": "Unique identifier for a user's profile, which corresponds to their Control Center profile or client ID.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "uiUserName": {
                      "description": "A user's `loginId`. Typically, a user's email address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "zipCode": {
                      "description": "The user's five-digit postal code, represented as a string.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/UserResponseBasicInfo.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for a user.",
          "example": "{{uiIdentityId}}",
          "in": "path",
          "name": "uiIdentityId",
          "required": true,
          "schema": {
            "example": "1-ABCDE",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/uiIdentityId-path.yaml"
          }
        }
      ]
    },
    "/user-admin/ui-identities/{uiIdentityId}/groups/{groupId}/blocked-properties": {
      "get": {
        "description": "This operation lists all properties a user doesn't have access to in a group.",
        "operationId": "get-blocked-properties",
        "summary": "List blocked properties",
        "tags": [
          "Blocked properties"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-blocked-properties"
        },
        "responses": {
          "200": {
            "description": "The response provides the blocked properties.",
            "content": {
              "application/json": {
                "example": [
                  11111111,
                  22222222
                ],
                "schema": {
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfInteger.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "This operation removes or grants user access to properties. By default, users have access to all properties in a group.",
        "operationId": "put-blocked-properties",
        "summary": "Update blocked properties",
        "tags": [
          "Blocked properties"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/put-blocked-properties"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": [
                11111111,
                22222222
              ],
              "schema": {
                "minItems": 0,
                "type": "array",
                "items": {
                  "minimum": 0,
                  "type": "integer"
                },
                "x-akamai": {
                  "file-path": "schemas/ListOfInteger.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response provides the unblocked properties.",
            "content": {
              "application/json": {
                "example": [
                  11111111,
                  22222222
                ],
                "schema": {
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfInteger.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for a group.",
          "example": "{{groupId}}",
          "in": "path",
          "name": "groupId",
          "required": true,
          "schema": {
            "example": 19807,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/groupId-path.yaml"
          }
        },
        {
          "description": "A unique identifier for a user.",
          "example": "{{uiIdentityId}}",
          "in": "path",
          "name": "uiIdentityId",
          "required": true,
          "schema": {
            "example": "1-ABCDE",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/uiIdentityId-path.yaml"
          }
        }
      ]
    },
    "/user-admin/ui-identities/{uiIdentityId}/lock": {
      "post": {
        "description": "This operation locks a user's account, preventing access to Control Center. The result shows in the user data as a read-only `isLocked`: `true` indicator. To allow a user access to Control Center, run the [Unlock a user's account](https://techdocs.akamai.com/iam-user-admin/reference/post-ui-identity-unlock) operation. This sets the `isLocked` indicator to `false`. ",
        "operationId": "post-ui-identity-lock",
        "summary": "Lock a user's account",
        "tags": [
          "User authentication settings"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/post-ui-identity-lock"
        },
        "responses": {
          "204": {
            "description": "User account successfully locked.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for a user.",
          "example": "{{uiIdentityId}}",
          "in": "path",
          "name": "uiIdentityId",
          "required": true,
          "schema": {
            "example": "1-ABCDE",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/uiIdentityId-path.yaml"
          }
        }
      ]
    },
    "/user-admin/ui-identities/{uiIdentityId}/notifications": {
      "put": {
        "description": "This operation subscribes or unsubscribes users to product notification emails. ",
        "operationId": "put-notifications",
        "summary": "Update a user's notifications",
        "tags": [
          "User notifications"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/put-notifications"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "enableEmailNotifications": true,
                "options": {
                  "newUserNotification": true,
                  "passwordExpiry": true,
                  "proactive": [
                    "EdgeScape",
                    "EdgeSuite (HTTP Content Delivery)"
                  ],
                  "upgrade": [
                    "NetStorage",
                    "Other Upgrade Notifications (Planned)"
                  ]
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Encapsulates the types of email notifications you can receive.",
                "properties": {
                  "options": {
                    "additionalProperties": false,
                    "description": "Specific notification types users can subscribe to.",
                    "type": "object",
                    "required": [
                      "newUserNotification",
                      "passwordExpiry",
                      "proactive",
                      "upgrade"
                    ],
                    "properties": {
                      "newUserNotification": {
                        "description": "With a `true` value, group admins receieve an email. This notification informs the admin a new user was created and granted access to their group.",
                        "type": "boolean"
                      },
                      "passwordExpiry": {
                        "description": "Send emails regarding password expiration.",
                        "type": "boolean"
                      },
                      "proactive": {
                        "description": "A list of products subscribed to for proactive notification emails.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "upgrade": {
                        "description": "A list of products subscribed to for upgrade notification emails.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "enableEmailNotifications": {
                    "description": "Send email notifications based on what you specify in the `options` object. With a `false` value, suspend email notifications.",
                    "type": "boolean"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/NotificationsRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response reflects the user's email notification status.",
            "content": {
              "application/json": {
                "example": {
                  "enableEmailNotifications": true,
                  "options": {
                    "newUserNotification": true,
                    "passwordExpiry": true,
                    "proactive": [
                      "EdgeScape",
                      "EdgeSuite (HTTP Content Delivery)"
                    ],
                    "upgrade": [
                      "NetStorage",
                      "Other Upgrade Notifications (Planned)"
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates the types of email notifications you can receive.",
                  "type": "object",
                  "required": [
                    "options",
                    "enableEmailNotifications"
                  ],
                  "properties": {
                    "options": {
                      "additionalProperties": false,
                      "description": "Specific notification types users can subscribe to.",
                      "type": "object",
                      "required": [
                        "newUserNotification",
                        "passwordExpiry",
                        "proactive",
                        "upgrade"
                      ],
                      "properties": {
                        "newUserNotification": {
                          "description": "Send emails to group admins regarding new user creation.",
                          "type": "boolean"
                        },
                        "passwordExpiry": {
                          "description": "Send emails regarding password expiration.",
                          "type": "boolean"
                        },
                        "proactive": {
                          "description": "A list of products subscribed to for proactive notification emails.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "upgrade": {
                          "description": "A list of products subscribed to for upgrade notification emails.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "enableEmailNotifications": {
                      "description": "Suspend email notifications based on what you specify in the `options` object. If `true`, send email notifications.",
                      "type": "boolean"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/NotificationsResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for a user.",
          "example": "{{uiIdentityId}}",
          "in": "path",
          "name": "uiIdentityId",
          "required": true,
          "schema": {
            "example": "1-ABCDE",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/uiIdentityId-path.yaml"
          }
        }
      ]
    },
    "/user-admin/ui-identities/{uiIdentityId}/reset-password": {
      "post": {
        "description": "This operation sends a one-time use password to the user. If you send the email with the password directly to the user, the response for this operation doesn't include that password. If you don't send the password to the user through email, the password is included in the response.",
        "operationId": "post-reset-password",
        "summary": "Reset a user's password",
        "tags": [
          "User authentication settings"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/post-reset-password"
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "newPassword": "abc123"
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "newPassword"
                  ],
                  "properties": {
                    "newPassword": {
                      "description": "Your new password.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/PasswordResponse.yaml"
                  }
                }
              }
            }
          },
          "204": {
            "description": "If `sendEmail` is `false`, the 200 response provides the user's new password. Otherwise 204 indicates the user's password was successfully reset.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "When `sendEmail=true`, send a one-time password to the new user.",
            "example": "{{sendEmail}}",
            "in": "query",
            "name": "sendEmail",
            "schema": {
              "default": false,
              "example": false,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/sendEmail_sendEmail.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for a user.",
          "example": "{{uiIdentityId}}",
          "in": "path",
          "name": "uiIdentityId",
          "required": true,
          "schema": {
            "example": "1-ABCDE",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/uiIdentityId-path.yaml"
          }
        }
      ]
    },
    "/user-admin/ui-identities/{uiIdentityId}/set-password": {
      "post": {
        "description": "This operation sets a password for a user. This differs from [Reset a user's password](https://techdocs.akamai.com/iam-user-admin/reference/post-reset-password) because this password may be used more than once, and isn't randomly generated.",
        "operationId": "post-set-password",
        "summary": "Set a user's password",
        "tags": [
          "User authentication settings"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/post-set-password"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "newPassword": "abc123"
              },
              "schema": {
                "additionalProperties": false,
                "type": "object",
                "required": [
                  "newPassword"
                ],
                "properties": {
                  "newPassword": {
                    "description": "Your new password.",
                    "example": "{{newPassword}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/SetPasswordRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "If `sendEmail` is `false`, the 200 response provides the user's password. Otherwise 204 indicates the user's password was successfully set.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for a user.",
          "example": "{{uiIdentityId}}",
          "in": "path",
          "name": "uiIdentityId",
          "required": true,
          "schema": {
            "example": "1-ABCDE",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/uiIdentityId-path.yaml"
          }
        }
      ]
    },
    "/user-admin/ui-identities/{uiIdentityId}/unlock": {
      "post": {
        "description": "This operation releases the lock on a user's account, allowing access to Control Center. The result shows in the user data as a read-only `isLocked`:`false` indicator. To prevent a user access to Control Center, run the [Lock a user's account](https://techdocs.akamai.com/iam-user-admin/reference/post-ui-identity-lock) operation. This sets the `isLocked` indicator to `true`.",
        "operationId": "post-ui-identity-unlock",
        "summary": "Unlock a user's account",
        "tags": [
          "User authentication settings"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/post-ui-identity-unlock"
        },
        "responses": {
          "204": {
            "description": "Account successfully unlocked.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for a user.",
          "example": "{{uiIdentityId}}",
          "in": "path",
          "name": "uiIdentityId",
          "required": true,
          "schema": {
            "example": "1-ABCDE",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/uiIdentityId-path.yaml"
          }
        }
      ]
    },
    "/user-profile": {
      "get": {
        "description": "This operation gets your profile information. To make changes to your profile, run the [Edit your profile](https://techdocs.akamai.com/iam-user-admin/reference/put-user-profile-info) operation.",
        "operationId": "get-user-profile",
        "summary": "View your profile",
        "tags": [
          "Profile"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-user-profile"
        },
        "responses": {
          "200": {
            "description": "The response provides your profile.",
            "content": {
              "application/json": {
                "example": {
                  "additionalAuthentication": "TFA",
                  "address": "first Street",
                  "city": "Santa Clara",
                  "contactType": "Prolexic",
                  "country": "USA",
                  "email": "john-doe@example.com",
                  "firstName": "John",
                  "isLocked": false,
                  "jobTitle": "Engineer",
                  "lastLoginDate": "2016-01-13T17:53:57Z",
                  "lastName": "Doe",
                  "mobilePhone": "3456787657",
                  "passwordExpiryDate": "2018-01-13T17:53:57Z",
                  "phone": "3456788765",
                  "preferredLanguage": "English",
                  "secondaryEmail": "john-doe@example.com",
                  "sessionTimeOut": 30,
                  "state": "CA",
                  "timeZone": "GMT",
                  "uiIdentityId": "A-B-123456",
                  "uiUserName": "john-doe@example.com",
                  "zipCode": "34567",
                  "actions": {
                    "delete": true,
                    "apiClient": true,
                    "edit": true,
                    "isCloneable": false,
                    "resetPassword": true,
                    "thirdPartyAccess": true
                  },
                  "notifications": {
                    "enableEmailNotifications": true,
                    "options": {
                      "newUserNotification": true,
                      "passwordExpiry": true,
                      "proactive": [
                        "EdgeScape",
                        "EdgeSuite (HTTP Content Delivery)"
                      ],
                      "upgrade": [
                        "NetStorage",
                        "Other Upgrade Notifications (Planned)"
                      ]
                    }
                  },
                  "authGrants": [
                    {
                      "groupId": 12345,
                      "groupName": "MyGroup",
                      "roleDescription": "A newly create role.",
                      "roleId": 16,
                      "roleName": "Publisher"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information about each user.",
                  "type": "object",
                  "required": [
                    "uiIdentityId",
                    "firstName",
                    "lastName",
                    "email",
                    "additionalAuthentication",
                    "country",
                    "phone",
                    "address",
                    "timeZone"
                  ],
                  "properties": {
                    "accountId": {
                      "description": "Account Id",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Encapsulates permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-user-admin/reference/put-user-profile-tfa) operation.",
                      "type": "object",
                      "required": [
                        "delete",
                        "edit",
                        "resetPassword",
                        "isCloneable",
                        "thirdPartyAccess",
                        "apiClient"
                      ],
                      "properties": {
                        "delete": {
                          "description": "Indicates whether the user is deletable.",
                          "type": "boolean"
                        },
                        "apiClient": {
                          "description": "Allows the administrator to create an API client.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Indicates whether the user is editable.",
                          "type": "boolean"
                        },
                        "isCloneable": {
                          "description": "If `true` an administrator can create a new user with the same permissions as this user.",
                          "type": "boolean"
                        },
                        "resetPassword": {
                          "description": "Allows an administrator to send a user a password by email or see a one-time token.",
                          "type": "boolean"
                        },
                        "thirdPartyAccess": {
                          "description": "Allows the administrator to manage extended access.",
                          "type": "boolean"
                        }
                      }
                    },
                    "additionalAuthentication": {
                      "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`. When `NONE` is selected, there's no additional authentication.",
                      "type": "string",
                      "enum": [
                        "TFA",
                        "MFA",
                        "NONE"
                      ]
                    },
                    "address": {
                      "description": "The user's street address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "authGrants": {
                      "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.",
                        "type": "object",
                        "required": [
                          "groupId",
                          "roleId",
                          "groupName",
                          "roleName",
                          "roleDescription",
                          "isBlocked",
                          "subGroups"
                        ],
                        "properties": {
                          "groupId": {
                            "description": "Unique identifier for the group.",
                            "minimum": 0,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "groupName": {
                            "description": "Descriptive label for the group.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "isBlocked": {
                            "description": "Indicates whether the user can access the group.",
                            "type": "boolean"
                          },
                          "roleDescription": {
                            "description": "Descriptive text for the role to convey its use.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "roleId": {
                            "description": "Unique identifier for the role.",
                            "minimum": 0,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "roleName": {
                            "description": "Descriptive label for the role.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "subGroups": {
                            "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "description": "A further-nested group.",
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/groups-nested.yaml"
                              }
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/AuthGrantResponse.yaml"
                        }
                      }
                    },
                    "city": {
                      "description": "The user's city.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "contactType": {
                      "description": "To help characterize the user, the value can be any that are available from the [View contact types](https://techdocs.akamai.com/iam-user-admin/reference/get-common-contact-types) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "country": {
                      "description": "As part of the user's location, the value can be any that are available from the [View supported countries](https://techdocs.akamai.com/iam-user-admin/reference/get-common-countries) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "email": {
                      "description": "The user's email address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "firstName": {
                      "description": "The user's first name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "isLocked": {
                      "description": "The user's lock status.",
                      "type": "boolean"
                    },
                    "jobTitle": {
                      "description": "The user's position at your company.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "lastLoginDate": {
                      "description": "ISO 8601 timestamp indicating when the user last logged in.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "lastName": {
                      "description": "The user's surname.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mobilePhone": {
                      "description": "The user's mobile phone number, represented as a ten-digit integer within a string.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "notifications": {
                      "additionalProperties": false,
                      "description": "The notification emails the user receives for products.",
                      "type": "object",
                      "required": [
                        "options",
                        "enableEmailNotifications"
                      ],
                      "properties": {
                        "options": {
                          "additionalProperties": false,
                          "description": "The types of notification emails the user receives.",
                          "type": "object",
                          "required": [
                            "upgrade",
                            "proactive",
                            "passwordExpiry",
                            "newUserNotification"
                          ],
                          "properties": {
                            "newUserNotification": {
                              "description": "Send emails to group administrators when creating new users.",
                              "type": "boolean"
                            },
                            "passwordExpiry": {
                              "description": "Send emails regarding password expiration.",
                              "type": "boolean"
                            },
                            "proactive": {
                              "description": "Lists products for which the user receives notification emails about service issues.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "upgrade": {
                              "description": "Lists products for which the user receives notification emails about upgrades.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "enableEmailNotifications": {
                          "description": "Enables email notifications. When set to `true`, sends email notifications for new user creation, API client credential and password expiration, and general product information.",
                          "type": "boolean"
                        }
                      }
                    },
                    "passwordExpiryDate": {
                      "description": "The date a user's password expires.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "phone": {
                      "description": "The user's main phone number, represented as a ten-digit integer within a string.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "preferredLanguage": {
                      "description": "The value can be any that are available from the [View languages](https://techdocs.akamai.com/iam-user-admin/reference/get-common-languages) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "secondaryEmail": {
                      "description": "The user's secondary email address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "sessionTimeOut": {
                      "description": "The number of seconds it takes for the user's Control Center session to time out after no activity. This corresponds to the `value` output of the [View timeout policies](https://techdocs.akamai.com/iam-user-admin/reference/get-common-timeout-policies) operation.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "state": {
                      "description": "The user's state.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "timeZone": {
                      "description": "The user's time zone. The value can be any that are available from the [View time zones](https://techdocs.akamai.com/iam-user-admin/reference/get-common-timezones) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uiIdentityId": {
                      "description": "A unique identifier for a user's profile, which corresponds to a user's actual profile or client ID.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "uiUserName": {
                      "description": "A user's `loginId`. Typically, a user's email address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "zipCode": {
                      "description": "The user's five-digit postal code, represented as a string.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/UserResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "When enabled, include the list of your group and role assignments.",
            "example": "{{authGrants}}",
            "in": "query",
            "name": "authGrants",
            "required": false,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/authGrants-query.yaml"
            }
          },
          {
            "description": "When enabled, include which product notifications you subscribe to.",
            "example": "{{notifications}}",
            "in": "query",
            "name": "notifications",
            "required": true,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/notifications-query.yaml"
            }
          },
          {
            "description": "When enabled, the response includes information about actions such as `edit` or `delete` that you can take for the object. Not to be confused with the `action` parameter, which applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-user-admin/reference/put-user-profile-tfa) operation.",
            "example": "{{actions}}",
            "in": "query",
            "name": "actions",
            "required": true,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/QParamsActions_actions.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-profile/additionalAuthentication": {
      "put": {
        "description": "This operation sets multi-factor authentication (TFA/MFA/NONE). You have five login attempts with MFA or 2FA before your account is locked. If your account is locked, use the [Reset additional authentication](https://techdocs.akamai.com/iam-user-admin/reference/put-user-profile-reset-additional-authentication) to unlock it.",
        "operationId": "put-user-profile-additional-authentication",
        "summary": "Set multi-factor authentication for a user profile",
        "tags": [
          "User authentication settings"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/put-user-profile-additional-authentication"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "value": "TFA"
              },
              "schema": {
                "additionalProperties": false,
                "type": "object",
                "required": [
                  "value"
                ],
                "properties": {
                  "value": {
                    "description": "A user's multi-factor authentication method, either `TFA`, `MFA`, or `NONE`.",
                    "example": "{{value}}",
                    "type": "string",
                    "enum": [
                      "TFA",
                      "MFA",
                      "NONE"
                    ]
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/AdditionalAuthenticationRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "MFA/2FA successfully set.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-profile/additionalAuthentication/reset": {
      "put": {
        "description": "This operation resets your multi-factor authentication.",
        "operationId": "put-user-profile-reset-additional-authentication",
        "summary": "Reset multi-factor authentication for a user profile",
        "tags": [
          "User authentication settings"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/put-user-profile-reset-additional-authentication"
        },
        "responses": {
          "204": {
            "description": "MFA/2FA successfully reset.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-profile/basic-info": {
      "put": {
        "description": "This operation updates your basic profile information, such as your name or phone number. You can't update your group or role assignments with this operation.",
        "operationId": "put-user-profile-info",
        "summary": "Edit your profile",
        "tags": [
          "Profile"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/put-user-profile-info"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "additionalAuthentication": "TFA",
                "address": "first Street",
                "city": "Santa Clara",
                "contactType": "Billing",
                "country": "USA",
                "firstName": "John",
                "jobTitle": "Engineer",
                "lastName": "Doe",
                "mobilePhone": "3456787657",
                "phone": "3456788765",
                "preferredLanguage": "English",
                "secondaryEmail": "john-doe@example.com",
                "sessionTimeOut": 30,
                "state": "CA",
                "timeZone": "GMT",
                "zipCode": "34567"
              },
              "schema": {
                "additionalProperties": false,
                "type": "object",
                "required": [
                  "firstName",
                  "lastName",
                  "phone",
                  "country",
                  "preferredLanguage",
                  "sessionTimeOut",
                  "contactType"
                ],
                "properties": {
                  "additionalAuthentication": {
                    "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`. When `NONE` is selected, there's no additional authentication.",
                    "example": "{{additionalAuthentication}}",
                    "type": "string",
                    "enum": [
                      "TFA",
                      "MFA",
                      "NONE"
                    ]
                  },
                  "address": {
                    "description": "The user's street address.",
                    "example": "{{address}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "city": {
                    "description": "The city where the user is located.",
                    "example": "{{city}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "contactType": {
                    "description": "Helps characterize the user. For values, see the [View contact types](https://techdocs.akamai.com/iam-user-admin/reference/get-common-contact-types) operation.",
                    "example": "{{contactType}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "country": {
                    "description": "Part of the user's location. For values, see the [View supported countries](https://techdocs.akamai.com/iam-user-admin/reference/get-common-countries) operation.",
                    "example": "{{country}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "email": {
                    "description": "The user's email address.",
                    "example": "{{email}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "firstName": {
                    "description": "The user's first name.",
                    "example": "{{firstName}}",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  },
                  "jobTitle": {
                    "description": "The user's position at the company.",
                    "example": "{{jobTitle}}",
                    "maxLength": 75,
                    "minLength": 1,
                    "type": "string"
                  },
                  "lastName": {
                    "description": "The user's surname.",
                    "example": "{{lastName}}",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  },
                  "mobilePhone": {
                    "description": "The user's mobile phone number, represented as a ten-digit integer within a string.",
                    "example": "{{mobilePhone}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "phone": {
                    "description": "The user's main phone number, represented as a ten-digit integer within a string.",
                    "example": "{{phone}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "preferredLanguage": {
                    "description": "The user's language. For values, see the [View languages](https://techdocs.akamai.com/iam-user-admin/reference/get-common-languages) operation.",
                    "example": "{{preferredLanguage}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "secondaryEmail": {
                    "description": "The user's alternate email address.",
                    "example": "{{secondaryEmail}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "sessionTimeOut": {
                    "description": "The number of seconds it takes for the user's Control Center session to time out after no activity. This corresponds to the `value` output of the [View timeout policies](https://techdocs.akamai.com/iam-user-admin/reference/get-common-timeout-policies) operation.",
                    "example": "{{sessionTimeOut}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "state": {
                    "description": "The user's state if `country=USA`, or the user's province if `country=Canada`. For all other countries, this field is optional.",
                    "example": "{{state}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "timeZone": {
                    "description": "The user's time zone. For values, see the [View time zones](https://techdocs.akamai.com/iam-user-admin/reference/get-common-timezones) operation.",
                    "example": "{{timeZone}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "zipCode": {
                    "description": "The user's five-digit postal code, represented as a string.",
                    "example": "{{zipCode}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/UpdateUserBasicInfoRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response reflects the user's modified profile.",
            "content": {
              "application/json": {
                "example": {
                  "additionalAuthentication": "TFA",
                  "address": "first Street",
                  "city": "Santa Clara",
                  "contactType": "Billing",
                  "country": "USA",
                  "email": "john-doe@example.com",
                  "firstName": "John",
                  "isLocked": false,
                  "jobTitle": "Engineer",
                  "lastLoginDate": "2016-04-12T20:54:24.000Z",
                  "lastName": "Doe",
                  "mobilePhone": "3456787657",
                  "passwordExpiryDate": "2023-04-12T20:54:24.000Z",
                  "phone": "3456788765",
                  "preferredLanguage": "English",
                  "secondaryEmail": "john-doe@example.com",
                  "sessionTimeOut": 30,
                  "state": "CA",
                  "timeZone": "GMT",
                  "uiIdentityId": "1-ABCDE",
                  "uiUserName": "ddetest",
                  "zipCode": "34567"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information about each user.",
                  "type": "object",
                  "required": [
                    "uiIdentityId",
                    "firstName",
                    "lastName",
                    "email",
                    "additionalAuthentication",
                    "country",
                    "phone",
                    "address",
                    "timeZone"
                  ],
                  "properties": {
                    "accountId": {
                      "description": "Account Id",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Encapsulates permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](https://techdocs.akamai.com/iam-user-admin/reference/put-user-profile-tfa) operation.",
                      "type": "object",
                      "required": [
                        "delete",
                        "edit",
                        "resetPassword",
                        "isCloneable",
                        "thirdPartyAccess",
                        "apiClient"
                      ],
                      "properties": {
                        "delete": {
                          "description": "Indicates whether the user is deletable.",
                          "type": "boolean"
                        },
                        "apiClient": {
                          "description": "Allows the administrator to create an API client.",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Indicates whether the user is editable.",
                          "type": "boolean"
                        },
                        "isCloneable": {
                          "description": "If `true` an administrator can create a new user with the same permissions as this user.",
                          "type": "boolean"
                        },
                        "resetPassword": {
                          "description": "Allows an administrator to send a user a password by email or see a one-time token.",
                          "type": "boolean"
                        },
                        "thirdPartyAccess": {
                          "description": "Allows the administrator to manage extended access.",
                          "type": "boolean"
                        }
                      }
                    },
                    "additionalAuthentication": {
                      "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`. When `NONE` is selected, there's no additional authentication.",
                      "type": "string",
                      "enum": [
                        "TFA",
                        "MFA",
                        "NONE"
                      ]
                    },
                    "address": {
                      "description": "The user's street address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "authGrants": {
                      "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.",
                        "type": "object",
                        "required": [
                          "groupId",
                          "roleId",
                          "groupName",
                          "roleName",
                          "roleDescription",
                          "isBlocked",
                          "subGroups"
                        ],
                        "properties": {
                          "groupId": {
                            "description": "Unique identifier for the group.",
                            "minimum": 0,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "groupName": {
                            "description": "Descriptive label for the group.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "isBlocked": {
                            "description": "Indicates whether the user can access the group.",
                            "type": "boolean"
                          },
                          "roleDescription": {
                            "description": "Descriptive text for the role to convey its use.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "roleId": {
                            "description": "Unique identifier for the role.",
                            "minimum": 0,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "roleName": {
                            "description": "Descriptive label for the role.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "subGroups": {
                            "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "description": "A further-nested group.",
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/groups-nested.yaml"
                              }
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/AuthGrantResponse.yaml"
                        }
                      }
                    },
                    "city": {
                      "description": "The user's city.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "contactType": {
                      "description": "To help characterize the user, the value can be any that are available from the [View contact types](https://techdocs.akamai.com/iam-user-admin/reference/get-common-contact-types) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "country": {
                      "description": "As part of the user's location, the value can be any that are available from the [View supported countries](https://techdocs.akamai.com/iam-user-admin/reference/get-common-countries) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "email": {
                      "description": "The user's email address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "firstName": {
                      "description": "The user's first name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "isLocked": {
                      "description": "The user's lock status.",
                      "type": "boolean"
                    },
                    "jobTitle": {
                      "description": "The user's position at your company.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "lastLoginDate": {
                      "description": "ISO 8601 timestamp indicating when the user last logged in.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "lastName": {
                      "description": "The user's surname.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mobilePhone": {
                      "description": "The user's mobile phone number, represented as a ten-digit integer within a string.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "notifications": {
                      "additionalProperties": false,
                      "description": "The notification emails the user receives for products.",
                      "type": "object",
                      "required": [
                        "options",
                        "enableEmailNotifications"
                      ],
                      "properties": {
                        "options": {
                          "additionalProperties": false,
                          "description": "The types of notification emails the user receives.",
                          "type": "object",
                          "required": [
                            "upgrade",
                            "proactive",
                            "passwordExpiry",
                            "newUserNotification"
                          ],
                          "properties": {
                            "newUserNotification": {
                              "description": "Send emails to group administrators when creating new users.",
                              "type": "boolean"
                            },
                            "passwordExpiry": {
                              "description": "Send emails regarding password expiration.",
                              "type": "boolean"
                            },
                            "proactive": {
                              "description": "Lists products for which the user receives notification emails about service issues.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "upgrade": {
                              "description": "Lists products for which the user receives notification emails about upgrades.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "enableEmailNotifications": {
                          "description": "Enables email notifications. When set to `true`, sends email notifications for new user creation, API client credential and password expiration, and general product information.",
                          "type": "boolean"
                        }
                      }
                    },
                    "passwordExpiryDate": {
                      "description": "The date a user's password expires.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "phone": {
                      "description": "The user's main phone number, represented as a ten-digit integer within a string.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "preferredLanguage": {
                      "description": "The value can be any that are available from the [View languages](https://techdocs.akamai.com/iam-user-admin/reference/get-common-languages) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "secondaryEmail": {
                      "description": "The user's secondary email address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "sessionTimeOut": {
                      "description": "The number of seconds it takes for the user's Control Center session to time out after no activity. This corresponds to the `value` output of the [View timeout policies](https://techdocs.akamai.com/iam-user-admin/reference/get-common-timeout-policies) operation.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "state": {
                      "description": "The user's state.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "timeZone": {
                      "description": "The user's time zone. The value can be any that are available from the [View time zones](https://techdocs.akamai.com/iam-user-admin/reference/get-common-timezones) operation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uiIdentityId": {
                      "description": "A unique identifier for a user's profile, which corresponds to a user's actual profile or client ID.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "uiUserName": {
                      "description": "A user's `loginId`. Typically, a user's email address.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "zipCode": {
                      "description": "The user's five-digit postal code, represented as a string.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/UserResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-profile/change-password": {
      "post": {
        "description": "This operation changes your password. Include your old password and your new password in the request body. Before you create your new password, run the [View password policy](https://techdocs.akamai.com/iam-user-admin/reference/get-common-password-policy) operation to ensure it adheres to your policy. If you include your existing password incorrectly and make too many login attempts, your account locks.",
        "operationId": "post-profile-change-password",
        "summary": "Rotate your password",
        "tags": [
          "User authentication settings"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/post-profile-change-password"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "currentPassword": "abcbd",
                "newPassword": "abcdg"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Uses the old password to authenticate you are who you say you are when you update your password. Includes the new password.",
                "type": "object",
                "required": [
                  "currentPassword",
                  "newPassword"
                ],
                "properties": {
                  "currentPassword": {
                    "description": "Your existing password.",
                    "example": "{{currentPassword}}",
                    "type": "string"
                  },
                  "newPassword": {
                    "description": "Your new password.",
                    "example": "{{newPassword}}",
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/ChangePasswordRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Password successfully rotated.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-profile/common/contact-types": {
      "get": {
        "description": "This operation lists the supported contact types. Users should use the values from this operation to add or update their `contactType`. Administrators should run the [View contact types](https://techdocs.akamai.com/iam-user-admin/reference/get-common-contact-types) operation before modifying a user's contact type.",
        "operationId": "get-user-contact-types",
        "summary": "View contact types for a user profile",
        "tags": [
          "Contact types"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-user-contact-types"
        },
        "responses": {
          "200": {
            "description": "The response provides the supported contact types.",
            "content": {
              "application/json": {
                "example": [
                  "Billing",
                  "Technical Decision Maker",
                  "Business Decision Maker",
                  "Security"
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfString.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-profile/common/countries": {
      "get": {
        "description": "This operation lists the supported countries. Users should use the values from this operation to add or update their `country`. Administrators should run the [View supported countries](https://techdocs.akamai.com/iam-user-admin/reference/get-common-countries) operation before modifying a user's country.",
        "operationId": "get-user-countries",
        "summary": "View supported countries for a user profile",
        "tags": [
          "Locale"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-user-countries"
        },
        "responses": {
          "200": {
            "description": "The response provides the supported countries.",
            "content": {
              "application/json": {
                "example": [
                  "Lao People's Democratic Republ",
                  "Greece",
                  "Greenland",
                  "Grenada",
                  "Tanzania, United Republic of",
                  "Thailand",
                  "Togo",
                  "Tokelau",
                  "Tonga",
                  "Djibouti",
                  "Dominica",
                  "Christmas Island",
                  "Cocos (Keeling) Islands",
                  "Colombia",
                  "Comoros",
                  "Curacao"
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfString.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-profile/common/countries/{country}/states": {
      "get": {
        "description": "This operation lists the supported U.S. states or Canadian provinces. Users should use the values from this operation to add or update their `state`. Administrators should run the [View states](https://techdocs.akamai.com/iam-user-admin/reference/get-common-states) operation before modifying a user's state.",
        "operationId": "get-user-states",
        "summary": "View states for a user profile",
        "tags": [
          "Locale"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-user-states"
        },
        "responses": {
          "200": {
            "description": "The response provides the supported U.S. states or Canadian provinces.",
            "content": {
              "application/json": {
                "example": [
                  "AB",
                  "BC",
                  "PQ",
                  "NS",
                  "NT",
                  "NU",
                  "QC",
                  "YK",
                  "NB",
                  "MB",
                  "PE",
                  "TBD",
                  "NF",
                  "SK",
                  "ON"
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfString.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Can be set to any country name, but only returns lists of states and provinces for `USA` and `Canada`.",
          "example": "{{country}}",
          "in": "path",
          "name": "country",
          "required": true,
          "schema": {
            "example": "canada",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/country-path.yaml"
          }
        }
      ]
    },
    "/user-profile/common/notification-products": {
      "get": {
        "description": "This operation lists the products a user can subscribe to and receive notifications for on the account. The account is determined by the tokens in your API client. Users should use the values from this operation to set their product notifications. Administrators should run the [View products](https://techdocs.akamai.com/iam-user-admin/reference/get-common-notification-products) operation before setting a user's product notifications.",
        "operationId": "get-user-notification-products",
        "summary": "View products for a user profile",
        "tags": [
          "Products"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-user-notification-products"
        },
        "responses": {
          "200": {
            "description": "The response provides the supported products.",
            "content": {
              "application/json": {
                "example": [
                  "EdgeComputing for Java",
                  "Streaming",
                  "Enhanced DNS",
                  "Site Delivery",
                  "Secure FreeFlow (HTTPS Content Delivery using ARLs)",
                  "Log Delivery Service",
                  "Site Acceleration",
                  "Web Application Accelerator",
                  "EdgeScape",
                  "Security",
                  "NetStorage"
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfString.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-profile/common/password-policy": {
      "get": {
        "description": "This operation lists the password policy for the account. The account is determined by the tokens in your API client. Users should use the values from this operation to set their password policy.  Administrators should run the [View password policy](https://techdocs.akamai.com/iam-user-admin/reference/get-common-password-policy) operation before setting a user's password policy.",
        "operationId": "get-user-password-policy",
        "summary": "View password policy for a user profile",
        "tags": [
          "Policies"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-user-password-policy"
        },
        "responses": {
          "200": {
            "description": "The response provides the password policy.",
            "content": {
              "application/json": {
                "example": {
                  "caseDif": 0,
                  "maxRepeating": 2,
                  "minDigits": 1,
                  "minLength": 8,
                  "minLetters": 1,
                  "minNonAlpha": 0,
                  "minReuse": 4,
                  "pwclass": "aka90",
                  "rotateFrequency": 90
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates all information for a password policy.",
                  "type": "object",
                  "required": [
                    "pwclass",
                    "minLength",
                    "minLetters",
                    "minDigits",
                    "caseDif",
                    "minNonAlpha",
                    "maxRepeating",
                    "minReuse"
                  ],
                  "properties": {
                    "caseDif": {
                      "description": "The number of characters that, at minimum, need to be in a different case. For example, a value of 1 means at least one letter needs to be uppercase if the rest are lowercase.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "maxRepeating": {
                      "description": "The maximum allowed number of repeating characters.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minDigits": {
                      "description": "The minimum number of digits in a password.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minLength": {
                      "description": "The minimum length of a password.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minLetters": {
                      "description": "The minimum number of letters in a password.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minNonAlpha": {
                      "description": "The minimum number of non-alphabetic characters in a password.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minReuse": {
                      "description": "The minimum number of previous passwords to retain to prevent password reuse.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "pwclass": {
                      "description": "Unique identifier for a password policy.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "rotateFrequency": {
                      "description": "The number of days a password is valid.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/PortalPasswordClass.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-profile/common/supported-languages": {
      "get": {
        "description": "This operation lists the supported languages. Users should use the values from this operation to set their preferred language. Administrators should run the [View languages](https://techdocs.akamai.com/iam-user-admin/reference/get-common-languages) operation before setting a user's preferred language.",
        "operationId": "get-user-languages",
        "summary": "View languages for a user profile",
        "tags": [
          "Locale"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-user-languages"
        },
        "responses": {
          "200": {
            "description": "The response provides the supported languages.",
            "content": {
              "application/json": {
                "example": [
                  "Deutsch",
                  "English",
                  "Español",
                  "Español (España)",
                  "Français",
                  "Italiano",
                  "Português",
                  "中文 (简体)",
                  "中文 (繁體)",
                  "日本語",
                  "한국어"
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfString.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-profile/common/timeout-policies": {
      "get": {
        "description": "This operation lists the supported session timeout policies. The `name` for each timeout period is in minutes, and the time `value` is in seconds. Users should use the values from this operation to set their `sessionTimeout`. Administrators should run the [View timeout policies](https://techdocs.akamai.com/iam-user-admin/reference/get-common-timeout-policies) operation before setting a user's timeout policy.",
        "operationId": "get-user-timeout-policies",
        "summary": "View timeout policies for a user profile",
        "tags": [
          "Policies"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-user-timeout-policies"
        },
        "responses": {
          "200": {
            "description": "This operation lists the supported session timeout policies.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Specifies session timeout policy options that can be assigned to each user.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Specifies session timeout policy options that can be assigned to users.",
                    "type": "object",
                    "required": [
                      "name",
                      "value"
                    ],
                    "properties": {
                      "name": {
                        "description": "The unit of time in which the timeout is measured. The timeout is measured in seconds.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "value": {
                        "description": "Number of seconds until session timeout.",
                        "minimum": 0,
                        "type": "integer"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/SessionTimeoutPolicy.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfSessionTimeoutPolicy.yaml"
                  }
                },
                "example": [
                  {
                    "name": "after15Minutes",
                    "value": 900
                  },
                  {
                    "name": "after30Minutes",
                    "value": 1800
                  },
                  {
                    "name": "after45Minutes",
                    "value": 2700
                  },
                  {
                    "name": "after1Hour",
                    "value": 3600
                  },
                  {
                    "name": "after2Hours",
                    "value": 7200
                  },
                  {
                    "name": "after4Hours",
                    "value": 14400
                  },
                  {
                    "name": "after18Hours",
                    "value": 64800
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-profile/common/timezones": {
      "get": {
        "description": "This operation lists the supported time zones. Time zones are in ISO 8601 format. Users should use the values from this operation to set their `timeZone`. Administrators should run the [View time zones](https://techdocs.akamai.com/iam-user-admin/reference/get-common-timezones) operation before setting a user's time zone.",
        "operationId": "get-user-timezones",
        "summary": "View time zones for a user profile",
        "tags": [
          "Locale"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-user-timezones"
        },
        "responses": {
          "200": {
            "description": "The response provides the supported time zones.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Specifies time zones that can be assigned to each user.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Specifies time zones that can be assigned to each user.",
                    "type": "object",
                    "required": [
                      "timezone",
                      "description"
                    ],
                    "properties": {
                      "description": {
                        "description": "The description of a time zone, including the GMT +/-.",
                        "type": "string"
                      },
                      "offset": {
                        "description": "The time zone offset from GMT.",
                        "type": "string"
                      },
                      "posix": {
                        "description": "The time zone posix.",
                        "type": "string"
                      },
                      "timezone": {
                        "description": "The time zone ID.",
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/TimeZone.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/ListOfTimeZones.yaml"
                  }
                },
                "example": [
                  {
                    "description": "Asia/Rangoon GMT+6",
                    "offset": "+6",
                    "posix": "Asia/Rangoon",
                    "timezone": "Asia/Rangoon"
                  },
                  {
                    "description": "Australia/Sydney GMT+10",
                    "offset": "+10",
                    "posix": "Australia/Sydney",
                    "timezone": "Australia/Sydney"
                  },
                  {
                    "description": "Etc/GMT+3",
                    "offset": "+3",
                    "posix": "Etc/GMT-3",
                    "timezone": "Etc/GMT+3"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-profile/notifications": {
      "put": {
        "description": "This operation subscribes to notifications emails for password expiration reminders, proactive maintenance emails, and upgrade notification emails.",
        "operationId": "put-user-profile-notifications",
        "summary": "Update notifications for a user profile",
        "tags": [
          "User notifications"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/put-user-profile-notifications"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "enableEmailNotifications": true,
                "options": {
                  "newUserNotification": true,
                  "passwordExpiry": true,
                  "proactive": [
                    "EdgeScape",
                    "EdgeSuite (HTTP Content Delivery)"
                  ],
                  "upgrade": [
                    "NetStorage",
                    "Other Upgrade Notifications (Planned)"
                  ]
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Encapsulates the types of email notifications you can receive.",
                "properties": {
                  "options": {
                    "additionalProperties": false,
                    "description": "Specific notification types users can subscribe to.",
                    "type": "object",
                    "required": [
                      "newUserNotification",
                      "passwordExpiry",
                      "proactive",
                      "upgrade"
                    ],
                    "properties": {
                      "newUserNotification": {
                        "description": "With a `true` value, group admins receieve an email. This notification informs the admin a new user was created and granted access to their group.",
                        "type": "boolean"
                      },
                      "passwordExpiry": {
                        "description": "Send emails regarding password expiration.",
                        "type": "boolean"
                      },
                      "proactive": {
                        "description": "A list of products subscribed to for proactive notification emails.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "upgrade": {
                        "description": "A list of products subscribed to for upgrade notification emails.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "enableEmailNotifications": {
                    "description": "Send email notifications based on what you specify in the `options` object. With a `false` value, suspend email notifications.",
                    "type": "boolean"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/NotificationsRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response reflects the modified notifications emails.",
            "content": {
              "application/json": {
                "example": {
                  "enableEmailNotifications": true,
                  "options": {
                    "newUserNotification": true,
                    "passwordExpiry": true,
                    "proactive": [
                      "EdgeScape",
                      "EdgeSuite (HTTP Content Delivery)"
                    ],
                    "upgrade": [
                      "NetStorage",
                      "Other Upgrade Notifications (Planned)"
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates the types of email notifications you can receive.",
                  "type": "object",
                  "required": [
                    "options",
                    "enableEmailNotifications"
                  ],
                  "properties": {
                    "options": {
                      "additionalProperties": false,
                      "description": "Specific notification types users can subscribe to.",
                      "type": "object",
                      "required": [
                        "newUserNotification",
                        "passwordExpiry",
                        "proactive",
                        "upgrade"
                      ],
                      "properties": {
                        "newUserNotification": {
                          "description": "Send emails to group admins regarding new user creation.",
                          "type": "boolean"
                        },
                        "passwordExpiry": {
                          "description": "Send emails regarding password expiration.",
                          "type": "boolean"
                        },
                        "proactive": {
                          "description": "A list of products subscribed to for proactive notification emails.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "upgrade": {
                          "description": "A list of products subscribed to for upgrade notification emails.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "enableEmailNotifications": {
                      "description": "Suspend email notifications based on what you specify in the `options` object. If `true`, send email notifications.",
                      "type": "boolean"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/NotificationsResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/users": {
      "get": {
        "description": "This operation lists authorized API client users.",
        "operationId": "get-api-clients-users",
        "summary": "List authorized users",
        "tags": [
          "Helper"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-api-clients-users"
        },
        "responses": {
          "200": {
            "description": "The response provides the authorized users.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Authorized user on an account.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "email",
                      "firstName",
                      "lastName",
                      "uiIdentityId",
                      "username"
                    ],
                    "properties": {
                      "email": {
                        "description": "The user's email address.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "firstName": {
                        "description": "The user's first name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "lastName": {
                        "description": "The user's surname.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "uiIdentityId": {
                        "description": "Unique identifier for a user's profile, which corresponds to a user's actual profile or client ID.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "username": {
                        "description": "The user's Control Center sign-in name.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/AuthorizedUsers.yaml"
                  }
                },
                "example": [
                  {
                    "email": "examplev@nomail-akamai.com",
                    "firstName": "Mon",
                    "lastName": "Arch",
                    "uiIdentityId": "B-C-IYSLYL",
                    "username": "tyamada"
                  },
                  {
                    "email": "example1@nomail-akamai.com",
                    "firstName": "John",
                    "lastName": "Doe",
                    "uiIdentityId": "B-P-2SGTC09",
                    "username": "adevi"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/users/{username}/allowed-apis": {
      "get": {
        "description": "This operation lists available APIs for a user.",
        "operationId": "get-api-clients-users-allowed-apis",
        "summary": "List allowed APIs",
        "tags": [
          "Helper"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-api-clients-users-allowed-apis"
        },
        "responses": {
          "200": {
            "description": "The response provides APIs available to the user.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "APIs available to the user.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "description",
                      "accessLevels",
                      "apiId",
                      "apiName",
                      "documentationUrl",
                      "endPoint",
                      "hasAccess",
                      "serviceProviderId"
                    ],
                    "properties": {
                      "accessLevels": {
                        "description": "API access levels, either `READ-ONLY` or `READ-WRITE`.",
                        "type": "string",
                        "enum": [
                          "READ-ONLY",
                          "READ-WRITE"
                        ]
                      },
                      "apiId": {
                        "description": "Unique identifier for the API.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "apiName": {
                        "description": "Descriptive label for the API.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "description": {
                        "description": "Descriptive text about the API.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "documentationUrl": {
                        "description": "Link to more information about the API.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "endPoint": {
                        "description": "Specifies where the API can access resources.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "hasAccess": {
                        "description": "Confirms access to the API.",
                        "type": "boolean"
                      },
                      "serviceProviderId": {
                        "description": "Unique identifier for the API's service provider.",
                        "minimum": 0,
                        "type": "integer"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/AllowedApisResponse.yaml"
                  }
                },
                "example": [
                  {
                    "accessLevels": "READ-WRITE",
                    "apiId": 146,
                    "apiName": "Property Manager (PAPI)",
                    "description": "Property Manager (PAPI). PAPI requires access to edge hostnames. Edit your authorizations to add HAPI to your API client.",
                    "documentationUrl": "https://developer.akamai.com/api/luna/papi/overview.html",
                    "endPoint": "/papi",
                    "hasAccess": true,
                    "serviceProviderId": 1
                  },
                  {
                    "accessLevel": "READ-WRITE",
                    "apiId": 6312,
                    "apiName": "gtm ping data",
                    "description": "gtm ping data",
                    "documentationUrl": "https://developer.akamai.com",
                    "endPoint": "/gtm-ping"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique username for a user.",
          "example": "{{username}}",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "example": "demo",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/username-path.yaml"
          }
        },
        {
          "description": "__Enum__ Filters data by client type, either `CLIENT`, `USER_CLIENT`, or `SERVICE_ACCOUNT`. ",
          "example": "{{clientType}}",
          "in": "query",
          "name": "clientType",
          "schema": {
            "default": "CLIENT",
            "example": "CLIENT",
            "type": "string",
            "enum": [
              "CLIENT",
              "USER_CLIENT",
              "SERVICE_ACCOUNT"
            ]
          },
          "x-akamai": {
            "file-path": "parameters/clientType-query.yaml"
          }
        },
        {
          "description": "Optionally enable `allowAccountSwitch` to include them as part of the response object.",
          "example": "{{allowAccountSwitch}}",
          "in": "query",
          "name": "allowAccountSwitch",
          "schema": {
            "example": true,
            "type": "boolean"
          },
          "x-akamai": {
            "file-path": "parameters/allowAccountSwitch-query.yaml"
          }
        }
      ]
    },
    "/users/{username}/allowed-cpcodes": {
      "post": {
        "description": "This operation lists available CP codes for a user.",
        "operationId": "post-api-clients-users-allowed-cpcodes",
        "summary": "List allowed CP codes",
        "tags": [
          "Helper"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/post-api-clients-users-allowed-cpcodes"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "clientType": "CLIENT",
                "groups": [
                  {
                    "groupId": 87611,
                    "groupName": "Fala Internal-2-2EZBD",
                    "isBlocked": false,
                    "roleDescription": "CPCodeTest RolePermissions Automation",
                    "roleId": 114492,
                    "roleName": "CP Code Automation role",
                    "subGroups": []
                  },
                  {
                    "groupId": 19742,
                    "groupName": "Akamai Internal-1-IZI1J",
                    "isBlocked": false,
                    "roleDescription": "CPCodeTest RolePermissions Automation",
                    "roleId": 114492,
                    "roleName": "CP Code Automation role",
                    "subGroups": []
                  },
                  {
                    "groupId": 19717,
                    "groupName": "Akamai Internal-1-7KLGU",
                    "isBlocked": false,
                    "roleDescription": "Admin role and Authz Case Management read role for PRTLDEVOPS-50807",
                    "roleId": 142838,
                    "roleName": "Admin and Authz Case Management Read",
                    "subGroups": [
                      {
                        "groupId": 52438,
                        "groupName": "edstest",
                        "parentGroupId": 19717,
                        "subGroups": []
                      },
                      {
                        "groupId": 59530,
                        "groupName": "Huawei",
                        "parentGroupId": 19717,
                        "subGroups": []
                      }
                    ]
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "POST allowed CP codes.",
                "type": "object",
                "required": [
                  "clientType",
                  "groups"
                ],
                "properties": {
                  "clientType": {
                    "default": "CLIENT",
                    "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.",
                    "example": "{{clientType}}",
                    "type": "string",
                    "enum": [
                      "CLIENT",
                      "USER_CLIENT",
                      "SERVICE_ACCOUNT"
                    ]
                  },
                  "groups": {
                    "description": "Groups the API client can access.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "The groups an API client can access.",
                      "type": "object",
                      "properties": {
                        "groupId": {
                          "description": "The group's unique identifier.",
                          "type": "integer"
                        },
                        "groupName": {
                          "description": "The human-readable name for a group.",
                          "type": "string"
                        },
                        "isBlocked": {
                          "description": "If `true`, the API client has access to the group's parent, but can't access the child group.",
                          "type": "boolean"
                        },
                        "parentGroupId": {
                          "description": "The unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.",
                          "type": "string"
                        },
                        "roleDescription": {
                          "description": "The human-readable description for a role.",
                          "type": "string"
                        },
                        "roleId": {
                          "description": "A role's unique identifier.",
                          "type": "integer"
                        },
                        "roleName": {
                          "description": "The human-readable name for a role.",
                          "type": "string"
                        },
                        "subGroups": {
                          "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                          "type": "array",
                          "items": {
                            "description": "A further-nested group.",
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/groups-nested.yaml"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/AllowedCpcodesRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response provides CP codes available to the user.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "A schema for name value pair.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "name",
                      "value"
                    ],
                    "properties": {
                      "name": {
                        "description": "Descriptive label for the CP code.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "value": {
                        "description": "Unique identifier for the CP code.",
                        "minimum": 0,
                        "type": "integer"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/AllowedCpcodesResponse.yaml"
                  }
                },
                "example": [
                  {
                    "name": "Stream Analyzer (36915)",
                    "value": 36915
                  },
                  {
                    "name": "plopessa-uvod-ns (373118)",
                    "value": 373118
                  },
                  {
                    "name": "ArunNS (866797)",
                    "value": 866797
                  },
                  {
                    "name": "1234 (933076)",
                    "value": 933076
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique username for a user.",
          "example": "{{username}}",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "example": "demo",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/username-path.yaml"
          }
        }
      ]
    },
    "/users/{username}/group-access": {
      "get": {
        "description": "This operation lists groups available to a user.",
        "operationId": "get-api-clients-users-group-access",
        "summary": "List accessible groups",
        "tags": [
          "Helper"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Identity and Access Management API",
          "url": "https://techdocs.akamai.com/iam-user-admin/reference/get-api-clients-users-group-access"
        },
        "responses": {
          "200": {
            "description": "The response provides groups available to the user.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "list of group access",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "groupId",
                      "groupName",
                      "isBlocked",
                      "roleDescription",
                      "roleId",
                      "roleName",
                      "subGroups"
                    ],
                    "properties": {
                      "groupId": {
                        "description": "Unique identifier for the group.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "groupName": {
                        "description": "Descriptive label for the group.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "isBlocked": {
                        "description": "Identifies whether you can access the group.",
                        "type": "boolean"
                      },
                      "roleDescription": {
                        "description": "Descriptive text for the role to convey its use.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "roleId": {
                        "description": "Unique identifier for the role.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "roleName": {
                        "description": "Descriptive label for the role.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "subGroups": {
                        "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/GroupAccessResponse.yaml"
                  }
                },
                "example": [
                  {
                    "groupId": 87611,
                    "groupName": "Fala Internal-2-2EZBD",
                    "isBlocked": false,
                    "roleDescription": "CPCodeTest RolePermissions Automation",
                    "roleId": 114492,
                    "roleName": "CP Code Automation Role",
                    "subGroups": []
                  },
                  {
                    "groupId": 19742,
                    "groupName": "Akamai Internal-1-IZI1J",
                    "isBlocked": false,
                    "roleDescription": "CPCodeTest RolePermissions Automation",
                    "roleId": 114492,
                    "roleName": "CP Code Automation Role",
                    "subGroups": []
                  },
                  {
                    "groupId": 19717,
                    "groupName": "Akamai Internal-1-7KLGU",
                    "isBlocked": false,
                    "roleDescription": "Admin role and Authz Case Management Read role for PRTLDEVOPS-50807",
                    "roleId": 142838,
                    "roleName": "Admin plus Authz Case Management Read",
                    "subGroups": [
                      {
                        "groupId": 52438,
                        "groupName": "edstest",
                        "parentGroupId": 19717,
                        "subGroups": []
                      },
                      {
                        "groupId": 59530,
                        "groupName": "Huawei",
                        "parentGroupId": 19717,
                        "subGroups": []
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique username for a user.",
          "example": "{{username}}",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "example": "demo",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/username-path.yaml"
          }
        }
      ]
    }
  },
  "x-readme": {
    "samples-languages": [
      "curl",
      "python",
      "node"
    ]
  },
  "servers": [
    {
      "url": "https://{hostname}/identity-management/v3"
    }
  ]
}