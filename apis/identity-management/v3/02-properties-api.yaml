openapi: 3.0.0
info:
  title: Properties
  version: '3'
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
- url: https://{hostname}/identity-management/v3
x-akamai:
  auth-type: EDGE_GRID
  file-path: 02-properties-api.yaml
paths:
  /user-admin/properties:
    get:
      operationId: get-properties
      summary: List properties
      tags:
      - Properties
      description: |
        This operation lists the properties for an account. Include the `groupId` parameter in your request to filter the results by group.
      parameters:
      - $ref: parameters/groupIdopt_groupId.yaml
      responses:
        200:
          description: |
            The response provides the properties.
          content:
            application/json:
              example:
                $ref: examples/get-response-properties.json
              schema:
                $ref: schemas/ListOfPropertyListItem.yaml
  /user-admin/properties/{propertyId}:
    parameters:
    - $ref: parameters/propertyId-path.yaml
    get:
      operationId: get-property
      summary: Get a property
      tags:
      - Properties
      description: |
        This operation lists a property's details.
      parameters:
      - $ref: parameters/groupIdreqQP_groupId.yaml
      responses:
        200:
          description: |
            The response provides the property's details.
          content:
            application/json:
              example:
                $ref: examples/get-response-property-details.json
              schema:
                $ref: schemas/PropertyResponse.yaml
    put:
      operationId: put-property
      summary: Move a property
      tags:
      - Properties
      description: |
        This operation moves a property from one group to another group. You can only move a property into another group within the same group hierarchy. Depending on your role in the destination group, you may lose access to resources the property uses. After moving a property, run the [List users affected by moving a group](ref:get-move-affected-users) operation to determine which users gained or lost access.
      requestBody:
        required: true
        content:
          application/json:
            example:
              $ref: examples/put-request-property-move.json
            schema:
              $ref: schemas/MovePropertyRequest.yaml
      responses:
        204:
          description: |
            Property successfully moved.
  /user-admin/properties/{propertyId}/resources:
    parameters:
    - $ref: parameters/propertyId-path.yaml
    get:
      operationId: get-property-resources
      summary: Get a property's resources
      tags:
      - Resources
      description: |
        This operation lists resources a property uses to deliver your web content across Akamai's edge network. You can think of these resources as objects, like CP codes and configuration files. For example, an ARL (Akamai resource locator) configuration file specifies how Akamai purges versions of an object that you canâ€™t purge using just the URL.
      parameters:
      - $ref: parameters/groupIdreqQP_groupId.yaml
      responses:
        200:
          description: |
            The response provides the resources.
          content:
            application/json:
              example:
                $ref: examples/get-response-property-resources.json
              schema:
                $ref: schemas/ListOfResourceItem.yaml
  /user-admin/properties/{propertyId}/users:
    parameters:
    - $ref: parameters/propertyId-path.yaml
    get:
      operationId: get-property-users
      summary: List users for property
      tags:
      - Properties
      description: |
        This operation lists users who can access a property.
      parameters:
      - $ref: parameters/userType-query.yaml
      responses:
        200:
          description: |
            The response provides the users accessing the property.
          content:
            application/json:
              example:
                $ref: examples/put-response-block-uiidentities.json
              schema:
                $ref: schemas/UsersOfPropertyResponse.yaml
  /user-admin/properties/{propertyId}/users/block:
    parameters:
    - $ref: parameters/propertyId-path.yaml
    put:
      operationId: put-property-users-block
      summary: Block users
      tags:
      - Properties
      description: |
        This operation blocks the users on a property.
      requestBody:
        required: true
        content:
          application/json:
            example:
              $ref: examples/put-request-block-uiidentities.json
            schema:
              $ref: schemas/UsersBlockUIIdentities.yaml
      responses:
        200:
          description: |
            The response provides the users blocked from the property.
          content:
            application/json:
              example:
                $ref: examples/put-response-block-uiidentities.json
              schema:
                $ref: schemas/UsersOfPropertyResponse.yaml
