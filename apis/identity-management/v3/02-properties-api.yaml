openapi: 3.0.0
info:
  title: Properties
  version: '3'
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
- url: https://{hostname}/identity-management/v3
tags:
- description: Fetch properties and includes used by an account with their details,
    including their users.
  name: Assets
- description: Fetch resources used by a property or include.
  name: Resources
x-akamai:
  auth-type: EDGE_GRID
  file-path: 02-properties-api.yaml
paths:
  /user-admin/properties:
    get:
      operationId: get-properties
      summary: List properties or includes
      tags:
      - Assets
      description: |
        This operation lists the properties and includes for the current account or other managed accounts using the `accountSwitchKey` parameter. Include the `groupId` parameter in your request to filter the results by group. The response returns a list of `propertyId` regardless of whether they represent a property or include in PAPI. To learn more, see [Manage access to properties and includes](ref:manage-access-to-properties-and-includes).
      parameters:
      - $ref: parameters/group-id-opt-group-id.yaml
      responses:
        200:
          description: |
            The response provides the assets.
          content:
            application/json:
              example:
                $ref: examples/get-response-properties.json
              schema:
                $ref: schemas/list-of-property-list-item.yaml
  /user-admin/properties/{assetId}:
    parameters:
    - $ref: parameters/asset-id-path.yaml
    get:
      operationId: get-property
      summary: Get a property or include
      tags:
      - Assets
      description: |
        This operation fetches a property's or include's details. The response returns details for `propertyId` regardless of whether it represent a property or include in PAPI. To learn more, see [Manage access to properties and includes](ref:manage-access-to-properties-and-includes).
      parameters:
      - $ref: parameters/group-id-req-qp-group-id.yaml
      responses:
        200:
          description: |
            The response provides the asset's details.
          content:
            application/json:
              example:
                $ref: examples/get-response-property-details.json
              schema:
                $ref: schemas/property-response.yaml
    put:
      operationId: put-property
      summary: Move a property or include
      tags:
      - Assets
      description: |
        This operation moves a property or include from one group to another group. You can only move an asset into another group within the same group hierarchy. Depending on your role in the destination group, you may lose access to resources the asset uses. Before moving an asset, run the [List users affected by moving a group](ref:get-move-affected-users) operation to review which users will be affected by the move.
      requestBody:
        required: true
        content:
          application/json:
            example:
              $ref: examples/put-request-property-move.json
            schema:
              $ref: schemas/move-property-request.yaml
      responses:
        204:
          description: |
            Asset successfully moved.
  /user-admin/properties/{assetId}/resources:
    parameters:
    - $ref: parameters/asset-id-path.yaml
    get:
      operationId: get-property-resources
      summary: Get asset's resources
      tags:
      - Resources
      description: |
        This operation lists resources a property or include uses to deliver your web content across Akamai's edge network. You can think of these resources as objects, like CP codes and configuration files. For example, an ARL (Akamai resource locator) configuration file specifies how Akamai purges versions of an object that you canâ€™t purge using just the URL.
      parameters:
      - $ref: parameters/group-id-req-qp-group-id.yaml
      responses:
        200:
          description: |
            The response provides the resources.
          content:
            application/json:
              example:
                $ref: examples/get-response-property-resources.json
              schema:
                $ref: schemas/list-of-resource-item.yaml
  /user-admin/properties/{assetId}/users:
    parameters:
    - $ref: parameters/asset-id-path.yaml
    get:
      operationId: get-property-users
      summary: List users for property or include
      tags:
      - Assets
      description: |
        This operation lists users who can access a property or include.
      parameters:
      - $ref: parameters/user-type-query.yaml
      responses:
        200:
          description: |
            The response provides the users accessing the property or include.
          content:
            application/json:
              example:
                $ref: examples/put-response-block-uiidentities.json
              schema:
                $ref: schemas/users-of-property-response.yaml
  /user-admin/properties/{assetId}/users/block:
    parameters:
    - $ref: parameters/asset-id-path.yaml
    put:
      operationId: put-property-users-block
      summary: Block users from a property or include
      tags:
      - Assets
      description: |
        This operation blocks the users on a property or include.
      requestBody:
        required: true
        content:
          application/json:
            example:
              $ref: examples/put-request-block-uiidentities.json
            schema:
              $ref: schemas/users-block-uiidentities.yaml
      responses:
        200:
          description: |
            The response provides the users blocked from the asset.
          content:
            application/json:
              example:
                $ref: examples/put-response-block-uiidentities.json
              schema:
                $ref: schemas/users-of-property-response.yaml
