{
  "openapi": "3.0.0",
  "externalDocs": {
    "description": "See documentation for Akamai's DataStream 2 API",
    "url": "https://techdocs.akamai.com/datastream2/reference"
  },
  "info": {
    "title": "Akamai: DataStream 2 API",
    "version": "v2",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/log/datasets-fields": {
      "get": {
        "description": "Returns the list of available data set fields you can choose to monitor in your logs in a stream configuration. Set the `productId` query parameter to get data sets available for a specific product. See the [Create a stream](https://techdocs.akamai.com/datastream2/reference/post-stream) or [Edit a stream](https://techdocs.akamai.com/datastream2/reference/put-stream) operations.",
        "operationId": "get-dataset-fields",
        "summary": "List data set fields",
        "tags": [
          "Data sets"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's DataStream 2 API",
          "url": "https://techdocs.akamai.com/datastream2/reference/get-dataset-fields"
        },
        "responses": {
          "200": {
            "description": "The response lists data set fields.",
            "content": {
              "application/json": {
                "example": {
                  "datasetFields": [
                    {
                      "datasetFieldDescription": "The unique identifier of the stream that handled the request.",
                      "datasetFieldGroup": "Log information",
                      "datasetFieldId": 999,
                      "datasetFieldJsonKey": "streamId",
                      "datasetFieldName": "Stream ID"
                    },
                    {
                      "datasetFieldDescription": "The Content Provider code associated with the request.",
                      "datasetFieldGroup": "Log information",
                      "datasetFieldId": 1000,
                      "datasetFieldJsonKey": "cp",
                      "datasetFieldName": "CP code"
                    },
                    {
                      "datasetFieldDescription": "The identifier of the request.",
                      "datasetFieldGroup": "Log information",
                      "datasetFieldId": 1002,
                      "datasetFieldJsonKey": "reqId",
                      "datasetFieldName": "Request ID"
                    },
                    {
                      "datasetFieldDescription": "The time when the edge server accepted the request from the client.",
                      "datasetFieldGroup": "Log information",
                      "datasetFieldId": 1100,
                      "datasetFieldJsonKey": "reqTimeSec",
                      "datasetFieldName": "Request time"
                    },
                    {
                      "datasetFieldDescription": "The number of attempts to download the content from the edge in a specific time interval, based on the number of total manifest requests received.",
                      "datasetFieldGroup": "Log information",
                      "datasetFieldId": 2024,
                      "datasetFieldJsonKey": "edgeAttempts",
                      "datasetFieldName": "Edge attempts"
                    },
                    {
                      "datasetFieldDescription": "The content bytes served in the response.",
                      "datasetFieldGroup": "Message exchange data",
                      "datasetFieldId": 1005,
                      "datasetFieldJsonKey": "bytes",
                      "datasetFieldName": "Bytes"
                    },
                    {
                      "datasetFieldDescription": "The IP address of the client.",
                      "datasetFieldGroup": "Message exchange data",
                      "datasetFieldId": 1006,
                      "datasetFieldJsonKey": "cliIP",
                      "datasetFieldName": "Client IP"
                    },
                    {
                      "datasetFieldDescription": "The HTTP status code of the response.",
                      "datasetFieldGroup": "Message exchange data",
                      "datasetFieldId": 1008,
                      "datasetFieldJsonKey": "statusCode",
                      "datasetFieldName": "HTTP status code"
                    },
                    {
                      "datasetFieldDescription": "The protocol of the request-response cycle, either HTTP or HTTPS.",
                      "datasetFieldGroup": "Message exchange data",
                      "datasetFieldId": 1009,
                      "datasetFieldJsonKey": "proto",
                      "datasetFieldName": "Protocol type"
                    },
                    {
                      "datasetFieldDescription": "The value of the Host header in the request.",
                      "datasetFieldGroup": "Message exchange data",
                      "datasetFieldId": 1011,
                      "datasetFieldJsonKey": "reqHost",
                      "datasetFieldName": "Request host"
                    },
                    {
                      "datasetFieldDescription": "The HTTP method of the request.",
                      "datasetFieldGroup": "Message exchange data",
                      "datasetFieldId": 1012,
                      "datasetFieldJsonKey": "reqMethod",
                      "datasetFieldName": "Request method"
                    },
                    {
                      "datasetFieldDescription": "The path to a resource in the request, excluding query parameters.",
                      "datasetFieldGroup": "Message exchange data",
                      "datasetFieldId": 1013,
                      "datasetFieldJsonKey": "reqPath",
                      "datasetFieldName": "Request path"
                    },
                    {
                      "datasetFieldDescription": "The port number of the requested service.",
                      "datasetFieldGroup": "Message exchange data",
                      "datasetFieldId": 1014,
                      "datasetFieldJsonKey": "reqPort",
                      "datasetFieldName": "Request port"
                    },
                    {
                      "datasetFieldDescription": "The size of the entity-body in bytes returned to the client.",
                      "datasetFieldGroup": "Message exchange data",
                      "datasetFieldId": 1015,
                      "datasetFieldJsonKey": "rspContentLen",
                      "datasetFieldName": "Response Content-Length"
                    },
                    {
                      "datasetFieldDescription": "The type of the content returned to the client.",
                      "datasetFieldGroup": "Message exchange data",
                      "datasetFieldId": 1016,
                      "datasetFieldJsonKey": "rspContentType",
                      "datasetFieldName": "Response Content-Type"
                    },
                    {
                      "datasetFieldDescription": "The user agent making the request.",
                      "datasetFieldGroup": "Message exchange data",
                      "datasetFieldId": 1017,
                      "datasetFieldJsonKey": "UA",
                      "datasetFieldName": "User-Agent"
                    },
                    {
                      "datasetFieldDescription": "The time in milliseconds between when the edge server accepts the connection and the completion of the SSL handshake.",
                      "datasetFieldGroup": "Message exchange data",
                      "datasetFieldId": 2001,
                      "datasetFieldJsonKey": "tlsOverheadTimeMSec",
                      "datasetFieldName": "SSL overhead time"
                    },
                    {
                      "datasetFieldDescription": "The protocol of the SSL handshake, either SSLv2, SSLv3, or TLSv1.",
                      "datasetFieldGroup": "Message exchange data",
                      "datasetFieldId": 2002,
                      "datasetFieldJsonKey": "tlsVersion",
                      "datasetFieldName": "SSL version"
                    },
                    {
                      "datasetFieldDescription": "The size of the object, excluding HTTP response headers.",
                      "datasetFieldGroup": "Message exchange data",
                      "datasetFieldId": 2003,
                      "datasetFieldJsonKey": "objSize",
                      "datasetFieldName": "Object size"
                    },
                    {
                      "datasetFieldDescription": "The size of the uncompressed object, if zipped before sending to the client. This field will be populated only when the Last mile acceleration is enabled.",
                      "datasetFieldGroup": "Message exchange data",
                      "datasetFieldId": 2004,
                      "datasetFieldJsonKey": "uncompressedSize",
                      "datasetFieldName": "Uncompressed size"
                    },
                    {
                      "datasetFieldDescription": "TCP overhead in bytes for the request and response.",
                      "datasetFieldGroup": "Message exchange data",
                      "datasetFieldId": 2006,
                      "datasetFieldJsonKey": "overheadBytes",
                      "datasetFieldName": "Overhead bytes"
                    },
                    {
                      "datasetFieldDescription": "The bytes served in the response, including the content and all overheads.",
                      "datasetFieldGroup": "Message exchange data",
                      "datasetFieldId": 2008,
                      "datasetFieldJsonKey": "totalBytes",
                      "datasetFieldName": "Total bytes"
                    },
                    {
                      "datasetFieldDescription": "The query string in the incoming URI from the client. Returns only when the Cache Key Parameter behavior is set to include all parameters.",
                      "datasetFieldGroup": "Message exchange data",
                      "datasetFieldId": 2009,
                      "datasetFieldJsonKey": "queryStr",
                      "datasetFieldName": "Query string"
                    },
                    {
                      "datasetFieldDescription": "This field groups the response content into different buckets by size in kilobytes, megabytes and gigabytes.",
                      "datasetFieldGroup": "Message exchange data",
                      "datasetFieldId": 2023,
                      "datasetFieldJsonKey": "fileSizeBucket",
                      "datasetFieldName": "File size bucket"
                    },
                    {
                      "datasetFieldDescription": "The list of languages acceptable in the response.",
                      "datasetFieldGroup": "Request header data",
                      "datasetFieldId": 1019,
                      "datasetFieldJsonKey": "accLang",
                      "datasetFieldName": "Accept-Language"
                    },
                    {
                      "datasetFieldDescription": "A list of HTTP cookies previously sent by the server with the Set-Cookie header.",
                      "datasetFieldGroup": "Request header data",
                      "datasetFieldId": 1023,
                      "datasetFieldJsonKey": "cookie",
                      "datasetFieldName": "Cookie"
                    },
                    {
                      "datasetFieldDescription": "The part of an entity that the server is requested to return.",
                      "datasetFieldGroup": "Request header data",
                      "datasetFieldId": 1031,
                      "datasetFieldJsonKey": "range",
                      "datasetFieldName": "Range"
                    },
                    {
                      "datasetFieldDescription": "The address of the resource from which the requested URI was followed.",
                      "datasetFieldGroup": "Request header data",
                      "datasetFieldId": 1032,
                      "datasetFieldJsonKey": "referer",
                      "datasetFieldName": "Referer"
                    },
                    {
                      "datasetFieldDescription": "The originating IP address of a client connecting to a web server through an HTTP proxy or load balancer.",
                      "datasetFieldGroup": "Request header data",
                      "datasetFieldId": 1037,
                      "datasetFieldJsonKey": "xForwardedFor",
                      "datasetFieldName": "X-Forwarded-For"
                    },
                    {
                      "datasetFieldDescription": "The time in seconds that the object is valid for positive cache responses.",
                      "datasetFieldGroup": "Request header data",
                      "datasetFieldId": 2005,
                      "datasetFieldJsonKey": "maxAgeSec",
                      "datasetFieldName": "Max age"
                    },
                    {
                      "datasetFieldDescription": "The time it takes the edge server to fully read the request.",
                      "datasetFieldGroup": "Network performance data",
                      "datasetFieldId": 1033,
                      "datasetFieldJsonKey": "reqEndTimeMSec",
                      "datasetFieldName": "Request end time"
                    },
                    {
                      "datasetFieldDescription": "A string describing the problem with serving the request.",
                      "datasetFieldGroup": "Network performance data",
                      "datasetFieldId": 1068,
                      "datasetFieldJsonKey": "errorCode",
                      "datasetFieldName": "Error code"
                    },
                    {
                      "datasetFieldDescription": "The time in milliseconds from when the edge server receives the last byte of the request to when it sends the first bytes of the response.",
                      "datasetFieldGroup": "Network performance data",
                      "datasetFieldId": 1102,
                      "datasetFieldJsonKey": "turnAroundTimeMSec",
                      "datasetFieldName": "Turn around time"
                    },
                    {
                      "datasetFieldDescription": "The time in milliseconds from when the edge server was ready to send the first byte to when it sent the last byte of the response.",
                      "datasetFieldGroup": "Network performance data",
                      "datasetFieldId": 1103,
                      "datasetFieldJsonKey": "transferTimeMSec",
                      "datasetFieldName": "Transfer time"
                    },
                    {
                      "datasetFieldDescription": "The time in seconds between the start of the request and the completion of the DNS lookup, if one was required. For cached IP addresses, this value is zero. This field will be populated only when the instantConfig behavior is enabled.",
                      "datasetFieldGroup": "Network performance data",
                      "datasetFieldId": 2007,
                      "datasetFieldJsonKey": "dnsLookupTimeMSec",
                      "datasetFieldName": "DNS lookup time"
                    },
                    {
                      "datasetFieldDescription": "The last byte of the object that was served in this response. 0 indicates a part of a byte-range response.",
                      "datasetFieldGroup": "Network performance data",
                      "datasetFieldId": 2021,
                      "datasetFieldJsonKey": "lastByte",
                      "datasetFieldName": "Last byte"
                    },
                    {
                      "datasetFieldDescription": "The data specified in the Custom Log Field of the Log Requests Details that you want to receive in the stream.",
                      "datasetFieldGroup": "Other",
                      "datasetFieldId": 1082,
                      "datasetFieldJsonKey": "customField",
                      "datasetFieldName": "Custom field"
                    },
                    {
                      "datasetFieldDescription": "The IP address of the edge server that served the response to the client that may be useful while resolving issues with your account representative.",
                      "datasetFieldGroup": "Geo data",
                      "datasetFieldId": 1066,
                      "datasetFieldJsonKey": "edgeIP",
                      "datasetFieldName": "Edge IP"
                    },
                    {
                      "datasetFieldDescription": "The value of this field shows if the request was served from edge cache (1) or forwarded to peer, parent or origin (0).",
                      "datasetFieldGroup": "Cache data",
                      "datasetFieldId": 2010,
                      "datasetFieldJsonKey": "cacheStatus",
                      "datasetFieldName": "Cache status"
                    },
                    {
                      "datasetFieldDescription": "Returns 1 if the server determines that the object is cacheable based on response headers and metadata, 0 if the object is not cacheable.",
                      "datasetFieldGroup": "Cache data",
                      "datasetFieldId": 2019,
                      "datasetFieldJsonKey": "cacheable",
                      "datasetFieldName": "Cacheable"
                    },
                    {
                      "datasetFieldDescription": "This field returns additional breadcrumbs data about the HTTP request-response cycle for improved visibility into the Akamai platform.",
                      "datasetFieldGroup": "Cache data",
                      "datasetFieldId": 2020,
                      "datasetFieldJsonKey": "breadcrumbs",
                      "datasetFieldName": "Breadcrumbs"
                    },
                    {
                      "datasetFieldDescription": "The ISO code of the country/region where the request originated.",
                      "datasetFieldGroup": "Geo data",
                      "datasetFieldId": 2012,
                      "datasetFieldJsonKey": "country",
                      "datasetFieldName": "Country/Region"
                    },
                    {
                      "datasetFieldDescription": "The state where the request originated.",
                      "datasetFieldGroup": "Geo data",
                      "datasetFieldId": 2013,
                      "datasetFieldJsonKey": "state",
                      "datasetFieldName": "State"
                    },
                    {
                      "datasetFieldDescription": "The city where the request originated.",
                      "datasetFieldGroup": "Geo data",
                      "datasetFieldId": 2014,
                      "datasetFieldJsonKey": "city",
                      "datasetFieldName": "City"
                    },
                    {
                      "datasetFieldDescription": "The ISO code of the country or region from where the request was served.",
                      "datasetFieldGroup": "Geo data",
                      "datasetFieldId": 2052,
                      "datasetFieldJsonKey": "serverCountry",
                      "datasetFieldName": "Server country/region"
                    },
                    {
                      "datasetFieldDescription": "The Akamai geographical price zone from where the request was served.",
                      "datasetFieldGroup": "Geo data",
                      "datasetFieldId": 2053,
                      "datasetFieldJsonKey": "billingRegion",
                      "datasetFieldName": "Billing region"
                    },
                    {
                      "datasetFieldDescription": "WAF bot rules that were triggered from the request or the response.",
                      "datasetFieldGroup": "Web security",
                      "datasetFieldId": 2050,
                      "datasetFieldJsonKey": "securityRules",
                      "datasetFieldName": "Security rules"
                    },
                    {
                      "datasetFieldDescription": "This field returns EdgeWorkers data for client requests and responses if EdgeWorkers is enabled. The field format is:\n//[EdgeWorkers-Id]/[Version]/[Event Handler]/[Off Reason]/[Logic Executed]/[Status]/#[Metrics]",
                      "datasetFieldGroup": "EdgeWorkers",
                      "datasetFieldId": 3000,
                      "datasetFieldJsonKey": "ewUsageInfo",
                      "datasetFieldName": "EdgeWorkers usage"
                    },
                    {
                      "datasetFieldDescription": "This field returns EdgeWorkers execution information if enabled, including the stage of execution, the EdgeWorker ID, process, total and total stage time (in milliseconds), used memory (in kilobytes), ghost flow, error code, HTTP status change when the response is generated using the API, CPU flits consumed during processing, tier ID for the request, indirect CPU time (in milliseconds) and ghost error code.",
                      "datasetFieldGroup": "EdgeWorkers",
                      "datasetFieldId": 3001,
                      "datasetFieldJsonKey": "ewExecutionInfo",
                      "datasetFieldName": "EdgeWorkers execution"
                    },
                    {
                      "datasetFieldDescription": "This field returns a Common Media Client Data payload for media traffic. You can use the data for log analysis, QoS monitoring, and delivery optimization.",
                      "datasetFieldGroup": "Common media client data",
                      "datasetFieldId": 2080,
                      "datasetFieldJsonKey": "cmcd",
                      "datasetFieldName": "CMCD"
                    },
                    {
                      "datasetFieldDescription": "This field reports the status when serving a Brotli-compressed object, including recompressions.",
                      "datasetFieldGroup": "Message exchange data",
                      "datasetFieldId": 2060,
                      "datasetFieldJsonKey": "brotliStatus",
                      "datasetFieldName": "Brotli status"
                    },
                    {
                      "datasetFieldDescription": "The compressible Content-Length object value in the response header from the origin.",
                      "datasetFieldGroup": "Message exchange data",
                      "datasetFieldId": 2061,
                      "datasetFieldJsonKey": "originContentLen",
                      "datasetFieldName": "Origin Content-Length"
                    },
                    {
                      "datasetFieldDescription": "Returns Enhanced Proxy Detection data, including the GeoGuard category, and the action on the request.",
                      "datasetFieldGroup": "Content protection",
                      "datasetFieldId": 3011,
                      "datasetFieldJsonKey": "contentProtection",
                      "datasetFieldName": "Content protection information"
                    },
                    {
                      "datasetFieldDescription": "The Autonomous System Number (ASN) of the request's Internet service provider.",
                      "datasetFieldGroup": "Network performance data",
                      "datasetFieldId": 2022,
                      "datasetFieldJsonKey": "asn",
                      "datasetFieldName": "Asnum"
                    },
                    {
                      "datasetFieldDescription": "Time taken to download the first byte in milliseconds.",
                      "datasetFieldGroup": "Network performance data",
                      "datasetFieldId": 2025,
                      "datasetFieldJsonKey": "timeToFirstByte",
                      "datasetFieldName": "Time to first byte"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Lists the data set fields that the stream logs.",
                  "type": "object",
                  "required": [
                    "datasetFields"
                  ],
                  "properties": {
                    "datasetFields": {
                      "description": "Lists the data set groups and fields that the stream logs.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies a data set field within a template's data set group.",
                        "type": "object",
                        "required": [
                          "datasetFieldId",
                          "datasetFieldName",
                          "datasetFieldDescription",
                          "datasetFieldJsonKey",
                          "datasetFieldGroup"
                        ],
                        "properties": {
                          "datasetFieldDescription": {
                            "description": "Describes the data set field.",
                            "type": "string"
                          },
                          "datasetFieldGroup": {
                            "description": "A name of the dataset group.",
                            "type": "string"
                          },
                          "datasetFieldId": {
                            "description": "Identifies the field.",
                            "type": "integer"
                          },
                          "datasetFieldJsonKey": {
                            "description": "Specifies the JSON key for the field in a log line. You can get this value only when you run the [List data set fields](https://techdocs.akamai.com/datastream2/reference/get-dataset-fields) or [Get a stream](https://techdocs.akamai.com/datastream2/reference/get-stream) operation for a stream in the `JSON` format.",
                            "type": "string"
                          },
                          "datasetFieldName": {
                            "description": "A name of the data set field.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/DsField.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/Datasets.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Uniquely identifies the product, and allows listing data sets available for that product. In the [List data set fields](https://techdocs.akamai.com/datastream2/reference/get-dataset-fields) operation, you can provide one `productId` per API call.",
            "example": "{{productId}}",
            "in": "query",
            "name": "productId",
            "schema": {
              "example": "Adaptive_Media_Delivery",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/productId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/log/groups": {
      "get": {
        "description": "Returns access groups with contracts on your account. You can later use the `groupId` and `contractId` values to create and view streams or list properties by group. Set the `contractId` query parameter to get groups for a specific contract.",
        "operationId": "get-groups",
        "summary": "List groups",
        "tags": [
          "Groups"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's DataStream 2 API",
          "url": "https://techdocs.akamai.com/datastream2/reference/get-groups"
        },
        "responses": {
          "200": {
            "description": "The response lists groups with contracts on your account.",
            "content": {
              "application/json": {
                "example": {
                  "groups": [
                    {
                      "groupId": 67377,
                      "groupName": "Default Group",
                      "childGroupIds": [],
                      "contractIds": [
                        "K-0N7RAK7"
                      ]
                    },
                    {
                      "groupId": 143553,
                      "groupName": "Group-4",
                      "childGroupIds": [],
                      "contractIds": [
                        "K-0N7RAK7"
                      ]
                    },
                    {
                      "groupId": 21483,
                      "groupName": "Group-1",
                      "childGroupIds": [
                        67377,
                        21484
                      ],
                      "contractIds": [
                        "K-0N7RAK7"
                      ]
                    },
                    {
                      "groupId": 21484,
                      "groupName": "Group 2",
                      "childGroupIds": [
                        67377
                      ],
                      "contractIds": [
                        "K-0N7RAK7"
                      ]
                    },
                    {
                      "groupId": 143215,
                      "groupName": "Group 3",
                      "childGroupIds": [],
                      "contractIds": [
                        "3-KLMNO"
                      ]
                    },
                    {
                      "groupId": 21485,
                      "groupName": "Backup Group",
                      "childGroupIds": [],
                      "contractIds": [
                        "3-KLMNO"
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Lists access groups on your account.",
                  "type": "object",
                  "required": [
                    "groups"
                  ],
                  "properties": {
                    "groups": {
                      "description": "Lists access groups and group hierarchy on your account. You can use the group and contract IDs to create or view stream configurations.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Provides detailed information about the hierarchy of access groups on your account. It also informs you whether you can view and create stream configurations within this group.",
                        "type": "object",
                        "required": [
                          "childGroupIds",
                          "contractIds",
                          "groupId",
                          "groupName"
                        ],
                        "properties": {
                          "childGroupIds": {
                            "description": "Identifies the child groups that belong to the group.",
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "contractIds": {
                            "description": "Identifies the contracts that belong to the group.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "groupId": {
                            "description": "Identifies the group.",
                            "type": "integer"
                          },
                          "groupName": {
                            "description": "The name of the group.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/Group.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/Groups.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Uniquely identifies the contract that belongs to a group.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": false,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/log/groups/{groupId}/properties": {
      "get": {
        "description": "Returns properties that are active on the production and staging network and available within a specific group. Run this operation to get and store the `propertyId` values for the [Create a stream](https://techdocs.akamai.com/datastream2/reference/post-stream) and [Edit a stream](https://techdocs.akamai.com/datastream2/reference/put-stream) operations.",
        "operationId": "get-group-properties",
        "summary": "List properties by group",
        "tags": [
          "Properties"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's DataStream 2 API",
          "url": "https://techdocs.akamai.com/datastream2/reference/get-group-properties"
        },
        "responses": {
          "200": {
            "description": "The response lists active properties by group.",
            "content": {
              "application/json": {
                "example": {
                  "groupId": 18544,
                  "properties": [
                    {
                      "contractId": "C-0N7RAC7",
                      "productId": "Ion_Standard",
                      "productName": "Ion Standard",
                      "propertyId": 382631,
                      "propertyName": "customp.akamai.com",
                      "hostnames": [
                        "customp.akamaize.net",
                        "customp.akamaized-staging.net"
                      ]
                    },
                    {
                      "contractId": "C-0N7RAC7",
                      "productId": "Dynamic_Site_Accelerator",
                      "productName": "Dynamic Site Accelerator",
                      "propertyId": 347459,
                      "propertyName": "example.com",
                      "hostnames": [
                        "example.edgekey.net"
                      ]
                    },
                    {
                      "contractId": "C-0N7RAC71",
                      "productId": "Adaptive_Media_Delivery",
                      "productName": "Adaptive Media Delivery",
                      "propertyId": 389150,
                      "propertyName": "eip.jsmith.com",
                      "hostnames": [
                        "eip.jsmith.akamaized.net"
                      ]
                    },
                    {
                      "contractId": "C-0N7RAC71",
                      "productId": "Adaptive_Media_Delivery",
                      "productName": "Adaptive Media Delivery",
                      "propertyId": 389178,
                      "propertyName": "eip.jsmith3.com",
                      "hostnames": [
                        "eip.jsmith3.akamaized.net"
                      ]
                    },
                    {
                      "contractId": "K-0N7RAK71",
                      "productId": "Adaptive_Media_Delivery",
                      "productName": "Adaptive Media Delivery",
                      "propertyId": 398541,
                      "propertyName": "jperez-eip",
                      "hostnames": [
                        "jperez-vh.akamaihd.net",
                        "jperez-vh.akamaihd-staging.net"
                      ]
                    },
                    {
                      "contractId": "K-0N7RAK71",
                      "productId": "Download_Delivery",
                      "productName": "Download Delivery",
                      "propertyId": 349773,
                      "propertyName": "eip1.com",
                      "hostnames": [
                        "eip1.akamaihd.net",
                        "eip1.akamaihd-staging.net"
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Lists the properties on your account.",
                  "type": "object",
                  "required": [
                    "groupId",
                    "properties"
                  ],
                  "properties": {
                    "groupId": {
                      "description": "Identifies the group that the properties belong to.",
                      "type": "integer"
                    },
                    "properties": {
                      "description": "Lists properties within access groups.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Provides details about a property.",
                        "type": "object",
                        "required": [
                          "propertyId",
                          "propertyName",
                          "productId",
                          "productName",
                          "hostnames",
                          "contractId"
                        ],
                        "properties": {
                          "contractId": {
                            "description": "Identifies the contract that the property belongs to.",
                            "type": "string"
                          },
                          "hostnames": {
                            "description": "Identifies the hostnames of active properties on the production network. If there are no active properties, lists hostnames of active properties in staging.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "productId": {
                            "description": "Identifies the product that the property belongs to.",
                            "type": "string"
                          },
                          "productName": {
                            "description": "The name of the product.",
                            "type": "string"
                          },
                          "propertyId": {
                            "description": "The identifier of the property.",
                            "type": "integer"
                          },
                          "propertyName": {
                            "description": "The descriptive label for the property.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/Property.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/Properties.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Uniquely identifies the group that can access the product.",
          "example": "{{groupId}}",
          "in": "path",
          "name": "groupId",
          "required": true,
          "schema": {
            "example": 21483,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/groupId-path.yaml"
          }
        }
      ]
    },
    "/log/streams": {
      "post": {
        "description": "Creates a stream configuration. Within a stream configuration, you can select properties to monitor in the stream, data set fields to collect in logs, and a destination to send these log files to. Get the `streamId` value from the response to use in the `https://{hostname}/datastream-config-api/v2/log/streams/{streamId}` endpoint URL. Apart from the log and delivery frequency configurations, you can decide whether to activate the stream on making the request or later using the `activate` parameter. Note that only active streams collect and send logs to their destinations. See [Activate a stream](https://techdocs.akamai.com/datastream2/reference/post-stream-activate).",
        "operationId": "post-stream",
        "summary": "Create a stream",
        "tags": [
          "Streams"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's DataStream 2 API",
          "url": "https://techdocs.akamai.com/datastream2/reference/post-stream"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "examples": {
                "Azure": {
                  "value": {
                    "collectMidgress": false,
                    "contractId": "K-0N7RAK7",
                    "groupId": 12345,
                    "streamName": "diagnostics-log-stream",
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "format": "JSON",
                      "uploadFilePrefix": "logs_{%M}_{%Y}",
                      "uploadFileSuffix": "ds",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "accessKey": "X17x2f2+2MxT1Eh/KaBApKrAEUnetiD0LBbQybczlOwpJVJHPYlDwV99nFSvhDd6z0YTdhDUmy6inRHjQPLlsA==",
                      "accountName": "Digital Company",
                      "containerName": "rawslogscontainer",
                      "destinationType": "AZURE",
                      "displayName": "azure_destination",
                      "path": "logs/edgelogs/{%Y/%m/%d/%H/%M/%S}"
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000
                      },
                      {
                        "datasetFieldId": 1002
                      },
                      {
                        "datasetFieldId": 1023
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772
                      },
                      {
                        "propertyId": 349770
                      }
                    ]
                  }
                },
                "Datadog": {
                  "value": {
                    "collectMidgress": false,
                    "contractId": "K-0N7RAK7",
                    "groupId": 12345,
                    "streamName": "diagnostics-log-stream",
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "fieldDelimiter": "SPACE",
                      "format": "STRUCTURED",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "authToken": "6fe69pp3788877bd7b3bv18oo2c68fe",
                      "compressLogs": true,
                      "destinationType": "DATADOG",
                      "displayName": "Datadog_destination",
                      "endpoint": "https://http-intake.logs.datadoghq.com/v1/input/",
                      "service": "datastream",
                      "source": "java",
                      "tags": "env:sqa,user:insomnia"
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000
                      },
                      {
                        "datasetFieldId": 1002
                      },
                      {
                        "datasetFieldId": 1023
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772
                      },
                      {
                        "propertyId": 349770
                      }
                    ]
                  }
                },
                "Elasticsearch": {
                  "value": {
                    "collectMidgress": false,
                    "contractId": "C-0N7RAC7",
                    "groupId": 12345,
                    "streamName": "diagnostics-log-stream",
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "format": "JSON",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "caCert": "-----BEGIN CERTIFICATE-----\nMIIFnzCCA4egAwIBAgIUKO+hNjocWl ... RjDuaS6FRqLKUx\naf9d\n-----END CERTIFICATE-----",
                      "clientCert": "-----BEGIN CERTIFICATE-----\nMIIFMTCCAxkCFBrfjEylUee/1zuU3pkx33a3+Kl9MA0GC ... ep6\n0R3g8RB7v79PgqcBn70C5Lcdc93jDhBa2TQ==\n-----END CERTIFICATE-----",
                      "clientKey": "-----BEGIN PRIVATE KEY-----\nMIIJRAIBADANBgkqhkiG9w0BAQEFAASCCS4wggk ... ndYhVvhs9x5xsQwgvBhZM/P7LgjHJu6NYjVqdk4Y\n-----END PRIVATE KEY-----",
                      "contentType": "application/json",
                      "customHeaderName": "X-ELASTICSEARCH-TAG",
                      "customHeaderValue": "bulk",
                      "destinationType": "ELASTICSEARCH",
                      "displayName": "elasticsearch",
                      "endpoint": "https://elastic_rawserver01.elastic.com:9243/_bulk/",
                      "indexName": "elastic-search-index",
                      "password": "pass",
                      "tlsHostname": "elasticsearch.akamai.com",
                      "userName": "admin"
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000
                      },
                      {
                        "datasetFieldId": 1002
                      },
                      {
                        "datasetFieldId": 1023
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772
                      },
                      {
                        "propertyId": 349770
                      }
                    ]
                  }
                },
                "Google Cloud Storage": {
                  "value": {
                    "collectMidgress": false,
                    "contractId": "K-0N7RAK71",
                    "groupId": 12345,
                    "streamName": "diagnostics-log-stream",
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "fieldDelimiter": "SPACE",
                      "format": "STRUCTURED",
                      "uploadFilePrefix": "logs_{%S}_{%Y}",
                      "uploadFileSuffix": "ds",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "bucket": "datastream",
                      "destinationType": "GCS",
                      "displayName": "GCSDestination",
                      "path": "log/edgelogs/{%Y/%m/%d/%H/%M/%S}",
                      "privateKey": "-----BEGIN PRIVATE KEY-----\nMIIEvOIBADANBgkozkiG9a1BAO ... rD19A61BavevVVZc1=\n-----END PRIVATE KEY-----",
                      "projectId": "ds2-connect",
                      "serviceAccountName": "ak-DS2"
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000
                      },
                      {
                        "datasetFieldId": 1002
                      },
                      {
                        "datasetFieldId": 1023
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772
                      },
                      {
                        "propertyId": 349770
                      }
                    ]
                  }
                },
                "HTTPS": {
                  "value": {
                    "collectMidgress": true,
                    "contractId": "C-0N7RAC7",
                    "groupId": 12345,
                    "streamName": "diagnostics-log-stream",
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "fieldDelimiter": "SPACE",
                      "format": "STRUCTURED",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "authenticationType": "BASIC",
                      "caCert": "-----BEGIN CERTIFICATE-----\nMIIFnzCCA4egAwIBAgIUKO+hNjocWl ... RjDuaS6FRqLKUx\naf9d\n-----END CERTIFICATE-----",
                      "clientCert": "-----BEGIN CERTIFICATE-----\nMIIFMTCCAxkCFBrfjEylUee/1zuU3pkx33a3+Kl9MA0GC ... ep6\n0R3g8RB7v79PgqcBn70C5Lcdc93jDhBa2TQ==\n-----END CERTIFICATE-----",
                      "clientKey": "-----BEGIN PRIVATE KEY-----\nMIIJRAIBADANBgkqhkiG9w0BAQEFAASCCS4wggk ... ndYhVvhs9x5xsQwgvBhZM/P7LgjHJu6NYjVqdk4Y\n-----END PRIVATE KEY-----",
                      "contentType": "application/json",
                      "customHeaderName": "X-Request-Header",
                      "customHeaderValue": "Header-Value",
                      "destinationType": "HTTPS",
                      "displayName": "HTTPS",
                      "endpoint": "https://kpiqaproxy.eastus.cloudapp.azure.com/basicAuth",
                      "password": "pass",
                      "tlsHostname": "kpiqaproxyvm.eastus.cloudapp.azure.com",
                      "userName": "admin"
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000
                      },
                      {
                        "datasetFieldId": 1002
                      },
                      {
                        "datasetFieldId": 1023
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772
                      },
                      {
                        "propertyId": 349770
                      }
                    ]
                  }
                },
                "Loggly": {
                  "value": {
                    "collectMidgress": false,
                    "contractId": "K-0N7RAK7",
                    "groupId": 12345,
                    "streamName": "diagnostics-log-stream",
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "fieldDelimiter": "SPACE",
                      "format": "STRUCTURED",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "authToken": "SDSXXX-28ff-XXXX-JSHSJS-XXXXXX",
                      "caCert": "-----BEGIN CERTIFICATE-----\nMIIFnzCCA4egAwIBAgIUKO+hNjocWl ... RjDuaS6FRqLKUx\naf9d\n-----END CERTIFICATE-----",
                      "clientCert": "-----BEGIN CERTIFICATE-----\nMIIFMTCCAxkCFBrfjEylUee/1zuU3pkx33a3+Kl9MA0GC ... ep6\n0R3g8RB7v79PgqcBn70C5Lcdc93jDhBa2TQ==\n-----END CERTIFICATE-----",
                      "clientKey": "-----BEGIN PRIVATE KEY-----\nMIIJRAIBADANBgkqhkiG9w0BAQEFAASCCS4wggk ... ndYhVvhs9x5xsQwgvBhZM/P7LgjHJu6NYjVqdk4Y\n-----END PRIVATE KEY-----",
                      "contentType": "application/json",
                      "customHeaderName": "X-LOGGLY-TAG",
                      "customHeaderValue": "bulk",
                      "destinationType": "LOGGLY",
                      "displayName": "loggly",
                      "endpoint": "https://loggly_rawserver01.loggly.com/bulk/",
                      "tags": "raw,akamai_cdn",
                      "tlsHostname": "loggly.akamai.com"
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000
                      },
                      {
                        "datasetFieldId": 1002
                      },
                      {
                        "datasetFieldId": 1023
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772
                      },
                      {
                        "propertyId": 349770
                      }
                    ]
                  }
                },
                "Newrelic": {
                  "value": {
                    "collectMidgress": false,
                    "contractId": "K-0N7RAK71",
                    "groupId": 12345,
                    "streamName": "diagnostics-log-stream",
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "format": "JSON",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "authToken": "SDSXXX-28ff-XXXX-JSHSJS-XXXXXX",
                      "contentType": "application/json",
                      "customHeaderName": "X-NewRelic-Category",
                      "customHeaderValue": "Header-Value",
                      "destinationType": "NEWRELIC",
                      "displayName": "newrelic",
                      "endpoint": "https://log-api.newrelic.com/log/v1/"
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000
                      },
                      {
                        "datasetFieldId": 1002
                      },
                      {
                        "datasetFieldId": 1023
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772
                      },
                      {
                        "propertyId": 349770
                      }
                    ]
                  }
                },
                "Oracle Cloud Storage": {
                  "value": {
                    "collectMidgress": false,
                    "contractId": "C-0N7RAC71",
                    "groupId": 12345,
                    "streamName": "diagnostics-log-stream",
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "format": "JSON",
                      "uploadFilePrefix": "logs{%Y_%m_%d_%H_%M_%S}",
                      "uploadFileSuffix": "ds",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "accessKey": "fa848eb558sdfghjrDUMMYD05e7a710fb9315396",
                      "bucket": "full-length",
                      "destinationType": "ORACLE_CLOUD_STORAGE",
                      "displayName": "OCS",
                      "namespace": "ax9javbhuj89",
                      "path": "foo/{%d/%m/%Y/%H/%M/%S}",
                      "region": "ap-hyderabad-1",
                      "secretAccessKey": "fkhtq9OnIOFozQLXwerty6432dfghMyS7tnxqQ2GPc="
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000
                      },
                      {
                        "datasetFieldId": 1002
                      },
                      {
                        "datasetFieldId": 1023
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772
                      },
                      {
                        "propertyId": 349770
                      }
                    ]
                  }
                },
                "S3": {
                  "value": {
                    "collectMidgress": false,
                    "contractId": "C-0N7RAC7",
                    "groupId": 12345,
                    "streamName": "diagnostics-log-stream",
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "format": "JSON",
                      "uploadFilePrefix": "logs_{%S}",
                      "uploadFileSuffix": "ds",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "accessKey": "1T2ll1H4dXWx5itGhpc7FlSbvvOvky1098nTiitn",
                      "bucket": "datastream.akamai.com",
                      "destinationType": "S3",
                      "displayName": "S3Destination",
                      "path": "ds2-logs{%Y/%M/%S}",
                      "region": "ap-south-1",
                      "secretAccessKey": "AKIA6DK7TDQLVGZ3MYP1"
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000
                      },
                      {
                        "datasetFieldId": 1002
                      },
                      {
                        "datasetFieldId": 1023
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772
                      },
                      {
                        "propertyId": 349770
                      }
                    ]
                  }
                },
                "Splunk": {
                  "value": {
                    "collectMidgress": false,
                    "contractId": "C-0N7RAC7",
                    "groupId": 12345,
                    "streamName": "diagnostics-log-stream",
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "format": "JSON",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "caCert": "-----BEGIN CERTIFICATE-----\nMIIFnzCCA4egAwIBAgIUKO+hNjocWl ... RjDuaS6FRqLKUx\naf9d\n-----END CERTIFICATE-----",
                      "clientCert": "-----BEGIN CERTIFICATE-----\nMIIFMTCCAxkCFBrfjEylUee/1zuU3pkx33a3+Kl9MA0GC ... ep6\n0R3g8RB7v79PgqcBn70C5Lcdc93jDhBa2TQ==\n-----END CERTIFICATE-----",
                      "clientKey": "-----BEGIN PRIVATE KEY-----\nMIIJRAIBADANBgkqhkiG9w0BAQEFAASCCS4wggk ... ndYhVvhs9x5xsQwgvBhZM/P7LgjHJu6NYjVqdk4Y\n-----END PRIVATE KEY-----",
                      "compressLogs": true,
                      "customHeaderName": "X-Splunk-Request-Channel",
                      "customHeaderValue": "FE0ECFAD-13D5-401B-847D-77833BD77131",
                      "destinationType": "SPLUNK",
                      "displayName": "Splunk_destination",
                      "endpoint": "https://http-inputs-customer.splunkcloud.com/services/collector/raw",
                      "eventCollectorToken": "894-51c5-4b2e-888y-54fb-hh62",
                      "tlsHostname": "kpiqaproxy.eastus.cloudapp.azure.com"
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000
                      },
                      {
                        "datasetFieldId": 1002
                      },
                      {
                        "datasetFieldId": 1023
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772
                      },
                      {
                        "propertyId": 349770
                      }
                    ]
                  }
                },
                "Sumo Logic": {
                  "value": {
                    "collectMidgress": false,
                    "contractId": "C-0N7RAC71",
                    "groupId": 12345,
                    "streamName": "diagnostics-log-stream",
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "fieldDelimiter": "SPACE",
                      "format": "STRUCTURED",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "collectorCode": "ZzVnj7dhzV3Z6XTuv2zgi6YdjR2z9ppU7ZoUVgWxr9xod1eGTzztg6t_7uLbxziler2gm_l7FepmzQFj-Nj9_GLJItWjJgFkVfFSF75x_KUAHSHIUI6RS==",
                      "compressLogs": true,
                      "contentType": "application/json",
                      "customHeaderName": "X-Sumo-Category",
                      "customHeaderValue": "Header-Value",
                      "destinationType": "SUMO_LOGIC",
                      "displayName": "Sumo_destination",
                      "endpoint": "https://endpoint.collection.us.sumologic.com/receiver/v1/http"
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000
                      },
                      {
                        "datasetFieldId": 1002
                      },
                      {
                        "datasetFieldId": 1023
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772
                      },
                      {
                        "propertyId": 349770
                      }
                    ]
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Provides information that you need to specify when creating a stream configuration.",
                "type": "object",
                "required": [
                  "streamName",
                  "groupId",
                  "contractId",
                  "properties",
                  "datasetFields",
                  "deliveryConfiguration",
                  "destination"
                ],
                "properties": {
                  "collectMidgress": {
                    "default": false,
                    "description": "Set to `true` to collect midgress traffic data within the Akamai platform, such as between two edge servers. Enable logging midgress data to get numeric values in the second place of the log line that indicate if the request was processed within the Akamai platform. When you [Get a stream](https://techdocs.akamai.com/datastream2/reference/get-stream) that logs midgress traffic, the response returns `collectMidgress` as `true` and lists the `isMidgress` data set field with other fields. See [Midgress traffic](https://techdocs.akamai.com/datastream2/v2/docs/data-set-parameters#midgress-traffic) for details. If this feature is not enabled on your account, contact the Akamai support team.",
                    "example": "{{collectMidgress}}",
                    "title": "Collect midgress",
                    "type": "boolean"
                  },
                  "contractId": {
                    "description": "Identifies the contract that has access to the product.a",
                    "example": "{{contractId}}",
                    "title": "Contract",
                    "type": "string"
                  },
                  "datasetFields": {
                    "description": "Identifiers of the data set fields that you want to receive in logs. In case of `STRUCTURED` format, the order of the identifiers define how the value for these fields appear in the log lines. See [Data set parameters](https://techdocs.akamai.com/datastream2/reference/data-set-parameters-1) for the complete list of the fields you can choose.",
                    "title": "Dataset fields",
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "datasetFieldId"
                      ],
                      "properties": {
                        "datasetFieldId": {
                          "description": "Identifies the field.",
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "deliveryConfiguration": {
                    "additionalProperties": false,
                    "description": "Provides information about the configuration of log lines, log file format, names of the log files sent to a destination, and delivery frequency for these files.",
                    "title": "Delivery configuration",
                    "type": "object",
                    "required": [
                      "format",
                      "frequency"
                    ],
                    "properties": {
                      "fieldDelimiter": {
                        "description": "A delimiter that separates data set fields in the log lines, either `SPACE` or `TAB`. Set this only for the `STRUCTURED` log file `format`.",
                        "type": "string",
                        "enum": [
                          "SPACE",
                          "TAB"
                        ]
                      },
                      "format": {
                        "description": "The format in which you want to receive log files. `STRUCTURED` or `JSON` are the currently available formats. When the delimiter is present in the request, you need to choose the `STRUCTURED` format.",
                        "type": "string",
                        "enum": [
                          "STRUCTURED",
                          "JSON"
                        ]
                      },
                      "frequency": {
                        "additionalProperties": false,
                        "description": "The frequency of collecting logs from each uploader and sending these logs to a destination.",
                        "type": "object",
                        "required": [
                          "intervalInSeconds"
                        ],
                        "properties": {
                          "intervalInSeconds": {
                            "description": "The interval in seconds (`30` or `60`) after which the system bundles log lines into a file and sends it to a destination.",
                            "type": "integer",
                            "enum": [
                              30,
                              60
                            ]
                          }
                        }
                      },
                      "uploadFilePrefix": {
                        "description": "The prefix of the log file that you want to send to a object-based destination. It's a string of at most 200 characters. If unspecified, it defaults to `ak`. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables), but doesn't support the `.` character. See [S3 naming conventions](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html), [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long), and [Google Cloud Storage object naming conventions](https://cloud.google.com/storage/docs/naming-objects).",
                        "type": "string"
                      },
                      "uploadFileSuffix": {
                        "description": "The suffix of the log file that you want to send to a object-based destination. It's a static string of at most 10 characters. If unspecified, it defaults to `ds`. This member doesn't support [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables), and the `.`, `/`, `%`, `?` characters. See [S3 naming conventions](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html), [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long), and [Google Cloud Storage object naming conventions](https://cloud.google.com/storage/docs/naming-objects).",
                        "maxLength": 10,
                        "type": "string"
                      }
                    }
                  },
                  "destination": {
                    "description": "The destination configuration in the stream to send logs. See [Destinations](https://techdocs.akamai.com/datastream2/reference/destinations) for details and features available for each destination.",
                    "example": "{{destination}}",
                    "title": "Destination",
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "description": "Provides details about the Azure Storage destination configuration in a stream. Note that DataStream 2 supports only streaming data to block objects. See [Azure Blob Storage](https://azure.microsoft.com/en-us/services/storage/blobs/#overview) in the Azure documentation.",
                        "title": "AZURE",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "accountName",
                          "accessKey",
                          "containerName",
                          "path"
                        ],
                        "properties": {
                          "accessKey": {
                            "description": "Either of the access keys for your Azure Storage account. See [View account access keys](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage?tabs=azure-portal) in the Azure documentation.",
                            "type": "string"
                          },
                          "accountName": {
                            "description": "Specifies the Azure Storage account name.",
                            "type": "string"
                          },
                          "containerName": {
                            "description": "Specifies the Azure Storage container name.",
                            "type": "string"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set this value to `AZURE` for this destination type.",
                            "type": "string",
                            "enum": [
                              "AZURE"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "path": {
                            "description": "The path to the folder within the Azure Storage container where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long) in the Azure documentation.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/Azure.yaml"
                        }
                      },
                      {
                        "additionalProperties": false,
                        "description": "Provides details about the Amazon S3 destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and saves an `Akamai_access_verification_[TimeStamp].txt` format file in your Amazon S3 folder. You can only see this file if the validation process is successful, and you have access to the Amazon S3 bucket and folder that you're trying to send logs to.",
                        "title": "S3",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "accessKey",
                          "secretAccessKey",
                          "region",
                          "bucket",
                          "path"
                        ],
                        "properties": {
                          "accessKey": {
                            "description": "The access key identifier that you use to authenticate requests to your Amazon S3 account. See the [Understanding and getting your AWS credentials](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html) in the Amazon S3 documentation.",
                            "type": "string"
                          },
                          "bucket": {
                            "description": "The name of the Amazon S3 bucket. See [Working with buckets in AWS](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html) in the Amazon S3 documentation.",
                            "type": "string"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set it to `S3` for this destination type.",
                            "type": "string",
                            "enum": [
                              "S3"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "path": {
                            "description": "The path to the folder within your Amazon S3 bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object keys](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html) in the Amazon S3 documentation for naming conventions.",
                            "type": "string"
                          },
                          "region": {
                            "description": "The AWS region where your Amazon S3 bucket resides. See [Regions, Availability Zones, and Local Zones in AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) in the Amazon S3 documentation.",
                            "type": "string"
                          },
                          "secretAccessKey": {
                            "description": "The secret access key identifier that you use to authenticate requests to your Amazon S3 account.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/S3.yaml"
                        }
                      },
                      {
                        "additionalProperties": false,
                        "description": "Provides detailed information about the Datadog destination that you can use in your stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. You can see the `validate connector test` data only if the destination validates, and you can access the destination storage.",
                        "title": "DATADOG",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "endpoint",
                          "authToken"
                        ],
                        "properties": {
                          "authToken": {
                            "description": "The API key for your Datadog account. See [View API keys in Datadog](https://docs.datadoghq.com/account_management/api-app-keys/#api-keys) in the Datadog documentation for details on how to create or fetch your Datadog API key.",
                            "type": "string"
                          },
                          "compressLogs": {
                            "default": false,
                            "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `false` by default.",
                            "type": "boolean"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set this value to `DATADOG` for this destination type.",
                            "type": "string",
                            "enum": [
                              "DATADOG"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "endpoint": {
                            "description": "The Datadog v1 endpoint URL where you want to send and store logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Datadog](https://techdocs.akamai.com/datastream2/v2/docs/stream-datadog#akamaized-hostname-as-endpoint), and [View Datadog logs endpoint](https://docs.datadoghq.com/logs/log_collection/?tab=http#logging-endpoints) in the Datadog documentation.",
                            "type": "string"
                          },
                          "service": {
                            "description": "The name of the application or service generating the log events in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) and [Services List](https://docs.datadoghq.com/tracing/visualization/services_list/) in the Datadog documentation.",
                            "type": "string"
                          },
                          "source": {
                            "description": "The name of the source or the technology of the logs in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) in the Datadog documentation.",
                            "type": "string"
                          },
                          "tags": {
                            "description": "The tags you can use to filter and group metrics in your Datadog account. Enter a comma-delimited list for more than one tag. This field also supports `<key>:<value>` combinations. See [Getting Started with Tags](https://docs.datadoghq.com/getting_started/tagging/) in the Datadog documentation.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/Datadog.yaml"
                        }
                      },
                      {
                        "additionalProperties": false,
                        "description": "Provides detailed information about the Splunk destination that you can use in your stream. Note that DataStream 2 currently supports only endpoint URLs ending with `collector/raw`. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                        "title": "SPLUNK",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "endpoint",
                          "eventCollectorToken"
                        ],
                        "properties": {
                          "caCert": {
                            "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification. If you set this member, the `mTlsEnabled` property replaces it in the response as `true`.",
                            "type": "string"
                          },
                          "clientCert": {
                            "description": "The digital certificate in the PEM format that authenticates requests to your destination. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                            "type": "string"
                          },
                          "clientKey": {
                            "description": "The private key in the non-encrypted PKCS8 format that authenticates with the back-end server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                            "type": "string"
                          },
                          "compressLogs": {
                            "default": true,
                            "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true `by default.",
                            "type": "boolean"
                          },
                          "customHeaderName": {
                            "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see the additional options discussed in [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#additional-options).",
                            "type": "string"
                          },
                          "customHeaderValue": {
                            "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see the additional options discussed in [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#additional-options).",
                            "type": "string"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set this value to `SPLUNK` for this destination type.",
                            "type": "string",
                            "enum": [
                              "SPLUNK"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "endpoint": {
                            "description": "The raw event Splunk URL where you want to store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Splunk](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#akamaized-hostname-as-endpoint).",
                            "type": "string"
                          },
                          "eventCollectorToken": {
                            "description": "The Event Collector token for your Splunk account. See [View usage of Event Collector token](https://docs.splunk.com/Documentation/Splunk/8.0.3/Data/UsetheHTTPEventCollector) in the Splunk documentation.",
                            "type": "string"
                          },
                          "tlsHostname": {
                            "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/Splunk.yaml"
                        }
                      },
                      {
                        "additionalProperties": false,
                        "description": "Provides detailed information about the Google Cloud Storage destination you can use in a stream. When validating this destination, DataStream uses the private access key to create an `Akamai_access_verification_[TimeStamp].txt` object file in your GCS bucket. You can only see this file if the destination validates, and you have access to the Google Cloud Storage bucket where you are trying to send logs.",
                        "title": "GCS",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "bucket",
                          "projectId",
                          "serviceAccountName",
                          "privateKey"
                        ],
                        "properties": {
                          "bucket": {
                            "description": "The name of the storage bucket you created in your Google Cloud account. See [Bucket naming conventions](https://cloud.google.com/storage/docs/naming-buckets) in the Google Cloud documentation.",
                            "type": "string"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set it to `GCS` for this destination type.",
                            "type": "string",
                            "enum": [
                              "GCS"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "path": {
                            "description": "The path to the folder within your Google Cloud bucket where you want to store logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object naming guidelines](https://cloud.google.com/storage/docs/naming-objects) in the Google Cloud documentations.",
                            "type": "string"
                          },
                          "privateKey": {
                            "description": "The contents of the JSON service account keys you generated and downloaded in your Google Cloud Storage account. See [Creating service account keys](https://cloud.google.com/iam/docs/creating-managing-service-account-keys#creating_service_account_keys) in the Google Cloud documentation.",
                            "type": "string"
                          },
                          "projectId": {
                            "description": "The unique ID of your Google Cloud project.",
                            "type": "string"
                          },
                          "serviceAccountName": {
                            "description": "The name of the service account with the `storage.object.create` permission or Storage Object Creator role.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/GCS.yaml"
                        }
                      },
                      {
                        "additionalProperties": false,
                        "description": "Provides detailed information about the custom HTTPS endpoint you can use as a destination for a stream. This includes basic or no authentication, and whether the stream sends uncompressed or gzip-compressed log files. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                        "title": "HTTPS",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "authenticationType",
                          "endpoint"
                        ],
                        "properties": {
                          "authenticationType": {
                            "description": "Either `NONE` for no authentication, or `BASIC`. For basic authentication, provide the username and password you set in your custom HTTPS endpoint.",
                            "type": "string",
                            "enum": [
                              "BASIC",
                              "NONE"
                            ]
                          },
                          "caCert": {
                            "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification. If you set this member, the `mTlsEnabled` property replaces it in the response as `true`.",
                            "type": "string"
                          },
                          "clientCert": {
                            "description": "The PEM-formatted digital certificate you want to authenticate requests to your destination with. If you want to use mutual authentication, you need to provide both the client certificate and the client key. If you pass this member, the `mTlsEnabled` member replaces it in the response as `true`.",
                            "type": "string"
                          },
                          "clientKey": {
                            "description": "The private key in the non-encrypted PKCS8 format that authenticates with the back-end server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                            "type": "string"
                          },
                          "compressLogs": {
                            "default": false,
                            "description": "Enables gzip compression for a log file sent to a destination. This member's value is `false` by default.",
                            "type": "boolean"
                          },
                          "contentType": {
                            "description": "The type of the resource passed in the request's custom header. For details, see the additional options discussed in [Stream logs to a HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#additional-options).",
                            "type": "string"
                          },
                          "customHeaderName": {
                            "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see the additional options discussed in [Stream logs to a HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#additional-options).",
                            "type": "string"
                          },
                          "customHeaderValue": {
                            "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see the additional options discussed in [Stream logs to a HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#additional-options).",
                            "type": "string"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set it to `HTTPS` for this destination type.",
                            "type": "string",
                            "enum": [
                              "HTTPS"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "endpoint": {
                            "description": "Enter the secure URL where you want to send and store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to a custom HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#akamaized-hostname-as-endpoint).",
                            "type": "string"
                          },
                          "password": {
                            "description": "Enter the password you set in your custom HTTPS endpoint for authentication.",
                            "type": "string"
                          },
                          "tlsHostname": {
                            "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                            "type": "string"
                          },
                          "userName": {
                            "description": "Enter the valid username you set in your custom HTTPS endpoint for authentication.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/HTTPS.yaml"
                        }
                      },
                      {
                        "additionalProperties": false,
                        "description": "Provides detailed information about the Sumo Logic destination in a stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                        "title": "SUMO_LOGIC",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "endpoint",
                          "collectorCode"
                        ],
                        "properties": {
                          "collectorCode": {
                            "description": "The unique HTTP collector code of your Sumo Logic endpoint.",
                            "type": "string"
                          },
                          "compressLogs": {
                            "default": true,
                            "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                            "type": "boolean"
                          },
                          "contentType": {
                            "description": "The type of the resource passed in the request's custom header. For details, see the additional options discussed in [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#additional-options).",
                            "type": "string"
                          },
                          "customHeaderName": {
                            "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see the additional options discussed in [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#additional-options).",
                            "type": "string"
                          },
                          "customHeaderValue": {
                            "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see the additional options discussed in [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#additional-options).",
                            "type": "string"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set this value to `SUMO_LOGIC` for this destination type.",
                            "type": "string",
                            "enum": [
                              "SUMO_LOGIC"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "endpoint": {
                            "description": "The Sumo Logic HTTP Source URL where you want to send your logs. You should follow the `https://<SumoEndpoint>/receiver/v1/http` format and set the collector code in the `collectorCode` member. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#akamaized-hostname-as-endpoint), and [Upload Metrics to an HTTP Source](https://help.sumologic.com/docs/send-data/hosted-collectors/http-source/upload-metrics/) in the Sumo Logic documentation.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/SumoLogic.yaml"
                        }
                      },
                      {
                        "additionalProperties": false,
                        "description": "Provides details about the Oracle Cloud Storage destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and tries to save an `Akamai_access_verification_[TimeStamp].txt file in your Oracle Cloud Storage folder. You can only see this file if the validation process is successful, and you have access to the Oracle Cloud Storage bucket and folder that you're trying to send logs to.",
                        "title": "ORACLE_CLOUD_STORAGE",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "accessKey",
                          "secretAccessKey",
                          "region",
                          "bucket",
                          "path",
                          "namespace"
                        ],
                        "properties": {
                          "accessKey": {
                            "description": "The access key identifier that you use to authenticate requests to your Oracle Cloud account. See [Managing user credentials](https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm) in the Oracle Cloud Storage documentation.",
                            "type": "string"
                          },
                          "bucket": {
                            "description": "The name of the Oracle Cloud Storage bucket. See [Working with buckets](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingbuckets.htm) in the Oracle Cloud Storage documentation.",
                            "type": "string"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set it to `ORACLE_CLOUD_STORAGE` for this destination type.",
                            "type": "string",
                            "enum": [
                              "ORACLE_CLOUD_STORAGE"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "The namespace of your Oracle Cloud Storage account. See [Understanding Object Storage namespaces](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/understandingnamespaces.htm) in the Oracle Cloud Storage documentation.",
                            "type": "string"
                          },
                          "path": {
                            "description": "The path to the folder within your Oracle Cloud Storage bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Managing Objects](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingobjects.htm) in the Oracle Cloud Storage documentation.",
                            "type": "string"
                          },
                          "region": {
                            "description": "The Oracle Cloud Storage region where your bucket resides. See [Regions and availability domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm) in the Oracle Cloud Storage documentation.",
                            "type": "string"
                          },
                          "secretAccessKey": {
                            "description": "The secret access key identifier that you use to authenticate requests to your Oracle Cloud account.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/OCS.yaml"
                        }
                      },
                      {
                        "additionalProperties": false,
                        "description": "Provides detailed information about the Loggly destination that you can use in your stream.",
                        "title": "LOGGLY",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "endpoint",
                          "authToken"
                        ],
                        "properties": {
                          "authToken": {
                            "description": "The custom token for your Loggly endpoint. The token is the value from the bulk endpoint URL that comes after the `/bulk` segment, and before `tags`.",
                            "type": "string"
                          },
                          "contentType": {
                            "description": "The type of the resource passed in the request's custom header. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#additional-options) in the DataStream user guide.",
                            "type": "string"
                          },
                          "customHeaderName": {
                            "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#additional-options) in the DataStream user guide.",
                            "type": "string"
                          },
                          "customHeaderValue": {
                            "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#additional-options) in the DataStream user guide.",
                            "type": "string"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set it to `LOGGLY` for this destination type.",
                            "type": "string",
                            "enum": [
                              "LOGGLY"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "endpoint": {
                            "description": "The Loggly bulk endpoint URL in the `https://hostname.loggly.com/bulk/` format. Set the endpoint token code in the `authToken` field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Loggly](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#akamaized-hostname-as-endpoint).",
                            "type": "string"
                          },
                          "tags": {
                            "description": "The tags you can use to segment and filter log events in Loggly. See [Tags](https://documentation.solarwinds.com/en/success_center/loggly/content/admin/tags.htm) in the Loggly documentation.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/Loggly.yaml"
                        }
                      },
                      {
                        "additionalProperties": false,
                        "description": "Provides detailed information about the Elasticsearch destination that you can use in your stream.",
                        "title": "ELASTICSEARCH",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "endpoint",
                          "userName",
                          "password",
                          "indexName"
                        ],
                        "properties": {
                          "caCert": {
                            "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification. If you pass this member, the `mTlsEnabled` member replaces it in the response as `true`.",
                            "type": "string"
                          },
                          "clientCert": {
                            "description": "The PEM-formatted digital certificate you want to authenticate requests to your destination with. If you want to use mutual authentication, you need to provide both the client certificate and the client key. If you pass this member, the `mTlsEnabled` member replaces it in the response as `true`.",
                            "type": "string"
                          },
                          "clientKey": {
                            "description": "The private key in the non-encrypted PKCS8 format you want to use to authenticate with the backend server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                            "type": "string"
                          },
                          "contentType": {
                            "description": "The type of the resource passed in the request's custom header. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#additional-options) in the DataStream user guide.",
                            "type": "string"
                          },
                          "customHeaderName": {
                            "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#section-additional-options) in the DataStream user guide.",
                            "type": "string"
                          },
                          "customHeaderValue": {
                            "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#section-additional-options) in the DataStream user guide.",
                            "type": "string"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set it to `ELASTICSEARCH` for this destination type.",
                            "type": "string",
                            "enum": [
                              "ELASTICSEARCH"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "endpoint": {
                            "description": "The Elasticsearch bulk endpoint URL in the `https://hostname.elastic-cloud.com:9243/_bulk/` format. Set `indexName` in the appropriate field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Elasticsearch](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#akamaized-hostname-as-endpoint).",
                            "type": "string"
                          },
                          "indexName": {
                            "description": "The name of the index within an Elastic Cloud cluster where you want to store log files. This member supports [Dynamic index names](https://techdocs.akamai.com/datastream2/docs/stream-logs-to-elasticsearch#dynamic-index-name).",
                            "type": "string"
                          },
                          "password": {
                            "description": "The Elasticsearch basic access authentication password.",
                            "type": "string"
                          },
                          "tlsHostname": {
                            "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                            "type": "string"
                          },
                          "userName": {
                            "description": "The Elasticsearch basic access authentication username.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/Elasticsearch.yaml"
                        }
                      },
                      {
                        "additionalProperties": false,
                        "description": "Provides detailed information about the New Relic destination that you can use in your stream.",
                        "title": "NEWRELIC",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "endpoint",
                          "authToken"
                        ],
                        "properties": {
                          "authToken": {
                            "description": "The unique personal API key that belongs to your New Relic account.",
                            "type": "string"
                          },
                          "contentType": {
                            "description": "The type of the resource passed in the request's custom header. For details, see [Additional options](https://techdocs.akamai.com/datastream2/docs/stream-newrelic#section-additional-options) in the DataStream user guide.",
                            "type": "string"
                          },
                          "customHeaderName": {
                            "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#additional-options) in the DataStream user guide.",
                            "type": "string"
                          },
                          "customHeaderValue": {
                            "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#additional-options) in the DataStream user guide.",
                            "type": "string"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set it to `NEWRELIC` for this destination type.",
                            "type": "string",
                            "enum": [
                              "NEWRELIC"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "endpoint": {
                            "description": "The New Relic Log API endpoint URL in the `https://log-api.newrelic.com/log/v1/` format. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to New Relic](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#akamaized-hostname-as-endpoint).",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/NewRelic.yaml"
                        }
                      },
                      {
                        "additionalProperties": false,
                        "description": "Provides details about the S3-compatible destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and saves an `Akamai_access_verification_[TimeStamp].txt` format file in your S3-compatible folder. You can only see this file if the validation process is successful, and you have access to the S3-compatible bucket and folder that you're trying to send logs to. Before configuring your stream to send logs to this destination, make sure you create a S3-compatible storage bucket, and store the access key together with the secret access key.",
                        "title": "S3_COMPATIBLE",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "accessKey",
                          "secretAccessKey",
                          "bucket",
                          "region",
                          "endpoint"
                        ],
                        "properties": {
                          "accessKey": {
                            "description": "The access key identifier of the S3-compatible object storage bucket.",
                            "type": "string"
                          },
                          "bucket": {
                            "description": "The name of the S3-compatible object storage bucket.",
                            "type": "string"
                          },
                          "compressLogs": {
                            "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                            "type": "boolean"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set it to `S3_COMPATIBLE` for this destination type.",
                            "type": "string",
                            "enum": [
                              "S3_COMPATIBLE"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "endpoint": {
                            "description": "The scheme-qualified host of your S3-compatible object storage bucket.",
                            "type": "string"
                          },
                          "path": {
                            "description": "The path to the folder within your S3-compatible object storage bucket where you want to store logs. This value allows [Dynamic time variables](https://techdocs.akamai.com/datastream2/docs/dynamic-time-variables).",
                            "type": "string"
                          },
                          "region": {
                            "description": "The physical storage location of your S3-compatible object storage bucket.",
                            "type": "string"
                          },
                          "secretAccessKey": {
                            "description": "The secret access key identifier of the S3-compatible object storage bucket.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/S3Compatible.yaml"
                        }
                      }
                    ]
                  },
                  "groupId": {
                    "description": "Identifies the group that has access to the product and this stream configuration.",
                    "example": "{{groupId}}",
                    "type": "integer"
                  },
                  "notificationEmails": {
                    "description": "A list of e-mail addresses where you want to send notifications about activations and deactivations of the stream. You can omit this member and activate or deactivate the stream without notifications.",
                    "title": "Notification emails",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "properties": {
                    "description": "Identifies the properties that belong to the same product and you want to monitor in the stream. Note that a stream can only log data for active properties. You can [activate a property](https://developer.akamai.com/api/core_features/property_manager/v1.html#postpropertyactivations) in Property Manager.",
                    "title": "Properties",
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "propertyId"
                      ],
                      "properties": {
                        "propertyId": {
                          "description": "The identifier of the property.",
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "streamName": {
                    "description": "The name of the stream.",
                    "example": "{{streamName}}",
                    "maxLength": 1000,
                    "title": "Stream name",
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/SaveStreamRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The response confirms the stream has been created and returns its details.",
            "content": {
              "application/json": {
                "example": {
                  "collectMidgress": true,
                  "contractId": "K-0N7RAK7",
                  "createdBy": "hgildong",
                  "createdDate": "2022-02-05T13:31:30Z",
                  "groupId": 21484,
                  "latestVersion": 1,
                  "modifiedBy": "hgildong",
                  "modifiedDate": "2022-02-05T13:31:30Z",
                  "productId": "Dynamic_Site_Accelerator",
                  "streamId": 7050,
                  "streamName": "diagnostics-log-stream",
                  "streamStatus": "ACTIVATING",
                  "streamVersion": 1,
                  "notificationEmails": [
                    "useremail1@domain.com",
                    "useremail2@domain.com"
                  ],
                  "deliveryConfiguration": {
                    "fieldDelimiter": "SPACE",
                    "format": "STRUCTURED",
                    "uploadFilePrefix": "logs",
                    "uploadFileSuffix": "ds",
                    "frequency": {
                      "intervalInSeconds": 30
                    }
                  },
                  "destination": {
                    "bucket": "datastream.akamai.com",
                    "compressLogs": true,
                    "destinationType": "S3",
                    "displayName": "S3Destination",
                    "path": "ds2-logs",
                    "region": "ap-south-1"
                  },
                  "datasetFields": [
                    {
                      "datasetFieldId": 1000,
                      "datasetFieldJsonKey": "cp",
                      "datasetFieldName": "CP code"
                    },
                    {
                      "datasetFieldId": 1002,
                      "datasetFieldJsonKey": "reqId",
                      "datasetFieldName": "Request ID"
                    },
                    {
                      "datasetFieldId": 1023,
                      "datasetFieldJsonKey": "cookie",
                      "datasetFieldName": "Cookie"
                    }
                  ],
                  "properties": [
                    {
                      "propertyId": 349772,
                      "propertyName": "example.com"
                    },
                    {
                      "propertyId": 349770,
                      "propertyName": "example.akamai.com"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Provides detailed information about the latest configuration version of a stream. It provides descriptions of the data set fields selected in the version, identifiers of properties they collect logs for, configuration of the destination where they deliver logs, and structure of these log lines. It also informs whether this version is active.",
                  "type": "object",
                  "required": [
                    "contractId",
                    "createdBy",
                    "createdDate",
                    "datasetFields",
                    "deliveryConfiguration",
                    "destination",
                    "groupId",
                    "latestVersion",
                    "modifiedBy",
                    "modifiedDate",
                    "productId",
                    "properties",
                    "streamId",
                    "streamName",
                    "streamStatus",
                    "streamVersion"
                  ],
                  "properties": {
                    "collectMidgress": {
                      "description": "Indicates if you've opted to capture midgress traffic within the Akamai platform, such as between two edge servers.",
                      "type": "boolean"
                    },
                    "contractId": {
                      "description": "Identifies the contract that the stream belongs to.",
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The username who created the stream.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "An ISO 8601 timestamp marking when the stream was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "datasetFields": {
                      "description": "A list of data set fields selected that the stream monitors in logs. The order of the identifiers define how the value for these fields appear in the log lines.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "datasetFieldId",
                          "datasetFieldName",
                          "datasetFieldJsonKey"
                        ],
                        "properties": {
                          "datasetFieldId": {
                            "description": "Identifies the field.",
                            "type": "integer"
                          },
                          "datasetFieldJsonKey": {
                            "description": "Specifies the JSON key for the field in a log line. You can get this value only when you run the [List data set fields](https://techdocs.akamai.com/datastream2/reference/get-dataset-fields) or [Get a stream](https://techdocs.akamai.com/datastream2/reference/get-stream) operation for a stream in the `JSON` format.",
                            "type": "string"
                          },
                          "datasetFieldName": {
                            "description": "A name of the data set field.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "deliveryConfiguration": {
                      "additionalProperties": false,
                      "description": "The configuration of log lines, names of the files sent to a destination, and delivery frequency for these files.",
                      "type": "object",
                      "required": [
                        "format",
                        "frequency"
                      ],
                      "properties": {
                        "fieldDelimiter": {
                          "description": "A delimiter that separates data set fields in the log lines, either `SPACE` or `TAB`. Set this only for the `STRUCTURED` log file `format`.",
                          "type": "string",
                          "enum": [
                            "SPACE",
                            "TAB"
                          ]
                        },
                        "format": {
                          "description": "The format in which you want to receive log files. `STRUCTURED` or `JSON` are the currently available formats.",
                          "type": "string",
                          "enum": [
                            "STRUCTURED",
                            "JSON"
                          ]
                        },
                        "frequency": {
                          "additionalProperties": false,
                          "description": "The frequency of collecting logs from each uploader and sending these logs to a destination.",
                          "type": "object",
                          "required": [
                            "intervalInSeconds"
                          ],
                          "properties": {
                            "intervalInSeconds": {
                              "description": "The interval in seconds (`30` or `60`) after which the system bundles log lines into a file and sends it to a destination.",
                              "type": "integer",
                              "enum": [
                                30,
                                60
                              ]
                            }
                          }
                        },
                        "uploadFilePrefix": {
                          "default": "ak",
                          "description": "The prefix of the log file that you want to send to a object-based destination. It's a string of at most 200 characters. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). If unspecified, it defaults to `ak`.",
                          "type": "string"
                        },
                        "uploadFileSuffix": {
                          "default": "ds",
                          "description": "The suffix of the log file that you want to send to a object-based destination. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). It's a static string of at most 10 characters. If unspecified, it defaults to `ds`.",
                          "type": "string"
                        }
                      }
                    },
                    "destination": {
                      "description": "Provides detailed information about the destination's configuration in the stream to send logs.",
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Azure Storage destination configuration in a stream.",
                          "title": "AZURE",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "compressLogs",
                            "displayName",
                            "path",
                            "accountName",
                            "containerName"
                          ],
                          "properties": {
                            "accountName": {
                              "description": "Specifies the Azure Storage account name.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "containerName": {
                              "description": "Specifies the Azure Storage container name.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `AZURE` for this destination type.",
                              "type": "string",
                              "enum": [
                                "AZURE"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within the Azure Storage container where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long) in the Azure documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/AzureSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Amazon S3 destination in a stream.",
                          "title": "S3",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "compressLogs",
                            "displayName",
                            "path",
                            "bucket",
                            "region"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the Amazon S3 bucket. See [Working with buckets in AWS](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html) in the Amazon S3 documentation.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `S3` for this destination type.",
                              "type": "string",
                              "enum": [
                                "S3"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your Amazon S3 bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object keys](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html) in the Amazon S3 documentation for naming conventions.",
                              "type": "string"
                            },
                            "region": {
                              "description": "The AWS region where your Amazon S3 bucket resides. See [Regions, Availability Zones, and Local Zones in AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) in the Amazon S3 documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/S3SavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Datadog destination configuration in a stream.",
                          "title": "DATADOG",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "default": false,
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `false` by default.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `DATADOG` for this destination type.",
                              "type": "string",
                              "enum": [
                                "DATADOG"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Datadog v1 endpoint URL where you want to send and store logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Datadog](https://techdocs.akamai.com/datastream2/v2/docs/stream-datadog#akamaized-hostname-as-endpoint), and [View Datadog logs endpoint](https://docs.datadoghq.com/logs/log_collection/?tab=http#logging-endpoints) in the Datadog documentation.",
                              "type": "string"
                            },
                            "service": {
                              "description": "The name of the application or service generating the log events in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) and [Services List](https://docs.datadoghq.com/tracing/visualization/services_list/) in the Datadog documentation.",
                              "type": "string"
                            },
                            "source": {
                              "description": "The name of the source or the technology of the logs in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) in the Datadog documentation.",
                              "type": "string"
                            },
                            "tags": {
                              "description": "The tags you can use to filter and group metrics in your Datadog account. Enter a comma-delimited list for more than one tag. This field also supports `<key>:<value>` combinations. See [Getting Started with Tags](https://docs.datadoghq.com/getting_started/tagging/) in the Datadog documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/DatadogSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides detailed information about the Splunk destination that you can use in your stream. Note that DataStream 2 currently supports only endpoint URLs ending with `collector/raw`. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                          "title": "SPLUNK",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "default": true,
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                              "type": "boolean"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `SPLUNK` for this destination type.",
                              "type": "string",
                              "enum": [
                                "SPLUNK"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The raw event Splunk URL where you want to store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Splunk](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "mTlsEnabled": {
                              "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                              "type": "boolean"
                            },
                            "tlsHostname": {
                              "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/SplunkSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Google Cloud Storage destination in a stream.",
                          "title": "GCS",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "bucket",
                            "projectId",
                            "serviceAccountName",
                            "compressLogs"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the storage bucket you created in your Google Cloud account. See [Bucket naming conventions](https://cloud.google.com/storage/docs/naming-buckets) in the Google Cloud documentation.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `GCS` for this destination type.",
                              "type": "string",
                              "enum": [
                                "GCS"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your Google Cloud bucket where you want to store logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object naming guidelines](https://cloud.google.com/storage/docs/naming-objects) in the Google Cloud documentation.",
                              "type": "string"
                            },
                            "projectId": {
                              "description": "The unique ID of your Google Cloud project.",
                              "type": "string"
                            },
                            "serviceAccountName": {
                              "description": "The name of the service account with the `storage.object.create` permission or Storage Object Creator role.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/GCSSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the custom HTTPS endpoint destination in a stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                          "title": "HTTPS",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "authenticationType",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "authenticationType": {
                              "description": "Either `NONE` for no authentication, or `BASIC`. For basic authentication, provide the username and password you set in your custom HTTPS endpoint.",
                              "type": "string",
                              "enum": [
                                "BASIC",
                                "NONE"
                              ]
                            },
                            "compressLogs": {
                              "default": false,
                              "description": "Enables gzip compression for a log file sent to a destination. This member's value is `false` by default.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `HTTPS` for this destination type.",
                              "type": "string",
                              "enum": [
                                "HTTPS"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "Enter the secure URL where you want to send and store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to a custom HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "mTlsEnabled": {
                              "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                              "type": "boolean"
                            },
                            "tlsHostname": {
                              "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/HTTPSSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Oracle Cloud Storage destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and tries to save an `akamai_write_test_2147483647.txt` file in your Oracle Cloud Storage folder. You can only see this file if the validation process is successful, and you have access to the Oracle Cloud Storage bucket and folder that you're trying to send logs to.",
                          "title": "ORACLE_CLOUD_STORAGE",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "region",
                            "bucket",
                            "path",
                            "namespace",
                            "compressLogs"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the Oracle Cloud Storage bucket. See [Working with buckets](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingbuckets.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `ORACLE_CLOUD_STORAGE` for this destination type.",
                              "type": "string",
                              "enum": [
                                "ORACLE_CLOUD_STORAGE"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "The namespace of your Oracle Cloud Storage account. See [Understanding Object Storage namespaces](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/understandingnamespaces.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your Oracle Cloud Storage bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Managing Objects](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingobjects.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            },
                            "region": {
                              "description": "The Oracle Cloud Storage region where your bucket resides. See [Regions and availability domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/OCSSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides detailed information about the Sumo Logic destination that you can use in your stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                          "title": "SUMO_LOGIC",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "collectorCode": {
                              "description": "The unique HTTP collector code of your Sumo Logic endpoint.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "default": true,
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the custom header of the request.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the custom header of the request that can contain only alphanumeric, dash, and underscore characters. See [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic) for details.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The contents of the custom header passed with the request that contain information about the client connection. See [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic) for details.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `SUMO_LOGIC` for this destination type.",
                              "type": "string",
                              "enum": [
                                "SUMO_LOGIC"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Sumo Logic HTTP Source URL where you want to send your logs. You should follow the `https://<SumoEndpoint>/receiver/v1/http` format and set the collector code in the `collectorCode` member.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/SumoLogicSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the loggly endpoint destination in a stream.",
                          "title": "LOGGLY",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `LOGGLY` for this destination type.",
                              "type": "string",
                              "enum": [
                                "LOGGLY"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Loggly bulk endpoint URL in the `https://hostname.loggly.com/bulk/` format. Set the endpoint code in the `authToken` field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Loggly](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "tags": {
                              "description": "The tags you can use to segment and filter log events in Loggly. See [Tags](https://documentation.solarwinds.com/en/success_center/loggly/content/admin/tags.htm) in the Loggly documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/LogglySavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Elasticsearch endpoint destination in a stream.",
                          "title": "ELASTICSEARCH",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `ELASTICSEARCH` for this destination type.",
                              "type": "string",
                              "enum": [
                                "ELASTICSEARCH"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Elasticsearch bulk endpoint URL in the `https://hostname.elastic-cloud.com:9243/_bulk/` format. Set `indexName` in the appropriate field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Elasticsearch][Stream logs to Elasticsearch](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#section-akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "mTlsEnabled": {
                              "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                              "type": "boolean"
                            },
                            "tlsHostname": {
                              "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/ElasticsearchSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the New Relic endpoint destination in a stream.",
                          "title": "NEWRELIC",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `NEWRELIC` for this destination type.",
                              "type": "string",
                              "enum": [
                                "NEWRELIC"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The New Relic Log API endpoint URL in the `https://log-api.newrelic.com/log/v1/` format. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to New Relic](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/NewRelicSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the S3-compatible destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and saves an `Akamai_access_verification_[TimeStamp].txt` format file in your S3-compatible folder. You can only see this file if the validation process is successful, and you have access to the S3-compatible bucket and folder that you're trying to send logs to. Before configuring your stream to send logs to this destination, make sure you create a S3-compatible storage bucket, and store the access key together with the secret access key.",
                          "title": "S3_COMPATIBLE",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "bucket",
                            "region",
                            "endpoint"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the S3-compatible object storage bucket.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `S3_COMPATIBLE` for this destination type.",
                              "type": "string",
                              "enum": [
                                "S3_COMPATIBLE"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The scheme-qualified host of your S3-compatible object storage bucket.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your S3-compatible object storage bucket where you want to store logs. This value allows [Dynamic time variables](https://techdocs.akamai.com/datastream2/docs/dynamic-time-variables).",
                              "type": "string"
                            },
                            "region": {
                              "description": "The physical storage location of your S3-compatible object storage bucket.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/S3CompatibleSavedDestination.yaml"
                          }
                        }
                      ]
                    },
                    "groupId": {
                      "description": "Identifies the group that has access to the product and that you created the stream configuration for. When editing a stream, the value you pass is ignored as you can't change the group for an existing stream.",
                      "type": "integer"
                    },
                    "latestVersion": {
                      "description": "Identifies the latest configuration version of the stream.",
                      "type": "integer"
                    },
                    "modifiedBy": {
                      "description": "The username who modified the stream.",
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "The date and time in the ISO 8601 format when the stream was modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "notificationEmails": {
                      "description": "A comma-delimited list of email addresses where the system sends notifications about activations and deactivations of the stream.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "productId": {
                      "description": "The ID of the product that you created stream for.",
                      "type": "string"
                    },
                    "properties": {
                      "description": "Identifies the properties that you monitor in the stream.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "propertyId",
                          "propertyName"
                        ],
                        "properties": {
                          "propertyId": {
                            "description": "The identifier of the property.",
                            "type": "integer"
                          },
                          "propertyName": {
                            "description": "The descriptive label for the property.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "streamId": {
                      "description": "Identifies the stream.",
                      "type": "integer"
                    },
                    "streamName": {
                      "description": "The name of the stream.",
                      "type": "string"
                    },
                    "streamStatus": {
                      "description": "Indicates if the stream is `ACTIVATED` or `DEACTIVATED`. `INACTIVE`, `ACTIVATING`, `ACTIVATED`, `DEACTIVATING`, or `DEACTIVATED`.",
                      "type": "string",
                      "enum": [
                        "INACTIVE",
                        "ACTIVATING",
                        "ACTIVATED",
                        "DEACTIVATING",
                        "DEACTIVATED"
                      ]
                    },
                    "streamVersion": {
                      "description": "Identifies the configuration version of the stream.",
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/StreamDetail.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Activates the stream at the time of the request, `false` by default. When you [Edit a stream](https://techdocs.akamai.com/datastream2/reference/put-stream) or [Patch a stream](https://techdocs.akamai.com/datastream2/reference/patch-stream) that is active, you need to set this member to `true`.",
            "example": "{{activate}}",
            "in": "query",
            "name": "activate",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/activate-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Returns the latest versions of the stream configurations for all groups within your account. You can use the `groupId` parameter to view the latest versions of all configurations in a specific group, and up to five property names as the `propertyName` parameter to get streams for specific properties.",
        "operationId": "get-streams",
        "summary": "List streams",
        "tags": [
          "Streams"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's DataStream 2 API",
          "url": "https://techdocs.akamai.com/datastream2/reference/get-streams"
        },
        "responses": {
          "200": {
            "description": "The response lists streams.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Lists details for latest versions of streams within a group.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Provides basic information about the latest version of a stream. Apart from contextual information and the activation status, it provides names of the properties the stream monitors.",
                    "type": "object",
                    "required": [
                      "contractId",
                      "createdBy",
                      "createdDate",
                      "groupId",
                      "latestVersion",
                      "modifiedBy",
                      "modifiedDate",
                      "productId",
                      "properties",
                      "streamId",
                      "streamName",
                      "streamStatus",
                      "streamVersion"
                    ],
                    "properties": {
                      "contractId": {
                        "description": "Identifies the contract that the stream belongs to.",
                        "type": "string"
                      },
                      "createdBy": {
                        "description": "The username who created the stream.",
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "An ISO 8601 timestamp marking when the stream was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "groupId": {
                        "description": "Identifies the group where the stream is created.",
                        "type": "integer"
                      },
                      "latestVersion": {
                        "description": "Identifies the latest version of the stream.",
                        "type": "integer"
                      },
                      "modifiedBy": {
                        "description": "The username who modified the stream.",
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "The date and time in the ISO 8601 format when the stream was modified.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "productId": {
                        "description": "The ID of the product that you created stream for.",
                        "type": "string"
                      },
                      "properties": {
                        "description": "Identifies the properties that you monitor in the stream.",
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "propertyId",
                            "propertyName"
                          ],
                          "properties": {
                            "propertyId": {
                              "description": "The identifier of the property.",
                              "type": "integer"
                            },
                            "propertyName": {
                              "description": "The descriptive label for the property.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "streamId": {
                        "description": "Identifies the stream.",
                        "type": "integer"
                      },
                      "streamName": {
                        "description": "The name of the stream.",
                        "type": "string"
                      },
                      "streamStatus": {
                        "description": "Indicates if the stream version is `INACTIVE`, `ACTIVATING`, `ACTIVATED`, `DEACTIVATING`, or `DEACTIVATED`.",
                        "type": "string",
                        "enum": [
                          "INACTIVE",
                          "ACTIVATING",
                          "ACTIVATED",
                          "DEACTIVATING",
                          "DEACTIVATED"
                        ]
                      },
                      "streamVersion": {
                        "description": "Identifies the version of the stream.",
                        "type": "integer"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/Stream.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/Streams.yaml"
                  }
                },
                "example": [
                  {
                    "contractId": "C-0N7RAC7",
                    "createdBy": "mrossi",
                    "createdDate": "2022-02-05T13:31:30Z",
                    "groupId": 21483,
                    "latestVersion": 2,
                    "modifiedBy": "szhang",
                    "modifiedDate": "2022-02-05T13:31:30Z",
                    "productId": "Dynamic_Site_Accelerator",
                    "streamId": 4608,
                    "streamName": "Stream1",
                    "streamStatus": "DEACTIVATED",
                    "streamVersion": 2,
                    "properties": [
                      {
                        "propertyId": 349772,
                        "propertyName": "eib1.com"
                      }
                    ]
                  },
                  {
                    "contractId": "K-0N7RAK7",
                    "createdBy": "szhang",
                    "createdDate": "2022-01-31T08:03:18Z",
                    "groupId": 21483,
                    "latestVersion": 1,
                    "modifiedBy": "jkowalski",
                    "modifiedDate": "2022-01-31T08:05:44Z",
                    "productId": "Web_Application_Accelerator",
                    "streamId": 7050,
                    "streamName": "Datasets Change",
                    "streamStatus": "ACTIVATED",
                    "streamVersion": 1,
                    "properties": [
                      {
                        "propertyId": 349772,
                        "propertyName": "eip.jsmith.com"
                      },
                      {
                        "propertyId": 349772,
                        "propertyName": "eip.jsmith3.com"
                      }
                    ]
                  },
                  {
                    "contractId": "K-0N7RAK7",
                    "createdBy": "jsmith",
                    "createdDate": "2022-01-31T08:28:32Z",
                    "groupId": 21483,
                    "latestVersion": 2,
                    "modifiedBy": "adevi",
                    "modifiedDate": "2022-01-31T08:36:43Z",
                    "productId": "Download_Delivery",
                    "streamId": 4602,
                    "streamName": "Stream2",
                    "streamStatus": "ACTIVATED",
                    "streamVersion": 2,
                    "properties": [
                      {
                        "propertyId": 349772,
                        "propertyName": "customp.com"
                      }
                    ]
                  },
                  {
                    "contractId": "K-0N7RAK7",
                    "createdBy": "jkowalski",
                    "createdDate": "2022-01-31T10:12:13Z",
                    "groupId": 21483,
                    "latestVersion": 2,
                    "modifiedBy": "jsmith",
                    "modifiedDate": "2022-01-31T10:12:13Z",
                    "productId": "Adaptive_Media_Delivery",
                    "streamId": 5258,
                    "streamName": "Stream3",
                    "streamStatus": "ACTIVATED",
                    "streamVersion": 2,
                    "properties": [
                      {
                        "propertyId": 349772,
                        "propertyName": "eib2.com"
                      },
                      {
                        "propertyId": 349772,
                        "propertyName": "eib1.customp.com"
                      }
                    ]
                  },
                  {
                    "contractId": "K-0N7RAK7",
                    "createdBy": "mrossi",
                    "createdDate": "2022-02-01T13:30:51Z",
                    "groupId": 21483,
                    "latestVersion": 1,
                    "modifiedBy": "jkowalski",
                    "modifiedDate": "2022-02-01T13:30:51Z",
                    "productId": "Adaptive_Media_Delivery",
                    "streamId": 5252,
                    "streamName": "Stream4",
                    "streamStatus": "INACTIVE",
                    "streamVersion": 1,
                    "properties": [
                      {
                        "propertyId": 349772,
                        "propertyName": "eib.customp.com"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Uniquely identifies the group that can access the product.",
            "example": "{{groupId}}",
            "in": "query",
            "name": "groupId",
            "schema": {
              "example": 21483,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/groupId-query.yaml"
            }
          },
          {
            "description": "Uniquely identifies the property. Enter up to five comma-delimited property names to get streams for specific properties.",
            "example": "{{propertyName}}",
            "explode": false,
            "in": "query",
            "name": "propertyName",
            "required": false,
            "style": "form",
            "schema": {
              "example": "my.property.com,test.property,traffic.hostname.com",
              "maxItems": 5,
              "minItems": 1,
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/propertyName-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/log/streams/metrics": {
      "get": {
        "description": "Returns aggregated metrics for log file uploads, including success or failure upload counts, upload latency, and the volume of data uploaded in the stream. Set the `start` and `end` dates to get metrics from a specific time range, and `aggregationInterval` to group data by time intervals.",
        "operationId": "get-streams-metrics",
        "summary": "View upload metrics",
        "tags": [
          "Streams"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's DataStream 2 API",
          "url": "https://techdocs.akamai.com/datastream2/reference/get-streams-metrics"
        },
        "responses": {
          "200": {
            "description": "The response returns aggregated upload metrics.",
            "content": {
              "application/json": {
                "example": {
                  "totalErrorCount": 192,
                  "totalSuccessCount": 1800,
                  "totalUploadCount": 1992,
                  "fileUploadMetrics": [
                    {
                      "aggregationTime": "2022-03-14T22:00:00",
                      "recordsAttemptedUpload": 10000,
                      "recordsFailedUpload": 1000,
                      "streamId": 30000,
                      "successUploadsCount": 1000,
                      "uploadedBytes": 150000,
                      "failedUploadAttempts": [
                        {
                          "errorCode": "400",
                          "errorCount": 100
                        },
                        {
                          "errorCode": "500",
                          "errorCount": 30
                        }
                      ],
                      "latencyBuckets": [
                        {
                          "latencyInSeconds": 0,
                          "recordsCount": 500
                        },
                        {
                          "latencyInSeconds": 30,
                          "recordsCount": 5000
                        },
                        {
                          "latencyInSeconds": 60,
                          "recordsCount": 2000
                        },
                        {
                          "latencyInSeconds": 120,
                          "recordsCount": 500
                        },
                        {
                          "latencyInSeconds": 300,
                          "recordsCount": 1000
                        }
                      ],
                      "uploadBuckets": [
                        {
                          "recordsCount": 100,
                          "uploadTimeInMilliseconds": 0
                        },
                        {
                          "recordsCount": 3000,
                          "uploadTimeInMilliseconds": 30
                        },
                        {
                          "recordsCount": 3000,
                          "uploadTimeInMilliseconds": 60
                        },
                        {
                          "recordsCount": 1000,
                          "uploadTimeInMilliseconds": 120
                        },
                        {
                          "recordsCount": 0,
                          "uploadTimeInMilliseconds": 300
                        },
                        {
                          "recordsCount": 1000,
                          "uploadTimeInMilliseconds": 600
                        },
                        {
                          "recordsCount": 900,
                          "uploadTimeInMilliseconds": 1800
                        }
                      ]
                    },
                    {
                      "aggregationTime": "2022-03-14T22:00:00",
                      "recordsAttemptedUpload": 7000,
                      "recordsFailedUpload": 2000,
                      "streamId": 40000,
                      "successUploadsCount": 800,
                      "uploadedBytes": 7000,
                      "failedUploadAttempts": [
                        {
                          "errorCode": "404",
                          "errorCount": 59
                        },
                        {
                          "errorCode": "503",
                          "errorCount": 3
                        }
                      ],
                      "latencyBuckets": [
                        {
                          "latencyInSeconds": 0,
                          "recordsCount": 0
                        },
                        {
                          "latencyInSeconds": 30,
                          "recordsCount": 2000
                        },
                        {
                          "latencyInSeconds": 60,
                          "recordsCount": 1000
                        },
                        {
                          "latencyInSeconds": 120,
                          "recordsCount": 1000
                        },
                        {
                          "latencyInSeconds": 300,
                          "recordsCount": 1000
                        }
                      ],
                      "uploadBuckets": [
                        {
                          "recordsCount": 1000,
                          "uploadTimeInMilliseconds": 0
                        },
                        {
                          "recordsCount": 1000,
                          "uploadTimeInMilliseconds": 30
                        },
                        {
                          "recordsCount": 1000,
                          "uploadTimeInMilliseconds": 60
                        },
                        {
                          "recordsCount": 1000,
                          "uploadTimeInMilliseconds": 120
                        },
                        {
                          "recordsCount": 0,
                          "uploadTimeInMilliseconds": 300
                        },
                        {
                          "recordsCount": 500,
                          "uploadTimeInMilliseconds": 600
                        },
                        {
                          "recordsCount": 500,
                          "uploadTimeInMilliseconds": 1800
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "description": "Provides log file upload metrics for streams.",
                  "type": "object",
                  "properties": {
                    "fileUploadMetrics": {
                      "description": "Provides detailed log file upload metrics for streams.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "aggregationTime",
                          "streamId",
                          "successUploadsCount",
                          "failedUploadAttempts"
                        ],
                        "properties": {
                          "aggregationTime": {
                            "description": "The start date and time of the metrics aggregation time interval in the ISO 8601 format. For example, for an `aggregationInterval` set to `FIVE_MINUTE`, `aggregationTime` returns `2022-05-10T10:05:00` for metrics between `2022-05-10T10:05:00` and `2022-05-10T10:09:59`.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "failedUploadAttempts": {
                            "description": "Lists the upload `errorCount` per specific `errorCode`.",
                            "type": "array",
                            "items": {
                              "required": [
                                "errorCode",
                                "errorCount"
                              ],
                              "properties": {
                                "errorCode": {
                                  "description": "The upload error code returned by the stream.",
                                  "type": "string"
                                },
                                "errorCount": {
                                  "description": "The number of occurences of the error code.",
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "latencyBuckets": {
                            "description": "Delivery buckets that specify the number of records the logging server delivered to the Akamai upload server within a `latencyInSeconds` range.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "latencyInSeconds",
                                "recordsCount"
                              ],
                              "properties": {
                                "latencyInSeconds": {
                                  "description": "The latency for record delivery in seconds. The number is the minimum value in a latency range, for example, `60` indicates latency between `60` and `120` seconds.",
                                  "type": "integer",
                                  "enum": [
                                    0,
                                    30,
                                    60,
                                    120,
                                    300
                                  ]
                                },
                                "recordsCount": {
                                  "description": "The number of records delivered within the specified latency range.",
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "recordsAttemptedUpload": {
                            "description": "The total number of log records attempted to upload.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "recordsFailedUpload": {
                            "description": "The number of log records that failed to upload.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "streamId": {
                            "description": "Uniquely identifies the stream you want to view metrics for.",
                            "type": "integer"
                          },
                          "successUploadsCount": {
                            "description": "The number of successful log uploads in the aggregation time interval.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "uploadBuckets": {
                            "description": "Upload buckets specyfing the number of records delivered from the Akamai upload server to the client-defined sink with an upload time.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "uploadTimeInMilliseconds",
                                "recordsCount"
                              ],
                              "properties": {
                                "recordsCount": {
                                  "description": "The number of records uploaded during the `uploadTimeInMilliseconds`. This is the minimum value in a range, for example, `60` indicates between `60` and `120` records.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "uploadTimeInMilliseconds": {
                                  "description": "The upload time for record delivery in milliseconds. The number is the minimum value in a time range, for example, `120` indicates latency between `120` and `300` seconds.",
                                  "type": "integer",
                                  "enum": [
                                    0,
                                    30,
                                    60,
                                    120,
                                    300,
                                    600,
                                    1800
                                  ]
                                }
                              }
                            }
                          },
                          "uploadedBytes": {
                            "description": "The volume of uploaded data in bytes.",
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "totalErrorCount": {
                      "description": "The total number log upload failures between the `start` and `end` date.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "totalSuccessCount": {
                      "description": "The total number of successful log uploads between the `start` and `end` date.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "totalUploadCount": {
                      "description": "The total number of log uploads between the `start` and `end` date.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/StreamsMetrics.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Specifies the beginning of the time range for the metrics in the ISO 8601 format. Set this no more than seven days before the `end` date.",
            "example": "{{start}}",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "example": "2022-06-20T09:12:28Z",
              "format": "date-time",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/metrics-start-query.yaml"
            }
          },
          {
            "description": "Specifies the end of the time range for the metrics in the ISO 8601 format. Set this no more than seven days after the `start` date.",
            "example": "{{end}}",
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "example": "2022-06-20T09:12:28Z",
              "format": "date-time",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/metrics-end-query.yaml"
            }
          },
          {
            "description": "Uniquely identifies the stream. Set the `streamId` to get metrics for a specific stream, or `groupId` for all streams belonging to that group. If both are omitted, this operation returns metrics for all streams that belong to your contract.",
            "example": "{{streamId}}",
            "in": "query",
            "name": "streamId",
            "required": false,
            "schema": {
              "example": 7050,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/metrics-streamId-query.yaml"
            }
          },
          {
            "description": "Set the `groupId` to get metrics for all streams belonging to that group, or `streamId` for a specific stream. If both are omitted, this operation returns metrics for all streams that belong to your contract.",
            "example": "{{groupId}}",
            "in": "query",
            "name": "groupId",
            "required": false,
            "schema": {
              "example": 21483,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/metrics-groupId-query.yaml"
            }
          },
          {
            "description": "__Enum__ Specifies the time interval for metrics aggregation, either 5 minutes, an hour, or 24 hours. If omitted, this operation returns the metrics grouped in hourly intervals.",
            "example": "{{aggregationInterval}}",
            "in": "query",
            "name": "aggregationInterval",
            "required": false,
            "schema": {
              "default": "HOUR",
              "example": "HOUR",
              "type": "string",
              "enum": [
                "FIVE_MINUTE",
                "HOUR",
                "DAY"
              ]
            },
            "x-akamai": {
              "file-path": "parameters/metrics-aggregationInterval-query.yaml"
            }
          },
          {
            "description": "Set to `true` or omit to get detailed metrics. If set to `false`, this operation returns only the `timestamp`, `streamId`, `successAttemptResponseCount`, and `failAttemptResponseCount` values.",
            "example": "{{includeDetails}}",
            "in": "query",
            "name": "includeDetails",
            "required": false,
            "schema": {
              "default": true,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/metrics-includeDetails-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/log/streams/{streamId}": {
      "get": {
        "description": "Returns information about any version of a stream, including details about the monitored properties, logged data set fields, and log delivery destination. If you omit the `version` query parameter, this operation returns the last version of the stream.",
        "operationId": "get-stream",
        "summary": "Get a stream",
        "tags": [
          "Streams"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's DataStream 2 API",
          "url": "https://techdocs.akamai.com/datastream2/reference/get-stream"
        },
        "responses": {
          "200": {
            "description": "The response returns stream version details.",
            "content": {
              "application/json": {
                "example": {
                  "collectMidgress": true,
                  "contractId": "K-0N7RAK7",
                  "createdBy": "jkowalski",
                  "createdDate": "2022-02-05T13:31:30Z",
                  "groupId": 21484,
                  "latestVersion": 1,
                  "modifiedBy": "hgildong",
                  "modifiedDate": "2022-02-05T13:31:30Z",
                  "productId": "Dynamic_Site_Accelerator",
                  "streamId": 7050,
                  "streamName": "diagnostics-log-stream",
                  "streamStatus": "ACTIVATING",
                  "streamVersion": 1,
                  "notificationEmails": [
                    "useremail1@domain.com",
                    "useremail2@domain.com"
                  ],
                  "deliveryConfiguration": {
                    "fieldDelimiter": "SPACE",
                    "format": "STRUCTURED",
                    "uploadFilePrefix": "logs",
                    "uploadFileSuffix": "ds",
                    "frequency": {
                      "intervalInSeconds": 30
                    }
                  },
                  "destination": {
                    "bucket": "datastream.akamai.com",
                    "compressLogs": true,
                    "destinationType": "S3",
                    "displayName": "S3Destination",
                    "path": "ds2-logs",
                    "region": "ap-south-1"
                  },
                  "datasetFields": [
                    {
                      "datasetFieldId": 1000,
                      "datasetFieldJsonKey": "cp",
                      "datasetFieldName": "CP code"
                    },
                    {
                      "datasetFieldId": 1002,
                      "datasetFieldJsonKey": "reqId",
                      "datasetFieldName": "Request ID"
                    },
                    {
                      "datasetFieldId": 1023,
                      "datasetFieldJsonKey": "cookie",
                      "datasetFieldName": "Cookie"
                    }
                  ],
                  "properties": [
                    {
                      "propertyId": 349772,
                      "propertyName": "example.com"
                    },
                    {
                      "propertyId": 349770,
                      "propertyName": "example.akamai.com"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Provides detailed information about the latest configuration version of a stream. It provides descriptions of the data set fields selected in the version, identifiers of properties they collect logs for, configuration of the destination where they deliver logs, and structure of these log lines. It also informs whether this version is active.",
                  "type": "object",
                  "required": [
                    "contractId",
                    "createdBy",
                    "createdDate",
                    "datasetFields",
                    "deliveryConfiguration",
                    "destination",
                    "groupId",
                    "latestVersion",
                    "modifiedBy",
                    "modifiedDate",
                    "productId",
                    "properties",
                    "streamId",
                    "streamName",
                    "streamStatus",
                    "streamVersion"
                  ],
                  "properties": {
                    "collectMidgress": {
                      "description": "Indicates if you've opted to capture midgress traffic within the Akamai platform, such as between two edge servers.",
                      "type": "boolean"
                    },
                    "contractId": {
                      "description": "Identifies the contract that the stream belongs to.",
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The username who created the stream.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "An ISO 8601 timestamp marking when the stream was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "datasetFields": {
                      "description": "A list of data set fields selected that the stream monitors in logs. The order of the identifiers define how the value for these fields appear in the log lines.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "datasetFieldId",
                          "datasetFieldName",
                          "datasetFieldJsonKey"
                        ],
                        "properties": {
                          "datasetFieldId": {
                            "description": "Identifies the field.",
                            "type": "integer"
                          },
                          "datasetFieldJsonKey": {
                            "description": "Specifies the JSON key for the field in a log line. You can get this value only when you run the [List data set fields](https://techdocs.akamai.com/datastream2/reference/get-dataset-fields) or [Get a stream](https://techdocs.akamai.com/datastream2/reference/get-stream) operation for a stream in the `JSON` format.",
                            "type": "string"
                          },
                          "datasetFieldName": {
                            "description": "A name of the data set field.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "deliveryConfiguration": {
                      "additionalProperties": false,
                      "description": "The configuration of log lines, names of the files sent to a destination, and delivery frequency for these files.",
                      "type": "object",
                      "required": [
                        "format",
                        "frequency"
                      ],
                      "properties": {
                        "fieldDelimiter": {
                          "description": "A delimiter that separates data set fields in the log lines, either `SPACE` or `TAB`. Set this only for the `STRUCTURED` log file `format`.",
                          "type": "string",
                          "enum": [
                            "SPACE",
                            "TAB"
                          ]
                        },
                        "format": {
                          "description": "The format in which you want to receive log files. `STRUCTURED` or `JSON` are the currently available formats.",
                          "type": "string",
                          "enum": [
                            "STRUCTURED",
                            "JSON"
                          ]
                        },
                        "frequency": {
                          "additionalProperties": false,
                          "description": "The frequency of collecting logs from each uploader and sending these logs to a destination.",
                          "type": "object",
                          "required": [
                            "intervalInSeconds"
                          ],
                          "properties": {
                            "intervalInSeconds": {
                              "description": "The interval in seconds (`30` or `60`) after which the system bundles log lines into a file and sends it to a destination.",
                              "type": "integer",
                              "enum": [
                                30,
                                60
                              ]
                            }
                          }
                        },
                        "uploadFilePrefix": {
                          "default": "ak",
                          "description": "The prefix of the log file that you want to send to a object-based destination. It's a string of at most 200 characters. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). If unspecified, it defaults to `ak`.",
                          "type": "string"
                        },
                        "uploadFileSuffix": {
                          "default": "ds",
                          "description": "The suffix of the log file that you want to send to a object-based destination. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). It's a static string of at most 10 characters. If unspecified, it defaults to `ds`.",
                          "type": "string"
                        }
                      }
                    },
                    "destination": {
                      "description": "Provides detailed information about the destination's configuration in the stream to send logs.",
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Azure Storage destination configuration in a stream.",
                          "title": "AZURE",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "compressLogs",
                            "displayName",
                            "path",
                            "accountName",
                            "containerName"
                          ],
                          "properties": {
                            "accountName": {
                              "description": "Specifies the Azure Storage account name.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "containerName": {
                              "description": "Specifies the Azure Storage container name.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `AZURE` for this destination type.",
                              "type": "string",
                              "enum": [
                                "AZURE"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within the Azure Storage container where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long) in the Azure documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/AzureSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Amazon S3 destination in a stream.",
                          "title": "S3",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "compressLogs",
                            "displayName",
                            "path",
                            "bucket",
                            "region"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the Amazon S3 bucket. See [Working with buckets in AWS](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html) in the Amazon S3 documentation.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `S3` for this destination type.",
                              "type": "string",
                              "enum": [
                                "S3"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your Amazon S3 bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object keys](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html) in the Amazon S3 documentation for naming conventions.",
                              "type": "string"
                            },
                            "region": {
                              "description": "The AWS region where your Amazon S3 bucket resides. See [Regions, Availability Zones, and Local Zones in AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) in the Amazon S3 documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/S3SavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Datadog destination configuration in a stream.",
                          "title": "DATADOG",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "default": false,
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `false` by default.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `DATADOG` for this destination type.",
                              "type": "string",
                              "enum": [
                                "DATADOG"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Datadog v1 endpoint URL where you want to send and store logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Datadog](https://techdocs.akamai.com/datastream2/v2/docs/stream-datadog#akamaized-hostname-as-endpoint), and [View Datadog logs endpoint](https://docs.datadoghq.com/logs/log_collection/?tab=http#logging-endpoints) in the Datadog documentation.",
                              "type": "string"
                            },
                            "service": {
                              "description": "The name of the application or service generating the log events in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) and [Services List](https://docs.datadoghq.com/tracing/visualization/services_list/) in the Datadog documentation.",
                              "type": "string"
                            },
                            "source": {
                              "description": "The name of the source or the technology of the logs in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) in the Datadog documentation.",
                              "type": "string"
                            },
                            "tags": {
                              "description": "The tags you can use to filter and group metrics in your Datadog account. Enter a comma-delimited list for more than one tag. This field also supports `<key>:<value>` combinations. See [Getting Started with Tags](https://docs.datadoghq.com/getting_started/tagging/) in the Datadog documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/DatadogSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides detailed information about the Splunk destination that you can use in your stream. Note that DataStream 2 currently supports only endpoint URLs ending with `collector/raw`. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                          "title": "SPLUNK",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "default": true,
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                              "type": "boolean"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `SPLUNK` for this destination type.",
                              "type": "string",
                              "enum": [
                                "SPLUNK"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The raw event Splunk URL where you want to store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Splunk](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "mTlsEnabled": {
                              "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                              "type": "boolean"
                            },
                            "tlsHostname": {
                              "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/SplunkSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Google Cloud Storage destination in a stream.",
                          "title": "GCS",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "bucket",
                            "projectId",
                            "serviceAccountName",
                            "compressLogs"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the storage bucket you created in your Google Cloud account. See [Bucket naming conventions](https://cloud.google.com/storage/docs/naming-buckets) in the Google Cloud documentation.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `GCS` for this destination type.",
                              "type": "string",
                              "enum": [
                                "GCS"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your Google Cloud bucket where you want to store logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object naming guidelines](https://cloud.google.com/storage/docs/naming-objects) in the Google Cloud documentation.",
                              "type": "string"
                            },
                            "projectId": {
                              "description": "The unique ID of your Google Cloud project.",
                              "type": "string"
                            },
                            "serviceAccountName": {
                              "description": "The name of the service account with the `storage.object.create` permission or Storage Object Creator role.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/GCSSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the custom HTTPS endpoint destination in a stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                          "title": "HTTPS",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "authenticationType",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "authenticationType": {
                              "description": "Either `NONE` for no authentication, or `BASIC`. For basic authentication, provide the username and password you set in your custom HTTPS endpoint.",
                              "type": "string",
                              "enum": [
                                "BASIC",
                                "NONE"
                              ]
                            },
                            "compressLogs": {
                              "default": false,
                              "description": "Enables gzip compression for a log file sent to a destination. This member's value is `false` by default.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `HTTPS` for this destination type.",
                              "type": "string",
                              "enum": [
                                "HTTPS"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "Enter the secure URL where you want to send and store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to a custom HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "mTlsEnabled": {
                              "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                              "type": "boolean"
                            },
                            "tlsHostname": {
                              "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/HTTPSSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Oracle Cloud Storage destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and tries to save an `akamai_write_test_2147483647.txt` file in your Oracle Cloud Storage folder. You can only see this file if the validation process is successful, and you have access to the Oracle Cloud Storage bucket and folder that you're trying to send logs to.",
                          "title": "ORACLE_CLOUD_STORAGE",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "region",
                            "bucket",
                            "path",
                            "namespace",
                            "compressLogs"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the Oracle Cloud Storage bucket. See [Working with buckets](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingbuckets.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `ORACLE_CLOUD_STORAGE` for this destination type.",
                              "type": "string",
                              "enum": [
                                "ORACLE_CLOUD_STORAGE"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "The namespace of your Oracle Cloud Storage account. See [Understanding Object Storage namespaces](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/understandingnamespaces.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your Oracle Cloud Storage bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Managing Objects](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingobjects.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            },
                            "region": {
                              "description": "The Oracle Cloud Storage region where your bucket resides. See [Regions and availability domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/OCSSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides detailed information about the Sumo Logic destination that you can use in your stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                          "title": "SUMO_LOGIC",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "collectorCode": {
                              "description": "The unique HTTP collector code of your Sumo Logic endpoint.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "default": true,
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the custom header of the request.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the custom header of the request that can contain only alphanumeric, dash, and underscore characters. See [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic) for details.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The contents of the custom header passed with the request that contain information about the client connection. See [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic) for details.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `SUMO_LOGIC` for this destination type.",
                              "type": "string",
                              "enum": [
                                "SUMO_LOGIC"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Sumo Logic HTTP Source URL where you want to send your logs. You should follow the `https://<SumoEndpoint>/receiver/v1/http` format and set the collector code in the `collectorCode` member.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/SumoLogicSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the loggly endpoint destination in a stream.",
                          "title": "LOGGLY",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `LOGGLY` for this destination type.",
                              "type": "string",
                              "enum": [
                                "LOGGLY"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Loggly bulk endpoint URL in the `https://hostname.loggly.com/bulk/` format. Set the endpoint code in the `authToken` field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Loggly](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "tags": {
                              "description": "The tags you can use to segment and filter log events in Loggly. See [Tags](https://documentation.solarwinds.com/en/success_center/loggly/content/admin/tags.htm) in the Loggly documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/LogglySavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Elasticsearch endpoint destination in a stream.",
                          "title": "ELASTICSEARCH",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `ELASTICSEARCH` for this destination type.",
                              "type": "string",
                              "enum": [
                                "ELASTICSEARCH"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Elasticsearch bulk endpoint URL in the `https://hostname.elastic-cloud.com:9243/_bulk/` format. Set `indexName` in the appropriate field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Elasticsearch][Stream logs to Elasticsearch](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#section-akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "mTlsEnabled": {
                              "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                              "type": "boolean"
                            },
                            "tlsHostname": {
                              "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/ElasticsearchSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the New Relic endpoint destination in a stream.",
                          "title": "NEWRELIC",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `NEWRELIC` for this destination type.",
                              "type": "string",
                              "enum": [
                                "NEWRELIC"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The New Relic Log API endpoint URL in the `https://log-api.newrelic.com/log/v1/` format. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to New Relic](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/NewRelicSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the S3-compatible destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and saves an `Akamai_access_verification_[TimeStamp].txt` format file in your S3-compatible folder. You can only see this file if the validation process is successful, and you have access to the S3-compatible bucket and folder that you're trying to send logs to. Before configuring your stream to send logs to this destination, make sure you create a S3-compatible storage bucket, and store the access key together with the secret access key.",
                          "title": "S3_COMPATIBLE",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "bucket",
                            "region",
                            "endpoint"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the S3-compatible object storage bucket.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `S3_COMPATIBLE` for this destination type.",
                              "type": "string",
                              "enum": [
                                "S3_COMPATIBLE"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The scheme-qualified host of your S3-compatible object storage bucket.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your S3-compatible object storage bucket where you want to store logs. This value allows [Dynamic time variables](https://techdocs.akamai.com/datastream2/docs/dynamic-time-variables).",
                              "type": "string"
                            },
                            "region": {
                              "description": "The physical storage location of your S3-compatible object storage bucket.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/S3CompatibleSavedDestination.yaml"
                          }
                        }
                      ]
                    },
                    "groupId": {
                      "description": "Identifies the group that has access to the product and that you created the stream configuration for. When editing a stream, the value you pass is ignored as you can't change the group for an existing stream.",
                      "type": "integer"
                    },
                    "latestVersion": {
                      "description": "Identifies the latest configuration version of the stream.",
                      "type": "integer"
                    },
                    "modifiedBy": {
                      "description": "The username who modified the stream.",
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "The date and time in the ISO 8601 format when the stream was modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "notificationEmails": {
                      "description": "A comma-delimited list of email addresses where the system sends notifications about activations and deactivations of the stream.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "productId": {
                      "description": "The ID of the product that you created stream for.",
                      "type": "string"
                    },
                    "properties": {
                      "description": "Identifies the properties that you monitor in the stream.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "propertyId",
                          "propertyName"
                        ],
                        "properties": {
                          "propertyId": {
                            "description": "The identifier of the property.",
                            "type": "integer"
                          },
                          "propertyName": {
                            "description": "The descriptive label for the property.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "streamId": {
                      "description": "Identifies the stream.",
                      "type": "integer"
                    },
                    "streamName": {
                      "description": "The name of the stream.",
                      "type": "string"
                    },
                    "streamStatus": {
                      "description": "Indicates if the stream is `ACTIVATED` or `DEACTIVATED`. `INACTIVE`, `ACTIVATING`, `ACTIVATED`, `DEACTIVATING`, or `DEACTIVATED`.",
                      "type": "string",
                      "enum": [
                        "INACTIVE",
                        "ACTIVATING",
                        "ACTIVATED",
                        "DEACTIVATING",
                        "DEACTIVATED"
                      ]
                    },
                    "streamVersion": {
                      "description": "Identifies the configuration version of the stream.",
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/StreamDetail.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Identifies the version of the stream. If omitted, the operation returns the latest version of the stream.",
            "example": "{{version}}",
            "in": "query",
            "name": "version",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/version-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates the latest version of a stream. Running this operation creates a version of the stream that replaces the existing one. Note that only active streams collect and send logs to their destinations. You need to set the `activate` parameter to `true` while patching active streams, and optionally for inactive streams if you want to activate them upon request. See [Version management](https://techdocs.akamai.com/datastream2/reference/version-management) and [Activate a stream](https://techdocs.akamai.com/datastream2/reference/post-stream-activate).",
        "operationId": "put-stream",
        "summary": "Edit a stream",
        "tags": [
          "Streams"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's DataStream 2 API",
          "url": "https://techdocs.akamai.com/datastream2/reference/put-stream"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "examples": {
                "Azure": {
                  "value": {
                    "collectMidgress": false,
                    "contractId": "K-0N7RAK7",
                    "streamName": "diagnostics-log-stream",
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "fieldDelimiter": "SPACE",
                      "format": "STRUCTURED",
                      "uploadFilePrefix": "logs",
                      "uploadFileSuffix": "ds",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "accessKey": "X17x2f2+2MxT1Eh/KaBApKrAEUnetiD0LBbQybczlOwpJVJHPYlDwV99nFSvhDd6z0YTdhDUmy6inRHjQPLlsA==",
                      "accountName": "Main Street Corporation",
                      "containerName": "rawslogscontainer",
                      "destinationType": "AZURE",
                      "displayName": "azure_destination",
                      "path": "logs/edgelogs/{%Y/%m/%d/%H/%M/%S}"
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000
                      },
                      {
                        "datasetFieldId": 1002
                      },
                      {
                        "datasetFieldId": 1023
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772
                      },
                      {
                        "propertyId": 349770
                      }
                    ]
                  }
                },
                "Datadog": {
                  "value": {
                    "collectMidgress": false,
                    "contractId": "K-0N7RAK7",
                    "streamName": "diagnostics-log-stream",
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "fieldDelimiter": "SPACE",
                      "format": "STRUCTURED",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "authToken": "6fe69pp3788877bd7b3bv18oo2c68fe",
                      "compressLogs": true,
                      "destinationType": "DATADOG",
                      "displayName": "Datadog_destination",
                      "endpoint": "https://http-intake.logs.datadoghq.com/v1/input/",
                      "service": "datastream",
                      "source": "java",
                      "tags": "env:sqa,user:insomnia"
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000
                      },
                      {
                        "datasetFieldId": 1002
                      },
                      {
                        "datasetFieldId": 1023
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772
                      },
                      {
                        "propertyId": 349770
                      }
                    ]
                  }
                },
                "Elasticsearch": {
                  "value": {
                    "collectMidgress": false,
                    "contractId": "K-0N7RAK7",
                    "streamName": "diagnostics-log-stream",
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "format": "JSON",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "caCert": "-----BEGIN CERTIFICATE-----\nMIIFnzCCA4egAwIBAgIUKO+hNjocWl ... RjDuaS6FRqLKUx\naf9d\n-----END CERTIFICATE-----",
                      "clientCert": "-----BEGIN CERTIFICATE-----\nMIIFMTCCAxkCFBrfjEylUee/1zuU3pkx33a3+Kl9MA0GC ... ep6\n0R3g8RB7v79PgqcBn70C5Lcdc93jDhBa2TQ==\n-----END CERTIFICATE-----",
                      "clientKey": "-----BEGIN PRIVATE KEY-----\nMIIJRAIBADANBgkqhkiG9w0BAQEFAASCCS4wggk ... ndYhVvhs9x5xsQwgvBhZM/P7LgjHJu6NYjVqdk4Y\n-----END PRIVATE KEY-----",
                      "contentType": "application/json",
                      "customHeaderName": "X-ELASTICSEARCH-TAG",
                      "customHeaderValue": "bulk",
                      "destinationType": "ELASTICSEARCH",
                      "displayName": "elasticsearch",
                      "endpoint": "https://elastic_rawserver01.elastic.com:9243/_bulk/",
                      "indexName": "elastic-search-index",
                      "password": "pass",
                      "tlsHostname": "elasticsearch.akamai.com",
                      "userName": "admin"
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000
                      },
                      {
                        "datasetFieldId": 1002
                      },
                      {
                        "datasetFieldId": 1023
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772
                      },
                      {
                        "propertyId": 349770
                      }
                    ]
                  }
                },
                "Google Cloud Storage": {
                  "value": {
                    "collectMidgress": false,
                    "contractId": "K-0N7RAK7",
                    "streamName": "diagnostics-log-stream",
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "fieldDelimiter": "SPACE",
                      "format": "STRUCTURED",
                      "uploadFilePrefix": "logs_{%Y_%m_%d_%H_%M_%S}",
                      "uploadFileSuffix": "ds",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "bucket": "datastream",
                      "destinationType": "GCS",
                      "displayName": "GCSDestination",
                      "path": "log/edgelogs/{%Y/%m/%d/%H/%M/%S}",
                      "privateKey": "-----BEGIN PRIVATE KEY-----\nMIIEvOIBADANBgkozkiG9a1BAO ... rD19A61BavevVVZc1=\n-----END PRIVATE KEY-----",
                      "projectId": "ds2-connect",
                      "serviceAccountName": "ak-DS2"
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000
                      },
                      {
                        "datasetFieldId": 1002
                      },
                      {
                        "datasetFieldId": 1023
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772
                      },
                      {
                        "propertyId": 349770
                      }
                    ]
                  }
                },
                "HTTPS": {
                  "value": {
                    "collectMidgress": false,
                    "contractId": "K-0N7RAK71",
                    "streamName": "diagnostics-log-stream",
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "fieldDelimiter": "SPACE",
                      "format": "STRUCTURED",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "authenticationType": "BASIC",
                      "caCert": "-----BEGIN CERTIFICATE-----\nMIIFnzCCA4egAwIBAgIUKO+hNjocWl ... RjDuaS6FRqLKUx\naf9d\n-----END CERTIFICATE-----",
                      "clientCert": "-----BEGIN CERTIFICATE-----\nMIIFMTCCAxkCFBrfjEylUee/1zuU3pkx33a3+Kl9MA0GC ... ep6\n0R3g8RB7v79PgqcBn70C5Lcdc93jDhBa2TQ==\n-----END CERTIFICATE-----",
                      "clientKey": "-----BEGIN PRIVATE KEY-----\nMIIJRAIBADANBgkqhkiG9w0BAQEFAASCCS4wggk ... ndYhVvhs9x5xsQwgvBhZM/P7LgjHJu6NYjVqdk4Y\n-----END PRIVATE KEY-----",
                      "contentType": "application/json",
                      "customHeaderName": "X-Request-Header",
                      "customHeaderValue": "Header-Value",
                      "destinationType": "HTTPS",
                      "displayName": "HTTPS",
                      "endpoint": "https://kpiqaproxy.eastus.cloudapp.azure.com/basicAuth",
                      "password": "pass",
                      "tlsHostname": "kpiqaproxyvm.eastus.cloudapp.azure.com",
                      "userName": "admin"
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000
                      },
                      {
                        "datasetFieldId": 1002
                      },
                      {
                        "datasetFieldId": 1023
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772
                      },
                      {
                        "propertyId": 349770
                      }
                    ]
                  }
                },
                "Loggly": {
                  "value": {
                    "collectMidgress": false,
                    "contractId": "C-0N7RAC7",
                    "streamName": "diagnostics-log-stream",
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "fieldDelimiter": "SPACE",
                      "format": "STRUCTURED",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "authToken": "SDSXXX-28ff-XXXX-JSHSJS-XXXXXX",
                      "caCert": "-----BEGIN CERTIFICATE-----\nMIIFnzCCA4egAwIBAgIUKO+hNjocWl ... RjDuaS6FRqLKUx\naf9d\n-----END CERTIFICATE-----",
                      "clientCert": "-----BEGIN CERTIFICATE-----\nMIIFMTCCAxkCFBrfjEylUee/1zuU3pkx33a3+Kl9MA0GC ... ep6\n0R3g8RB7v79PgqcBn70C5Lcdc93jDhBa2TQ==\n-----END CERTIFICATE-----",
                      "clientKey": "-----BEGIN PRIVATE KEY-----\nMIIJRAIBADANBgkqhkiG9w0BAQEFAASCCS4wggk ... ndYhVvhs9x5xsQwgvBhZM/P7LgjHJu6NYjVqdk4Y\n-----END PRIVATE KEY-----",
                      "contentType": "application/json",
                      "customHeaderName": "X-LOGGLY-TAG",
                      "customHeaderValue": "bulk",
                      "destinationType": "LOGGLY",
                      "displayName": "loggly",
                      "endpoint": "https://loggly_rawserver01.loggly.com/bulk/",
                      "tags": "raw,akamai_cdn",
                      "tlsHostname": "loggly.akamai.com"
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000
                      },
                      {
                        "datasetFieldId": 1002
                      },
                      {
                        "datasetFieldId": 1023
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772
                      },
                      {
                        "propertyId": 349770
                      }
                    ]
                  }
                },
                "Newrelic": {
                  "value": {
                    "collectMidgress": false,
                    "contractId": "C-0N7RAC71",
                    "streamName": "diagnostics-log-stream",
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "fieldDelimiter": "SPACE",
                      "format": "STRUCTURED",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "authToken": "SDSXXX-28ff-XXXX-JSHSJS-XXXXXX",
                      "contentType": "application/json",
                      "customHeaderName": "X-NewRelic-Category",
                      "customHeaderValue": "Header-Value",
                      "destinationType": "NEWRELIC",
                      "displayName": "newrelic",
                      "endpoint": "https://log-api.newrelic.com/log/v1/"
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000
                      },
                      {
                        "datasetFieldId": 1002
                      },
                      {
                        "datasetFieldId": 1023
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772
                      },
                      {
                        "propertyId": 349770
                      }
                    ]
                  }
                },
                "Oracle Cloud Storage": {
                  "value": {
                    "collectMidgress": false,
                    "contractId": "C-0N7RAC7",
                    "streamName": "diagnostics-log-stream",
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "fieldDelimiter": "SPACE",
                      "format": "STRUCTURED",
                      "uploadFilePrefix": "logs",
                      "uploadFileSuffix": "ds",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "accessKey": "fa848eb558sdfghjrDUMMYD05e7a710fb9315396",
                      "bucket": "full-length",
                      "destinationType": "ORACLE_CLOUD_STORAGE",
                      "displayName": "OCS",
                      "namespace": "ax9javbhuj89",
                      "path": "foo/{%d/%m/%Y/%H/%M/%S}",
                      "region": "ap-hyderabad-1",
                      "secretAccessKey": "fkhtq9OnIOFozQLXwerty6432dfghMyS7tnxqQ2GPc="
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000
                      },
                      {
                        "datasetFieldId": 1002
                      },
                      {
                        "datasetFieldId": 1023
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772
                      },
                      {
                        "propertyId": 349770
                      }
                    ]
                  }
                },
                "S3": {
                  "value": {
                    "collectMidgress": true,
                    "contractId": "C-0N7RAC7",
                    "streamName": "diagnostics-log-stream",
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "fieldDelimiter": "SPACE",
                      "format": "STRUCTURED",
                      "uploadFilePrefix": "{%Y_%m_%d_%H_%M_%S}",
                      "uploadFileSuffix": "ds",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "accessKey": "AKIA6DK7TDQLVGZ3TYP1",
                      "bucket": "media-datastream.akamai.com",
                      "destinationType": "S3",
                      "displayName": "S3Destination",
                      "path": "log/edgelogs/{%Y/%m/%d/%H/%M/%S}",
                      "region": "ap-south-1",
                      "secretAccessKey": "1T2ll1H4dXWx5itGhpc7FlSbvvOvky1098nTtEMg"
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000
                      },
                      {
                        "datasetFieldId": 1002
                      },
                      {
                        "datasetFieldId": 1023
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772
                      },
                      {
                        "propertyId": 349770
                      }
                    ]
                  }
                },
                "Splunk": {
                  "value": {
                    "collectMidgress": false,
                    "contractId": "C-0N7RAC71",
                    "streamName": "diagnostics-log-stream",
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "fieldDelimiter": "SPACE",
                      "format": "STRUCTURED",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "caCert": "-----BEGIN CERTIFICATE-----\nMIIFnzCCA4egAwIBAgIUKO+hNjocWl ... RjDuaS6FRqLKUx\naf9d\n-----END CERTIFICATE-----",
                      "clientCert": "-----BEGIN CERTIFICATE-----\nMIIFMTCCAxkCFBrfjEylUee/1zuU3pkx33a3+Kl9MA0GC ... ep6\n0R3g8RB7v79PgqcBn70C5Lcdc93jDhBa2TQ==\n-----END CERTIFICATE-----",
                      "clientKey": "-----BEGIN PRIVATE KEY-----\nMIIJRAIBADANBgkqhkiG9w0BAQEFAASCCS4wggk ... ndYhVvhs9x5xsQwgvBhZM/P7LgjHJu6NYjVqdk4Y\n-----END PRIVATE KEY-----",
                      "compressLogs": true,
                      "customHeaderName": "X-Splunk-Request-Channel",
                      "customHeaderValue": "FE0ECFAD-13D5-401B-847D-77833BD77131",
                      "destinationType": "SPLUNK",
                      "displayName": "Splunk_destination",
                      "endpoint": "https://http-inputs-customer.splunkcloud.com/services/collector/raw",
                      "eventCollectorToken": "894-51c5-4b2e-888y-54fb-hh62",
                      "tlsHostname": "kpiqaproxy.eastus.cloudapp.azure.com"
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000
                      },
                      {
                        "datasetFieldId": 1002
                      },
                      {
                        "datasetFieldId": 1023
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772
                      },
                      {
                        "propertyId": 349770
                      }
                    ]
                  }
                },
                "Sumo Logic": {
                  "value": {
                    "collectMidgress": false,
                    "contractId": "K-0N7RAK71",
                    "streamName": "diagnostics-log-stream",
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "fieldDelimiter": "SPACE",
                      "format": "STRUCTURED",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "collectorCode": "ZzVnj7dhzV3Z6XTuv2zgi6YdjR2z9ppU7ZoUVgWxr9xod1eGTzztg6t_7uLbxziler2gm_l7FepmzQFj-Nj9_GLJItWjJgFkVfFSF75x_KUAHSHIUI6RS==",
                      "compressLogs": true,
                      "contentType": "application/json",
                      "customHeaderName": "X-Sumo-Category",
                      "customHeaderValue": "Header-Value",
                      "destinationType": "SUMO_LOGIC",
                      "displayName": "Sumo_destination",
                      "endpoint": "https://endpoint.collection.us.sumologic.com/receiver/v1/http"
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000
                      },
                      {
                        "datasetFieldId": 1002
                      },
                      {
                        "datasetFieldId": 1023
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772
                      },
                      {
                        "propertyId": 349770
                      }
                    ]
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Provides information that you need to specify when editing a stream configuration.",
                "type": "object",
                "required": [
                  "streamName",
                  "contractId",
                  "properties",
                  "datasetFields",
                  "deliveryConfiguration",
                  "destination"
                ],
                "properties": {
                  "collectMidgress": {
                    "default": false,
                    "description": "Set to `true` for every edit operation to collect midgress traffic data within the Akamai platform, such as between two edge servers. Enable logging midgress data to get numeric values in the second place of the log line that indicate if the request was processed within the Akamai platform. When you [Get a stream](https://techdocs.akamai.com/datastream2/reference/get-stream) that logs midgress traffic, the response returns `collectMidgress` as `true` and lists the `isMidgress` data set field with other fields. See [Midgress traffic](https://techdocs.akamai.com/datastream2/v2/docs/data-set-parameters#midgress-traffic) for details. If this feature is not enabled on your account, contact the Akamai support team.",
                    "example": "{{collectMidgress}}",
                    "type": "boolean"
                  },
                  "contractId": {
                    "description": "Identifies the contract that has access to the product.",
                    "example": "{{contractId}}",
                    "type": "string"
                  },
                  "datasetFields": {
                    "description": "Identifiers of the data set fields that you want to receive in logs. In case of `STRUCTURED` format, the order of the identifiers define how the value for these fields appear in the log lines. See [Data set parameters](https://techdocs.akamai.com/datastream2/reference/data-set-parameters-1) for the complete list of the fields you can choose.",
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "datasetFieldId"
                      ],
                      "properties": {
                        "datasetFieldId": {
                          "description": "Identifies the field.",
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "deliveryConfiguration": {
                    "additionalProperties": false,
                    "description": "Provides information about the configuration of log lines, log file format, names of the log files sent to a destination, and delivery frequency for these files.",
                    "type": "object",
                    "required": [
                      "format",
                      "frequency"
                    ],
                    "properties": {
                      "fieldDelimiter": {
                        "description": "A delimiter that separates data set fields in the log lines, either `SPACE` or `TAB`. Set this only for the `STRUCTURED` log file `format`.",
                        "type": "string",
                        "enum": [
                          "SPACE",
                          "TAB"
                        ]
                      },
                      "format": {
                        "description": "The format in which you want to receive log files. `STRUCTURED` or `JSON` are the currently available formats. When the delimiter is present in the request, you need to choose the `STRUCTURED` format.",
                        "type": "string",
                        "enum": [
                          "STRUCTURED",
                          "JSON"
                        ]
                      },
                      "frequency": {
                        "additionalProperties": false,
                        "description": "The frequency of collecting logs from each uploader and sending these logs to a destination.",
                        "type": "object",
                        "required": [
                          "intervalInSeconds"
                        ],
                        "properties": {
                          "intervalInSeconds": {
                            "description": "The interval in seconds (`30` or `60`) after which the system bundles log lines into a file and sends it to a destination.",
                            "type": "integer",
                            "enum": [
                              30,
                              60
                            ]
                          }
                        }
                      },
                      "uploadFilePrefix": {
                        "description": "The prefix of the log file that you want to send to a object-based destination. It's a string of at most 200 characters. If unspecified, it defaults to `ak`. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables), but doesn't support the `.` character. See [S3 naming conventions](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html), [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long), and [Google Cloud Storage object naming conventions](https://cloud.google.com/storage/docs/naming-objects).",
                        "type": "string"
                      },
                      "uploadFileSuffix": {
                        "description": "The suffix of the log file that you want to send to a object-based destination. It's a static string of at most 10 characters. If unspecified, it defaults to `ds`. This member doesn't support [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables), and the `.`, `/`, `%`, `?` characters. See [S3 naming conventions](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html), [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long), and [Google Cloud Storage object naming conventions](https://cloud.google.com/storage/docs/naming-objects).",
                        "maxLength": 10,
                        "type": "string"
                      }
                    }
                  },
                  "destination": {
                    "description": "A collection of destination configurations for the stream.",
                    "example": "{{destination}}",
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "description": "Provides details about the Azure Storage destination configuration in a stream. Note that DataStream 2 supports only streaming data to block objects. See [Azure Blob Storage](https://azure.microsoft.com/en-us/services/storage/blobs/#overview) in the Azure documentation.",
                        "title": "AZURE",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "accountName",
                          "accessKey",
                          "containerName",
                          "path"
                        ],
                        "properties": {
                          "accessKey": {
                            "description": "Either of the access keys for your Azure Storage account. See [View account access keys](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage?tabs=azure-portal) in the Azure documentation.",
                            "type": "string"
                          },
                          "accountName": {
                            "description": "Specifies the Azure Storage account name.",
                            "type": "string"
                          },
                          "containerName": {
                            "description": "Specifies the Azure Storage container name.",
                            "type": "string"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set this value to `AZURE` for this destination type.",
                            "type": "string",
                            "enum": [
                              "AZURE"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "path": {
                            "description": "The path to the folder within the Azure Storage container where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long) in the Azure documentation.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/Azure.yaml"
                        }
                      },
                      {
                        "additionalProperties": false,
                        "description": "Provides details about the Amazon S3 destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and saves an `Akamai_access_verification_[TimeStamp].txt` format file in your Amazon S3 folder. You can only see this file if the validation process is successful, and you have access to the Amazon S3 bucket and folder that you're trying to send logs to.",
                        "title": "S3",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "accessKey",
                          "secretAccessKey",
                          "region",
                          "bucket",
                          "path"
                        ],
                        "properties": {
                          "accessKey": {
                            "description": "The access key identifier that you use to authenticate requests to your Amazon S3 account. See the [Understanding and getting your AWS credentials](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html) in the Amazon S3 documentation.",
                            "type": "string"
                          },
                          "bucket": {
                            "description": "The name of the Amazon S3 bucket. See [Working with buckets in AWS](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html) in the Amazon S3 documentation.",
                            "type": "string"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set it to `S3` for this destination type.",
                            "type": "string",
                            "enum": [
                              "S3"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "path": {
                            "description": "The path to the folder within your Amazon S3 bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object keys](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html) in the Amazon S3 documentation for naming conventions.",
                            "type": "string"
                          },
                          "region": {
                            "description": "The AWS region where your Amazon S3 bucket resides. See [Regions, Availability Zones, and Local Zones in AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) in the Amazon S3 documentation.",
                            "type": "string"
                          },
                          "secretAccessKey": {
                            "description": "The secret access key identifier that you use to authenticate requests to your Amazon S3 account.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/S3.yaml"
                        }
                      },
                      {
                        "additionalProperties": false,
                        "description": "Provides detailed information about the Datadog destination that you can use in your stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. You can see the `validate connector test` data only if the destination validates, and you can access the destination storage.",
                        "title": "DATADOG",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "endpoint",
                          "authToken"
                        ],
                        "properties": {
                          "authToken": {
                            "description": "The API key for your Datadog account. See [View API keys in Datadog](https://docs.datadoghq.com/account_management/api-app-keys/#api-keys) in the Datadog documentation for details on how to create or fetch your Datadog API key.",
                            "type": "string"
                          },
                          "compressLogs": {
                            "default": false,
                            "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `false` by default.",
                            "type": "boolean"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set this value to `DATADOG` for this destination type.",
                            "type": "string",
                            "enum": [
                              "DATADOG"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "endpoint": {
                            "description": "The Datadog v1 endpoint URL where you want to send and store logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Datadog](https://techdocs.akamai.com/datastream2/v2/docs/stream-datadog#akamaized-hostname-as-endpoint), and [View Datadog logs endpoint](https://docs.datadoghq.com/logs/log_collection/?tab=http#logging-endpoints) in the Datadog documentation.",
                            "type": "string"
                          },
                          "service": {
                            "description": "The name of the application or service generating the log events in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) and [Services List](https://docs.datadoghq.com/tracing/visualization/services_list/) in the Datadog documentation.",
                            "type": "string"
                          },
                          "source": {
                            "description": "The name of the source or the technology of the logs in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) in the Datadog documentation.",
                            "type": "string"
                          },
                          "tags": {
                            "description": "The tags you can use to filter and group metrics in your Datadog account. Enter a comma-delimited list for more than one tag. This field also supports `<key>:<value>` combinations. See [Getting Started with Tags](https://docs.datadoghq.com/getting_started/tagging/) in the Datadog documentation.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/Datadog.yaml"
                        }
                      },
                      {
                        "additionalProperties": false,
                        "description": "Provides detailed information about the Splunk destination that you can use in your stream. Note that DataStream 2 currently supports only endpoint URLs ending with `collector/raw`. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                        "title": "SPLUNK",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "endpoint",
                          "eventCollectorToken"
                        ],
                        "properties": {
                          "caCert": {
                            "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification. If you set this member, the `mTlsEnabled` property replaces it in the response as `true`.",
                            "type": "string"
                          },
                          "clientCert": {
                            "description": "The digital certificate in the PEM format that authenticates requests to your destination. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                            "type": "string"
                          },
                          "clientKey": {
                            "description": "The private key in the non-encrypted PKCS8 format that authenticates with the back-end server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                            "type": "string"
                          },
                          "compressLogs": {
                            "default": true,
                            "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true `by default.",
                            "type": "boolean"
                          },
                          "customHeaderName": {
                            "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see the additional options discussed in [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#additional-options).",
                            "type": "string"
                          },
                          "customHeaderValue": {
                            "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see the additional options discussed in [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#additional-options).",
                            "type": "string"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set this value to `SPLUNK` for this destination type.",
                            "type": "string",
                            "enum": [
                              "SPLUNK"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "endpoint": {
                            "description": "The raw event Splunk URL where you want to store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Splunk](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#akamaized-hostname-as-endpoint).",
                            "type": "string"
                          },
                          "eventCollectorToken": {
                            "description": "The Event Collector token for your Splunk account. See [View usage of Event Collector token](https://docs.splunk.com/Documentation/Splunk/8.0.3/Data/UsetheHTTPEventCollector) in the Splunk documentation.",
                            "type": "string"
                          },
                          "tlsHostname": {
                            "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/Splunk.yaml"
                        }
                      },
                      {
                        "additionalProperties": false,
                        "description": "Provides detailed information about the Google Cloud Storage destination you can use in a stream. When validating this destination, DataStream uses the private access key to create an `Akamai_access_verification_[TimeStamp].txt` object file in your GCS bucket. You can only see this file if the destination validates, and you have access to the Google Cloud Storage bucket where you are trying to send logs.",
                        "title": "GCS",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "bucket",
                          "projectId",
                          "serviceAccountName",
                          "privateKey"
                        ],
                        "properties": {
                          "bucket": {
                            "description": "The name of the storage bucket you created in your Google Cloud account. See [Bucket naming conventions](https://cloud.google.com/storage/docs/naming-buckets) in the Google Cloud documentation.",
                            "type": "string"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set it to `GCS` for this destination type.",
                            "type": "string",
                            "enum": [
                              "GCS"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "path": {
                            "description": "The path to the folder within your Google Cloud bucket where you want to store logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object naming guidelines](https://cloud.google.com/storage/docs/naming-objects) in the Google Cloud documentations.",
                            "type": "string"
                          },
                          "privateKey": {
                            "description": "The contents of the JSON service account keys you generated and downloaded in your Google Cloud Storage account. See [Creating service account keys](https://cloud.google.com/iam/docs/creating-managing-service-account-keys#creating_service_account_keys) in the Google Cloud documentation.",
                            "type": "string"
                          },
                          "projectId": {
                            "description": "The unique ID of your Google Cloud project.",
                            "type": "string"
                          },
                          "serviceAccountName": {
                            "description": "The name of the service account with the `storage.object.create` permission or Storage Object Creator role.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/GCS.yaml"
                        }
                      },
                      {
                        "additionalProperties": false,
                        "description": "Provides detailed information about the custom HTTPS endpoint you can use as a destination for a stream. This includes basic or no authentication, and whether the stream sends uncompressed or gzip-compressed log files. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                        "title": "HTTPS",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "authenticationType",
                          "endpoint"
                        ],
                        "properties": {
                          "authenticationType": {
                            "description": "Either `NONE` for no authentication, or `BASIC`. For basic authentication, provide the username and password you set in your custom HTTPS endpoint.",
                            "type": "string",
                            "enum": [
                              "BASIC",
                              "NONE"
                            ]
                          },
                          "caCert": {
                            "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification. If you set this member, the `mTlsEnabled` property replaces it in the response as `true`.",
                            "type": "string"
                          },
                          "clientCert": {
                            "description": "The PEM-formatted digital certificate you want to authenticate requests to your destination with. If you want to use mutual authentication, you need to provide both the client certificate and the client key. If you pass this member, the `mTlsEnabled` member replaces it in the response as `true`.",
                            "type": "string"
                          },
                          "clientKey": {
                            "description": "The private key in the non-encrypted PKCS8 format that authenticates with the back-end server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                            "type": "string"
                          },
                          "compressLogs": {
                            "default": false,
                            "description": "Enables gzip compression for a log file sent to a destination. This member's value is `false` by default.",
                            "type": "boolean"
                          },
                          "contentType": {
                            "description": "The type of the resource passed in the request's custom header. For details, see the additional options discussed in [Stream logs to a HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#additional-options).",
                            "type": "string"
                          },
                          "customHeaderName": {
                            "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see the additional options discussed in [Stream logs to a HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#additional-options).",
                            "type": "string"
                          },
                          "customHeaderValue": {
                            "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see the additional options discussed in [Stream logs to a HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#additional-options).",
                            "type": "string"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set it to `HTTPS` for this destination type.",
                            "type": "string",
                            "enum": [
                              "HTTPS"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "endpoint": {
                            "description": "Enter the secure URL where you want to send and store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to a custom HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#akamaized-hostname-as-endpoint).",
                            "type": "string"
                          },
                          "password": {
                            "description": "Enter the password you set in your custom HTTPS endpoint for authentication.",
                            "type": "string"
                          },
                          "tlsHostname": {
                            "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                            "type": "string"
                          },
                          "userName": {
                            "description": "Enter the valid username you set in your custom HTTPS endpoint for authentication.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/HTTPS.yaml"
                        }
                      },
                      {
                        "additionalProperties": false,
                        "description": "Provides detailed information about the Sumo Logic destination in a stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                        "title": "SUMO_LOGIC",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "endpoint",
                          "collectorCode"
                        ],
                        "properties": {
                          "collectorCode": {
                            "description": "The unique HTTP collector code of your Sumo Logic endpoint.",
                            "type": "string"
                          },
                          "compressLogs": {
                            "default": true,
                            "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                            "type": "boolean"
                          },
                          "contentType": {
                            "description": "The type of the resource passed in the request's custom header. For details, see the additional options discussed in [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#additional-options).",
                            "type": "string"
                          },
                          "customHeaderName": {
                            "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see the additional options discussed in [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#additional-options).",
                            "type": "string"
                          },
                          "customHeaderValue": {
                            "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see the additional options discussed in [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#additional-options).",
                            "type": "string"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set this value to `SUMO_LOGIC` for this destination type.",
                            "type": "string",
                            "enum": [
                              "SUMO_LOGIC"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "endpoint": {
                            "description": "The Sumo Logic HTTP Source URL where you want to send your logs. You should follow the `https://<SumoEndpoint>/receiver/v1/http` format and set the collector code in the `collectorCode` member. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#akamaized-hostname-as-endpoint), and [Upload Metrics to an HTTP Source](https://help.sumologic.com/docs/send-data/hosted-collectors/http-source/upload-metrics/) in the Sumo Logic documentation.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/SumoLogic.yaml"
                        }
                      },
                      {
                        "additionalProperties": false,
                        "description": "Provides details about the Oracle Cloud Storage destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and tries to save an `Akamai_access_verification_[TimeStamp].txt file in your Oracle Cloud Storage folder. You can only see this file if the validation process is successful, and you have access to the Oracle Cloud Storage bucket and folder that you're trying to send logs to.",
                        "title": "ORACLE_CLOUD_STORAGE",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "accessKey",
                          "secretAccessKey",
                          "region",
                          "bucket",
                          "path",
                          "namespace"
                        ],
                        "properties": {
                          "accessKey": {
                            "description": "The access key identifier that you use to authenticate requests to your Oracle Cloud account. See [Managing user credentials](https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm) in the Oracle Cloud Storage documentation.",
                            "type": "string"
                          },
                          "bucket": {
                            "description": "The name of the Oracle Cloud Storage bucket. See [Working with buckets](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingbuckets.htm) in the Oracle Cloud Storage documentation.",
                            "type": "string"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set it to `ORACLE_CLOUD_STORAGE` for this destination type.",
                            "type": "string",
                            "enum": [
                              "ORACLE_CLOUD_STORAGE"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "The namespace of your Oracle Cloud Storage account. See [Understanding Object Storage namespaces](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/understandingnamespaces.htm) in the Oracle Cloud Storage documentation.",
                            "type": "string"
                          },
                          "path": {
                            "description": "The path to the folder within your Oracle Cloud Storage bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Managing Objects](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingobjects.htm) in the Oracle Cloud Storage documentation.",
                            "type": "string"
                          },
                          "region": {
                            "description": "The Oracle Cloud Storage region where your bucket resides. See [Regions and availability domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm) in the Oracle Cloud Storage documentation.",
                            "type": "string"
                          },
                          "secretAccessKey": {
                            "description": "The secret access key identifier that you use to authenticate requests to your Oracle Cloud account.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/OCS.yaml"
                        }
                      },
                      {
                        "additionalProperties": false,
                        "description": "Provides detailed information about the Loggly destination that you can use in your stream.",
                        "title": "LOGGLY",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "endpoint",
                          "authToken"
                        ],
                        "properties": {
                          "authToken": {
                            "description": "The custom token for your Loggly endpoint. The token is the value from the bulk endpoint URL that comes after the `/bulk` segment, and before `tags`.",
                            "type": "string"
                          },
                          "contentType": {
                            "description": "The type of the resource passed in the request's custom header. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#additional-options) in the DataStream user guide.",
                            "type": "string"
                          },
                          "customHeaderName": {
                            "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#additional-options) in the DataStream user guide.",
                            "type": "string"
                          },
                          "customHeaderValue": {
                            "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#additional-options) in the DataStream user guide.",
                            "type": "string"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set it to `LOGGLY` for this destination type.",
                            "type": "string",
                            "enum": [
                              "LOGGLY"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "endpoint": {
                            "description": "The Loggly bulk endpoint URL in the `https://hostname.loggly.com/bulk/` format. Set the endpoint token code in the `authToken` field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Loggly](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#akamaized-hostname-as-endpoint).",
                            "type": "string"
                          },
                          "tags": {
                            "description": "The tags you can use to segment and filter log events in Loggly. See [Tags](https://documentation.solarwinds.com/en/success_center/loggly/content/admin/tags.htm) in the Loggly documentation.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/Loggly.yaml"
                        }
                      },
                      {
                        "additionalProperties": false,
                        "description": "Provides detailed information about the Elasticsearch destination that you can use in your stream.",
                        "title": "ELASTICSEARCH",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "endpoint",
                          "userName",
                          "password",
                          "indexName"
                        ],
                        "properties": {
                          "caCert": {
                            "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification. If you pass this member, the `mTlsEnabled` member replaces it in the response as `true`.",
                            "type": "string"
                          },
                          "clientCert": {
                            "description": "The PEM-formatted digital certificate you want to authenticate requests to your destination with. If you want to use mutual authentication, you need to provide both the client certificate and the client key. If you pass this member, the `mTlsEnabled` member replaces it in the response as `true`.",
                            "type": "string"
                          },
                          "clientKey": {
                            "description": "The private key in the non-encrypted PKCS8 format you want to use to authenticate with the backend server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                            "type": "string"
                          },
                          "contentType": {
                            "description": "The type of the resource passed in the request's custom header. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#additional-options) in the DataStream user guide.",
                            "type": "string"
                          },
                          "customHeaderName": {
                            "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#section-additional-options) in the DataStream user guide.",
                            "type": "string"
                          },
                          "customHeaderValue": {
                            "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#section-additional-options) in the DataStream user guide.",
                            "type": "string"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set it to `ELASTICSEARCH` for this destination type.",
                            "type": "string",
                            "enum": [
                              "ELASTICSEARCH"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "endpoint": {
                            "description": "The Elasticsearch bulk endpoint URL in the `https://hostname.elastic-cloud.com:9243/_bulk/` format. Set `indexName` in the appropriate field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Elasticsearch](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#akamaized-hostname-as-endpoint).",
                            "type": "string"
                          },
                          "indexName": {
                            "description": "The name of the index within an Elastic Cloud cluster where you want to store log files. This member supports [Dynamic index names](https://techdocs.akamai.com/datastream2/docs/stream-logs-to-elasticsearch#dynamic-index-name).",
                            "type": "string"
                          },
                          "password": {
                            "description": "The Elasticsearch basic access authentication password.",
                            "type": "string"
                          },
                          "tlsHostname": {
                            "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                            "type": "string"
                          },
                          "userName": {
                            "description": "The Elasticsearch basic access authentication username.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/Elasticsearch.yaml"
                        }
                      },
                      {
                        "additionalProperties": false,
                        "description": "Provides detailed information about the New Relic destination that you can use in your stream.",
                        "title": "NEWRELIC",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "endpoint",
                          "authToken"
                        ],
                        "properties": {
                          "authToken": {
                            "description": "The unique personal API key that belongs to your New Relic account.",
                            "type": "string"
                          },
                          "contentType": {
                            "description": "The type of the resource passed in the request's custom header. For details, see [Additional options](https://techdocs.akamai.com/datastream2/docs/stream-newrelic#section-additional-options) in the DataStream user guide.",
                            "type": "string"
                          },
                          "customHeaderName": {
                            "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#additional-options) in the DataStream user guide.",
                            "type": "string"
                          },
                          "customHeaderValue": {
                            "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#additional-options) in the DataStream user guide.",
                            "type": "string"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set it to `NEWRELIC` for this destination type.",
                            "type": "string",
                            "enum": [
                              "NEWRELIC"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "endpoint": {
                            "description": "The New Relic Log API endpoint URL in the `https://log-api.newrelic.com/log/v1/` format. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to New Relic](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#akamaized-hostname-as-endpoint).",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/NewRelic.yaml"
                        }
                      },
                      {
                        "additionalProperties": false,
                        "description": "Provides details about the S3-compatible destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and saves an `Akamai_access_verification_[TimeStamp].txt` format file in your S3-compatible folder. You can only see this file if the validation process is successful, and you have access to the S3-compatible bucket and folder that you're trying to send logs to. Before configuring your stream to send logs to this destination, make sure you create a S3-compatible storage bucket, and store the access key together with the secret access key.",
                        "title": "S3_COMPATIBLE",
                        "type": "object",
                        "required": [
                          "destinationType",
                          "displayName",
                          "accessKey",
                          "secretAccessKey",
                          "bucket",
                          "region",
                          "endpoint"
                        ],
                        "properties": {
                          "accessKey": {
                            "description": "The access key identifier of the S3-compatible object storage bucket.",
                            "type": "string"
                          },
                          "bucket": {
                            "description": "The name of the S3-compatible object storage bucket.",
                            "type": "string"
                          },
                          "compressLogs": {
                            "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                            "type": "boolean"
                          },
                          "destinationType": {
                            "description": "The name of the destination type. Set it to `S3_COMPATIBLE` for this destination type.",
                            "type": "string",
                            "enum": [
                              "S3_COMPATIBLE"
                            ]
                          },
                          "displayName": {
                            "description": "The name of the destination.",
                            "type": "string"
                          },
                          "endpoint": {
                            "description": "The scheme-qualified host of your S3-compatible object storage bucket.",
                            "type": "string"
                          },
                          "path": {
                            "description": "The path to the folder within your S3-compatible object storage bucket where you want to store logs. This value allows [Dynamic time variables](https://techdocs.akamai.com/datastream2/docs/dynamic-time-variables).",
                            "type": "string"
                          },
                          "region": {
                            "description": "The physical storage location of your S3-compatible object storage bucket.",
                            "type": "string"
                          },
                          "secretAccessKey": {
                            "description": "The secret access key identifier of the S3-compatible object storage bucket.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/S3Compatible.yaml"
                        }
                      }
                    ]
                  },
                  "notificationEmails": {
                    "description": "A list of e-mail addresses where you want to send notifications about activations and deactivations of the stream. You can omit this member and activate or deactivate the stream without notifications.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "properties": {
                    "description": "Identifies the properties that belong to the same product, and you want to monitor in the stream. Note that only streams belonging to active properties can log data. See [Activate a property](https://techdocs.akamai.com/property-mgr/docs/activate-prop) in Property Manager.",
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "propertyId"
                      ],
                      "properties": {
                        "propertyId": {
                          "description": "The identifier of the property.",
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "streamName": {
                    "description": "The name of the stream.",
                    "example": "{{streamName}}",
                    "maxLength": 1000,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/EditStreamRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response confirms the stream has been updated and returns its details.",
            "content": {
              "application/json": {
                "example": {
                  "collectMidgress": true,
                  "contractId": "K-0N7RAK7",
                  "createdBy": "alfulani",
                  "createdDate": "2022-02-05T13:31:30Z",
                  "groupId": 21484,
                  "latestVersion": 1,
                  "modifiedBy": "mrossi",
                  "modifiedDate": "2022-02-05T13:31:30Z",
                  "productId": "Dynamic_Site_Accelerator",
                  "streamId": 7050,
                  "streamName": "diagnostics-log-stream",
                  "streamStatus": "ACTIVATING",
                  "streamVersion": 1,
                  "notificationEmails": [
                    "useremail1@domain.com",
                    "useremail2@domain.com"
                  ],
                  "deliveryConfiguration": {
                    "fieldDelimiter": "SPACE",
                    "format": "STRUCTURED",
                    "uploadFilePrefix": "logs",
                    "uploadFileSuffix": "ds",
                    "frequency": {
                      "intervalInSeconds": 30
                    }
                  },
                  "destination": {
                    "bucket": "datastream.akamai.com",
                    "compressLogs": true,
                    "destinationType": "S3",
                    "displayName": "S3Destination",
                    "path": "ds2-logs",
                    "region": "ap-south-1"
                  },
                  "datasetFields": [
                    {
                      "datasetFieldId": 1000,
                      "datasetFieldJsonKey": "cp",
                      "datasetFieldName": "CP code"
                    },
                    {
                      "datasetFieldId": 1002,
                      "datasetFieldJsonKey": "reqId",
                      "datasetFieldName": "Request ID"
                    },
                    {
                      "datasetFieldId": 1023,
                      "datasetFieldJsonKey": "cookie",
                      "datasetFieldName": "Cookie"
                    }
                  ],
                  "properties": [
                    {
                      "propertyId": 349772,
                      "propertyName": "example.com"
                    },
                    {
                      "propertyId": 349770,
                      "propertyName": "example.akamai.com"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Provides detailed information about the latest configuration version of a stream. It provides descriptions of the data set fields selected in the version, identifiers of properties they collect logs for, configuration of the destination where they deliver logs, and structure of these log lines. It also informs whether this version is active.",
                  "type": "object",
                  "required": [
                    "contractId",
                    "createdBy",
                    "createdDate",
                    "datasetFields",
                    "deliveryConfiguration",
                    "destination",
                    "groupId",
                    "latestVersion",
                    "modifiedBy",
                    "modifiedDate",
                    "productId",
                    "properties",
                    "streamId",
                    "streamName",
                    "streamStatus",
                    "streamVersion"
                  ],
                  "properties": {
                    "collectMidgress": {
                      "description": "Indicates if you've opted to capture midgress traffic within the Akamai platform, such as between two edge servers.",
                      "type": "boolean"
                    },
                    "contractId": {
                      "description": "Identifies the contract that the stream belongs to.",
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The username who created the stream.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "An ISO 8601 timestamp marking when the stream was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "datasetFields": {
                      "description": "A list of data set fields selected that the stream monitors in logs. The order of the identifiers define how the value for these fields appear in the log lines.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "datasetFieldId",
                          "datasetFieldName",
                          "datasetFieldJsonKey"
                        ],
                        "properties": {
                          "datasetFieldId": {
                            "description": "Identifies the field.",
                            "type": "integer"
                          },
                          "datasetFieldJsonKey": {
                            "description": "Specifies the JSON key for the field in a log line. You can get this value only when you run the [List data set fields](https://techdocs.akamai.com/datastream2/reference/get-dataset-fields) or [Get a stream](https://techdocs.akamai.com/datastream2/reference/get-stream) operation for a stream in the `JSON` format.",
                            "type": "string"
                          },
                          "datasetFieldName": {
                            "description": "A name of the data set field.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "deliveryConfiguration": {
                      "additionalProperties": false,
                      "description": "The configuration of log lines, names of the files sent to a destination, and delivery frequency for these files.",
                      "type": "object",
                      "required": [
                        "format",
                        "frequency"
                      ],
                      "properties": {
                        "fieldDelimiter": {
                          "description": "A delimiter that separates data set fields in the log lines, either `SPACE` or `TAB`. Set this only for the `STRUCTURED` log file `format`.",
                          "type": "string",
                          "enum": [
                            "SPACE",
                            "TAB"
                          ]
                        },
                        "format": {
                          "description": "The format in which you want to receive log files. `STRUCTURED` or `JSON` are the currently available formats.",
                          "type": "string",
                          "enum": [
                            "STRUCTURED",
                            "JSON"
                          ]
                        },
                        "frequency": {
                          "additionalProperties": false,
                          "description": "The frequency of collecting logs from each uploader and sending these logs to a destination.",
                          "type": "object",
                          "required": [
                            "intervalInSeconds"
                          ],
                          "properties": {
                            "intervalInSeconds": {
                              "description": "The interval in seconds (`30` or `60`) after which the system bundles log lines into a file and sends it to a destination.",
                              "type": "integer",
                              "enum": [
                                30,
                                60
                              ]
                            }
                          }
                        },
                        "uploadFilePrefix": {
                          "default": "ak",
                          "description": "The prefix of the log file that you want to send to a object-based destination. It's a string of at most 200 characters. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). If unspecified, it defaults to `ak`.",
                          "type": "string"
                        },
                        "uploadFileSuffix": {
                          "default": "ds",
                          "description": "The suffix of the log file that you want to send to a object-based destination. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). It's a static string of at most 10 characters. If unspecified, it defaults to `ds`.",
                          "type": "string"
                        }
                      }
                    },
                    "destination": {
                      "description": "Provides detailed information about the destination's configuration in the stream to send logs.",
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Azure Storage destination configuration in a stream.",
                          "title": "AZURE",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "compressLogs",
                            "displayName",
                            "path",
                            "accountName",
                            "containerName"
                          ],
                          "properties": {
                            "accountName": {
                              "description": "Specifies the Azure Storage account name.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "containerName": {
                              "description": "Specifies the Azure Storage container name.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `AZURE` for this destination type.",
                              "type": "string",
                              "enum": [
                                "AZURE"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within the Azure Storage container where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long) in the Azure documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/AzureSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Amazon S3 destination in a stream.",
                          "title": "S3",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "compressLogs",
                            "displayName",
                            "path",
                            "bucket",
                            "region"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the Amazon S3 bucket. See [Working with buckets in AWS](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html) in the Amazon S3 documentation.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `S3` for this destination type.",
                              "type": "string",
                              "enum": [
                                "S3"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your Amazon S3 bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object keys](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html) in the Amazon S3 documentation for naming conventions.",
                              "type": "string"
                            },
                            "region": {
                              "description": "The AWS region where your Amazon S3 bucket resides. See [Regions, Availability Zones, and Local Zones in AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) in the Amazon S3 documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/S3SavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Datadog destination configuration in a stream.",
                          "title": "DATADOG",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "default": false,
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `false` by default.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `DATADOG` for this destination type.",
                              "type": "string",
                              "enum": [
                                "DATADOG"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Datadog v1 endpoint URL where you want to send and store logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Datadog](https://techdocs.akamai.com/datastream2/v2/docs/stream-datadog#akamaized-hostname-as-endpoint), and [View Datadog logs endpoint](https://docs.datadoghq.com/logs/log_collection/?tab=http#logging-endpoints) in the Datadog documentation.",
                              "type": "string"
                            },
                            "service": {
                              "description": "The name of the application or service generating the log events in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) and [Services List](https://docs.datadoghq.com/tracing/visualization/services_list/) in the Datadog documentation.",
                              "type": "string"
                            },
                            "source": {
                              "description": "The name of the source or the technology of the logs in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) in the Datadog documentation.",
                              "type": "string"
                            },
                            "tags": {
                              "description": "The tags you can use to filter and group metrics in your Datadog account. Enter a comma-delimited list for more than one tag. This field also supports `<key>:<value>` combinations. See [Getting Started with Tags](https://docs.datadoghq.com/getting_started/tagging/) in the Datadog documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/DatadogSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides detailed information about the Splunk destination that you can use in your stream. Note that DataStream 2 currently supports only endpoint URLs ending with `collector/raw`. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                          "title": "SPLUNK",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "default": true,
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                              "type": "boolean"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `SPLUNK` for this destination type.",
                              "type": "string",
                              "enum": [
                                "SPLUNK"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The raw event Splunk URL where you want to store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Splunk](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "mTlsEnabled": {
                              "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                              "type": "boolean"
                            },
                            "tlsHostname": {
                              "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/SplunkSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Google Cloud Storage destination in a stream.",
                          "title": "GCS",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "bucket",
                            "projectId",
                            "serviceAccountName",
                            "compressLogs"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the storage bucket you created in your Google Cloud account. See [Bucket naming conventions](https://cloud.google.com/storage/docs/naming-buckets) in the Google Cloud documentation.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `GCS` for this destination type.",
                              "type": "string",
                              "enum": [
                                "GCS"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your Google Cloud bucket where you want to store logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object naming guidelines](https://cloud.google.com/storage/docs/naming-objects) in the Google Cloud documentation.",
                              "type": "string"
                            },
                            "projectId": {
                              "description": "The unique ID of your Google Cloud project.",
                              "type": "string"
                            },
                            "serviceAccountName": {
                              "description": "The name of the service account with the `storage.object.create` permission or Storage Object Creator role.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/GCSSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the custom HTTPS endpoint destination in a stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                          "title": "HTTPS",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "authenticationType",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "authenticationType": {
                              "description": "Either `NONE` for no authentication, or `BASIC`. For basic authentication, provide the username and password you set in your custom HTTPS endpoint.",
                              "type": "string",
                              "enum": [
                                "BASIC",
                                "NONE"
                              ]
                            },
                            "compressLogs": {
                              "default": false,
                              "description": "Enables gzip compression for a log file sent to a destination. This member's value is `false` by default.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `HTTPS` for this destination type.",
                              "type": "string",
                              "enum": [
                                "HTTPS"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "Enter the secure URL where you want to send and store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to a custom HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "mTlsEnabled": {
                              "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                              "type": "boolean"
                            },
                            "tlsHostname": {
                              "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/HTTPSSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Oracle Cloud Storage destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and tries to save an `akamai_write_test_2147483647.txt` file in your Oracle Cloud Storage folder. You can only see this file if the validation process is successful, and you have access to the Oracle Cloud Storage bucket and folder that you're trying to send logs to.",
                          "title": "ORACLE_CLOUD_STORAGE",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "region",
                            "bucket",
                            "path",
                            "namespace",
                            "compressLogs"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the Oracle Cloud Storage bucket. See [Working with buckets](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingbuckets.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `ORACLE_CLOUD_STORAGE` for this destination type.",
                              "type": "string",
                              "enum": [
                                "ORACLE_CLOUD_STORAGE"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "The namespace of your Oracle Cloud Storage account. See [Understanding Object Storage namespaces](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/understandingnamespaces.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your Oracle Cloud Storage bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Managing Objects](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingobjects.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            },
                            "region": {
                              "description": "The Oracle Cloud Storage region where your bucket resides. See [Regions and availability domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/OCSSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides detailed information about the Sumo Logic destination that you can use in your stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                          "title": "SUMO_LOGIC",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "collectorCode": {
                              "description": "The unique HTTP collector code of your Sumo Logic endpoint.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "default": true,
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the custom header of the request.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the custom header of the request that can contain only alphanumeric, dash, and underscore characters. See [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic) for details.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The contents of the custom header passed with the request that contain information about the client connection. See [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic) for details.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `SUMO_LOGIC` for this destination type.",
                              "type": "string",
                              "enum": [
                                "SUMO_LOGIC"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Sumo Logic HTTP Source URL where you want to send your logs. You should follow the `https://<SumoEndpoint>/receiver/v1/http` format and set the collector code in the `collectorCode` member.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/SumoLogicSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the loggly endpoint destination in a stream.",
                          "title": "LOGGLY",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `LOGGLY` for this destination type.",
                              "type": "string",
                              "enum": [
                                "LOGGLY"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Loggly bulk endpoint URL in the `https://hostname.loggly.com/bulk/` format. Set the endpoint code in the `authToken` field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Loggly](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "tags": {
                              "description": "The tags you can use to segment and filter log events in Loggly. See [Tags](https://documentation.solarwinds.com/en/success_center/loggly/content/admin/tags.htm) in the Loggly documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/LogglySavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Elasticsearch endpoint destination in a stream.",
                          "title": "ELASTICSEARCH",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `ELASTICSEARCH` for this destination type.",
                              "type": "string",
                              "enum": [
                                "ELASTICSEARCH"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Elasticsearch bulk endpoint URL in the `https://hostname.elastic-cloud.com:9243/_bulk/` format. Set `indexName` in the appropriate field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Elasticsearch][Stream logs to Elasticsearch](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#section-akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "mTlsEnabled": {
                              "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                              "type": "boolean"
                            },
                            "tlsHostname": {
                              "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/ElasticsearchSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the New Relic endpoint destination in a stream.",
                          "title": "NEWRELIC",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `NEWRELIC` for this destination type.",
                              "type": "string",
                              "enum": [
                                "NEWRELIC"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The New Relic Log API endpoint URL in the `https://log-api.newrelic.com/log/v1/` format. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to New Relic](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/NewRelicSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the S3-compatible destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and saves an `Akamai_access_verification_[TimeStamp].txt` format file in your S3-compatible folder. You can only see this file if the validation process is successful, and you have access to the S3-compatible bucket and folder that you're trying to send logs to. Before configuring your stream to send logs to this destination, make sure you create a S3-compatible storage bucket, and store the access key together with the secret access key.",
                          "title": "S3_COMPATIBLE",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "bucket",
                            "region",
                            "endpoint"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the S3-compatible object storage bucket.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `S3_COMPATIBLE` for this destination type.",
                              "type": "string",
                              "enum": [
                                "S3_COMPATIBLE"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The scheme-qualified host of your S3-compatible object storage bucket.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your S3-compatible object storage bucket where you want to store logs. This value allows [Dynamic time variables](https://techdocs.akamai.com/datastream2/docs/dynamic-time-variables).",
                              "type": "string"
                            },
                            "region": {
                              "description": "The physical storage location of your S3-compatible object storage bucket.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/S3CompatibleSavedDestination.yaml"
                          }
                        }
                      ]
                    },
                    "groupId": {
                      "description": "Identifies the group that has access to the product and that you created the stream configuration for. When editing a stream, the value you pass is ignored as you can't change the group for an existing stream.",
                      "type": "integer"
                    },
                    "latestVersion": {
                      "description": "Identifies the latest configuration version of the stream.",
                      "type": "integer"
                    },
                    "modifiedBy": {
                      "description": "The username who modified the stream.",
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "The date and time in the ISO 8601 format when the stream was modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "notificationEmails": {
                      "description": "A comma-delimited list of email addresses where the system sends notifications about activations and deactivations of the stream.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "productId": {
                      "description": "The ID of the product that you created stream for.",
                      "type": "string"
                    },
                    "properties": {
                      "description": "Identifies the properties that you monitor in the stream.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "propertyId",
                          "propertyName"
                        ],
                        "properties": {
                          "propertyId": {
                            "description": "The identifier of the property.",
                            "type": "integer"
                          },
                          "propertyName": {
                            "description": "The descriptive label for the property.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "streamId": {
                      "description": "Identifies the stream.",
                      "type": "integer"
                    },
                    "streamName": {
                      "description": "The name of the stream.",
                      "type": "string"
                    },
                    "streamStatus": {
                      "description": "Indicates if the stream is `ACTIVATED` or `DEACTIVATED`. `INACTIVE`, `ACTIVATING`, `ACTIVATED`, `DEACTIVATING`, or `DEACTIVATED`.",
                      "type": "string",
                      "enum": [
                        "INACTIVE",
                        "ACTIVATING",
                        "ACTIVATED",
                        "DEACTIVATING",
                        "DEACTIVATED"
                      ]
                    },
                    "streamVersion": {
                      "description": "Identifies the configuration version of the stream.",
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/StreamDetail.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Activates the stream at the time of the request, `false` by default. When you [Edit a stream](https://techdocs.akamai.com/datastream2/reference/put-stream) or [Patch a stream](https://techdocs.akamai.com/datastream2/reference/patch-stream) that is active, you need to set this member to `true`.",
            "example": "{{activate}}",
            "in": "query",
            "name": "activate",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/activate-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "patch": {
        "description": "Updates selected details of an existing stream. Running this operation using [JSON Patch](http://jsonpatch.com) syntax creates a stream version that replaces the current one. Currently you can patch a stream using only the `REPLACE` operation. When updating configuration objects such as `destination` or `deliveryConfiguration`, pass a complete object to avoid overwriting current details with default values for omitted members such as `tags`, `uploadFilePrefix`, and `uploadFileSuffix`. Note that only active streams collect and send logs to their destinations. You need to set the `activate` parameter to `true` while patching active streams, and optionally for inactive streams if you want to activate them upon request. See [Patching streams](https://techdocs.akamai.com/datastream2/reference/patching-streams) for details.",
        "operationId": "patch-stream",
        "summary": "Patch a stream",
        "tags": [
          "Streams"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's DataStream 2 API",
          "url": "https://techdocs.akamai.com/datastream2/reference/patch-stream"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json-patch+json": {
              "examples": {
                "Update data set fields and stream name": {
                  "value": [
                    {
                      "op": "REPLACE",
                      "path": "/streamName",
                      "value": "DD Raw logs"
                    },
                    {
                      "op": "REPLACE",
                      "path": "/datasetFields",
                      "value": [
                        {
                          "datasetFieldId": 1000
                        },
                        {
                          "datasetFieldId": 1002
                        },
                        {
                          "datasetFieldId": 1023
                        }
                      ]
                    }
                  ]
                },
                "Update delivery configuration": {
                  "value": [
                    {
                      "op": "REPLACE",
                      "path": "/deliveryConfiguration",
                      "value": {
                        "fieldDelimiter": "SPACE",
                        "format": "STRUCTURED",
                        "uploadFilePrefix": "logs",
                        "uploadFileSuffix": "ds",
                        "frequency": {
                          "intervalInSeconds": 30
                        }
                      }
                    }
                  ]
                },
                "Update destination": {
                  "value": [
                    {
                      "op": "REPLACE",
                      "path": "/destination",
                      "value": {
                        "destinationType": "SPLUNK",
                        "displayName": "Splunk_destination",
                        "endpoint": "https://http-inputs-customer.splunkcloud.com/services/collector/raw",
                        "eventCollectorToken": "894-51c5-4b2e-888y-54fb-hh62"
                      }
                    }
                  ]
                },
                "Update properties and notification e-mails": {
                  "value": [
                    {
                      "op": "REPLACE",
                      "path": "/properties",
                      "value": [
                        {
                          "propertyId": 349772
                        },
                        {
                          "propertyId": 349770
                        }
                      ]
                    },
                    {
                      "op": "REPLACE",
                      "path": "/notificationEmails",
                      "value": [
                        "useremail1@domain.com",
                        "useremail2@domain.com"
                      ]
                    }
                  ]
                }
              },
              "schema": {
                "description": "Provides the information you need to specify when patching a stream configuration using [JSON Patch](http://jsonpatch.com/) semantics.",
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "description": "Provides the information you need to specify when patching a stream configuration using [JSON Patch](http://jsonpatch.com/) semantics.",
                  "type": "object",
                  "required": [
                    "op",
                    "path",
                    "value"
                  ],
                  "properties": {
                    "op": {
                      "description": "The JSON patch operation type. `REPLACE` is the only supported operation.",
                      "type": "string",
                      "enum": [
                        "REPLACE"
                      ]
                    },
                    "path": {
                      "description": "A JSON Pointer that identifies the values you want to replace in the stream configuration. This member's value is `/` followed by any of the configuration object's top-level member name. See [Edit a stream](https://techdocs.akamai.com/datastream2/reference/put-stream) for available members.",
                      "type": "string"
                    },
                    "value": {
                      "description": "Specifies the data to replace at the `path` location, any type of data including objects and arrays. Pass complete objects to avoid overwriting current details with default values for omitted members.",
                      "oneOf": [
                        {
                          "description": "The name of the stream.",
                          "maxLength": 1000,
                          "title": "Stream name",
                          "type": "string"
                        },
                        {
                          "description": "Identifies the contract that has access to the product.a",
                          "title": "Contract",
                          "type": "string"
                        },
                        {
                          "description": "Identifies the properties that belong to the same product and you want to monitor in the stream. Note that a stream can only log data for active properties. You can [activate a property](https://developer.akamai.com/api/core_features/property_manager/v1.html#postpropertyactivations) in Property Manager.",
                          "title": "Properties",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "propertyId"
                            ],
                            "properties": {
                              "propertyId": {
                                "description": "The identifier of the property.",
                                "type": "integer"
                              }
                            }
                          }
                        },
                        {
                          "description": "Identifiers of the data set fields that you want to receive in logs. In case of `STRUCTURED` format, the order of the identifiers define how the value for these fields appear in the log lines. See [Data set parameters](https://techdocs.akamai.com/datastream2/reference/data-set-parameters-1) for the complete list of the fields you can choose.",
                          "title": "Dataset fields",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "datasetFieldId"
                            ],
                            "properties": {
                              "datasetFieldId": {
                                "description": "Identifies the field.",
                                "type": "integer"
                              }
                            }
                          }
                        },
                        {
                          "description": "The destination configuration in the stream to send logs. See [Destinations](https://techdocs.akamai.com/datastream2/reference/destinations) for details and features available for each destination.",
                          "title": "Destination",
                          "oneOf": [
                            {
                              "additionalProperties": false,
                              "description": "Provides details about the Azure Storage destination configuration in a stream. Note that DataStream 2 supports only streaming data to block objects. See [Azure Blob Storage](https://azure.microsoft.com/en-us/services/storage/blobs/#overview) in the Azure documentation.",
                              "title": "AZURE",
                              "type": "object",
                              "required": [
                                "destinationType",
                                "displayName",
                                "accountName",
                                "accessKey",
                                "containerName",
                                "path"
                              ],
                              "properties": {
                                "accessKey": {
                                  "description": "Either of the access keys for your Azure Storage account. See [View account access keys](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage?tabs=azure-portal) in the Azure documentation.",
                                  "type": "string"
                                },
                                "accountName": {
                                  "description": "Specifies the Azure Storage account name.",
                                  "type": "string"
                                },
                                "containerName": {
                                  "description": "Specifies the Azure Storage container name.",
                                  "type": "string"
                                },
                                "destinationType": {
                                  "description": "The name of the destination type. Set this value to `AZURE` for this destination type.",
                                  "type": "string",
                                  "enum": [
                                    "AZURE"
                                  ]
                                },
                                "displayName": {
                                  "description": "The name of the destination.",
                                  "type": "string"
                                },
                                "path": {
                                  "description": "The path to the folder within the Azure Storage container where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long) in the Azure documentation.",
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/Azure.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Provides details about the Amazon S3 destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and saves an `Akamai_access_verification_[TimeStamp].txt` format file in your Amazon S3 folder. You can only see this file if the validation process is successful, and you have access to the Amazon S3 bucket and folder that you're trying to send logs to.",
                              "title": "S3",
                              "type": "object",
                              "required": [
                                "destinationType",
                                "displayName",
                                "accessKey",
                                "secretAccessKey",
                                "region",
                                "bucket",
                                "path"
                              ],
                              "properties": {
                                "accessKey": {
                                  "description": "The access key identifier that you use to authenticate requests to your Amazon S3 account. See the [Understanding and getting your AWS credentials](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html) in the Amazon S3 documentation.",
                                  "type": "string"
                                },
                                "bucket": {
                                  "description": "The name of the Amazon S3 bucket. See [Working with buckets in AWS](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html) in the Amazon S3 documentation.",
                                  "type": "string"
                                },
                                "destinationType": {
                                  "description": "The name of the destination type. Set it to `S3` for this destination type.",
                                  "type": "string",
                                  "enum": [
                                    "S3"
                                  ]
                                },
                                "displayName": {
                                  "description": "The name of the destination.",
                                  "type": "string"
                                },
                                "path": {
                                  "description": "The path to the folder within your Amazon S3 bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object keys](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html) in the Amazon S3 documentation for naming conventions.",
                                  "type": "string"
                                },
                                "region": {
                                  "description": "The AWS region where your Amazon S3 bucket resides. See [Regions, Availability Zones, and Local Zones in AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) in the Amazon S3 documentation.",
                                  "type": "string"
                                },
                                "secretAccessKey": {
                                  "description": "The secret access key identifier that you use to authenticate requests to your Amazon S3 account.",
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/S3.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Provides detailed information about the Datadog destination that you can use in your stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. You can see the `validate connector test` data only if the destination validates, and you can access the destination storage.",
                              "title": "DATADOG",
                              "type": "object",
                              "required": [
                                "destinationType",
                                "displayName",
                                "endpoint",
                                "authToken"
                              ],
                              "properties": {
                                "authToken": {
                                  "description": "The API key for your Datadog account. See [View API keys in Datadog](https://docs.datadoghq.com/account_management/api-app-keys/#api-keys) in the Datadog documentation for details on how to create or fetch your Datadog API key.",
                                  "type": "string"
                                },
                                "compressLogs": {
                                  "default": false,
                                  "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `false` by default.",
                                  "type": "boolean"
                                },
                                "destinationType": {
                                  "description": "The name of the destination type. Set this value to `DATADOG` for this destination type.",
                                  "type": "string",
                                  "enum": [
                                    "DATADOG"
                                  ]
                                },
                                "displayName": {
                                  "description": "The name of the destination.",
                                  "type": "string"
                                },
                                "endpoint": {
                                  "description": "The Datadog v1 endpoint URL where you want to send and store logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Datadog](https://techdocs.akamai.com/datastream2/v2/docs/stream-datadog#akamaized-hostname-as-endpoint), and [View Datadog logs endpoint](https://docs.datadoghq.com/logs/log_collection/?tab=http#logging-endpoints) in the Datadog documentation.",
                                  "type": "string"
                                },
                                "service": {
                                  "description": "The name of the application or service generating the log events in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) and [Services List](https://docs.datadoghq.com/tracing/visualization/services_list/) in the Datadog documentation.",
                                  "type": "string"
                                },
                                "source": {
                                  "description": "The name of the source or the technology of the logs in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) in the Datadog documentation.",
                                  "type": "string"
                                },
                                "tags": {
                                  "description": "The tags you can use to filter and group metrics in your Datadog account. Enter a comma-delimited list for more than one tag. This field also supports `<key>:<value>` combinations. See [Getting Started with Tags](https://docs.datadoghq.com/getting_started/tagging/) in the Datadog documentation.",
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/Datadog.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Provides detailed information about the Splunk destination that you can use in your stream. Note that DataStream 2 currently supports only endpoint URLs ending with `collector/raw`. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                              "title": "SPLUNK",
                              "type": "object",
                              "required": [
                                "destinationType",
                                "displayName",
                                "endpoint",
                                "eventCollectorToken"
                              ],
                              "properties": {
                                "caCert": {
                                  "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification. If you set this member, the `mTlsEnabled` property replaces it in the response as `true`.",
                                  "type": "string"
                                },
                                "clientCert": {
                                  "description": "The digital certificate in the PEM format that authenticates requests to your destination. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                                  "type": "string"
                                },
                                "clientKey": {
                                  "description": "The private key in the non-encrypted PKCS8 format that authenticates with the back-end server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                                  "type": "string"
                                },
                                "compressLogs": {
                                  "default": true,
                                  "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true `by default.",
                                  "type": "boolean"
                                },
                                "customHeaderName": {
                                  "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see the additional options discussed in [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#additional-options).",
                                  "type": "string"
                                },
                                "customHeaderValue": {
                                  "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see the additional options discussed in [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#additional-options).",
                                  "type": "string"
                                },
                                "destinationType": {
                                  "description": "The name of the destination type. Set this value to `SPLUNK` for this destination type.",
                                  "type": "string",
                                  "enum": [
                                    "SPLUNK"
                                  ]
                                },
                                "displayName": {
                                  "description": "The name of the destination.",
                                  "type": "string"
                                },
                                "endpoint": {
                                  "description": "The raw event Splunk URL where you want to store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Splunk](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#akamaized-hostname-as-endpoint).",
                                  "type": "string"
                                },
                                "eventCollectorToken": {
                                  "description": "The Event Collector token for your Splunk account. See [View usage of Event Collector token](https://docs.splunk.com/Documentation/Splunk/8.0.3/Data/UsetheHTTPEventCollector) in the Splunk documentation.",
                                  "type": "string"
                                },
                                "tlsHostname": {
                                  "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/Splunk.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Provides detailed information about the Google Cloud Storage destination you can use in a stream. When validating this destination, DataStream uses the private access key to create an `Akamai_access_verification_[TimeStamp].txt` object file in your GCS bucket. You can only see this file if the destination validates, and you have access to the Google Cloud Storage bucket where you are trying to send logs.",
                              "title": "GCS",
                              "type": "object",
                              "required": [
                                "destinationType",
                                "displayName",
                                "bucket",
                                "projectId",
                                "serviceAccountName",
                                "privateKey"
                              ],
                              "properties": {
                                "bucket": {
                                  "description": "The name of the storage bucket you created in your Google Cloud account. See [Bucket naming conventions](https://cloud.google.com/storage/docs/naming-buckets) in the Google Cloud documentation.",
                                  "type": "string"
                                },
                                "destinationType": {
                                  "description": "The name of the destination type. Set it to `GCS` for this destination type.",
                                  "type": "string",
                                  "enum": [
                                    "GCS"
                                  ]
                                },
                                "displayName": {
                                  "description": "The name of the destination.",
                                  "type": "string"
                                },
                                "path": {
                                  "description": "The path to the folder within your Google Cloud bucket where you want to store logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object naming guidelines](https://cloud.google.com/storage/docs/naming-objects) in the Google Cloud documentations.",
                                  "type": "string"
                                },
                                "privateKey": {
                                  "description": "The contents of the JSON service account keys you generated and downloaded in your Google Cloud Storage account. See [Creating service account keys](https://cloud.google.com/iam/docs/creating-managing-service-account-keys#creating_service_account_keys) in the Google Cloud documentation.",
                                  "type": "string"
                                },
                                "projectId": {
                                  "description": "The unique ID of your Google Cloud project.",
                                  "type": "string"
                                },
                                "serviceAccountName": {
                                  "description": "The name of the service account with the `storage.object.create` permission or Storage Object Creator role.",
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/GCS.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Provides detailed information about the custom HTTPS endpoint you can use as a destination for a stream. This includes basic or no authentication, and whether the stream sends uncompressed or gzip-compressed log files. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                              "title": "HTTPS",
                              "type": "object",
                              "required": [
                                "destinationType",
                                "displayName",
                                "authenticationType",
                                "endpoint"
                              ],
                              "properties": {
                                "authenticationType": {
                                  "description": "Either `NONE` for no authentication, or `BASIC`. For basic authentication, provide the username and password you set in your custom HTTPS endpoint.",
                                  "type": "string",
                                  "enum": [
                                    "BASIC",
                                    "NONE"
                                  ]
                                },
                                "caCert": {
                                  "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification. If you set this member, the `mTlsEnabled` property replaces it in the response as `true`.",
                                  "type": "string"
                                },
                                "clientCert": {
                                  "description": "The PEM-formatted digital certificate you want to authenticate requests to your destination with. If you want to use mutual authentication, you need to provide both the client certificate and the client key. If you pass this member, the `mTlsEnabled` member replaces it in the response as `true`.",
                                  "type": "string"
                                },
                                "clientKey": {
                                  "description": "The private key in the non-encrypted PKCS8 format that authenticates with the back-end server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                                  "type": "string"
                                },
                                "compressLogs": {
                                  "default": false,
                                  "description": "Enables gzip compression for a log file sent to a destination. This member's value is `false` by default.",
                                  "type": "boolean"
                                },
                                "contentType": {
                                  "description": "The type of the resource passed in the request's custom header. For details, see the additional options discussed in [Stream logs to a HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#additional-options).",
                                  "type": "string"
                                },
                                "customHeaderName": {
                                  "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see the additional options discussed in [Stream logs to a HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#additional-options).",
                                  "type": "string"
                                },
                                "customHeaderValue": {
                                  "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see the additional options discussed in [Stream logs to a HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#additional-options).",
                                  "type": "string"
                                },
                                "destinationType": {
                                  "description": "The name of the destination type. Set it to `HTTPS` for this destination type.",
                                  "type": "string",
                                  "enum": [
                                    "HTTPS"
                                  ]
                                },
                                "displayName": {
                                  "description": "The name of the destination.",
                                  "type": "string"
                                },
                                "endpoint": {
                                  "description": "Enter the secure URL where you want to send and store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to a custom HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#akamaized-hostname-as-endpoint).",
                                  "type": "string"
                                },
                                "password": {
                                  "description": "Enter the password you set in your custom HTTPS endpoint for authentication.",
                                  "type": "string"
                                },
                                "tlsHostname": {
                                  "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                                  "type": "string"
                                },
                                "userName": {
                                  "description": "Enter the valid username you set in your custom HTTPS endpoint for authentication.",
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/HTTPS.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Provides detailed information about the Sumo Logic destination in a stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                              "title": "SUMO_LOGIC",
                              "type": "object",
                              "required": [
                                "destinationType",
                                "displayName",
                                "endpoint",
                                "collectorCode"
                              ],
                              "properties": {
                                "collectorCode": {
                                  "description": "The unique HTTP collector code of your Sumo Logic endpoint.",
                                  "type": "string"
                                },
                                "compressLogs": {
                                  "default": true,
                                  "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                                  "type": "boolean"
                                },
                                "contentType": {
                                  "description": "The type of the resource passed in the request's custom header. For details, see the additional options discussed in [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#additional-options).",
                                  "type": "string"
                                },
                                "customHeaderName": {
                                  "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see the additional options discussed in [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#additional-options).",
                                  "type": "string"
                                },
                                "customHeaderValue": {
                                  "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see the additional options discussed in [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#additional-options).",
                                  "type": "string"
                                },
                                "destinationType": {
                                  "description": "The name of the destination type. Set this value to `SUMO_LOGIC` for this destination type.",
                                  "type": "string",
                                  "enum": [
                                    "SUMO_LOGIC"
                                  ]
                                },
                                "displayName": {
                                  "description": "The name of the destination.",
                                  "type": "string"
                                },
                                "endpoint": {
                                  "description": "The Sumo Logic HTTP Source URL where you want to send your logs. You should follow the `https://<SumoEndpoint>/receiver/v1/http` format and set the collector code in the `collectorCode` member. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#akamaized-hostname-as-endpoint), and [Upload Metrics to an HTTP Source](https://help.sumologic.com/docs/send-data/hosted-collectors/http-source/upload-metrics/) in the Sumo Logic documentation.",
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/SumoLogic.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Provides details about the Oracle Cloud Storage destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and tries to save an `Akamai_access_verification_[TimeStamp].txt file in your Oracle Cloud Storage folder. You can only see this file if the validation process is successful, and you have access to the Oracle Cloud Storage bucket and folder that you're trying to send logs to.",
                              "title": "ORACLE_CLOUD_STORAGE",
                              "type": "object",
                              "required": [
                                "destinationType",
                                "displayName",
                                "accessKey",
                                "secretAccessKey",
                                "region",
                                "bucket",
                                "path",
                                "namespace"
                              ],
                              "properties": {
                                "accessKey": {
                                  "description": "The access key identifier that you use to authenticate requests to your Oracle Cloud account. See [Managing user credentials](https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm) in the Oracle Cloud Storage documentation.",
                                  "type": "string"
                                },
                                "bucket": {
                                  "description": "The name of the Oracle Cloud Storage bucket. See [Working with buckets](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingbuckets.htm) in the Oracle Cloud Storage documentation.",
                                  "type": "string"
                                },
                                "destinationType": {
                                  "description": "The name of the destination type. Set it to `ORACLE_CLOUD_STORAGE` for this destination type.",
                                  "type": "string",
                                  "enum": [
                                    "ORACLE_CLOUD_STORAGE"
                                  ]
                                },
                                "displayName": {
                                  "description": "The name of the destination.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "The namespace of your Oracle Cloud Storage account. See [Understanding Object Storage namespaces](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/understandingnamespaces.htm) in the Oracle Cloud Storage documentation.",
                                  "type": "string"
                                },
                                "path": {
                                  "description": "The path to the folder within your Oracle Cloud Storage bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Managing Objects](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingobjects.htm) in the Oracle Cloud Storage documentation.",
                                  "type": "string"
                                },
                                "region": {
                                  "description": "The Oracle Cloud Storage region where your bucket resides. See [Regions and availability domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm) in the Oracle Cloud Storage documentation.",
                                  "type": "string"
                                },
                                "secretAccessKey": {
                                  "description": "The secret access key identifier that you use to authenticate requests to your Oracle Cloud account.",
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/OCS.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Provides detailed information about the Loggly destination that you can use in your stream.",
                              "title": "LOGGLY",
                              "type": "object",
                              "required": [
                                "destinationType",
                                "displayName",
                                "endpoint",
                                "authToken"
                              ],
                              "properties": {
                                "authToken": {
                                  "description": "The custom token for your Loggly endpoint. The token is the value from the bulk endpoint URL that comes after the `/bulk` segment, and before `tags`.",
                                  "type": "string"
                                },
                                "contentType": {
                                  "description": "The type of the resource passed in the request's custom header. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#additional-options) in the DataStream user guide.",
                                  "type": "string"
                                },
                                "customHeaderName": {
                                  "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#additional-options) in the DataStream user guide.",
                                  "type": "string"
                                },
                                "customHeaderValue": {
                                  "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#additional-options) in the DataStream user guide.",
                                  "type": "string"
                                },
                                "destinationType": {
                                  "description": "The name of the destination type. Set it to `LOGGLY` for this destination type.",
                                  "type": "string",
                                  "enum": [
                                    "LOGGLY"
                                  ]
                                },
                                "displayName": {
                                  "description": "The name of the destination.",
                                  "type": "string"
                                },
                                "endpoint": {
                                  "description": "The Loggly bulk endpoint URL in the `https://hostname.loggly.com/bulk/` format. Set the endpoint token code in the `authToken` field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Loggly](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#akamaized-hostname-as-endpoint).",
                                  "type": "string"
                                },
                                "tags": {
                                  "description": "The tags you can use to segment and filter log events in Loggly. See [Tags](https://documentation.solarwinds.com/en/success_center/loggly/content/admin/tags.htm) in the Loggly documentation.",
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/Loggly.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Provides detailed information about the Elasticsearch destination that you can use in your stream.",
                              "title": "ELASTICSEARCH",
                              "type": "object",
                              "required": [
                                "destinationType",
                                "displayName",
                                "endpoint",
                                "userName",
                                "password",
                                "indexName"
                              ],
                              "properties": {
                                "caCert": {
                                  "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification. If you pass this member, the `mTlsEnabled` member replaces it in the response as `true`.",
                                  "type": "string"
                                },
                                "clientCert": {
                                  "description": "The PEM-formatted digital certificate you want to authenticate requests to your destination with. If you want to use mutual authentication, you need to provide both the client certificate and the client key. If you pass this member, the `mTlsEnabled` member replaces it in the response as `true`.",
                                  "type": "string"
                                },
                                "clientKey": {
                                  "description": "The private key in the non-encrypted PKCS8 format you want to use to authenticate with the backend server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                                  "type": "string"
                                },
                                "contentType": {
                                  "description": "The type of the resource passed in the request's custom header. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#additional-options) in the DataStream user guide.",
                                  "type": "string"
                                },
                                "customHeaderName": {
                                  "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#section-additional-options) in the DataStream user guide.",
                                  "type": "string"
                                },
                                "customHeaderValue": {
                                  "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#section-additional-options) in the DataStream user guide.",
                                  "type": "string"
                                },
                                "destinationType": {
                                  "description": "The name of the destination type. Set it to `ELASTICSEARCH` for this destination type.",
                                  "type": "string",
                                  "enum": [
                                    "ELASTICSEARCH"
                                  ]
                                },
                                "displayName": {
                                  "description": "The name of the destination.",
                                  "type": "string"
                                },
                                "endpoint": {
                                  "description": "The Elasticsearch bulk endpoint URL in the `https://hostname.elastic-cloud.com:9243/_bulk/` format. Set `indexName` in the appropriate field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Elasticsearch](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#akamaized-hostname-as-endpoint).",
                                  "type": "string"
                                },
                                "indexName": {
                                  "description": "The name of the index within an Elastic Cloud cluster where you want to store log files. This member supports [Dynamic index names](https://techdocs.akamai.com/datastream2/docs/stream-logs-to-elasticsearch#dynamic-index-name).",
                                  "type": "string"
                                },
                                "password": {
                                  "description": "The Elasticsearch basic access authentication password.",
                                  "type": "string"
                                },
                                "tlsHostname": {
                                  "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                                  "type": "string"
                                },
                                "userName": {
                                  "description": "The Elasticsearch basic access authentication username.",
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/Elasticsearch.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Provides detailed information about the New Relic destination that you can use in your stream.",
                              "title": "NEWRELIC",
                              "type": "object",
                              "required": [
                                "destinationType",
                                "displayName",
                                "endpoint",
                                "authToken"
                              ],
                              "properties": {
                                "authToken": {
                                  "description": "The unique personal API key that belongs to your New Relic account.",
                                  "type": "string"
                                },
                                "contentType": {
                                  "description": "The type of the resource passed in the request's custom header. For details, see [Additional options](https://techdocs.akamai.com/datastream2/docs/stream-newrelic#section-additional-options) in the DataStream user guide.",
                                  "type": "string"
                                },
                                "customHeaderName": {
                                  "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#additional-options) in the DataStream user guide.",
                                  "type": "string"
                                },
                                "customHeaderValue": {
                                  "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#additional-options) in the DataStream user guide.",
                                  "type": "string"
                                },
                                "destinationType": {
                                  "description": "The name of the destination type. Set it to `NEWRELIC` for this destination type.",
                                  "type": "string",
                                  "enum": [
                                    "NEWRELIC"
                                  ]
                                },
                                "displayName": {
                                  "description": "The name of the destination.",
                                  "type": "string"
                                },
                                "endpoint": {
                                  "description": "The New Relic Log API endpoint URL in the `https://log-api.newrelic.com/log/v1/` format. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to New Relic](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#akamaized-hostname-as-endpoint).",
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/NewRelic.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Provides details about the S3-compatible destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and saves an `Akamai_access_verification_[TimeStamp].txt` format file in your S3-compatible folder. You can only see this file if the validation process is successful, and you have access to the S3-compatible bucket and folder that you're trying to send logs to. Before configuring your stream to send logs to this destination, make sure you create a S3-compatible storage bucket, and store the access key together with the secret access key.",
                              "title": "S3_COMPATIBLE",
                              "type": "object",
                              "required": [
                                "destinationType",
                                "displayName",
                                "accessKey",
                                "secretAccessKey",
                                "bucket",
                                "region",
                                "endpoint"
                              ],
                              "properties": {
                                "accessKey": {
                                  "description": "The access key identifier of the S3-compatible object storage bucket.",
                                  "type": "string"
                                },
                                "bucket": {
                                  "description": "The name of the S3-compatible object storage bucket.",
                                  "type": "string"
                                },
                                "compressLogs": {
                                  "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                                  "type": "boolean"
                                },
                                "destinationType": {
                                  "description": "The name of the destination type. Set it to `S3_COMPATIBLE` for this destination type.",
                                  "type": "string",
                                  "enum": [
                                    "S3_COMPATIBLE"
                                  ]
                                },
                                "displayName": {
                                  "description": "The name of the destination.",
                                  "type": "string"
                                },
                                "endpoint": {
                                  "description": "The scheme-qualified host of your S3-compatible object storage bucket.",
                                  "type": "string"
                                },
                                "path": {
                                  "description": "The path to the folder within your S3-compatible object storage bucket where you want to store logs. This value allows [Dynamic time variables](https://techdocs.akamai.com/datastream2/docs/dynamic-time-variables).",
                                  "type": "string"
                                },
                                "region": {
                                  "description": "The physical storage location of your S3-compatible object storage bucket.",
                                  "type": "string"
                                },
                                "secretAccessKey": {
                                  "description": "The secret access key identifier of the S3-compatible object storage bucket.",
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/S3Compatible.yaml"
                              }
                            }
                          ]
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides information about the configuration of log lines, log file format, names of the log files sent to a destination, and delivery frequency for these files.",
                          "title": "Delivery configuration",
                          "type": "object",
                          "required": [
                            "format",
                            "frequency"
                          ],
                          "properties": {
                            "fieldDelimiter": {
                              "description": "A delimiter that separates data set fields in the log lines, either `SPACE` or `TAB`. Set this only for the `STRUCTURED` log file `format`.",
                              "type": "string",
                              "enum": [
                                "SPACE",
                                "TAB"
                              ]
                            },
                            "format": {
                              "description": "The format in which you want to receive log files. `STRUCTURED` or `JSON` are the currently available formats. When the delimiter is present in the request, you need to choose the `STRUCTURED` format.",
                              "type": "string",
                              "enum": [
                                "STRUCTURED",
                                "JSON"
                              ]
                            },
                            "frequency": {
                              "additionalProperties": false,
                              "description": "The frequency of collecting logs from each uploader and sending these logs to a destination.",
                              "type": "object",
                              "required": [
                                "intervalInSeconds"
                              ],
                              "properties": {
                                "intervalInSeconds": {
                                  "description": "The interval in seconds (`30` or `60`) after which the system bundles log lines into a file and sends it to a destination.",
                                  "type": "integer",
                                  "enum": [
                                    30,
                                    60
                                  ]
                                }
                              }
                            },
                            "uploadFilePrefix": {
                              "description": "The prefix of the log file that you want to send to a object-based destination. It's a string of at most 200 characters. If unspecified, it defaults to `ak`. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables), but doesn't support the `.` character. See [S3 naming conventions](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html), [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long), and [Google Cloud Storage object naming conventions](https://cloud.google.com/storage/docs/naming-objects).",
                              "type": "string"
                            },
                            "uploadFileSuffix": {
                              "description": "The suffix of the log file that you want to send to a object-based destination. It's a static string of at most 10 characters. If unspecified, it defaults to `ds`. This member doesn't support [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables), and the `.`, `/`, `%`, `?` characters. See [S3 naming conventions](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html), [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long), and [Google Cloud Storage object naming conventions](https://cloud.google.com/storage/docs/naming-objects).",
                              "maxLength": 10,
                              "type": "string"
                            }
                          }
                        },
                        {
                          "description": "A list of e-mail addresses where you want to send notifications about activations and deactivations of the stream. You can omit this member and activate or deactivate the stream without notifications.",
                          "title": "Notification emails",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "default": false,
                          "description": "Set to `true` to collect midgress traffic data within the Akamai platform, such as between two edge servers. Enable logging midgress data to get numeric values in the second place of the log line that indicate if the request was processed within the Akamai platform. When you [Get a stream](https://techdocs.akamai.com/datastream2/reference/get-stream) that logs midgress traffic, the response returns `collectMidgress` as `true` and lists the `isMidgress` data set field with other fields. See [Midgress traffic](https://techdocs.akamai.com/datastream2/v2/docs/data-set-parameters#midgress-traffic) for details. If this feature is not enabled on your account, contact the Akamai support team.",
                          "title": "Collect midgress",
                          "type": "boolean"
                        }
                      ]
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/PatchRequest.yaml"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/PatchStreamRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response confirms the stream has been patched and returns its details.",
            "content": {
              "application/json": {
                "example": {
                  "collectMidgress": true,
                  "contractId": "K-0N7RAK7",
                  "createdBy": "jperez",
                  "createdDate": "2022-02-05T13:31:30Z",
                  "groupId": 21484,
                  "latestVersion": 1,
                  "modifiedBy": "szhang",
                  "modifiedDate": "2022-02-05T13:31:30Z",
                  "productId": "Dynamic_Site_Accelerator",
                  "streamId": 7050,
                  "streamName": "diagnostics-log-stream",
                  "streamStatus": "ACTIVATING",
                  "streamVersion": 1,
                  "notificationEmails": [
                    "useremail1@domain.com",
                    "useremail2@domain.com"
                  ],
                  "deliveryConfiguration": {
                    "fieldDelimiter": "SPACE",
                    "format": "STRUCTURED",
                    "uploadFilePrefix": "logs",
                    "uploadFileSuffix": "ds",
                    "frequency": {
                      "intervalInSeconds": 30
                    }
                  },
                  "destination": {
                    "bucket": "datastream.akamai.com",
                    "compressLogs": true,
                    "destinationType": "S3",
                    "displayName": "S3Destination",
                    "path": "ds2-logs",
                    "region": "ap-south-1"
                  },
                  "datasetFields": [
                    {
                      "datasetFieldId": 1000,
                      "datasetFieldJsonKey": "cp",
                      "datasetFieldName": "CP code"
                    },
                    {
                      "datasetFieldId": 1002,
                      "datasetFieldJsonKey": "reqId",
                      "datasetFieldName": "Request ID"
                    },
                    {
                      "datasetFieldId": 1023,
                      "datasetFieldJsonKey": "cookie",
                      "datasetFieldName": "Cookie"
                    }
                  ],
                  "properties": [
                    {
                      "propertyId": 349772,
                      "propertyName": "example.com"
                    },
                    {
                      "propertyId": 349770,
                      "propertyName": "example.akamai.com"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Provides detailed information about the latest configuration version of a stream. It provides descriptions of the data set fields selected in the version, identifiers of properties they collect logs for, configuration of the destination where they deliver logs, and structure of these log lines. It also informs whether this version is active.",
                  "type": "object",
                  "required": [
                    "contractId",
                    "createdBy",
                    "createdDate",
                    "datasetFields",
                    "deliveryConfiguration",
                    "destination",
                    "groupId",
                    "latestVersion",
                    "modifiedBy",
                    "modifiedDate",
                    "productId",
                    "properties",
                    "streamId",
                    "streamName",
                    "streamStatus",
                    "streamVersion"
                  ],
                  "properties": {
                    "collectMidgress": {
                      "description": "Indicates if you've opted to capture midgress traffic within the Akamai platform, such as between two edge servers.",
                      "type": "boolean"
                    },
                    "contractId": {
                      "description": "Identifies the contract that the stream belongs to.",
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The username who created the stream.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "An ISO 8601 timestamp marking when the stream was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "datasetFields": {
                      "description": "A list of data set fields selected that the stream monitors in logs. The order of the identifiers define how the value for these fields appear in the log lines.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "datasetFieldId",
                          "datasetFieldName",
                          "datasetFieldJsonKey"
                        ],
                        "properties": {
                          "datasetFieldId": {
                            "description": "Identifies the field.",
                            "type": "integer"
                          },
                          "datasetFieldJsonKey": {
                            "description": "Specifies the JSON key for the field in a log line. You can get this value only when you run the [List data set fields](https://techdocs.akamai.com/datastream2/reference/get-dataset-fields) or [Get a stream](https://techdocs.akamai.com/datastream2/reference/get-stream) operation for a stream in the `JSON` format.",
                            "type": "string"
                          },
                          "datasetFieldName": {
                            "description": "A name of the data set field.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "deliveryConfiguration": {
                      "additionalProperties": false,
                      "description": "The configuration of log lines, names of the files sent to a destination, and delivery frequency for these files.",
                      "type": "object",
                      "required": [
                        "format",
                        "frequency"
                      ],
                      "properties": {
                        "fieldDelimiter": {
                          "description": "A delimiter that separates data set fields in the log lines, either `SPACE` or `TAB`. Set this only for the `STRUCTURED` log file `format`.",
                          "type": "string",
                          "enum": [
                            "SPACE",
                            "TAB"
                          ]
                        },
                        "format": {
                          "description": "The format in which you want to receive log files. `STRUCTURED` or `JSON` are the currently available formats.",
                          "type": "string",
                          "enum": [
                            "STRUCTURED",
                            "JSON"
                          ]
                        },
                        "frequency": {
                          "additionalProperties": false,
                          "description": "The frequency of collecting logs from each uploader and sending these logs to a destination.",
                          "type": "object",
                          "required": [
                            "intervalInSeconds"
                          ],
                          "properties": {
                            "intervalInSeconds": {
                              "description": "The interval in seconds (`30` or `60`) after which the system bundles log lines into a file and sends it to a destination.",
                              "type": "integer",
                              "enum": [
                                30,
                                60
                              ]
                            }
                          }
                        },
                        "uploadFilePrefix": {
                          "default": "ak",
                          "description": "The prefix of the log file that you want to send to a object-based destination. It's a string of at most 200 characters. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). If unspecified, it defaults to `ak`.",
                          "type": "string"
                        },
                        "uploadFileSuffix": {
                          "default": "ds",
                          "description": "The suffix of the log file that you want to send to a object-based destination. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). It's a static string of at most 10 characters. If unspecified, it defaults to `ds`.",
                          "type": "string"
                        }
                      }
                    },
                    "destination": {
                      "description": "Provides detailed information about the destination's configuration in the stream to send logs.",
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Azure Storage destination configuration in a stream.",
                          "title": "AZURE",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "compressLogs",
                            "displayName",
                            "path",
                            "accountName",
                            "containerName"
                          ],
                          "properties": {
                            "accountName": {
                              "description": "Specifies the Azure Storage account name.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "containerName": {
                              "description": "Specifies the Azure Storage container name.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `AZURE` for this destination type.",
                              "type": "string",
                              "enum": [
                                "AZURE"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within the Azure Storage container where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long) in the Azure documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/AzureSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Amazon S3 destination in a stream.",
                          "title": "S3",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "compressLogs",
                            "displayName",
                            "path",
                            "bucket",
                            "region"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the Amazon S3 bucket. See [Working with buckets in AWS](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html) in the Amazon S3 documentation.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `S3` for this destination type.",
                              "type": "string",
                              "enum": [
                                "S3"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your Amazon S3 bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object keys](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html) in the Amazon S3 documentation for naming conventions.",
                              "type": "string"
                            },
                            "region": {
                              "description": "The AWS region where your Amazon S3 bucket resides. See [Regions, Availability Zones, and Local Zones in AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) in the Amazon S3 documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/S3SavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Datadog destination configuration in a stream.",
                          "title": "DATADOG",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "default": false,
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `false` by default.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `DATADOG` for this destination type.",
                              "type": "string",
                              "enum": [
                                "DATADOG"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Datadog v1 endpoint URL where you want to send and store logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Datadog](https://techdocs.akamai.com/datastream2/v2/docs/stream-datadog#akamaized-hostname-as-endpoint), and [View Datadog logs endpoint](https://docs.datadoghq.com/logs/log_collection/?tab=http#logging-endpoints) in the Datadog documentation.",
                              "type": "string"
                            },
                            "service": {
                              "description": "The name of the application or service generating the log events in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) and [Services List](https://docs.datadoghq.com/tracing/visualization/services_list/) in the Datadog documentation.",
                              "type": "string"
                            },
                            "source": {
                              "description": "The name of the source or the technology of the logs in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) in the Datadog documentation.",
                              "type": "string"
                            },
                            "tags": {
                              "description": "The tags you can use to filter and group metrics in your Datadog account. Enter a comma-delimited list for more than one tag. This field also supports `<key>:<value>` combinations. See [Getting Started with Tags](https://docs.datadoghq.com/getting_started/tagging/) in the Datadog documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/DatadogSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides detailed information about the Splunk destination that you can use in your stream. Note that DataStream 2 currently supports only endpoint URLs ending with `collector/raw`. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                          "title": "SPLUNK",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "default": true,
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                              "type": "boolean"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `SPLUNK` for this destination type.",
                              "type": "string",
                              "enum": [
                                "SPLUNK"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The raw event Splunk URL where you want to store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Splunk](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "mTlsEnabled": {
                              "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                              "type": "boolean"
                            },
                            "tlsHostname": {
                              "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/SplunkSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Google Cloud Storage destination in a stream.",
                          "title": "GCS",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "bucket",
                            "projectId",
                            "serviceAccountName",
                            "compressLogs"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the storage bucket you created in your Google Cloud account. See [Bucket naming conventions](https://cloud.google.com/storage/docs/naming-buckets) in the Google Cloud documentation.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `GCS` for this destination type.",
                              "type": "string",
                              "enum": [
                                "GCS"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your Google Cloud bucket where you want to store logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object naming guidelines](https://cloud.google.com/storage/docs/naming-objects) in the Google Cloud documentation.",
                              "type": "string"
                            },
                            "projectId": {
                              "description": "The unique ID of your Google Cloud project.",
                              "type": "string"
                            },
                            "serviceAccountName": {
                              "description": "The name of the service account with the `storage.object.create` permission or Storage Object Creator role.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/GCSSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the custom HTTPS endpoint destination in a stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                          "title": "HTTPS",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "authenticationType",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "authenticationType": {
                              "description": "Either `NONE` for no authentication, or `BASIC`. For basic authentication, provide the username and password you set in your custom HTTPS endpoint.",
                              "type": "string",
                              "enum": [
                                "BASIC",
                                "NONE"
                              ]
                            },
                            "compressLogs": {
                              "default": false,
                              "description": "Enables gzip compression for a log file sent to a destination. This member's value is `false` by default.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `HTTPS` for this destination type.",
                              "type": "string",
                              "enum": [
                                "HTTPS"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "Enter the secure URL where you want to send and store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to a custom HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "mTlsEnabled": {
                              "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                              "type": "boolean"
                            },
                            "tlsHostname": {
                              "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/HTTPSSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Oracle Cloud Storage destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and tries to save an `akamai_write_test_2147483647.txt` file in your Oracle Cloud Storage folder. You can only see this file if the validation process is successful, and you have access to the Oracle Cloud Storage bucket and folder that you're trying to send logs to.",
                          "title": "ORACLE_CLOUD_STORAGE",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "region",
                            "bucket",
                            "path",
                            "namespace",
                            "compressLogs"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the Oracle Cloud Storage bucket. See [Working with buckets](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingbuckets.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `ORACLE_CLOUD_STORAGE` for this destination type.",
                              "type": "string",
                              "enum": [
                                "ORACLE_CLOUD_STORAGE"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "The namespace of your Oracle Cloud Storage account. See [Understanding Object Storage namespaces](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/understandingnamespaces.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your Oracle Cloud Storage bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Managing Objects](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingobjects.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            },
                            "region": {
                              "description": "The Oracle Cloud Storage region where your bucket resides. See [Regions and availability domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/OCSSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides detailed information about the Sumo Logic destination that you can use in your stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                          "title": "SUMO_LOGIC",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "collectorCode": {
                              "description": "The unique HTTP collector code of your Sumo Logic endpoint.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "default": true,
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the custom header of the request.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the custom header of the request that can contain only alphanumeric, dash, and underscore characters. See [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic) for details.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The contents of the custom header passed with the request that contain information about the client connection. See [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic) for details.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `SUMO_LOGIC` for this destination type.",
                              "type": "string",
                              "enum": [
                                "SUMO_LOGIC"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Sumo Logic HTTP Source URL where you want to send your logs. You should follow the `https://<SumoEndpoint>/receiver/v1/http` format and set the collector code in the `collectorCode` member.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/SumoLogicSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the loggly endpoint destination in a stream.",
                          "title": "LOGGLY",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `LOGGLY` for this destination type.",
                              "type": "string",
                              "enum": [
                                "LOGGLY"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Loggly bulk endpoint URL in the `https://hostname.loggly.com/bulk/` format. Set the endpoint code in the `authToken` field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Loggly](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "tags": {
                              "description": "The tags you can use to segment and filter log events in Loggly. See [Tags](https://documentation.solarwinds.com/en/success_center/loggly/content/admin/tags.htm) in the Loggly documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/LogglySavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Elasticsearch endpoint destination in a stream.",
                          "title": "ELASTICSEARCH",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `ELASTICSEARCH` for this destination type.",
                              "type": "string",
                              "enum": [
                                "ELASTICSEARCH"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Elasticsearch bulk endpoint URL in the `https://hostname.elastic-cloud.com:9243/_bulk/` format. Set `indexName` in the appropriate field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Elasticsearch][Stream logs to Elasticsearch](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#section-akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "mTlsEnabled": {
                              "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                              "type": "boolean"
                            },
                            "tlsHostname": {
                              "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/ElasticsearchSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the New Relic endpoint destination in a stream.",
                          "title": "NEWRELIC",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `NEWRELIC` for this destination type.",
                              "type": "string",
                              "enum": [
                                "NEWRELIC"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The New Relic Log API endpoint URL in the `https://log-api.newrelic.com/log/v1/` format. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to New Relic](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/NewRelicSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the S3-compatible destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and saves an `Akamai_access_verification_[TimeStamp].txt` format file in your S3-compatible folder. You can only see this file if the validation process is successful, and you have access to the S3-compatible bucket and folder that you're trying to send logs to. Before configuring your stream to send logs to this destination, make sure you create a S3-compatible storage bucket, and store the access key together with the secret access key.",
                          "title": "S3_COMPATIBLE",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "bucket",
                            "region",
                            "endpoint"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the S3-compatible object storage bucket.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `S3_COMPATIBLE` for this destination type.",
                              "type": "string",
                              "enum": [
                                "S3_COMPATIBLE"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The scheme-qualified host of your S3-compatible object storage bucket.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your S3-compatible object storage bucket where you want to store logs. This value allows [Dynamic time variables](https://techdocs.akamai.com/datastream2/docs/dynamic-time-variables).",
                              "type": "string"
                            },
                            "region": {
                              "description": "The physical storage location of your S3-compatible object storage bucket.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/S3CompatibleSavedDestination.yaml"
                          }
                        }
                      ]
                    },
                    "groupId": {
                      "description": "Identifies the group that has access to the product and that you created the stream configuration for. When editing a stream, the value you pass is ignored as you can't change the group for an existing stream.",
                      "type": "integer"
                    },
                    "latestVersion": {
                      "description": "Identifies the latest configuration version of the stream.",
                      "type": "integer"
                    },
                    "modifiedBy": {
                      "description": "The username who modified the stream.",
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "The date and time in the ISO 8601 format when the stream was modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "notificationEmails": {
                      "description": "A comma-delimited list of email addresses where the system sends notifications about activations and deactivations of the stream.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "productId": {
                      "description": "The ID of the product that you created stream for.",
                      "type": "string"
                    },
                    "properties": {
                      "description": "Identifies the properties that you monitor in the stream.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "propertyId",
                          "propertyName"
                        ],
                        "properties": {
                          "propertyId": {
                            "description": "The identifier of the property.",
                            "type": "integer"
                          },
                          "propertyName": {
                            "description": "The descriptive label for the property.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "streamId": {
                      "description": "Identifies the stream.",
                      "type": "integer"
                    },
                    "streamName": {
                      "description": "The name of the stream.",
                      "type": "string"
                    },
                    "streamStatus": {
                      "description": "Indicates if the stream is `ACTIVATED` or `DEACTIVATED`. `INACTIVE`, `ACTIVATING`, `ACTIVATED`, `DEACTIVATING`, or `DEACTIVATED`.",
                      "type": "string",
                      "enum": [
                        "INACTIVE",
                        "ACTIVATING",
                        "ACTIVATED",
                        "DEACTIVATING",
                        "DEACTIVATED"
                      ]
                    },
                    "streamVersion": {
                      "description": "Identifies the configuration version of the stream.",
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/StreamDetail.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Activates the stream at the time of the request, `false` by default. When you [Edit a stream](https://techdocs.akamai.com/datastream2/reference/put-stream) or [Patch a stream](https://techdocs.akamai.com/datastream2/reference/patch-stream) that is active, you need to set this member to `true`.",
            "example": "{{activate}}",
            "in": "query",
            "name": "activate",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/activate-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Deletes a deactivated stream. Deleting a stream means that you can't activate this stream again, and that you stop receiving logs for the properties that this stream monitors. Before deleting any stream, you need to deactivate it first. See [Deactivate a stream](https://techdocs.akamai.com/datastream2/reference/post-stream-activate).",
        "operationId": "delete-stream",
        "summary": "Delete a stream",
        "tags": [
          "Streams"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's DataStream 2 API",
          "url": "https://techdocs.akamai.com/datastream2/reference/delete-stream"
        },
        "responses": {
          "204": {
            "description": "The response confirms the stream has been deleted.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Uniquely identifies the stream.",
          "example": "{{streamId}}",
          "in": "path",
          "name": "streamId",
          "required": true,
          "schema": {
            "example": 7050,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/streamId-path.yaml"
          }
        }
      ]
    },
    "/log/streams/{streamId}/activate": {
      "post": {
        "description": "Activates the latest version of a stream. Activating a stream takes approximately an hour. Once a stream is active, and the DataStream behavior is enabled in Property Manager, it replaces the previous active version which is deactivated by default, starts collecting data and sending log files to a destination. If you want to stop receiving the logs, you can deactivate the stream at any time. See the [Deactivate a stream](https://techdocs.akamai.com/datastream2/reference/post-stream-activate) operation.",
        "operationId": "post-stream-activate",
        "summary": "Activate a stream",
        "tags": [
          "Activations"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's DataStream 2 API",
          "url": "https://techdocs.akamai.com/datastream2/reference/post-stream-activate"
        },
        "responses": {
          "200": {
            "description": "The response confirms the stream has been activated and returns its details.",
            "content": {
              "application/json": {
                "example": {
                  "collectMidgress": true,
                  "contractId": "K-0N7RAK7",
                  "createdBy": "tyamada",
                  "createdDate": "2022-02-05T13:31:30Z",
                  "groupId": 21484,
                  "latestVersion": 1,
                  "modifiedBy": "tyamada",
                  "modifiedDate": "2022-02-05T13:31:30Z",
                  "productId": "Dynamic_Site_Accelerator",
                  "streamId": 7050,
                  "streamName": "diagnostics-log-stream",
                  "streamStatus": "ACTIVATING",
                  "streamVersion": 1,
                  "notificationEmails": [
                    "useremail1@domain.com",
                    "useremail2@domain.com"
                  ],
                  "deliveryConfiguration": {
                    "fieldDelimiter": "SPACE",
                    "format": "STRUCTURED",
                    "uploadFilePrefix": "logs",
                    "uploadFileSuffix": "ds",
                    "frequency": {
                      "intervalInSeconds": 30
                    }
                  },
                  "destination": {
                    "bucket": "datastream.akamai.com",
                    "compressLogs": true,
                    "destinationType": "S3",
                    "displayName": "S3Destination",
                    "path": "ds2-logs",
                    "region": "ap-south-1"
                  },
                  "datasetFields": [
                    {
                      "datasetFieldId": 1000,
                      "datasetFieldJsonKey": "cp",
                      "datasetFieldName": "CP code"
                    },
                    {
                      "datasetFieldId": 1002,
                      "datasetFieldJsonKey": "reqId",
                      "datasetFieldName": "Request ID"
                    },
                    {
                      "datasetFieldId": 1023,
                      "datasetFieldJsonKey": "cookie",
                      "datasetFieldName": "Cookie"
                    }
                  ],
                  "properties": [
                    {
                      "propertyId": 349772,
                      "propertyName": "example.com"
                    },
                    {
                      "propertyId": 349770,
                      "propertyName": "example.akamai.com"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Provides detailed information about the latest configuration version of a stream. It provides descriptions of the data set fields selected in the version, identifiers of properties they collect logs for, configuration of the destination where they deliver logs, and structure of these log lines. It also informs whether this version is active.",
                  "type": "object",
                  "required": [
                    "contractId",
                    "createdBy",
                    "createdDate",
                    "datasetFields",
                    "deliveryConfiguration",
                    "destination",
                    "groupId",
                    "latestVersion",
                    "modifiedBy",
                    "modifiedDate",
                    "productId",
                    "properties",
                    "streamId",
                    "streamName",
                    "streamStatus",
                    "streamVersion"
                  ],
                  "properties": {
                    "collectMidgress": {
                      "description": "Indicates if you've opted to capture midgress traffic within the Akamai platform, such as between two edge servers.",
                      "type": "boolean"
                    },
                    "contractId": {
                      "description": "Identifies the contract that the stream belongs to.",
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The username who created the stream.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "An ISO 8601 timestamp marking when the stream was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "datasetFields": {
                      "description": "A list of data set fields selected that the stream monitors in logs. The order of the identifiers define how the value for these fields appear in the log lines.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "datasetFieldId",
                          "datasetFieldName",
                          "datasetFieldJsonKey"
                        ],
                        "properties": {
                          "datasetFieldId": {
                            "description": "Identifies the field.",
                            "type": "integer"
                          },
                          "datasetFieldJsonKey": {
                            "description": "Specifies the JSON key for the field in a log line. You can get this value only when you run the [List data set fields](https://techdocs.akamai.com/datastream2/reference/get-dataset-fields) or [Get a stream](https://techdocs.akamai.com/datastream2/reference/get-stream) operation for a stream in the `JSON` format.",
                            "type": "string"
                          },
                          "datasetFieldName": {
                            "description": "A name of the data set field.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "deliveryConfiguration": {
                      "additionalProperties": false,
                      "description": "The configuration of log lines, names of the files sent to a destination, and delivery frequency for these files.",
                      "type": "object",
                      "required": [
                        "format",
                        "frequency"
                      ],
                      "properties": {
                        "fieldDelimiter": {
                          "description": "A delimiter that separates data set fields in the log lines, either `SPACE` or `TAB`. Set this only for the `STRUCTURED` log file `format`.",
                          "type": "string",
                          "enum": [
                            "SPACE",
                            "TAB"
                          ]
                        },
                        "format": {
                          "description": "The format in which you want to receive log files. `STRUCTURED` or `JSON` are the currently available formats.",
                          "type": "string",
                          "enum": [
                            "STRUCTURED",
                            "JSON"
                          ]
                        },
                        "frequency": {
                          "additionalProperties": false,
                          "description": "The frequency of collecting logs from each uploader and sending these logs to a destination.",
                          "type": "object",
                          "required": [
                            "intervalInSeconds"
                          ],
                          "properties": {
                            "intervalInSeconds": {
                              "description": "The interval in seconds (`30` or `60`) after which the system bundles log lines into a file and sends it to a destination.",
                              "type": "integer",
                              "enum": [
                                30,
                                60
                              ]
                            }
                          }
                        },
                        "uploadFilePrefix": {
                          "default": "ak",
                          "description": "The prefix of the log file that you want to send to a object-based destination. It's a string of at most 200 characters. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). If unspecified, it defaults to `ak`.",
                          "type": "string"
                        },
                        "uploadFileSuffix": {
                          "default": "ds",
                          "description": "The suffix of the log file that you want to send to a object-based destination. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). It's a static string of at most 10 characters. If unspecified, it defaults to `ds`.",
                          "type": "string"
                        }
                      }
                    },
                    "destination": {
                      "description": "Provides detailed information about the destination's configuration in the stream to send logs.",
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Azure Storage destination configuration in a stream.",
                          "title": "AZURE",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "compressLogs",
                            "displayName",
                            "path",
                            "accountName",
                            "containerName"
                          ],
                          "properties": {
                            "accountName": {
                              "description": "Specifies the Azure Storage account name.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "containerName": {
                              "description": "Specifies the Azure Storage container name.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `AZURE` for this destination type.",
                              "type": "string",
                              "enum": [
                                "AZURE"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within the Azure Storage container where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long) in the Azure documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/AzureSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Amazon S3 destination in a stream.",
                          "title": "S3",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "compressLogs",
                            "displayName",
                            "path",
                            "bucket",
                            "region"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the Amazon S3 bucket. See [Working with buckets in AWS](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html) in the Amazon S3 documentation.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `S3` for this destination type.",
                              "type": "string",
                              "enum": [
                                "S3"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your Amazon S3 bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object keys](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html) in the Amazon S3 documentation for naming conventions.",
                              "type": "string"
                            },
                            "region": {
                              "description": "The AWS region where your Amazon S3 bucket resides. See [Regions, Availability Zones, and Local Zones in AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) in the Amazon S3 documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/S3SavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Datadog destination configuration in a stream.",
                          "title": "DATADOG",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "default": false,
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `false` by default.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `DATADOG` for this destination type.",
                              "type": "string",
                              "enum": [
                                "DATADOG"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Datadog v1 endpoint URL where you want to send and store logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Datadog](https://techdocs.akamai.com/datastream2/v2/docs/stream-datadog#akamaized-hostname-as-endpoint), and [View Datadog logs endpoint](https://docs.datadoghq.com/logs/log_collection/?tab=http#logging-endpoints) in the Datadog documentation.",
                              "type": "string"
                            },
                            "service": {
                              "description": "The name of the application or service generating the log events in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) and [Services List](https://docs.datadoghq.com/tracing/visualization/services_list/) in the Datadog documentation.",
                              "type": "string"
                            },
                            "source": {
                              "description": "The name of the source or the technology of the logs in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) in the Datadog documentation.",
                              "type": "string"
                            },
                            "tags": {
                              "description": "The tags you can use to filter and group metrics in your Datadog account. Enter a comma-delimited list for more than one tag. This field also supports `<key>:<value>` combinations. See [Getting Started with Tags](https://docs.datadoghq.com/getting_started/tagging/) in the Datadog documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/DatadogSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides detailed information about the Splunk destination that you can use in your stream. Note that DataStream 2 currently supports only endpoint URLs ending with `collector/raw`. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                          "title": "SPLUNK",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "default": true,
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                              "type": "boolean"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `SPLUNK` for this destination type.",
                              "type": "string",
                              "enum": [
                                "SPLUNK"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The raw event Splunk URL where you want to store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Splunk](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "mTlsEnabled": {
                              "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                              "type": "boolean"
                            },
                            "tlsHostname": {
                              "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/SplunkSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Google Cloud Storage destination in a stream.",
                          "title": "GCS",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "bucket",
                            "projectId",
                            "serviceAccountName",
                            "compressLogs"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the storage bucket you created in your Google Cloud account. See [Bucket naming conventions](https://cloud.google.com/storage/docs/naming-buckets) in the Google Cloud documentation.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `GCS` for this destination type.",
                              "type": "string",
                              "enum": [
                                "GCS"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your Google Cloud bucket where you want to store logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object naming guidelines](https://cloud.google.com/storage/docs/naming-objects) in the Google Cloud documentation.",
                              "type": "string"
                            },
                            "projectId": {
                              "description": "The unique ID of your Google Cloud project.",
                              "type": "string"
                            },
                            "serviceAccountName": {
                              "description": "The name of the service account with the `storage.object.create` permission or Storage Object Creator role.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/GCSSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the custom HTTPS endpoint destination in a stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                          "title": "HTTPS",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "authenticationType",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "authenticationType": {
                              "description": "Either `NONE` for no authentication, or `BASIC`. For basic authentication, provide the username and password you set in your custom HTTPS endpoint.",
                              "type": "string",
                              "enum": [
                                "BASIC",
                                "NONE"
                              ]
                            },
                            "compressLogs": {
                              "default": false,
                              "description": "Enables gzip compression for a log file sent to a destination. This member's value is `false` by default.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `HTTPS` for this destination type.",
                              "type": "string",
                              "enum": [
                                "HTTPS"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "Enter the secure URL where you want to send and store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to a custom HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "mTlsEnabled": {
                              "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                              "type": "boolean"
                            },
                            "tlsHostname": {
                              "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/HTTPSSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Oracle Cloud Storage destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and tries to save an `akamai_write_test_2147483647.txt` file in your Oracle Cloud Storage folder. You can only see this file if the validation process is successful, and you have access to the Oracle Cloud Storage bucket and folder that you're trying to send logs to.",
                          "title": "ORACLE_CLOUD_STORAGE",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "region",
                            "bucket",
                            "path",
                            "namespace",
                            "compressLogs"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the Oracle Cloud Storage bucket. See [Working with buckets](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingbuckets.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `ORACLE_CLOUD_STORAGE` for this destination type.",
                              "type": "string",
                              "enum": [
                                "ORACLE_CLOUD_STORAGE"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "The namespace of your Oracle Cloud Storage account. See [Understanding Object Storage namespaces](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/understandingnamespaces.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your Oracle Cloud Storage bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Managing Objects](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingobjects.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            },
                            "region": {
                              "description": "The Oracle Cloud Storage region where your bucket resides. See [Regions and availability domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/OCSSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides detailed information about the Sumo Logic destination that you can use in your stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                          "title": "SUMO_LOGIC",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "collectorCode": {
                              "description": "The unique HTTP collector code of your Sumo Logic endpoint.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "default": true,
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the custom header of the request.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the custom header of the request that can contain only alphanumeric, dash, and underscore characters. See [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic) for details.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The contents of the custom header passed with the request that contain information about the client connection. See [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic) for details.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `SUMO_LOGIC` for this destination type.",
                              "type": "string",
                              "enum": [
                                "SUMO_LOGIC"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Sumo Logic HTTP Source URL where you want to send your logs. You should follow the `https://<SumoEndpoint>/receiver/v1/http` format and set the collector code in the `collectorCode` member.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/SumoLogicSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the loggly endpoint destination in a stream.",
                          "title": "LOGGLY",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `LOGGLY` for this destination type.",
                              "type": "string",
                              "enum": [
                                "LOGGLY"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Loggly bulk endpoint URL in the `https://hostname.loggly.com/bulk/` format. Set the endpoint code in the `authToken` field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Loggly](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "tags": {
                              "description": "The tags you can use to segment and filter log events in Loggly. See [Tags](https://documentation.solarwinds.com/en/success_center/loggly/content/admin/tags.htm) in the Loggly documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/LogglySavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Elasticsearch endpoint destination in a stream.",
                          "title": "ELASTICSEARCH",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `ELASTICSEARCH` for this destination type.",
                              "type": "string",
                              "enum": [
                                "ELASTICSEARCH"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Elasticsearch bulk endpoint URL in the `https://hostname.elastic-cloud.com:9243/_bulk/` format. Set `indexName` in the appropriate field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Elasticsearch][Stream logs to Elasticsearch](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#section-akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "mTlsEnabled": {
                              "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                              "type": "boolean"
                            },
                            "tlsHostname": {
                              "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/ElasticsearchSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the New Relic endpoint destination in a stream.",
                          "title": "NEWRELIC",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `NEWRELIC` for this destination type.",
                              "type": "string",
                              "enum": [
                                "NEWRELIC"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The New Relic Log API endpoint URL in the `https://log-api.newrelic.com/log/v1/` format. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to New Relic](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/NewRelicSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the S3-compatible destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and saves an `Akamai_access_verification_[TimeStamp].txt` format file in your S3-compatible folder. You can only see this file if the validation process is successful, and you have access to the S3-compatible bucket and folder that you're trying to send logs to. Before configuring your stream to send logs to this destination, make sure you create a S3-compatible storage bucket, and store the access key together with the secret access key.",
                          "title": "S3_COMPATIBLE",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "bucket",
                            "region",
                            "endpoint"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the S3-compatible object storage bucket.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `S3_COMPATIBLE` for this destination type.",
                              "type": "string",
                              "enum": [
                                "S3_COMPATIBLE"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The scheme-qualified host of your S3-compatible object storage bucket.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your S3-compatible object storage bucket where you want to store logs. This value allows [Dynamic time variables](https://techdocs.akamai.com/datastream2/docs/dynamic-time-variables).",
                              "type": "string"
                            },
                            "region": {
                              "description": "The physical storage location of your S3-compatible object storage bucket.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/S3CompatibleSavedDestination.yaml"
                          }
                        }
                      ]
                    },
                    "groupId": {
                      "description": "Identifies the group that has access to the product and that you created the stream configuration for. When editing a stream, the value you pass is ignored as you can't change the group for an existing stream.",
                      "type": "integer"
                    },
                    "latestVersion": {
                      "description": "Identifies the latest configuration version of the stream.",
                      "type": "integer"
                    },
                    "modifiedBy": {
                      "description": "The username who modified the stream.",
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "The date and time in the ISO 8601 format when the stream was modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "notificationEmails": {
                      "description": "A comma-delimited list of email addresses where the system sends notifications about activations and deactivations of the stream.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "productId": {
                      "description": "The ID of the product that you created stream for.",
                      "type": "string"
                    },
                    "properties": {
                      "description": "Identifies the properties that you monitor in the stream.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "propertyId",
                          "propertyName"
                        ],
                        "properties": {
                          "propertyId": {
                            "description": "The identifier of the property.",
                            "type": "integer"
                          },
                          "propertyName": {
                            "description": "The descriptive label for the property.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "streamId": {
                      "description": "Identifies the stream.",
                      "type": "integer"
                    },
                    "streamName": {
                      "description": "The name of the stream.",
                      "type": "string"
                    },
                    "streamStatus": {
                      "description": "Indicates if the stream is `ACTIVATED` or `DEACTIVATED`. `INACTIVE`, `ACTIVATING`, `ACTIVATED`, `DEACTIVATING`, or `DEACTIVATED`.",
                      "type": "string",
                      "enum": [
                        "INACTIVE",
                        "ACTIVATING",
                        "ACTIVATED",
                        "DEACTIVATING",
                        "DEACTIVATED"
                      ]
                    },
                    "streamVersion": {
                      "description": "Identifies the configuration version of the stream.",
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/StreamDetail.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Uniquely identifies the stream.",
          "example": "{{streamId}}",
          "in": "path",
          "name": "streamId",
          "required": true,
          "schema": {
            "example": 7050,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/streamId-path.yaml"
          }
        }
      ]
    },
    "/log/streams/{streamId}/activation-history": {
      "get": {
        "description": "Returns the details of activation status changes for all versions of a given stream.",
        "operationId": "get-stream-activation-history",
        "summary": "View activation history",
        "tags": [
          "Activations"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's DataStream 2 API",
          "url": "https://techdocs.akamai.com/datastream2/reference/get-stream-activation-history"
        },
        "responses": {
          "200": {
            "description": "The response lists changes in stream activation status.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Describes changes in activation status for a given stream version.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Describes changes in activation status for a given stream version.",
                    "type": "object",
                    "required": [
                      "streamId",
                      "streamVersion",
                      "modifiedBy",
                      "modifiedDate",
                      "status"
                    ],
                    "properties": {
                      "modifiedBy": {
                        "description": "The username that activated or deactivated the stream.",
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "The date and time in the ISO 8601 format when the activation status was modified.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "status": {
                        "description": "Indicates if the stream version is `ACTIVATED` or `DEACTIVATED`.",
                        "type": "string",
                        "enum": [
                          "ACTIVATED",
                          "DEACTIVATED"
                        ]
                      },
                      "streamId": {
                        "description": "Identifies the stream.",
                        "type": "integer"
                      },
                      "streamVersion": {
                        "description": "Identifies the version of the stream.",
                        "type": "integer"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/ActivationHistory.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/ActivationHistories.yaml"
                  }
                },
                "example": [
                  {
                    "modifiedBy": "szhang",
                    "modifiedDate": "2022-02-05T10:37:12Z",
                    "status": "DEACTIVATED",
                    "streamId": 7050,
                    "streamVersion": 2
                  },
                  {
                    "modifiedBy": "jkowalski",
                    "modifiedDate": "2022-01-25T14:00:12Z",
                    "status": "ACTIVATED",
                    "streamId": 7050,
                    "streamVersion": 2
                  },
                  {
                    "modifiedBy": "jperez",
                    "modifiedDate": "2022-01-06T11:07:12Z",
                    "status": "DEACTIVATED",
                    "streamId": 7050,
                    "streamVersion": 1
                  },
                  {
                    "modifiedBy": "alfulani",
                    "modifiedDate": "2022-01-01T08:07:22Z",
                    "status": "ACTIVATED",
                    "streamId": 7050,
                    "streamVersion": 1
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Uniquely identifies the stream.",
          "example": "{{streamId}}",
          "in": "path",
          "name": "streamId",
          "required": true,
          "schema": {
            "example": 7050,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/streamId-path.yaml"
          }
        }
      ]
    },
    "/log/streams/{streamId}/deactivate": {
      "post": {
        "description": "Deactivates the latest version of a stream. Deactivating a stream means that you stop receiving logs for the properties that this stream monitors and changes status to `DEACTIVATED` in approximately an hour. If you want to start receiving log files again, you can activate the stream at any time using the [Activate a stream](https://techdocs.akamai.com/datastream2/reference/post-stream-activate) operation.",
        "operationId": "post-stream-deactivate",
        "summary": "Deactivate a stream",
        "tags": [
          "Activations"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's DataStream 2 API",
          "url": "https://techdocs.akamai.com/datastream2/reference/post-stream-deactivate"
        },
        "responses": {
          "200": {
            "description": "The response confirms the stream has been deactivated and returns its details.",
            "content": {
              "application/json": {
                "example": {
                  "collectMidgress": true,
                  "contractId": "K-0N7RAK7",
                  "createdBy": "hgildong",
                  "createdDate": "2022-02-05T13:31:30Z",
                  "groupId": 21484,
                  "latestVersion": 1,
                  "modifiedBy": "alfulani",
                  "modifiedDate": "2022-02-05T13:31:30Z",
                  "productId": "Dynamic_Site_Accelerator",
                  "streamId": 7050,
                  "streamName": "diagnostics-log-stream",
                  "streamStatus": "ACTIVATING",
                  "streamVersion": 1,
                  "notificationEmails": [
                    "useremail1@domain.com",
                    "useremail2@domain.com"
                  ],
                  "deliveryConfiguration": {
                    "fieldDelimiter": "SPACE",
                    "format": "STRUCTURED",
                    "uploadFilePrefix": "logs",
                    "uploadFileSuffix": "ds",
                    "frequency": {
                      "intervalInSeconds": 30
                    }
                  },
                  "destination": {
                    "bucket": "datastream.akamai.com",
                    "compressLogs": true,
                    "destinationType": "S3",
                    "displayName": "S3Destination",
                    "path": "ds2-logs",
                    "region": "ap-south-1"
                  },
                  "datasetFields": [
                    {
                      "datasetFieldId": 1000,
                      "datasetFieldJsonKey": "cp",
                      "datasetFieldName": "CP code"
                    },
                    {
                      "datasetFieldId": 1002,
                      "datasetFieldJsonKey": "reqId",
                      "datasetFieldName": "Request ID"
                    },
                    {
                      "datasetFieldId": 1023,
                      "datasetFieldJsonKey": "cookie",
                      "datasetFieldName": "Cookie"
                    }
                  ],
                  "properties": [
                    {
                      "propertyId": 349772,
                      "propertyName": "example.com"
                    },
                    {
                      "propertyId": 349770,
                      "propertyName": "example.akamai.com"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Provides detailed information about the latest configuration version of a stream. It provides descriptions of the data set fields selected in the version, identifiers of properties they collect logs for, configuration of the destination where they deliver logs, and structure of these log lines. It also informs whether this version is active.",
                  "type": "object",
                  "required": [
                    "contractId",
                    "createdBy",
                    "createdDate",
                    "datasetFields",
                    "deliveryConfiguration",
                    "destination",
                    "groupId",
                    "latestVersion",
                    "modifiedBy",
                    "modifiedDate",
                    "productId",
                    "properties",
                    "streamId",
                    "streamName",
                    "streamStatus",
                    "streamVersion"
                  ],
                  "properties": {
                    "collectMidgress": {
                      "description": "Indicates if you've opted to capture midgress traffic within the Akamai platform, such as between two edge servers.",
                      "type": "boolean"
                    },
                    "contractId": {
                      "description": "Identifies the contract that the stream belongs to.",
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The username who created the stream.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "An ISO 8601 timestamp marking when the stream was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "datasetFields": {
                      "description": "A list of data set fields selected that the stream monitors in logs. The order of the identifiers define how the value for these fields appear in the log lines.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "datasetFieldId",
                          "datasetFieldName",
                          "datasetFieldJsonKey"
                        ],
                        "properties": {
                          "datasetFieldId": {
                            "description": "Identifies the field.",
                            "type": "integer"
                          },
                          "datasetFieldJsonKey": {
                            "description": "Specifies the JSON key for the field in a log line. You can get this value only when you run the [List data set fields](https://techdocs.akamai.com/datastream2/reference/get-dataset-fields) or [Get a stream](https://techdocs.akamai.com/datastream2/reference/get-stream) operation for a stream in the `JSON` format.",
                            "type": "string"
                          },
                          "datasetFieldName": {
                            "description": "A name of the data set field.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "deliveryConfiguration": {
                      "additionalProperties": false,
                      "description": "The configuration of log lines, names of the files sent to a destination, and delivery frequency for these files.",
                      "type": "object",
                      "required": [
                        "format",
                        "frequency"
                      ],
                      "properties": {
                        "fieldDelimiter": {
                          "description": "A delimiter that separates data set fields in the log lines, either `SPACE` or `TAB`. Set this only for the `STRUCTURED` log file `format`.",
                          "type": "string",
                          "enum": [
                            "SPACE",
                            "TAB"
                          ]
                        },
                        "format": {
                          "description": "The format in which you want to receive log files. `STRUCTURED` or `JSON` are the currently available formats.",
                          "type": "string",
                          "enum": [
                            "STRUCTURED",
                            "JSON"
                          ]
                        },
                        "frequency": {
                          "additionalProperties": false,
                          "description": "The frequency of collecting logs from each uploader and sending these logs to a destination.",
                          "type": "object",
                          "required": [
                            "intervalInSeconds"
                          ],
                          "properties": {
                            "intervalInSeconds": {
                              "description": "The interval in seconds (`30` or `60`) after which the system bundles log lines into a file and sends it to a destination.",
                              "type": "integer",
                              "enum": [
                                30,
                                60
                              ]
                            }
                          }
                        },
                        "uploadFilePrefix": {
                          "default": "ak",
                          "description": "The prefix of the log file that you want to send to a object-based destination. It's a string of at most 200 characters. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). If unspecified, it defaults to `ak`.",
                          "type": "string"
                        },
                        "uploadFileSuffix": {
                          "default": "ds",
                          "description": "The suffix of the log file that you want to send to a object-based destination. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). It's a static string of at most 10 characters. If unspecified, it defaults to `ds`.",
                          "type": "string"
                        }
                      }
                    },
                    "destination": {
                      "description": "Provides detailed information about the destination's configuration in the stream to send logs.",
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Azure Storage destination configuration in a stream.",
                          "title": "AZURE",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "compressLogs",
                            "displayName",
                            "path",
                            "accountName",
                            "containerName"
                          ],
                          "properties": {
                            "accountName": {
                              "description": "Specifies the Azure Storage account name.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "containerName": {
                              "description": "Specifies the Azure Storage container name.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `AZURE` for this destination type.",
                              "type": "string",
                              "enum": [
                                "AZURE"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within the Azure Storage container where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long) in the Azure documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/AzureSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Amazon S3 destination in a stream.",
                          "title": "S3",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "compressLogs",
                            "displayName",
                            "path",
                            "bucket",
                            "region"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the Amazon S3 bucket. See [Working with buckets in AWS](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html) in the Amazon S3 documentation.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `S3` for this destination type.",
                              "type": "string",
                              "enum": [
                                "S3"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your Amazon S3 bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object keys](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html) in the Amazon S3 documentation for naming conventions.",
                              "type": "string"
                            },
                            "region": {
                              "description": "The AWS region where your Amazon S3 bucket resides. See [Regions, Availability Zones, and Local Zones in AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) in the Amazon S3 documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/S3SavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Datadog destination configuration in a stream.",
                          "title": "DATADOG",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "default": false,
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `false` by default.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `DATADOG` for this destination type.",
                              "type": "string",
                              "enum": [
                                "DATADOG"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Datadog v1 endpoint URL where you want to send and store logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Datadog](https://techdocs.akamai.com/datastream2/v2/docs/stream-datadog#akamaized-hostname-as-endpoint), and [View Datadog logs endpoint](https://docs.datadoghq.com/logs/log_collection/?tab=http#logging-endpoints) in the Datadog documentation.",
                              "type": "string"
                            },
                            "service": {
                              "description": "The name of the application or service generating the log events in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) and [Services List](https://docs.datadoghq.com/tracing/visualization/services_list/) in the Datadog documentation.",
                              "type": "string"
                            },
                            "source": {
                              "description": "The name of the source or the technology of the logs in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) in the Datadog documentation.",
                              "type": "string"
                            },
                            "tags": {
                              "description": "The tags you can use to filter and group metrics in your Datadog account. Enter a comma-delimited list for more than one tag. This field also supports `<key>:<value>` combinations. See [Getting Started with Tags](https://docs.datadoghq.com/getting_started/tagging/) in the Datadog documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/DatadogSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides detailed information about the Splunk destination that you can use in your stream. Note that DataStream 2 currently supports only endpoint URLs ending with `collector/raw`. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                          "title": "SPLUNK",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "default": true,
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                              "type": "boolean"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `SPLUNK` for this destination type.",
                              "type": "string",
                              "enum": [
                                "SPLUNK"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The raw event Splunk URL where you want to store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Splunk](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "mTlsEnabled": {
                              "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                              "type": "boolean"
                            },
                            "tlsHostname": {
                              "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/SplunkSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Google Cloud Storage destination in a stream.",
                          "title": "GCS",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "bucket",
                            "projectId",
                            "serviceAccountName",
                            "compressLogs"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the storage bucket you created in your Google Cloud account. See [Bucket naming conventions](https://cloud.google.com/storage/docs/naming-buckets) in the Google Cloud documentation.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `GCS` for this destination type.",
                              "type": "string",
                              "enum": [
                                "GCS"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your Google Cloud bucket where you want to store logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object naming guidelines](https://cloud.google.com/storage/docs/naming-objects) in the Google Cloud documentation.",
                              "type": "string"
                            },
                            "projectId": {
                              "description": "The unique ID of your Google Cloud project.",
                              "type": "string"
                            },
                            "serviceAccountName": {
                              "description": "The name of the service account with the `storage.object.create` permission or Storage Object Creator role.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/GCSSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the custom HTTPS endpoint destination in a stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                          "title": "HTTPS",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "authenticationType",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "authenticationType": {
                              "description": "Either `NONE` for no authentication, or `BASIC`. For basic authentication, provide the username and password you set in your custom HTTPS endpoint.",
                              "type": "string",
                              "enum": [
                                "BASIC",
                                "NONE"
                              ]
                            },
                            "compressLogs": {
                              "default": false,
                              "description": "Enables gzip compression for a log file sent to a destination. This member's value is `false` by default.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `HTTPS` for this destination type.",
                              "type": "string",
                              "enum": [
                                "HTTPS"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "Enter the secure URL where you want to send and store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to a custom HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "mTlsEnabled": {
                              "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                              "type": "boolean"
                            },
                            "tlsHostname": {
                              "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/HTTPSSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Oracle Cloud Storage destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and tries to save an `akamai_write_test_2147483647.txt` file in your Oracle Cloud Storage folder. You can only see this file if the validation process is successful, and you have access to the Oracle Cloud Storage bucket and folder that you're trying to send logs to.",
                          "title": "ORACLE_CLOUD_STORAGE",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "region",
                            "bucket",
                            "path",
                            "namespace",
                            "compressLogs"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the Oracle Cloud Storage bucket. See [Working with buckets](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingbuckets.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `ORACLE_CLOUD_STORAGE` for this destination type.",
                              "type": "string",
                              "enum": [
                                "ORACLE_CLOUD_STORAGE"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "The namespace of your Oracle Cloud Storage account. See [Understanding Object Storage namespaces](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/understandingnamespaces.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your Oracle Cloud Storage bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Managing Objects](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingobjects.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            },
                            "region": {
                              "description": "The Oracle Cloud Storage region where your bucket resides. See [Regions and availability domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/OCSSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides detailed information about the Sumo Logic destination that you can use in your stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                          "title": "SUMO_LOGIC",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "collectorCode": {
                              "description": "The unique HTTP collector code of your Sumo Logic endpoint.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "default": true,
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the custom header of the request.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the custom header of the request that can contain only alphanumeric, dash, and underscore characters. See [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic) for details.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The contents of the custom header passed with the request that contain information about the client connection. See [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic) for details.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `SUMO_LOGIC` for this destination type.",
                              "type": "string",
                              "enum": [
                                "SUMO_LOGIC"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Sumo Logic HTTP Source URL where you want to send your logs. You should follow the `https://<SumoEndpoint>/receiver/v1/http` format and set the collector code in the `collectorCode` member.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/SumoLogicSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the loggly endpoint destination in a stream.",
                          "title": "LOGGLY",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `LOGGLY` for this destination type.",
                              "type": "string",
                              "enum": [
                                "LOGGLY"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Loggly bulk endpoint URL in the `https://hostname.loggly.com/bulk/` format. Set the endpoint code in the `authToken` field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Loggly](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "tags": {
                              "description": "The tags you can use to segment and filter log events in Loggly. See [Tags](https://documentation.solarwinds.com/en/success_center/loggly/content/admin/tags.htm) in the Loggly documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/LogglySavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Elasticsearch endpoint destination in a stream.",
                          "title": "ELASTICSEARCH",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `ELASTICSEARCH` for this destination type.",
                              "type": "string",
                              "enum": [
                                "ELASTICSEARCH"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Elasticsearch bulk endpoint URL in the `https://hostname.elastic-cloud.com:9243/_bulk/` format. Set `indexName` in the appropriate field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Elasticsearch][Stream logs to Elasticsearch](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#section-akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "mTlsEnabled": {
                              "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                              "type": "boolean"
                            },
                            "tlsHostname": {
                              "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/ElasticsearchSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the New Relic endpoint destination in a stream.",
                          "title": "NEWRELIC",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "compressLogs"
                          ],
                          "properties": {
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `NEWRELIC` for this destination type.",
                              "type": "string",
                              "enum": [
                                "NEWRELIC"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The New Relic Log API endpoint URL in the `https://log-api.newrelic.com/log/v1/` format. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to New Relic](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/NewRelicSavedDestination.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the S3-compatible destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and saves an `Akamai_access_verification_[TimeStamp].txt` format file in your S3-compatible folder. You can only see this file if the validation process is successful, and you have access to the S3-compatible bucket and folder that you're trying to send logs to. Before configuring your stream to send logs to this destination, make sure you create a S3-compatible storage bucket, and store the access key together with the secret access key.",
                          "title": "S3_COMPATIBLE",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "bucket",
                            "region",
                            "endpoint"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the S3-compatible object storage bucket.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `S3_COMPATIBLE` for this destination type.",
                              "type": "string",
                              "enum": [
                                "S3_COMPATIBLE"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The scheme-qualified host of your S3-compatible object storage bucket.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your S3-compatible object storage bucket where you want to store logs. This value allows [Dynamic time variables](https://techdocs.akamai.com/datastream2/docs/dynamic-time-variables).",
                              "type": "string"
                            },
                            "region": {
                              "description": "The physical storage location of your S3-compatible object storage bucket.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/S3CompatibleSavedDestination.yaml"
                          }
                        }
                      ]
                    },
                    "groupId": {
                      "description": "Identifies the group that has access to the product and that you created the stream configuration for. When editing a stream, the value you pass is ignored as you can't change the group for an existing stream.",
                      "type": "integer"
                    },
                    "latestVersion": {
                      "description": "Identifies the latest configuration version of the stream.",
                      "type": "integer"
                    },
                    "modifiedBy": {
                      "description": "The username who modified the stream.",
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "The date and time in the ISO 8601 format when the stream was modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "notificationEmails": {
                      "description": "A comma-delimited list of email addresses where the system sends notifications about activations and deactivations of the stream.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "productId": {
                      "description": "The ID of the product that you created stream for.",
                      "type": "string"
                    },
                    "properties": {
                      "description": "Identifies the properties that you monitor in the stream.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "propertyId",
                          "propertyName"
                        ],
                        "properties": {
                          "propertyId": {
                            "description": "The identifier of the property.",
                            "type": "integer"
                          },
                          "propertyName": {
                            "description": "The descriptive label for the property.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "streamId": {
                      "description": "Identifies the stream.",
                      "type": "integer"
                    },
                    "streamName": {
                      "description": "The name of the stream.",
                      "type": "string"
                    },
                    "streamStatus": {
                      "description": "Indicates if the stream is `ACTIVATED` or `DEACTIVATED`. `INACTIVE`, `ACTIVATING`, `ACTIVATED`, `DEACTIVATING`, or `DEACTIVATED`.",
                      "type": "string",
                      "enum": [
                        "INACTIVE",
                        "ACTIVATING",
                        "ACTIVATED",
                        "DEACTIVATING",
                        "DEACTIVATED"
                      ]
                    },
                    "streamVersion": {
                      "description": "Identifies the configuration version of the stream.",
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/StreamDetail.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Uniquely identifies the stream.",
          "example": "{{streamId}}",
          "in": "path",
          "name": "streamId",
          "required": true,
          "schema": {
            "example": 7050,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/streamId-path.yaml"
          }
        }
      ]
    },
    "/log/streams/{streamId}/history": {
      "get": {
        "description": "Returns details about all versions of a given stream. It helps you track changes between the versions of the stream, including monitored properties, logged data set fields, and log delivery destinations. Optionally, set both the `startVersion` and `endVersion` parameters to get details on all stream versions for a given range. For example, setting `startVersion` to `1` and `endVersion` to `3` returns details on the `1`, `2`, and `3` versions of the stream.",
        "operationId": "get-stream-history",
        "summary": "View history",
        "tags": [
          "History"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's DataStream 2 API",
          "url": "https://techdocs.akamai.com/datastream2/reference/get-stream-history"
        },
        "responses": {
          "200": {
            "description": "The response returns details of all versions of the stream.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Details of the latest stream configuration version. Data includes properties, data set fields, destination setup, activation status, and log format.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Provides detailed information about the latest configuration version of a stream. It provides descriptions of the data set fields selected in the version, identifiers of properties they collect logs for, configuration of the destination where they deliver logs, and structure of these log lines. It also informs whether this version is active.",
                    "type": "object",
                    "required": [
                      "contractId",
                      "createdBy",
                      "createdDate",
                      "datasetFields",
                      "deliveryConfiguration",
                      "destination",
                      "groupId",
                      "latestVersion",
                      "modifiedBy",
                      "modifiedDate",
                      "productId",
                      "properties",
                      "streamId",
                      "streamName",
                      "streamStatus",
                      "streamVersion"
                    ],
                    "properties": {
                      "collectMidgress": {
                        "description": "Indicates if you've opted to capture midgress traffic within the Akamai platform, such as between two edge servers.",
                        "type": "boolean"
                      },
                      "contractId": {
                        "description": "Identifies the contract that the stream belongs to.",
                        "type": "string"
                      },
                      "createdBy": {
                        "description": "The username who created the stream.",
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "An ISO 8601 timestamp marking when the stream was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "datasetFields": {
                        "description": "A list of data set fields selected that the stream monitors in logs. The order of the identifiers define how the value for these fields appear in the log lines.",
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "datasetFieldId",
                            "datasetFieldName",
                            "datasetFieldJsonKey"
                          ],
                          "properties": {
                            "datasetFieldId": {
                              "description": "Identifies the field.",
                              "type": "integer"
                            },
                            "datasetFieldJsonKey": {
                              "description": "Specifies the JSON key for the field in a log line. You can get this value only when you run the [List data set fields](https://techdocs.akamai.com/datastream2/reference/get-dataset-fields) or [Get a stream](https://techdocs.akamai.com/datastream2/reference/get-stream) operation for a stream in the `JSON` format.",
                              "type": "string"
                            },
                            "datasetFieldName": {
                              "description": "A name of the data set field.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "deliveryConfiguration": {
                        "additionalProperties": false,
                        "description": "The configuration of log lines, names of the files sent to a destination, and delivery frequency for these files.",
                        "type": "object",
                        "required": [
                          "format",
                          "frequency"
                        ],
                        "properties": {
                          "fieldDelimiter": {
                            "description": "A delimiter that separates data set fields in the log lines, either `SPACE` or `TAB`. Set this only for the `STRUCTURED` log file `format`.",
                            "type": "string",
                            "enum": [
                              "SPACE",
                              "TAB"
                            ]
                          },
                          "format": {
                            "description": "The format in which you want to receive log files. `STRUCTURED` or `JSON` are the currently available formats.",
                            "type": "string",
                            "enum": [
                              "STRUCTURED",
                              "JSON"
                            ]
                          },
                          "frequency": {
                            "additionalProperties": false,
                            "description": "The frequency of collecting logs from each uploader and sending these logs to a destination.",
                            "type": "object",
                            "required": [
                              "intervalInSeconds"
                            ],
                            "properties": {
                              "intervalInSeconds": {
                                "description": "The interval in seconds (`30` or `60`) after which the system bundles log lines into a file and sends it to a destination.",
                                "type": "integer",
                                "enum": [
                                  30,
                                  60
                                ]
                              }
                            }
                          },
                          "uploadFilePrefix": {
                            "default": "ak",
                            "description": "The prefix of the log file that you want to send to a object-based destination. It's a string of at most 200 characters. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). If unspecified, it defaults to `ak`.",
                            "type": "string"
                          },
                          "uploadFileSuffix": {
                            "default": "ds",
                            "description": "The suffix of the log file that you want to send to a object-based destination. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). It's a static string of at most 10 characters. If unspecified, it defaults to `ds`.",
                            "type": "string"
                          }
                        }
                      },
                      "destination": {
                        "description": "Provides detailed information about the destination's configuration in the stream to send logs.",
                        "oneOf": [
                          {
                            "additionalProperties": false,
                            "description": "Provides details about the Azure Storage destination configuration in a stream.",
                            "title": "AZURE",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "compressLogs",
                              "displayName",
                              "path",
                              "accountName",
                              "containerName"
                            ],
                            "properties": {
                              "accountName": {
                                "description": "Specifies the Azure Storage account name.",
                                "type": "string"
                              },
                              "compressLogs": {
                                "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                                "type": "boolean"
                              },
                              "containerName": {
                                "description": "Specifies the Azure Storage container name.",
                                "type": "string"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set this value to `AZURE` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "AZURE"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The path to the folder within the Azure Storage container where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long) in the Azure documentation.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/AzureSavedDestination.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Provides details about the Amazon S3 destination in a stream.",
                            "title": "S3",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "compressLogs",
                              "displayName",
                              "path",
                              "bucket",
                              "region"
                            ],
                            "properties": {
                              "bucket": {
                                "description": "The name of the Amazon S3 bucket. See [Working with buckets in AWS](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html) in the Amazon S3 documentation.",
                                "type": "string"
                              },
                              "compressLogs": {
                                "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                                "type": "boolean"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set it to `S3` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "S3"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The path to the folder within your Amazon S3 bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object keys](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html) in the Amazon S3 documentation for naming conventions.",
                                "type": "string"
                              },
                              "region": {
                                "description": "The AWS region where your Amazon S3 bucket resides. See [Regions, Availability Zones, and Local Zones in AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) in the Amazon S3 documentation.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/S3SavedDestination.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Provides details about the Datadog destination configuration in a stream.",
                            "title": "DATADOG",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "displayName",
                              "endpoint",
                              "compressLogs"
                            ],
                            "properties": {
                              "compressLogs": {
                                "default": false,
                                "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `false` by default.",
                                "type": "boolean"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set this value to `DATADOG` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "DATADOG"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "endpoint": {
                                "description": "The Datadog v1 endpoint URL where you want to send and store logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Datadog](https://techdocs.akamai.com/datastream2/v2/docs/stream-datadog#akamaized-hostname-as-endpoint), and [View Datadog logs endpoint](https://docs.datadoghq.com/logs/log_collection/?tab=http#logging-endpoints) in the Datadog documentation.",
                                "type": "string"
                              },
                              "service": {
                                "description": "The name of the application or service generating the log events in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) and [Services List](https://docs.datadoghq.com/tracing/visualization/services_list/) in the Datadog documentation.",
                                "type": "string"
                              },
                              "source": {
                                "description": "The name of the source or the technology of the logs in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) in the Datadog documentation.",
                                "type": "string"
                              },
                              "tags": {
                                "description": "The tags you can use to filter and group metrics in your Datadog account. Enter a comma-delimited list for more than one tag. This field also supports `<key>:<value>` combinations. See [Getting Started with Tags](https://docs.datadoghq.com/getting_started/tagging/) in the Datadog documentation.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/DatadogSavedDestination.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Provides detailed information about the Splunk destination that you can use in your stream. Note that DataStream 2 currently supports only endpoint URLs ending with `collector/raw`. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                            "title": "SPLUNK",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "displayName",
                              "endpoint",
                              "compressLogs"
                            ],
                            "properties": {
                              "compressLogs": {
                                "default": true,
                                "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                                "type": "boolean"
                              },
                              "customHeaderName": {
                                "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                                "type": "string"
                              },
                              "customHeaderValue": {
                                "description": "The custom header's contents passed with the request that contains information about the client connection.",
                                "type": "string"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set this value to `SPLUNK` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "SPLUNK"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "endpoint": {
                                "description": "The raw event Splunk URL where you want to store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Splunk](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#akamaized-hostname-as-endpoint).",
                                "type": "string"
                              },
                              "mTlsEnabled": {
                                "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                                "type": "boolean"
                              },
                              "tlsHostname": {
                                "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/SplunkSavedDestination.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Provides details about the Google Cloud Storage destination in a stream.",
                            "title": "GCS",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "displayName",
                              "bucket",
                              "projectId",
                              "serviceAccountName",
                              "compressLogs"
                            ],
                            "properties": {
                              "bucket": {
                                "description": "The name of the storage bucket you created in your Google Cloud account. See [Bucket naming conventions](https://cloud.google.com/storage/docs/naming-buckets) in the Google Cloud documentation.",
                                "type": "string"
                              },
                              "compressLogs": {
                                "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                                "type": "boolean"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set it to `GCS` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "GCS"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The path to the folder within your Google Cloud bucket where you want to store logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object naming guidelines](https://cloud.google.com/storage/docs/naming-objects) in the Google Cloud documentation.",
                                "type": "string"
                              },
                              "projectId": {
                                "description": "The unique ID of your Google Cloud project.",
                                "type": "string"
                              },
                              "serviceAccountName": {
                                "description": "The name of the service account with the `storage.object.create` permission or Storage Object Creator role.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/GCSSavedDestination.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Provides details about the custom HTTPS endpoint destination in a stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                            "title": "HTTPS",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "displayName",
                              "authenticationType",
                              "endpoint",
                              "compressLogs"
                            ],
                            "properties": {
                              "authenticationType": {
                                "description": "Either `NONE` for no authentication, or `BASIC`. For basic authentication, provide the username and password you set in your custom HTTPS endpoint.",
                                "type": "string",
                                "enum": [
                                  "BASIC",
                                  "NONE"
                                ]
                              },
                              "compressLogs": {
                                "default": false,
                                "description": "Enables gzip compression for a log file sent to a destination. This member's value is `false` by default.",
                                "type": "boolean"
                              },
                              "contentType": {
                                "description": "The type of the resource passed in the request's custom header.",
                                "type": "string"
                              },
                              "customHeaderName": {
                                "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                                "type": "string"
                              },
                              "customHeaderValue": {
                                "description": "The custom header's contents passed with the request that contains information about the client connection.",
                                "type": "string"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set it to `HTTPS` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "HTTPS"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "endpoint": {
                                "description": "Enter the secure URL where you want to send and store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to a custom HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#akamaized-hostname-as-endpoint).",
                                "type": "string"
                              },
                              "mTlsEnabled": {
                                "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                                "type": "boolean"
                              },
                              "tlsHostname": {
                                "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/HTTPSSavedDestination.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Provides details about the Oracle Cloud Storage destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and tries to save an `akamai_write_test_2147483647.txt` file in your Oracle Cloud Storage folder. You can only see this file if the validation process is successful, and you have access to the Oracle Cloud Storage bucket and folder that you're trying to send logs to.",
                            "title": "ORACLE_CLOUD_STORAGE",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "displayName",
                              "region",
                              "bucket",
                              "path",
                              "namespace",
                              "compressLogs"
                            ],
                            "properties": {
                              "bucket": {
                                "description": "The name of the Oracle Cloud Storage bucket. See [Working with buckets](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingbuckets.htm) in the Oracle Cloud Storage documentation.",
                                "type": "string"
                              },
                              "compressLogs": {
                                "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                                "type": "boolean"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set it to `ORACLE_CLOUD_STORAGE` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "ORACLE_CLOUD_STORAGE"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "The namespace of your Oracle Cloud Storage account. See [Understanding Object Storage namespaces](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/understandingnamespaces.htm) in the Oracle Cloud Storage documentation.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The path to the folder within your Oracle Cloud Storage bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Managing Objects](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingobjects.htm) in the Oracle Cloud Storage documentation.",
                                "type": "string"
                              },
                              "region": {
                                "description": "The Oracle Cloud Storage region where your bucket resides. See [Regions and availability domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm) in the Oracle Cloud Storage documentation.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/OCSSavedDestination.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Provides detailed information about the Sumo Logic destination that you can use in your stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                            "title": "SUMO_LOGIC",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "displayName",
                              "endpoint",
                              "compressLogs"
                            ],
                            "properties": {
                              "collectorCode": {
                                "description": "The unique HTTP collector code of your Sumo Logic endpoint.",
                                "type": "string"
                              },
                              "compressLogs": {
                                "default": true,
                                "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                                "type": "boolean"
                              },
                              "contentType": {
                                "description": "The type of the resource passed in the custom header of the request.",
                                "type": "string"
                              },
                              "customHeaderName": {
                                "description": "A human-readable name for the custom header of the request that can contain only alphanumeric, dash, and underscore characters. See [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic) for details.",
                                "type": "string"
                              },
                              "customHeaderValue": {
                                "description": "The contents of the custom header passed with the request that contain information about the client connection. See [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic) for details.",
                                "type": "string"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set this value to `SUMO_LOGIC` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "SUMO_LOGIC"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "endpoint": {
                                "description": "The Sumo Logic HTTP Source URL where you want to send your logs. You should follow the `https://<SumoEndpoint>/receiver/v1/http` format and set the collector code in the `collectorCode` member.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/SumoLogicSavedDestination.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Provides details about the loggly endpoint destination in a stream.",
                            "title": "LOGGLY",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "displayName",
                              "endpoint",
                              "compressLogs"
                            ],
                            "properties": {
                              "compressLogs": {
                                "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                                "type": "boolean"
                              },
                              "contentType": {
                                "description": "The type of the resource passed in the request's custom header.",
                                "type": "string"
                              },
                              "customHeaderName": {
                                "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                                "type": "string"
                              },
                              "customHeaderValue": {
                                "description": "The custom header's contents passed with the request that contains information about the client connection.",
                                "type": "string"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set it to `LOGGLY` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "LOGGLY"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "endpoint": {
                                "description": "The Loggly bulk endpoint URL in the `https://hostname.loggly.com/bulk/` format. Set the endpoint code in the `authToken` field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Loggly](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#akamaized-hostname-as-endpoint).",
                                "type": "string"
                              },
                              "tags": {
                                "description": "The tags you can use to segment and filter log events in Loggly. See [Tags](https://documentation.solarwinds.com/en/success_center/loggly/content/admin/tags.htm) in the Loggly documentation.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/LogglySavedDestination.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Provides details about the Elasticsearch endpoint destination in a stream.",
                            "title": "ELASTICSEARCH",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "displayName",
                              "endpoint",
                              "compressLogs"
                            ],
                            "properties": {
                              "compressLogs": {
                                "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                                "type": "boolean"
                              },
                              "contentType": {
                                "description": "The type of the resource passed in the request's custom header.",
                                "type": "string"
                              },
                              "customHeaderName": {
                                "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                                "type": "string"
                              },
                              "customHeaderValue": {
                                "description": "The custom header's contents passed with the request that contains information about the client connection.",
                                "type": "string"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set it to `ELASTICSEARCH` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "ELASTICSEARCH"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "endpoint": {
                                "description": "The Elasticsearch bulk endpoint URL in the `https://hostname.elastic-cloud.com:9243/_bulk/` format. Set `indexName` in the appropriate field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Elasticsearch][Stream logs to Elasticsearch](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#section-akamaized-hostname-as-endpoint).",
                                "type": "string"
                              },
                              "mTlsEnabled": {
                                "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                                "type": "boolean"
                              },
                              "tlsHostname": {
                                "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/ElasticsearchSavedDestination.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Provides details about the New Relic endpoint destination in a stream.",
                            "title": "NEWRELIC",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "displayName",
                              "endpoint",
                              "compressLogs"
                            ],
                            "properties": {
                              "compressLogs": {
                                "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                                "type": "boolean"
                              },
                              "contentType": {
                                "description": "The type of the resource passed in the request's custom header.",
                                "type": "string"
                              },
                              "customHeaderName": {
                                "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                                "type": "string"
                              },
                              "customHeaderValue": {
                                "description": "The custom header's contents passed with the request that contains information about the client connection.",
                                "type": "string"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set it to `NEWRELIC` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "NEWRELIC"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "endpoint": {
                                "description": "The New Relic Log API endpoint URL in the `https://log-api.newrelic.com/log/v1/` format. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to New Relic](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#akamaized-hostname-as-endpoint).",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/NewRelicSavedDestination.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Provides details about the S3-compatible destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and saves an `Akamai_access_verification_[TimeStamp].txt` format file in your S3-compatible folder. You can only see this file if the validation process is successful, and you have access to the S3-compatible bucket and folder that you're trying to send logs to. Before configuring your stream to send logs to this destination, make sure you create a S3-compatible storage bucket, and store the access key together with the secret access key.",
                            "title": "S3_COMPATIBLE",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "displayName",
                              "bucket",
                              "region",
                              "endpoint"
                            ],
                            "properties": {
                              "bucket": {
                                "description": "The name of the S3-compatible object storage bucket.",
                                "type": "string"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set it to `S3_COMPATIBLE` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "S3_COMPATIBLE"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "endpoint": {
                                "description": "The scheme-qualified host of your S3-compatible object storage bucket.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The path to the folder within your S3-compatible object storage bucket where you want to store logs. This value allows [Dynamic time variables](https://techdocs.akamai.com/datastream2/docs/dynamic-time-variables).",
                                "type": "string"
                              },
                              "region": {
                                "description": "The physical storage location of your S3-compatible object storage bucket.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/S3CompatibleSavedDestination.yaml"
                            }
                          }
                        ]
                      },
                      "groupId": {
                        "description": "Identifies the group that has access to the product and that you created the stream configuration for. When editing a stream, the value you pass is ignored as you can't change the group for an existing stream.",
                        "type": "integer"
                      },
                      "latestVersion": {
                        "description": "Identifies the latest configuration version of the stream.",
                        "type": "integer"
                      },
                      "modifiedBy": {
                        "description": "The username who modified the stream.",
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "The date and time in the ISO 8601 format when the stream was modified.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "notificationEmails": {
                        "description": "A comma-delimited list of email addresses where the system sends notifications about activations and deactivations of the stream.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "productId": {
                        "description": "The ID of the product that you created stream for.",
                        "type": "string"
                      },
                      "properties": {
                        "description": "Identifies the properties that you monitor in the stream.",
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "propertyId",
                            "propertyName"
                          ],
                          "properties": {
                            "propertyId": {
                              "description": "The identifier of the property.",
                              "type": "integer"
                            },
                            "propertyName": {
                              "description": "The descriptive label for the property.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "streamId": {
                        "description": "Identifies the stream.",
                        "type": "integer"
                      },
                      "streamName": {
                        "description": "The name of the stream.",
                        "type": "string"
                      },
                      "streamStatus": {
                        "description": "Indicates if the stream is `ACTIVATED` or `DEACTIVATED`. `INACTIVE`, `ACTIVATING`, `ACTIVATED`, `DEACTIVATING`, or `DEACTIVATED`.",
                        "type": "string",
                        "enum": [
                          "INACTIVE",
                          "ACTIVATING",
                          "ACTIVATED",
                          "DEACTIVATING",
                          "DEACTIVATED"
                        ]
                      },
                      "streamVersion": {
                        "description": "Identifies the configuration version of the stream.",
                        "type": "integer"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/StreamDetail.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/StreamHistories.yaml"
                  }
                },
                "example": [
                  {
                    "contractId": "K-0N7RAK7",
                    "createdBy": "szhang",
                    "createdDate": "2022-02-05T13:31:30Z",
                    "groupId": 21484,
                    "latestVersion": 2,
                    "modifiedBy": "adevi",
                    "modifiedDate": "2022-02-08T15:31:30Z",
                    "productId": "Dynamic_Site_Accelerator",
                    "streamId": 7050,
                    "streamName": "diagnostics-log-stream",
                    "streamStatus": "ACTIVATING",
                    "streamVersion": 2,
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "fieldDelimiter": "SPACE",
                      "format": "STRUCTURED",
                      "uploadFilePrefix": "logs",
                      "uploadFileSuffix": "ds",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "bucket": "datastream.akamai.com",
                      "destinationType": "S3",
                      "displayName": "S3Destination",
                      "path": "ds2-logs",
                      "region": "ap-south-1"
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000,
                        "datasetFieldJsonKey": "cp",
                        "datasetFieldName": "CP code"
                      },
                      {
                        "datasetFieldId": 1002,
                        "datasetFieldJsonKey": "reqId",
                        "datasetFieldName": "Request ID"
                      },
                      {
                        "datasetFieldId": 1023,
                        "datasetFieldJsonKey": "cookie",
                        "datasetFieldName": "Cookie"
                      },
                      {
                        "datasetFieldId": 1031,
                        "datasetFieldJsonKey": "range",
                        "datasetFieldName": "Range"
                      },
                      {
                        "datasetFieldId": 1032,
                        "datasetFieldJsonKey": "referer",
                        "datasetFieldName": "Referer"
                      },
                      {
                        "datasetFieldId": 1037,
                        "datasetFieldJsonKey": "xForwardedFor",
                        "datasetFieldName": "X-Forwarded-For"
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772,
                        "propertyName": "example.com"
                      },
                      {
                        "propertyId": 349770,
                        "propertyName": "example.akamai.com"
                      }
                    ]
                  },
                  {
                    "contractId": "K-0N7RAK7",
                    "createdBy": "szhang",
                    "createdDate": "2022-02-05T13:31:30Z",
                    "groupId": 21484,
                    "latestVersion": 2,
                    "modifiedBy": "jperez",
                    "modifiedDate": "2022-02-05T13:31:30Z",
                    "productId": "Dynamic_Site_Accelerator",
                    "streamId": 7050,
                    "streamName": "diagnostics-log-stream",
                    "streamStatus": "ACTIVATING",
                    "streamVersion": 1,
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "fieldDelimiter": "SPACE",
                      "format": "STRUCTURED",
                      "uploadFilePrefix": "logs",
                      "uploadFileSuffix": "ds",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "destination": {
                      "bucket": "datastream.akamai.com",
                      "destinationType": "S3",
                      "displayName": "S3Destination",
                      "path": "ds2-logs",
                      "region": "ap-south-1"
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000,
                        "datasetFieldJsonKey": "cp",
                        "datasetFieldName": "CP code"
                      },
                      {
                        "datasetFieldId": 1002,
                        "datasetFieldJsonKey": "reqId",
                        "datasetFieldName": "Request ID"
                      },
                      {
                        "datasetFieldId": 1023,
                        "datasetFieldJsonKey": "cookie",
                        "datasetFieldName": "Cookie"
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772,
                        "propertyName": "example.com"
                      },
                      {
                        "propertyId": 349770,
                        "propertyName": "example.akamai.com"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Specifies the first stream version in the `startVersion` to `endVersion` range you want to fetch stream history details for. The `startVersion` needs to be less than the `endVersion`.",
            "example": "{{startVersion}}",
            "in": "query",
            "name": "startVersion",
            "required": false,
            "schema": {
              "default": 1,
              "example": 2,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/history-startVersion-query.yaml"
            }
          },
          {
            "description": "Specifies the last stream version in the range you want to fetch stream history details for. The `endVersion` needs to be greater than `startVersion`.",
            "example": "{{endVersion}}",
            "in": "query",
            "name": "endVersion",
            "required": false,
            "schema": {
              "default": 1,
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/history-endVersion-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Uniquely identifies the stream.",
          "example": "{{streamId}}",
          "in": "path",
          "name": "streamId",
          "required": true,
          "schema": {
            "example": 7050,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/streamId-path.yaml"
          }
        }
      ]
    },
    "/migration/ds1-to-ds2/create": {
      "post": {
        "description": "Creates from one to ten DataStream 2 stream configurations. In a stream configuration, you can choose the properties you want the stream to monitor, data set fields to log, and a destination to send logs. Configure the log push and delivery frequency, and decide whether you want to activate the stream upon making the request or save the configuration for later, using the `activate` parameter. If the request returns a 400 error, solve all validation errors from the response and try again to create a valid stream. Note that only active streams collect and send logs to the destinations. See [Activate a stream](https://techdocs.akamai.com/datastream2/reference/post-stream-activate).",
        "operationId": "post-migrate-stream",
        "summary": "Migrate streams",
        "tags": [
          "Migrate"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's DataStream 2 API",
          "url": "https://techdocs.akamai.com/datastream2/reference/post-migrate-stream"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "validation": {
                  "errors": [],
                  "notices": [],
                  "warnings": [],
                  "message": {
                    "detail": "There are 2 errors and 4 warnings for your stream(s). Fix all errors before making a request for bulk stream migration. Please pay attention to the warnings that inform about features partially or not supported in DataStream 2.",
                    "title": "Fix errors before bulk stream migration",
                    "type": "FIX_ALL_ERRORS"
                  }
                },
                "streams": [
                  {
                    "contractId": "K-0N7RAK71",
                    "ds1StreamId": 1256,
                    "groupId": 21484,
                    "streamName": "Ds1_Stream_1",
                    "notificationEmails": [
                      "useremail1@domain.com",
                      "useremail2@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "fieldDelimiter": "SPACE",
                      "format": "STRUCTURED",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "validation": {
                      "errors": [
                        {
                          "detail": "DataStream 2 supports only one destination at this time. Select and pass at least one destination from the 'destinations' array, and provide values required for authentication marked with <ENTER VALUE>. For more details, refer to the Destinations topic in the migration document: https://techdocs.akamai.com/datastream2/v2/reference/datastream-1-and-datastream-2 ",
                          "title": "Single Destination Support",
                          "type": "SINGLE_DESTINATION_SUPPORT"
                        }
                      ],
                      "notices": [
                        {
                          "detail": "DataStream 2 does not support the DataStream Buffer destination.",
                          "title": "DataStream Buffer Not Supported",
                          "type": "DATASTREAM_BUFFER_NOT_SUPPORTED"
                        }
                      ],
                      "warnings": [
                        {
                          "detail": "The following data set(s) are not supported in DataStream 2 and cannot be logged in the new stream: ({Data set field ID: 13, Name: Forward Hostname}, {Data set field ID: 18, Name: Request Cache-Control}).",
                          "title": "Data set not supported",
                          "type": "DATA_SET_NOT_SUPPORTED"
                        },
                        {
                          "detail": "Property (ID: 1234, name: xyz.com) not available for DataStream 2. Provide a property that is associated with product(s) supported by DataStream 2, and belongs to the appropriate contract (1-XYZ) and group ID (1122).",
                          "title": "Property not supported",
                          "type": "PROPERTY_NOT_SUPPORTED"
                        },
                        {
                          "detail": "One property can only be associated with a maximum of 3 streams. The \"xyz.com\" property (ID: 4567, hostnames: {xyz.in,xyz.ak}) is already associated to 3 streams.",
                          "title": "Maximum streams per property limit exceeded",
                          "type": "STREAMS_PER_PROPERTY_LIMIT_EXCEEDED"
                        }
                      ]
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1000
                      },
                      {
                        "datasetFieldId": 1002
                      },
                      {
                        "datasetFieldId": 1005
                      }
                    ],
                    "destinations": [
                      {
                        "destinationType": "SPLUNK",
                        "displayName": "Splunk",
                        "endpoint": "https://splunk.cloudapp.com:8088/services/collector/raw",
                        "eventCollectorToken": "894-51c5-4b2e-888y-54fb-hh62"
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 349772
                      },
                      {
                        "propertyId": 349770
                      }
                    ]
                  },
                  {
                    "contractId": "C-0N7RAC7",
                    "ds1StreamId": 6679,
                    "groupId": 21484,
                    "streamName": "Ds1_Stream_mig_2",
                    "notificationEmails": [
                      "logged_in_user@domain.com"
                    ],
                    "deliveryConfiguration": {
                      "format": "JSON",
                      "uploadFilePrefix": "ak",
                      "uploadFileSuffix": "ds",
                      "frequency": {
                        "intervalInSeconds": 30
                      }
                    },
                    "validation": {
                      "errors": [
                        {
                          "detail": "DataStream 2 does not support the DataStream Buffer destination. Please provide details for any of the destinations supported by DataStream 2 in the `destinations` array. For more details, refer to the Destinations topic in the migration document: https://techdocs.akamai.com/datastream2/v2/reference/datastream-1-and-datastream-2",
                          "title": "DataStream Buffer not supported",
                          "type": "DATASTREAM_BUFFER_NOT_SUPPORTED"
                        }
                      ],
                      "notices": [
                        {
                          "detail": "Amazon S3 (Display name: S3Destination) path has been converted to the DataStream 2 dynamic variables format. Previous path: log/edgelogs/{year}/{month}/{day}. Updated path: log/edgelogs/{%Y}/{%m}/{%d}.",
                          "title": "Amazon S3 dynamic variables converted in path",
                          "type": "S3_DYNAMIC_PATH_CONVERSION"
                        },
                        {
                          "detail": "For the Amazon S3 destination, log filenames follow this pattern: <uploadFilePrefix>-'{'random-string'}'-'{'epoch-timestamp'}'-'{'random-string'}'-<uploadFileSuffix>. <uploadFilePrefix> defaults to `ak` and <uploadFileSuffix> defaults to `ds`. To customize these values, refer to the Destinations topic in the migration document: https://techdocs.akamai.com/datastream2/v2/reference/datastream-1-and-datastream-2",
                          "title": "Amazon S3 custom file name prefix and suffix support",
                          "type": "S3_FILENAME_PREFIX_AND_SUFFIX_SUPPORT"
                        }
                      ],
                      "warnings": [
                        {
                          "detail": "The Area (ID: 68), Zip (ID: 69), Latitude (ID: 70), and Longitude (ID: 71) data set fields in DataStream 1 are mapped to the City (ID: 2014) data set field in DataStream 2. For details, refer to the Data set parameters topic in the migration document: https://techdocs.akamai.com/datastream2/v2/reference/datastream-1-and-datastream-2",
                          "title": "Geo data fields support",
                          "type": "GEO_DATA_FIELDS_SUPPORT"
                        }
                      ]
                    },
                    "datasetFields": [
                      {
                        "datasetFieldId": 1011
                      },
                      {
                        "datasetFieldId": 1012
                      },
                      {
                        "datasetFieldId": 2014
                      }
                    ],
                    "destinations": [
                      {
                        "accessKey": "AKIA6DK7TDQLVGZ3TYP6",
                        "bucket": "media-datastream.akamai.com",
                        "destinationType": "S3",
                        "displayName": "S3Destination",
                        "path": "log/edgelogs/{%Y}/{%m}/{%d}",
                        "region": "ap-south-1",
                        "secretAccessKey": "1T2ll1H4dXWx5itGhpc7FlSbvvOvky1098nTtETc"
                      }
                    ],
                    "properties": [
                      {
                        "propertyId": 778899
                      }
                    ]
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Provides information that you need to specify when creating a stream configuration.",
                "type": "object",
                "required": [
                  "streams"
                ],
                "properties": {
                  "commonDestinations": {
                    "description": "The common destination configuration for all the stream configurations in the `streams` array. Currently you can configure one destination per stream as the destination to send logs. You can use the `useCommonDestination` parameter to get the payload with same destination for all streams in [Prepare migration payload](https://techdocs.akamai.com/datastream2/reference/prepare-payload) operation.",
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Azure Storage destination configuration in a stream. Note that DataStream 2 supports only streaming data to block objects. See [Azure Blob Storage](https://azure.microsoft.com/en-us/services/storage/blobs/#overview) in the Azure documentation.",
                          "title": "AZURE",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "accountName",
                            "accessKey",
                            "containerName",
                            "path"
                          ],
                          "properties": {
                            "accessKey": {
                              "description": "Either of the access keys for your Azure Storage account. See [View account access keys](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage?tabs=azure-portal) in the Azure documentation.",
                              "type": "string"
                            },
                            "accountName": {
                              "description": "Specifies the Azure Storage account name.",
                              "type": "string"
                            },
                            "containerName": {
                              "description": "Specifies the Azure Storage container name.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `AZURE` for this destination type.",
                              "type": "string",
                              "enum": [
                                "AZURE"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within the Azure Storage container where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long) in the Azure documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/Azure.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Amazon S3 destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and saves an `Akamai_access_verification_[TimeStamp].txt` format file in your Amazon S3 folder. You can only see this file if the validation process is successful, and you have access to the Amazon S3 bucket and folder that you're trying to send logs to.",
                          "title": "S3",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "accessKey",
                            "secretAccessKey",
                            "region",
                            "bucket",
                            "path"
                          ],
                          "properties": {
                            "accessKey": {
                              "description": "The access key identifier that you use to authenticate requests to your Amazon S3 account. See the [Understanding and getting your AWS credentials](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html) in the Amazon S3 documentation.",
                              "type": "string"
                            },
                            "bucket": {
                              "description": "The name of the Amazon S3 bucket. See [Working with buckets in AWS](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html) in the Amazon S3 documentation.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `S3` for this destination type.",
                              "type": "string",
                              "enum": [
                                "S3"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your Amazon S3 bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object keys](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html) in the Amazon S3 documentation for naming conventions.",
                              "type": "string"
                            },
                            "region": {
                              "description": "The AWS region where your Amazon S3 bucket resides. See [Regions, Availability Zones, and Local Zones in AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) in the Amazon S3 documentation.",
                              "type": "string"
                            },
                            "secretAccessKey": {
                              "description": "The secret access key identifier that you use to authenticate requests to your Amazon S3 account.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/S3.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides detailed information about the Datadog destination that you can use in your stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. You can see the `validate connector test` data only if the destination validates, and you can access the destination storage.",
                          "title": "DATADOG",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "authToken"
                          ],
                          "properties": {
                            "authToken": {
                              "description": "The API key for your Datadog account. See [View API keys in Datadog](https://docs.datadoghq.com/account_management/api-app-keys/#api-keys) in the Datadog documentation for details on how to create or fetch your Datadog API key.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "default": false,
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `false` by default.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `DATADOG` for this destination type.",
                              "type": "string",
                              "enum": [
                                "DATADOG"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Datadog v1 endpoint URL where you want to send and store logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Datadog](https://techdocs.akamai.com/datastream2/v2/docs/stream-datadog#akamaized-hostname-as-endpoint), and [View Datadog logs endpoint](https://docs.datadoghq.com/logs/log_collection/?tab=http#logging-endpoints) in the Datadog documentation.",
                              "type": "string"
                            },
                            "service": {
                              "description": "The name of the application or service generating the log events in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) and [Services List](https://docs.datadoghq.com/tracing/visualization/services_list/) in the Datadog documentation.",
                              "type": "string"
                            },
                            "source": {
                              "description": "The name of the source or the technology of the logs in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) in the Datadog documentation.",
                              "type": "string"
                            },
                            "tags": {
                              "description": "The tags you can use to filter and group metrics in your Datadog account. Enter a comma-delimited list for more than one tag. This field also supports `<key>:<value>` combinations. See [Getting Started with Tags](https://docs.datadoghq.com/getting_started/tagging/) in the Datadog documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/Datadog.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides detailed information about the Splunk destination that you can use in your stream. Note that DataStream 2 currently supports only endpoint URLs ending with `collector/raw`. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                          "title": "SPLUNK",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "eventCollectorToken"
                          ],
                          "properties": {
                            "caCert": {
                              "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification. If you set this member, the `mTlsEnabled` property replaces it in the response as `true`.",
                              "type": "string"
                            },
                            "clientCert": {
                              "description": "The digital certificate in the PEM format that authenticates requests to your destination. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                              "type": "string"
                            },
                            "clientKey": {
                              "description": "The private key in the non-encrypted PKCS8 format that authenticates with the back-end server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "default": true,
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true `by default.",
                              "type": "boolean"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see the additional options discussed in [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#additional-options).",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see the additional options discussed in [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#additional-options).",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `SPLUNK` for this destination type.",
                              "type": "string",
                              "enum": [
                                "SPLUNK"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The raw event Splunk URL where you want to store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Splunk](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "eventCollectorToken": {
                              "description": "The Event Collector token for your Splunk account. See [View usage of Event Collector token](https://docs.splunk.com/Documentation/Splunk/8.0.3/Data/UsetheHTTPEventCollector) in the Splunk documentation.",
                              "type": "string"
                            },
                            "tlsHostname": {
                              "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/Splunk.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides detailed information about the Google Cloud Storage destination you can use in a stream. When validating this destination, DataStream uses the private access key to create an `Akamai_access_verification_[TimeStamp].txt` object file in your GCS bucket. You can only see this file if the destination validates, and you have access to the Google Cloud Storage bucket where you are trying to send logs.",
                          "title": "GCS",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "bucket",
                            "projectId",
                            "serviceAccountName",
                            "privateKey"
                          ],
                          "properties": {
                            "bucket": {
                              "description": "The name of the storage bucket you created in your Google Cloud account. See [Bucket naming conventions](https://cloud.google.com/storage/docs/naming-buckets) in the Google Cloud documentation.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `GCS` for this destination type.",
                              "type": "string",
                              "enum": [
                                "GCS"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your Google Cloud bucket where you want to store logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object naming guidelines](https://cloud.google.com/storage/docs/naming-objects) in the Google Cloud documentations.",
                              "type": "string"
                            },
                            "privateKey": {
                              "description": "The contents of the JSON service account keys you generated and downloaded in your Google Cloud Storage account. See [Creating service account keys](https://cloud.google.com/iam/docs/creating-managing-service-account-keys#creating_service_account_keys) in the Google Cloud documentation.",
                              "type": "string"
                            },
                            "projectId": {
                              "description": "The unique ID of your Google Cloud project.",
                              "type": "string"
                            },
                            "serviceAccountName": {
                              "description": "The name of the service account with the `storage.object.create` permission or Storage Object Creator role.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/GCS.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides detailed information about the custom HTTPS endpoint you can use as a destination for a stream. This includes basic or no authentication, and whether the stream sends uncompressed or gzip-compressed log files. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                          "title": "HTTPS",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "authenticationType",
                            "endpoint"
                          ],
                          "properties": {
                            "authenticationType": {
                              "description": "Either `NONE` for no authentication, or `BASIC`. For basic authentication, provide the username and password you set in your custom HTTPS endpoint.",
                              "type": "string",
                              "enum": [
                                "BASIC",
                                "NONE"
                              ]
                            },
                            "caCert": {
                              "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification. If you set this member, the `mTlsEnabled` property replaces it in the response as `true`.",
                              "type": "string"
                            },
                            "clientCert": {
                              "description": "The PEM-formatted digital certificate you want to authenticate requests to your destination with. If you want to use mutual authentication, you need to provide both the client certificate and the client key. If you pass this member, the `mTlsEnabled` member replaces it in the response as `true`.",
                              "type": "string"
                            },
                            "clientKey": {
                              "description": "The private key in the non-encrypted PKCS8 format that authenticates with the back-end server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "default": false,
                              "description": "Enables gzip compression for a log file sent to a destination. This member's value is `false` by default.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header. For details, see the additional options discussed in [Stream logs to a HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#additional-options).",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see the additional options discussed in [Stream logs to a HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#additional-options).",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see the additional options discussed in [Stream logs to a HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#additional-options).",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `HTTPS` for this destination type.",
                              "type": "string",
                              "enum": [
                                "HTTPS"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "Enter the secure URL where you want to send and store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to a custom HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "password": {
                              "description": "Enter the password you set in your custom HTTPS endpoint for authentication.",
                              "type": "string"
                            },
                            "tlsHostname": {
                              "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                              "type": "string"
                            },
                            "userName": {
                              "description": "Enter the valid username you set in your custom HTTPS endpoint for authentication.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/HTTPS.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides detailed information about the Sumo Logic destination in a stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                          "title": "SUMO_LOGIC",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "collectorCode"
                          ],
                          "properties": {
                            "collectorCode": {
                              "description": "The unique HTTP collector code of your Sumo Logic endpoint.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "default": true,
                              "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                              "type": "boolean"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header. For details, see the additional options discussed in [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#additional-options).",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see the additional options discussed in [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#additional-options).",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see the additional options discussed in [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#additional-options).",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set this value to `SUMO_LOGIC` for this destination type.",
                              "type": "string",
                              "enum": [
                                "SUMO_LOGIC"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Sumo Logic HTTP Source URL where you want to send your logs. You should follow the `https://<SumoEndpoint>/receiver/v1/http` format and set the collector code in the `collectorCode` member. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#akamaized-hostname-as-endpoint), and [Upload Metrics to an HTTP Source](https://help.sumologic.com/docs/send-data/hosted-collectors/http-source/upload-metrics/) in the Sumo Logic documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/SumoLogic.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the Oracle Cloud Storage destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and tries to save an `Akamai_access_verification_[TimeStamp].txt file in your Oracle Cloud Storage folder. You can only see this file if the validation process is successful, and you have access to the Oracle Cloud Storage bucket and folder that you're trying to send logs to.",
                          "title": "ORACLE_CLOUD_STORAGE",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "accessKey",
                            "secretAccessKey",
                            "region",
                            "bucket",
                            "path",
                            "namespace"
                          ],
                          "properties": {
                            "accessKey": {
                              "description": "The access key identifier that you use to authenticate requests to your Oracle Cloud account. See [Managing user credentials](https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            },
                            "bucket": {
                              "description": "The name of the Oracle Cloud Storage bucket. See [Working with buckets](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingbuckets.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `ORACLE_CLOUD_STORAGE` for this destination type.",
                              "type": "string",
                              "enum": [
                                "ORACLE_CLOUD_STORAGE"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "The namespace of your Oracle Cloud Storage account. See [Understanding Object Storage namespaces](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/understandingnamespaces.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your Oracle Cloud Storage bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Managing Objects](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingobjects.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            },
                            "region": {
                              "description": "The Oracle Cloud Storage region where your bucket resides. See [Regions and availability domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm) in the Oracle Cloud Storage documentation.",
                              "type": "string"
                            },
                            "secretAccessKey": {
                              "description": "The secret access key identifier that you use to authenticate requests to your Oracle Cloud account.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/OCS.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides detailed information about the Loggly destination that you can use in your stream.",
                          "title": "LOGGLY",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "authToken"
                          ],
                          "properties": {
                            "authToken": {
                              "description": "The custom token for your Loggly endpoint. The token is the value from the bulk endpoint URL that comes after the `/bulk` segment, and before `tags`.",
                              "type": "string"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#additional-options) in the DataStream user guide.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#additional-options) in the DataStream user guide.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#additional-options) in the DataStream user guide.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `LOGGLY` for this destination type.",
                              "type": "string",
                              "enum": [
                                "LOGGLY"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Loggly bulk endpoint URL in the `https://hostname.loggly.com/bulk/` format. Set the endpoint token code in the `authToken` field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Loggly](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "tags": {
                              "description": "The tags you can use to segment and filter log events in Loggly. See [Tags](https://documentation.solarwinds.com/en/success_center/loggly/content/admin/tags.htm) in the Loggly documentation.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/Loggly.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides detailed information about the Elasticsearch destination that you can use in your stream.",
                          "title": "ELASTICSEARCH",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "userName",
                            "password",
                            "indexName"
                          ],
                          "properties": {
                            "caCert": {
                              "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification. If you pass this member, the `mTlsEnabled` member replaces it in the response as `true`.",
                              "type": "string"
                            },
                            "clientCert": {
                              "description": "The PEM-formatted digital certificate you want to authenticate requests to your destination with. If you want to use mutual authentication, you need to provide both the client certificate and the client key. If you pass this member, the `mTlsEnabled` member replaces it in the response as `true`.",
                              "type": "string"
                            },
                            "clientKey": {
                              "description": "The private key in the non-encrypted PKCS8 format you want to use to authenticate with the backend server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                              "type": "string"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#additional-options) in the DataStream user guide.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#section-additional-options) in the DataStream user guide.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#section-additional-options) in the DataStream user guide.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `ELASTICSEARCH` for this destination type.",
                              "type": "string",
                              "enum": [
                                "ELASTICSEARCH"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The Elasticsearch bulk endpoint URL in the `https://hostname.elastic-cloud.com:9243/_bulk/` format. Set `indexName` in the appropriate field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Elasticsearch](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            },
                            "indexName": {
                              "description": "The name of the index within an Elastic Cloud cluster where you want to store log files. This member supports [Dynamic index names](https://techdocs.akamai.com/datastream2/docs/stream-logs-to-elasticsearch#dynamic-index-name).",
                              "type": "string"
                            },
                            "password": {
                              "description": "The Elasticsearch basic access authentication password.",
                              "type": "string"
                            },
                            "tlsHostname": {
                              "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                              "type": "string"
                            },
                            "userName": {
                              "description": "The Elasticsearch basic access authentication username.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/Elasticsearch.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides detailed information about the New Relic destination that you can use in your stream.",
                          "title": "NEWRELIC",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "endpoint",
                            "authToken"
                          ],
                          "properties": {
                            "authToken": {
                              "description": "The unique personal API key that belongs to your New Relic account.",
                              "type": "string"
                            },
                            "contentType": {
                              "description": "The type of the resource passed in the request's custom header. For details, see [Additional options](https://techdocs.akamai.com/datastream2/docs/stream-newrelic#section-additional-options) in the DataStream user guide.",
                              "type": "string"
                            },
                            "customHeaderName": {
                              "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#additional-options) in the DataStream user guide.",
                              "type": "string"
                            },
                            "customHeaderValue": {
                              "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#additional-options) in the DataStream user guide.",
                              "type": "string"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `NEWRELIC` for this destination type.",
                              "type": "string",
                              "enum": [
                                "NEWRELIC"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The New Relic Log API endpoint URL in the `https://log-api.newrelic.com/log/v1/` format. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to New Relic](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#akamaized-hostname-as-endpoint).",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/NewRelic.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Provides details about the S3-compatible destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and saves an `Akamai_access_verification_[TimeStamp].txt` format file in your S3-compatible folder. You can only see this file if the validation process is successful, and you have access to the S3-compatible bucket and folder that you're trying to send logs to. Before configuring your stream to send logs to this destination, make sure you create a S3-compatible storage bucket, and store the access key together with the secret access key.",
                          "title": "S3_COMPATIBLE",
                          "type": "object",
                          "required": [
                            "destinationType",
                            "displayName",
                            "accessKey",
                            "secretAccessKey",
                            "bucket",
                            "region",
                            "endpoint"
                          ],
                          "properties": {
                            "accessKey": {
                              "description": "The access key identifier of the S3-compatible object storage bucket.",
                              "type": "string"
                            },
                            "bucket": {
                              "description": "The name of the S3-compatible object storage bucket.",
                              "type": "string"
                            },
                            "compressLogs": {
                              "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                              "type": "boolean"
                            },
                            "destinationType": {
                              "description": "The name of the destination type. Set it to `S3_COMPATIBLE` for this destination type.",
                              "type": "string",
                              "enum": [
                                "S3_COMPATIBLE"
                              ]
                            },
                            "displayName": {
                              "description": "The name of the destination.",
                              "type": "string"
                            },
                            "endpoint": {
                              "description": "The scheme-qualified host of your S3-compatible object storage bucket.",
                              "type": "string"
                            },
                            "path": {
                              "description": "The path to the folder within your S3-compatible object storage bucket where you want to store logs. This value allows [Dynamic time variables](https://techdocs.akamai.com/datastream2/docs/dynamic-time-variables).",
                              "type": "string"
                            },
                            "region": {
                              "description": "The physical storage location of your S3-compatible object storage bucket.",
                              "type": "string"
                            },
                            "secretAccessKey": {
                              "description": "The secret access key identifier of the S3-compatible object storage bucket.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/S3Compatible.yaml"
                          }
                        }
                      ]
                    }
                  },
                  "streams": {
                    "description": "The details you need to specify when creating a stream configuration.",
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Provides information that you need to specify when creating a stream configuration.",
                      "type": "object",
                      "required": [
                        "ds1StreamId",
                        "streamName",
                        "groupId",
                        "contractId",
                        "properties",
                        "datasetFields",
                        "deliveryConfiguration"
                      ],
                      "properties": {
                        "collectMidgress": {
                          "description": "Set to `true` to collect midgress traffic data within the Akamai platform, such as between two edge servers. Enable logging midgress data to get numeric values in the second place of the log line that indicate if the request was processed within the Akamai platform. When you [Get a stream](https://techdocs.akamai.com/datastream2/reference/get-stream) that logs midgress traffic, the response returns `collectMidgress` as `true` and lists the `isMidgress` data set field with other fields. See [Midgress traffic](https://techdocs.akamai.com/datastream2/v2/docs/data-set-parameters#midgress-traffic) for details. If this feature is not enabled on your account, contact the Akamai support team.",
                          "type": "boolean"
                        },
                        "contractId": {
                          "description": "Identifies the contract that has access to the product.",
                          "type": "string"
                        },
                        "datasetFields": {
                          "description": "Identifiers of the data set fields that you want to receive in logs. The order of the identifiers define how the value for these fields appear in the log lines. Identifiers of the data set fields within the template that you want to receive in logs. The order of the identifiers define how the value for these fields appear in the log lines. See [Data set parameters](https://techdocs.akamai.com/datastream2/reference/data-set-parameters-1) for the complete list of the fields you can choose in DataStream 2.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "datasetFieldId"
                            ],
                            "properties": {
                              "datasetFieldId": {
                                "description": "Identifies the field.",
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "deliveryConfiguration": {
                          "additionalProperties": false,
                          "description": "Provides information about the configuration of log lines, log file format, names of the log files sent to a destination, and delivery frequency for these files.",
                          "type": "object",
                          "required": [
                            "format",
                            "frequency"
                          ],
                          "properties": {
                            "fieldDelimiter": {
                              "description": "A delimiter that separates data set fields in the log lines, either `SPACE` or `TAB`. Set this only for the `STRUCTURED` log file `format`.",
                              "type": "string",
                              "enum": [
                                "SPACE",
                                "TAB"
                              ]
                            },
                            "format": {
                              "description": "The format in which you want to receive log files. `STRUCTURED` or `JSON` are the currently available formats. When the delimiter is present in the request, `STRUCTURED` is the mandatory format.",
                              "type": "string",
                              "enum": [
                                "STRUCTURED",
                                "JSON"
                              ]
                            },
                            "frequency": {
                              "additionalProperties": false,
                              "description": "The frequency of collecting logs from each uploader and sending these logs to a destination.",
                              "type": "object",
                              "required": [
                                "intervalInSeconds"
                              ],
                              "properties": {
                                "intervalInSeconds": {
                                  "description": "The time in seconds after which the system bundles log lines into a file and sends it to a destination. `30` or `60` are the possible values.",
                                  "type": "integer",
                                  "enum": [
                                    30,
                                    60
                                  ]
                                }
                              }
                            },
                            "uploadFilePrefix": {
                              "description": "The prefix of the log file that you want to send to a destination. It's a string of at most 200 characters. If unspecified, it defaults to `ak`. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables), but doesn't support the `.` character. See [S3 naming conventions](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html), [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long), and [Google Cloud Storage object naming conventions](https://cloud.google.com/storage/docs/naming-objects).",
                              "type": "string"
                            },
                            "uploadFileSuffix": {
                              "description": "The suffix of the log file that you want to send to a destination. It's a static string of at most 10 characters. If unspecified, it defaults to `ds`. This member doesn't support [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables), and the `.`, `/`, `%`, `?` characters. See [S3 naming conventions](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html), [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long), and [Google Cloud Storage object naming conventions](https://cloud.google.com/storage/docs/naming-objects).",
                              "maxLength": 10,
                              "type": "string"
                            }
                          }
                        },
                        "destinations": {
                          "description": "A collection of destination configurations for the stream. You can configure one destination per stream as the destination to send logs.",
                          "type": "array",
                          "items": {
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Provides details about the Azure Storage destination configuration in a stream. Note that DataStream 2 supports only streaming data to block objects. See [Azure Blob Storage](https://azure.microsoft.com/en-us/services/storage/blobs/#overview) in the Azure documentation.",
                                "title": "AZURE",
                                "type": "object",
                                "required": [
                                  "destinationType",
                                  "displayName",
                                  "accountName",
                                  "accessKey",
                                  "containerName",
                                  "path"
                                ],
                                "properties": {
                                  "accessKey": {
                                    "description": "Either of the access keys for your Azure Storage account. See [View account access keys](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage?tabs=azure-portal) in the Azure documentation.",
                                    "type": "string"
                                  },
                                  "accountName": {
                                    "description": "Specifies the Azure Storage account name.",
                                    "type": "string"
                                  },
                                  "containerName": {
                                    "description": "Specifies the Azure Storage container name.",
                                    "type": "string"
                                  },
                                  "destinationType": {
                                    "description": "The name of the destination type. Set this value to `AZURE` for this destination type.",
                                    "type": "string",
                                    "enum": [
                                      "AZURE"
                                    ]
                                  },
                                  "displayName": {
                                    "description": "The name of the destination.",
                                    "type": "string"
                                  },
                                  "path": {
                                    "description": "The path to the folder within the Azure Storage container where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long) in the Azure documentation.",
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/Azure.yaml"
                                }
                              },
                              {
                                "additionalProperties": false,
                                "description": "Provides details about the Amazon S3 destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and saves an `Akamai_access_verification_[TimeStamp].txt` format file in your Amazon S3 folder. You can only see this file if the validation process is successful, and you have access to the Amazon S3 bucket and folder that you're trying to send logs to.",
                                "title": "S3",
                                "type": "object",
                                "required": [
                                  "destinationType",
                                  "displayName",
                                  "accessKey",
                                  "secretAccessKey",
                                  "region",
                                  "bucket",
                                  "path"
                                ],
                                "properties": {
                                  "accessKey": {
                                    "description": "The access key identifier that you use to authenticate requests to your Amazon S3 account. See the [Understanding and getting your AWS credentials](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html) in the Amazon S3 documentation.",
                                    "type": "string"
                                  },
                                  "bucket": {
                                    "description": "The name of the Amazon S3 bucket. See [Working with buckets in AWS](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html) in the Amazon S3 documentation.",
                                    "type": "string"
                                  },
                                  "destinationType": {
                                    "description": "The name of the destination type. Set it to `S3` for this destination type.",
                                    "type": "string",
                                    "enum": [
                                      "S3"
                                    ]
                                  },
                                  "displayName": {
                                    "description": "The name of the destination.",
                                    "type": "string"
                                  },
                                  "path": {
                                    "description": "The path to the folder within your Amazon S3 bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object keys](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html) in the Amazon S3 documentation for naming conventions.",
                                    "type": "string"
                                  },
                                  "region": {
                                    "description": "The AWS region where your Amazon S3 bucket resides. See [Regions, Availability Zones, and Local Zones in AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) in the Amazon S3 documentation.",
                                    "type": "string"
                                  },
                                  "secretAccessKey": {
                                    "description": "The secret access key identifier that you use to authenticate requests to your Amazon S3 account.",
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/S3.yaml"
                                }
                              },
                              {
                                "additionalProperties": false,
                                "description": "Provides detailed information about the Datadog destination that you can use in your stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. You can see the `validate connector test` data only if the destination validates, and you can access the destination storage.",
                                "title": "DATADOG",
                                "type": "object",
                                "required": [
                                  "destinationType",
                                  "displayName",
                                  "endpoint",
                                  "authToken"
                                ],
                                "properties": {
                                  "authToken": {
                                    "description": "The API key for your Datadog account. See [View API keys in Datadog](https://docs.datadoghq.com/account_management/api-app-keys/#api-keys) in the Datadog documentation for details on how to create or fetch your Datadog API key.",
                                    "type": "string"
                                  },
                                  "compressLogs": {
                                    "default": false,
                                    "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `false` by default.",
                                    "type": "boolean"
                                  },
                                  "destinationType": {
                                    "description": "The name of the destination type. Set this value to `DATADOG` for this destination type.",
                                    "type": "string",
                                    "enum": [
                                      "DATADOG"
                                    ]
                                  },
                                  "displayName": {
                                    "description": "The name of the destination.",
                                    "type": "string"
                                  },
                                  "endpoint": {
                                    "description": "The Datadog v1 endpoint URL where you want to send and store logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Datadog](https://techdocs.akamai.com/datastream2/v2/docs/stream-datadog#akamaized-hostname-as-endpoint), and [View Datadog logs endpoint](https://docs.datadoghq.com/logs/log_collection/?tab=http#logging-endpoints) in the Datadog documentation.",
                                    "type": "string"
                                  },
                                  "service": {
                                    "description": "The name of the application or service generating the log events in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) and [Services List](https://docs.datadoghq.com/tracing/visualization/services_list/) in the Datadog documentation.",
                                    "type": "string"
                                  },
                                  "source": {
                                    "description": "The name of the source or the technology of the logs in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) in the Datadog documentation.",
                                    "type": "string"
                                  },
                                  "tags": {
                                    "description": "The tags you can use to filter and group metrics in your Datadog account. Enter a comma-delimited list for more than one tag. This field also supports `<key>:<value>` combinations. See [Getting Started with Tags](https://docs.datadoghq.com/getting_started/tagging/) in the Datadog documentation.",
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/Datadog.yaml"
                                }
                              },
                              {
                                "additionalProperties": false,
                                "description": "Provides detailed information about the Splunk destination that you can use in your stream. Note that DataStream 2 currently supports only endpoint URLs ending with `collector/raw`. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                                "title": "SPLUNK",
                                "type": "object",
                                "required": [
                                  "destinationType",
                                  "displayName",
                                  "endpoint",
                                  "eventCollectorToken"
                                ],
                                "properties": {
                                  "caCert": {
                                    "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification. If you set this member, the `mTlsEnabled` property replaces it in the response as `true`.",
                                    "type": "string"
                                  },
                                  "clientCert": {
                                    "description": "The digital certificate in the PEM format that authenticates requests to your destination. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                                    "type": "string"
                                  },
                                  "clientKey": {
                                    "description": "The private key in the non-encrypted PKCS8 format that authenticates with the back-end server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                                    "type": "string"
                                  },
                                  "compressLogs": {
                                    "default": true,
                                    "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true `by default.",
                                    "type": "boolean"
                                  },
                                  "customHeaderName": {
                                    "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see the additional options discussed in [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#additional-options).",
                                    "type": "string"
                                  },
                                  "customHeaderValue": {
                                    "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see the additional options discussed in [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#additional-options).",
                                    "type": "string"
                                  },
                                  "destinationType": {
                                    "description": "The name of the destination type. Set this value to `SPLUNK` for this destination type.",
                                    "type": "string",
                                    "enum": [
                                      "SPLUNK"
                                    ]
                                  },
                                  "displayName": {
                                    "description": "The name of the destination.",
                                    "type": "string"
                                  },
                                  "endpoint": {
                                    "description": "The raw event Splunk URL where you want to store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Splunk](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#akamaized-hostname-as-endpoint).",
                                    "type": "string"
                                  },
                                  "eventCollectorToken": {
                                    "description": "The Event Collector token for your Splunk account. See [View usage of Event Collector token](https://docs.splunk.com/Documentation/Splunk/8.0.3/Data/UsetheHTTPEventCollector) in the Splunk documentation.",
                                    "type": "string"
                                  },
                                  "tlsHostname": {
                                    "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/Splunk.yaml"
                                }
                              },
                              {
                                "additionalProperties": false,
                                "description": "Provides detailed information about the Google Cloud Storage destination you can use in a stream. When validating this destination, DataStream uses the private access key to create an `Akamai_access_verification_[TimeStamp].txt` object file in your GCS bucket. You can only see this file if the destination validates, and you have access to the Google Cloud Storage bucket where you are trying to send logs.",
                                "title": "GCS",
                                "type": "object",
                                "required": [
                                  "destinationType",
                                  "displayName",
                                  "bucket",
                                  "projectId",
                                  "serviceAccountName",
                                  "privateKey"
                                ],
                                "properties": {
                                  "bucket": {
                                    "description": "The name of the storage bucket you created in your Google Cloud account. See [Bucket naming conventions](https://cloud.google.com/storage/docs/naming-buckets) in the Google Cloud documentation.",
                                    "type": "string"
                                  },
                                  "destinationType": {
                                    "description": "The name of the destination type. Set it to `GCS` for this destination type.",
                                    "type": "string",
                                    "enum": [
                                      "GCS"
                                    ]
                                  },
                                  "displayName": {
                                    "description": "The name of the destination.",
                                    "type": "string"
                                  },
                                  "path": {
                                    "description": "The path to the folder within your Google Cloud bucket where you want to store logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object naming guidelines](https://cloud.google.com/storage/docs/naming-objects) in the Google Cloud documentations.",
                                    "type": "string"
                                  },
                                  "privateKey": {
                                    "description": "The contents of the JSON service account keys you generated and downloaded in your Google Cloud Storage account. See [Creating service account keys](https://cloud.google.com/iam/docs/creating-managing-service-account-keys#creating_service_account_keys) in the Google Cloud documentation.",
                                    "type": "string"
                                  },
                                  "projectId": {
                                    "description": "The unique ID of your Google Cloud project.",
                                    "type": "string"
                                  },
                                  "serviceAccountName": {
                                    "description": "The name of the service account with the `storage.object.create` permission or Storage Object Creator role.",
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/GCS.yaml"
                                }
                              },
                              {
                                "additionalProperties": false,
                                "description": "Provides detailed information about the custom HTTPS endpoint you can use as a destination for a stream. This includes basic or no authentication, and whether the stream sends uncompressed or gzip-compressed log files. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                                "title": "HTTPS",
                                "type": "object",
                                "required": [
                                  "destinationType",
                                  "displayName",
                                  "authenticationType",
                                  "endpoint"
                                ],
                                "properties": {
                                  "authenticationType": {
                                    "description": "Either `NONE` for no authentication, or `BASIC`. For basic authentication, provide the username and password you set in your custom HTTPS endpoint.",
                                    "type": "string",
                                    "enum": [
                                      "BASIC",
                                      "NONE"
                                    ]
                                  },
                                  "caCert": {
                                    "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification. If you set this member, the `mTlsEnabled` property replaces it in the response as `true`.",
                                    "type": "string"
                                  },
                                  "clientCert": {
                                    "description": "The PEM-formatted digital certificate you want to authenticate requests to your destination with. If you want to use mutual authentication, you need to provide both the client certificate and the client key. If you pass this member, the `mTlsEnabled` member replaces it in the response as `true`.",
                                    "type": "string"
                                  },
                                  "clientKey": {
                                    "description": "The private key in the non-encrypted PKCS8 format that authenticates with the back-end server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                                    "type": "string"
                                  },
                                  "compressLogs": {
                                    "default": false,
                                    "description": "Enables gzip compression for a log file sent to a destination. This member's value is `false` by default.",
                                    "type": "boolean"
                                  },
                                  "contentType": {
                                    "description": "The type of the resource passed in the request's custom header. For details, see the additional options discussed in [Stream logs to a HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#additional-options).",
                                    "type": "string"
                                  },
                                  "customHeaderName": {
                                    "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see the additional options discussed in [Stream logs to a HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#additional-options).",
                                    "type": "string"
                                  },
                                  "customHeaderValue": {
                                    "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see the additional options discussed in [Stream logs to a HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#additional-options).",
                                    "type": "string"
                                  },
                                  "destinationType": {
                                    "description": "The name of the destination type. Set it to `HTTPS` for this destination type.",
                                    "type": "string",
                                    "enum": [
                                      "HTTPS"
                                    ]
                                  },
                                  "displayName": {
                                    "description": "The name of the destination.",
                                    "type": "string"
                                  },
                                  "endpoint": {
                                    "description": "Enter the secure URL where you want to send and store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to a custom HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#akamaized-hostname-as-endpoint).",
                                    "type": "string"
                                  },
                                  "password": {
                                    "description": "Enter the password you set in your custom HTTPS endpoint for authentication.",
                                    "type": "string"
                                  },
                                  "tlsHostname": {
                                    "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                                    "type": "string"
                                  },
                                  "userName": {
                                    "description": "Enter the valid username you set in your custom HTTPS endpoint for authentication.",
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/HTTPS.yaml"
                                }
                              },
                              {
                                "additionalProperties": false,
                                "description": "Provides detailed information about the Sumo Logic destination in a stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                                "title": "SUMO_LOGIC",
                                "type": "object",
                                "required": [
                                  "destinationType",
                                  "displayName",
                                  "endpoint",
                                  "collectorCode"
                                ],
                                "properties": {
                                  "collectorCode": {
                                    "description": "The unique HTTP collector code of your Sumo Logic endpoint.",
                                    "type": "string"
                                  },
                                  "compressLogs": {
                                    "default": true,
                                    "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                                    "type": "boolean"
                                  },
                                  "contentType": {
                                    "description": "The type of the resource passed in the request's custom header. For details, see the additional options discussed in [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#additional-options).",
                                    "type": "string"
                                  },
                                  "customHeaderName": {
                                    "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see the additional options discussed in [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#additional-options).",
                                    "type": "string"
                                  },
                                  "customHeaderValue": {
                                    "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see the additional options discussed in [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#additional-options).",
                                    "type": "string"
                                  },
                                  "destinationType": {
                                    "description": "The name of the destination type. Set this value to `SUMO_LOGIC` for this destination type.",
                                    "type": "string",
                                    "enum": [
                                      "SUMO_LOGIC"
                                    ]
                                  },
                                  "displayName": {
                                    "description": "The name of the destination.",
                                    "type": "string"
                                  },
                                  "endpoint": {
                                    "description": "The Sumo Logic HTTP Source URL where you want to send your logs. You should follow the `https://<SumoEndpoint>/receiver/v1/http` format and set the collector code in the `collectorCode` member. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#akamaized-hostname-as-endpoint), and [Upload Metrics to an HTTP Source](https://help.sumologic.com/docs/send-data/hosted-collectors/http-source/upload-metrics/) in the Sumo Logic documentation.",
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/SumoLogic.yaml"
                                }
                              },
                              {
                                "additionalProperties": false,
                                "description": "Provides details about the Oracle Cloud Storage destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and tries to save an `Akamai_access_verification_[TimeStamp].txt file in your Oracle Cloud Storage folder. You can only see this file if the validation process is successful, and you have access to the Oracle Cloud Storage bucket and folder that you're trying to send logs to.",
                                "title": "ORACLE_CLOUD_STORAGE",
                                "type": "object",
                                "required": [
                                  "destinationType",
                                  "displayName",
                                  "accessKey",
                                  "secretAccessKey",
                                  "region",
                                  "bucket",
                                  "path",
                                  "namespace"
                                ],
                                "properties": {
                                  "accessKey": {
                                    "description": "The access key identifier that you use to authenticate requests to your Oracle Cloud account. See [Managing user credentials](https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm) in the Oracle Cloud Storage documentation.",
                                    "type": "string"
                                  },
                                  "bucket": {
                                    "description": "The name of the Oracle Cloud Storage bucket. See [Working with buckets](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingbuckets.htm) in the Oracle Cloud Storage documentation.",
                                    "type": "string"
                                  },
                                  "destinationType": {
                                    "description": "The name of the destination type. Set it to `ORACLE_CLOUD_STORAGE` for this destination type.",
                                    "type": "string",
                                    "enum": [
                                      "ORACLE_CLOUD_STORAGE"
                                    ]
                                  },
                                  "displayName": {
                                    "description": "The name of the destination.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "The namespace of your Oracle Cloud Storage account. See [Understanding Object Storage namespaces](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/understandingnamespaces.htm) in the Oracle Cloud Storage documentation.",
                                    "type": "string"
                                  },
                                  "path": {
                                    "description": "The path to the folder within your Oracle Cloud Storage bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Managing Objects](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingobjects.htm) in the Oracle Cloud Storage documentation.",
                                    "type": "string"
                                  },
                                  "region": {
                                    "description": "The Oracle Cloud Storage region where your bucket resides. See [Regions and availability domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm) in the Oracle Cloud Storage documentation.",
                                    "type": "string"
                                  },
                                  "secretAccessKey": {
                                    "description": "The secret access key identifier that you use to authenticate requests to your Oracle Cloud account.",
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/OCS.yaml"
                                }
                              },
                              {
                                "additionalProperties": false,
                                "description": "Provides detailed information about the Loggly destination that you can use in your stream.",
                                "title": "LOGGLY",
                                "type": "object",
                                "required": [
                                  "destinationType",
                                  "displayName",
                                  "endpoint",
                                  "authToken"
                                ],
                                "properties": {
                                  "authToken": {
                                    "description": "The custom token for your Loggly endpoint. The token is the value from the bulk endpoint URL that comes after the `/bulk` segment, and before `tags`.",
                                    "type": "string"
                                  },
                                  "contentType": {
                                    "description": "The type of the resource passed in the request's custom header. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#additional-options) in the DataStream user guide.",
                                    "type": "string"
                                  },
                                  "customHeaderName": {
                                    "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#additional-options) in the DataStream user guide.",
                                    "type": "string"
                                  },
                                  "customHeaderValue": {
                                    "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#additional-options) in the DataStream user guide.",
                                    "type": "string"
                                  },
                                  "destinationType": {
                                    "description": "The name of the destination type. Set it to `LOGGLY` for this destination type.",
                                    "type": "string",
                                    "enum": [
                                      "LOGGLY"
                                    ]
                                  },
                                  "displayName": {
                                    "description": "The name of the destination.",
                                    "type": "string"
                                  },
                                  "endpoint": {
                                    "description": "The Loggly bulk endpoint URL in the `https://hostname.loggly.com/bulk/` format. Set the endpoint token code in the `authToken` field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Loggly](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#akamaized-hostname-as-endpoint).",
                                    "type": "string"
                                  },
                                  "tags": {
                                    "description": "The tags you can use to segment and filter log events in Loggly. See [Tags](https://documentation.solarwinds.com/en/success_center/loggly/content/admin/tags.htm) in the Loggly documentation.",
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/Loggly.yaml"
                                }
                              },
                              {
                                "additionalProperties": false,
                                "description": "Provides detailed information about the Elasticsearch destination that you can use in your stream.",
                                "title": "ELASTICSEARCH",
                                "type": "object",
                                "required": [
                                  "destinationType",
                                  "displayName",
                                  "endpoint",
                                  "userName",
                                  "password",
                                  "indexName"
                                ],
                                "properties": {
                                  "caCert": {
                                    "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification. If you pass this member, the `mTlsEnabled` member replaces it in the response as `true`.",
                                    "type": "string"
                                  },
                                  "clientCert": {
                                    "description": "The PEM-formatted digital certificate you want to authenticate requests to your destination with. If you want to use mutual authentication, you need to provide both the client certificate and the client key. If you pass this member, the `mTlsEnabled` member replaces it in the response as `true`.",
                                    "type": "string"
                                  },
                                  "clientKey": {
                                    "description": "The private key in the non-encrypted PKCS8 format you want to use to authenticate with the backend server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                                    "type": "string"
                                  },
                                  "contentType": {
                                    "description": "The type of the resource passed in the request's custom header. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#additional-options) in the DataStream user guide.",
                                    "type": "string"
                                  },
                                  "customHeaderName": {
                                    "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#section-additional-options) in the DataStream user guide.",
                                    "type": "string"
                                  },
                                  "customHeaderValue": {
                                    "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#section-additional-options) in the DataStream user guide.",
                                    "type": "string"
                                  },
                                  "destinationType": {
                                    "description": "The name of the destination type. Set it to `ELASTICSEARCH` for this destination type.",
                                    "type": "string",
                                    "enum": [
                                      "ELASTICSEARCH"
                                    ]
                                  },
                                  "displayName": {
                                    "description": "The name of the destination.",
                                    "type": "string"
                                  },
                                  "endpoint": {
                                    "description": "The Elasticsearch bulk endpoint URL in the `https://hostname.elastic-cloud.com:9243/_bulk/` format. Set `indexName` in the appropriate field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Elasticsearch](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#akamaized-hostname-as-endpoint).",
                                    "type": "string"
                                  },
                                  "indexName": {
                                    "description": "The name of the index within an Elastic Cloud cluster where you want to store log files. This member supports [Dynamic index names](https://techdocs.akamai.com/datastream2/docs/stream-logs-to-elasticsearch#dynamic-index-name).",
                                    "type": "string"
                                  },
                                  "password": {
                                    "description": "The Elasticsearch basic access authentication password.",
                                    "type": "string"
                                  },
                                  "tlsHostname": {
                                    "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                                    "type": "string"
                                  },
                                  "userName": {
                                    "description": "The Elasticsearch basic access authentication username.",
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/Elasticsearch.yaml"
                                }
                              },
                              {
                                "additionalProperties": false,
                                "description": "Provides detailed information about the New Relic destination that you can use in your stream.",
                                "title": "NEWRELIC",
                                "type": "object",
                                "required": [
                                  "destinationType",
                                  "displayName",
                                  "endpoint",
                                  "authToken"
                                ],
                                "properties": {
                                  "authToken": {
                                    "description": "The unique personal API key that belongs to your New Relic account.",
                                    "type": "string"
                                  },
                                  "contentType": {
                                    "description": "The type of the resource passed in the request's custom header. For details, see [Additional options](https://techdocs.akamai.com/datastream2/docs/stream-newrelic#section-additional-options) in the DataStream user guide.",
                                    "type": "string"
                                  },
                                  "customHeaderName": {
                                    "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#additional-options) in the DataStream user guide.",
                                    "type": "string"
                                  },
                                  "customHeaderValue": {
                                    "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#additional-options) in the DataStream user guide.",
                                    "type": "string"
                                  },
                                  "destinationType": {
                                    "description": "The name of the destination type. Set it to `NEWRELIC` for this destination type.",
                                    "type": "string",
                                    "enum": [
                                      "NEWRELIC"
                                    ]
                                  },
                                  "displayName": {
                                    "description": "The name of the destination.",
                                    "type": "string"
                                  },
                                  "endpoint": {
                                    "description": "The New Relic Log API endpoint URL in the `https://log-api.newrelic.com/log/v1/` format. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to New Relic](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#akamaized-hostname-as-endpoint).",
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/NewRelic.yaml"
                                }
                              },
                              {
                                "additionalProperties": false,
                                "description": "Provides details about the S3-compatible destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and saves an `Akamai_access_verification_[TimeStamp].txt` format file in your S3-compatible folder. You can only see this file if the validation process is successful, and you have access to the S3-compatible bucket and folder that you're trying to send logs to. Before configuring your stream to send logs to this destination, make sure you create a S3-compatible storage bucket, and store the access key together with the secret access key.",
                                "title": "S3_COMPATIBLE",
                                "type": "object",
                                "required": [
                                  "destinationType",
                                  "displayName",
                                  "accessKey",
                                  "secretAccessKey",
                                  "bucket",
                                  "region",
                                  "endpoint"
                                ],
                                "properties": {
                                  "accessKey": {
                                    "description": "The access key identifier of the S3-compatible object storage bucket.",
                                    "type": "string"
                                  },
                                  "bucket": {
                                    "description": "The name of the S3-compatible object storage bucket.",
                                    "type": "string"
                                  },
                                  "compressLogs": {
                                    "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                                    "type": "boolean"
                                  },
                                  "destinationType": {
                                    "description": "The name of the destination type. Set it to `S3_COMPATIBLE` for this destination type.",
                                    "type": "string",
                                    "enum": [
                                      "S3_COMPATIBLE"
                                    ]
                                  },
                                  "displayName": {
                                    "description": "The name of the destination.",
                                    "type": "string"
                                  },
                                  "endpoint": {
                                    "description": "The scheme-qualified host of your S3-compatible object storage bucket.",
                                    "type": "string"
                                  },
                                  "path": {
                                    "description": "The path to the folder within your S3-compatible object storage bucket where you want to store logs. This value allows [Dynamic time variables](https://techdocs.akamai.com/datastream2/docs/dynamic-time-variables).",
                                    "type": "string"
                                  },
                                  "region": {
                                    "description": "The physical storage location of your S3-compatible object storage bucket.",
                                    "type": "string"
                                  },
                                  "secretAccessKey": {
                                    "description": "The secret access key identifier of the S3-compatible object storage bucket.",
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/S3Compatible.yaml"
                                }
                              }
                            ]
                          }
                        },
                        "ds1StreamId": {
                          "description": "Identifies the DataStream 1 stream.",
                          "type": "integer"
                        },
                        "groupId": {
                          "description": "Identifies the group that has access to the product and this stream configuration.",
                          "type": "integer"
                        },
                        "notificationEmails": {
                          "description": "Identifies the e-mail addresses where you want to send notifications about activations and deactivations of the stream. You can omit this member and activate or deactivate the stream without notifications.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "properties": {
                          "description": "Identifies the properties that belong to the same product and you want to monitor in the stream. Note that a stream can only log data for active properties. You can [activate a property](https://techdocs.akamai.com/property-mgr/reference/post-property-activations) in Property Manager.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "propertyId"
                            ],
                            "properties": {
                              "propertyId": {
                                "description": "The identifier of the property.",
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "streamName": {
                          "description": "The name of the stream.",
                          "type": "string"
                        },
                        "validations": {
                          "additionalProperties": false,
                          "description": "Contains details about warnings, errors, or notices determined while preparing migration payload for the stream. Fix all errors before making a request for bulk stream migration. Please pay attention to the warnings that inform about partially supported/unsupported features in DataStream 2.",
                          "readOnly": true,
                          "type": "object",
                          "required": [
                            "errors",
                            "notices",
                            "warnings"
                          ],
                          "properties": {
                            "errors": {
                              "description": "Lists stream validation errors.",
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "Contains feedback on validation.",
                                "type": "object",
                                "required": [
                                  "title",
                                  "type",
                                  "detail"
                                ],
                                "properties": {
                                  "detail": {
                                    "description": "The explanation of the error message.",
                                    "type": "string"
                                  },
                                  "title": {
                                    "description": "The error name.",
                                    "example": "Not Found",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The type of the error.",
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/Migvalidation-dto.yaml"
                                }
                              }
                            },
                            "message": {
                              "additionalProperties": false,
                              "description": "The information about number of errors and warnings found.",
                              "type": "object",
                              "required": [
                                "title",
                                "type",
                                "detail"
                              ],
                              "properties": {
                                "detail": {
                                  "description": "The explanation of the error message.",
                                  "type": "string"
                                },
                                "title": {
                                  "description": "The error name.",
                                  "example": "Not Found",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "The type of the error.",
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/Migvalidation-dto.yaml"
                              }
                            },
                            "notices": {
                              "description": "Lists notices.",
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "Contains feedback on validation.",
                                "type": "object",
                                "required": [
                                  "title",
                                  "type",
                                  "detail"
                                ],
                                "properties": {
                                  "detail": {
                                    "description": "The explanation of the error message.",
                                    "type": "string"
                                  },
                                  "title": {
                                    "description": "The error name.",
                                    "example": "Not Found",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The type of the error.",
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/Migvalidation-dto.yaml"
                                }
                              }
                            },
                            "warnings": {
                              "description": "Lists warnings.",
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "Contains feedback on validation.",
                                "type": "object",
                                "required": [
                                  "title",
                                  "type",
                                  "detail"
                                ],
                                "properties": {
                                  "detail": {
                                    "description": "The explanation of the error message.",
                                    "type": "string"
                                  },
                                  "title": {
                                    "description": "The error name.",
                                    "example": "Not Found",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The type of the error.",
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/Migvalidation-dto.yaml"
                                }
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/Migvalidations.yaml"
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/MigSaveStreamRequest.yaml"
                      }
                    }
                  },
                  "validations": {
                    "additionalProperties": false,
                    "description": "Contains details about warnings, errors, or notices determined while preparing migration payload. Fix all errors before making a request for bulk stream migration. Please pay attention to the warnings that inform about partially supported or not supported features in DataStream 2.",
                    "readOnly": true,
                    "type": "object",
                    "required": [
                      "errors",
                      "notices",
                      "warnings"
                    ],
                    "properties": {
                      "errors": {
                        "description": "Lists stream validation errors.",
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "Contains feedback on validation.",
                          "type": "object",
                          "required": [
                            "title",
                            "type",
                            "detail"
                          ],
                          "properties": {
                            "detail": {
                              "description": "The explanation of the error message.",
                              "type": "string"
                            },
                            "title": {
                              "description": "The error name.",
                              "example": "Not Found",
                              "type": "string"
                            },
                            "type": {
                              "description": "The type of the error.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/Migvalidation-dto.yaml"
                          }
                        }
                      },
                      "message": {
                        "additionalProperties": false,
                        "description": "The information about number of errors and warnings found.",
                        "type": "object",
                        "required": [
                          "title",
                          "type",
                          "detail"
                        ],
                        "properties": {
                          "detail": {
                            "description": "The explanation of the error message.",
                            "type": "string"
                          },
                          "title": {
                            "description": "The error name.",
                            "example": "Not Found",
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of the error.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/Migvalidation-dto.yaml"
                        }
                      },
                      "notices": {
                        "description": "Lists notices.",
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "Contains feedback on validation.",
                          "type": "object",
                          "required": [
                            "title",
                            "type",
                            "detail"
                          ],
                          "properties": {
                            "detail": {
                              "description": "The explanation of the error message.",
                              "type": "string"
                            },
                            "title": {
                              "description": "The error name.",
                              "example": "Not Found",
                              "type": "string"
                            },
                            "type": {
                              "description": "The type of the error.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/Migvalidation-dto.yaml"
                          }
                        }
                      },
                      "warnings": {
                        "description": "Lists warnings.",
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "Contains feedback on validation.",
                          "type": "object",
                          "required": [
                            "title",
                            "type",
                            "detail"
                          ],
                          "properties": {
                            "detail": {
                              "description": "The explanation of the error message.",
                              "type": "string"
                            },
                            "title": {
                              "description": "The error name.",
                              "example": "Not Found",
                              "type": "string"
                            },
                            "type": {
                              "description": "The type of the error.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/Migvalidation-dto.yaml"
                          }
                        }
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/Migvalidations.yaml"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/MigBulkStreamRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The response confirms the streams have been migrated and lists stream details.",
            "content": {
              "application/json": {
                "example": {
                  "streams": [
                    {
                      "contractId": "K-0N7RAK7",
                      "createdBy": "tyamada",
                      "createdDate": "2022-01-10T09:43:19Z",
                      "ds1StreamId": 1256,
                      "groupId": 21484,
                      "latestVersion": 1,
                      "modifiedBy": "szhang",
                      "modifiedDate": "2022-01-10T09:43:19Z",
                      "productId": "Download_Delivery",
                      "streamId": 7050,
                      "streamName": "Ds1_Stream_1",
                      "streamStatus": "ACTIVATING",
                      "streamVersion": 1,
                      "notificationEmails": [
                        "useremail1@domain.com",
                        "useremail2@domain.com"
                      ],
                      "deliveryConfiguration": {
                        "fieldDelimiter": "SPACE",
                        "format": "STRUCTURED",
                        "frequency": {
                          "intervalInSeconds": 30
                        }
                      },
                      "datasetFields": [
                        {
                          "datasetFieldId": 1000,
                          "datasetFieldJsonKey": "cp",
                          "datasetFieldName": "CP code"
                        },
                        {
                          "datasetFieldId": 1002,
                          "datasetFieldJsonKey": "reqId",
                          "datasetFieldName": "Request ID"
                        },
                        {
                          "datasetFieldId": 1005,
                          "datasetFieldJsonKey": "bytes",
                          "datasetFieldName": "Bytes"
                        }
                      ],
                      "destinations": [
                        {
                          "compressLogs": true,
                          "destinationType": "SPLUNK",
                          "displayName": "Splunk",
                          "endpoint": "https://splunk.cloudapp.com:8088/services/collector/raw"
                        }
                      ],
                      "properties": [
                        {
                          "propertyId": 349772,
                          "propertyName": "example.com"
                        },
                        {
                          "propertyId": 349770,
                          "propertyName": "example.ak.com"
                        }
                      ]
                    },
                    {
                      "contractId": "K-0N7RAK7",
                      "createdBy": "hgildong",
                      "createdDate": "2022-01-10T09:43:19Z",
                      "ds1StreamId": 6679,
                      "groupId": 21484,
                      "latestVersion": 1,
                      "modifiedBy": "mrossi",
                      "modifiedDate": "2022-01-10T09:43:19Z",
                      "productId": "Adaptive_Media_Delivery",
                      "streamId": 7051,
                      "streamName": "Ds1_Stream_mig_2",
                      "streamStatus": "ACTIVATING",
                      "streamVersion": 1,
                      "notificationEmails": [
                        "logged_in_user@domain.com"
                      ],
                      "deliveryConfiguration": {
                        "format": "JSON",
                        "uploadFilePrefix": "ak",
                        "uploadFileSuffix": "ds",
                        "frequency": {
                          "intervalInSeconds": 30
                        }
                      },
                      "datasetFields": [
                        {
                          "datasetFieldId": 1011,
                          "datasetFieldJsonKey": "reqHost",
                          "datasetFieldName": "Request host"
                        },
                        {
                          "datasetFieldId": 1012,
                          "datasetFieldJsonKey": "reqMethod",
                          "datasetFieldName": "Request method"
                        },
                        {
                          "datasetFieldId": 2014,
                          "datasetFieldJsonKey": "city",
                          "datasetFieldName": "City"
                        }
                      ],
                      "destinations": [
                        {
                          "bucket": "media-datastream.akamai.com",
                          "compressLogs": true,
                          "destinationType": "S3",
                          "displayName": "S3Destination",
                          "path": "log/edgelogs/{%Y}/{%m}/{%d}",
                          "region": "ap-south-1"
                        }
                      ],
                      "properties": [
                        {
                          "propertyId": 778899,
                          "propertyName": "demo.com"
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Provides detailed information about the latest configuration version of a data stream.",
                  "type": "object",
                  "required": [
                    "streams"
                  ],
                  "properties": {
                    "streams": {
                      "description": "Details of the latest configuration version of a stream including properties, data set fields, destination setup, activation status, and log format.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Provides detailed information about the latest configuration version of a stream. It also provides descriptions of the data set fields selected in the version, the properties they collect logs for, the configuration details for the destination where they deliver logs, and the structure of these log lines. It also informs whether this version is active.",
                        "type": "object",
                        "required": [
                          "ds1StreamId",
                          "streamId",
                          "streamName",
                          "streamVersion",
                          "latestVersion",
                          "streamStatus",
                          "groupId",
                          "contractId",
                          "createdBy",
                          "createdDate",
                          "modifiedBy",
                          "modifiedDate",
                          "productId",
                          "properties",
                          "datasets",
                          "deliveryConfiguration"
                        ],
                        "properties": {
                          "collectMidgress": {
                            "description": "Indicates the option to capture the midgress traffic within the Akamai platform, such as between two edge servers.",
                            "type": "boolean"
                          },
                          "contractId": {
                            "description": "Identifies the contract that you created the stream for.",
                            "type": "string"
                          },
                          "createdBy": {
                            "description": "The username who created the stream.",
                            "type": "string"
                          },
                          "createdDate": {
                            "description": "An ISO 8601 timestamp marking when the stream was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "datasets": {
                            "description": "A list of data set fields selected that the stream monitors in logs. The order of the identifiers define how the value for these fields appear in the log lines.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "datasetFieldId",
                                "datasetFieldName",
                                "datasetFieldJsonKey"
                              ],
                              "properties": {
                                "datasetFieldId": {
                                  "description": "Identifies the field.",
                                  "type": "integer"
                                },
                                "datasetFieldJsonKey": {
                                  "description": "Specifies the JSON key for the field in a log line. You can get this value only when you run the [List data set fields](https://techdocs.akamai.com/datastream2/reference/get-dataset-fields) or [Get a stream](https://techdocs.akamai.com/datastream2/reference/get-stream) operation for a stream in the `JSON` format.",
                                  "type": "string"
                                },
                                "datasetFieldName": {
                                  "description": "A name of the data set field.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "deliveryConfiguration": {
                            "additionalProperties": false,
                            "description": "The configuration of log lines, names of the files sent to a destination, and delivery frequency for these files.",
                            "type": "object",
                            "properties": {
                              "fieldDelimiter": {
                                "description": "A delimiter that separates data set fields in the log lines, either `SPACE` or `TAB`. Set this only for the `STRUCTURED` log file `format`.",
                                "type": "string",
                                "enum": [
                                  "SPACE",
                                  "TAB"
                                ]
                              },
                              "format": {
                                "description": "The format in which you want to receive log files. `STRUCTURED` or `JSON` are the currently available formats.",
                                "type": "string",
                                "enum": [
                                  "STRUCTURED",
                                  "JSON"
                                ]
                              },
                              "frequency": {
                                "additionalProperties": false,
                                "description": "The frequency of collecting logs from each uploader and sending these logs to a destination.",
                                "type": "object",
                                "properties": {
                                  "intervalInSeconds": {
                                    "description": "The time in seconds after which the system bundles log lines into a file and sends it to a destination. These are possible values: `30` or `60`.",
                                    "type": "integer",
                                    "enum": [
                                      30,
                                      60
                                    ]
                                  }
                                }
                              },
                              "uploadFilePrefix": {
                                "description": "The prefix of the log file that you want to send to a destination. It's a string of at most 200 characters. If unspecified, it defaults to `ak`.",
                                "type": "string"
                              },
                              "uploadFileSuffix": {
                                "description": "The suffix of the log file that you want to send to a destination. It's a static string of at most 10 characters. If unspecified, it defaults to `ds`.",
                                "type": "string"
                              }
                            }
                          },
                          "destinations": {
                            "description": "Provides detailed information about the destination's configuration in the stream. Currently you can configure one destination per stream as the destination to send logs.",
                            "type": "array",
                            "items": {
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "Provides details about the Azure Storage destination configuration in a stream.",
                                  "title": "AZURE",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "compressLogs",
                                    "displayName",
                                    "path",
                                    "accountName",
                                    "containerName"
                                  ],
                                  "properties": {
                                    "accountName": {
                                      "description": "Specifies the Azure Storage account name.",
                                      "type": "string"
                                    },
                                    "compressLogs": {
                                      "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                                      "type": "boolean"
                                    },
                                    "containerName": {
                                      "description": "Specifies the Azure Storage container name.",
                                      "type": "string"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set this value to `AZURE` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "AZURE"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "The path to the folder within the Azure Storage container where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long) in the Azure documentation.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/AzureSavedDestination.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Provides details about the Amazon S3 destination in a stream.",
                                  "title": "S3",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "compressLogs",
                                    "displayName",
                                    "path",
                                    "bucket",
                                    "region"
                                  ],
                                  "properties": {
                                    "bucket": {
                                      "description": "The name of the Amazon S3 bucket. See [Working with buckets in AWS](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html) in the Amazon S3 documentation.",
                                      "type": "string"
                                    },
                                    "compressLogs": {
                                      "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                                      "type": "boolean"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set it to `S3` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "S3"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "The path to the folder within your Amazon S3 bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object keys](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html) in the Amazon S3 documentation for naming conventions.",
                                      "type": "string"
                                    },
                                    "region": {
                                      "description": "The AWS region where your Amazon S3 bucket resides. See [Regions, Availability Zones, and Local Zones in AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) in the Amazon S3 documentation.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/S3SavedDestination.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Provides details about the Datadog destination configuration in a stream.",
                                  "title": "DATADOG",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "displayName",
                                    "endpoint",
                                    "compressLogs"
                                  ],
                                  "properties": {
                                    "compressLogs": {
                                      "default": false,
                                      "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `false` by default.",
                                      "type": "boolean"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set this value to `DATADOG` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "DATADOG"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "endpoint": {
                                      "description": "The Datadog v1 endpoint URL where you want to send and store logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Datadog](https://techdocs.akamai.com/datastream2/v2/docs/stream-datadog#akamaized-hostname-as-endpoint), and [View Datadog logs endpoint](https://docs.datadoghq.com/logs/log_collection/?tab=http#logging-endpoints) in the Datadog documentation.",
                                      "type": "string"
                                    },
                                    "service": {
                                      "description": "The name of the application or service generating the log events in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) and [Services List](https://docs.datadoghq.com/tracing/visualization/services_list/) in the Datadog documentation.",
                                      "type": "string"
                                    },
                                    "source": {
                                      "description": "The name of the source or the technology of the logs in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) in the Datadog documentation.",
                                      "type": "string"
                                    },
                                    "tags": {
                                      "description": "The tags you can use to filter and group metrics in your Datadog account. Enter a comma-delimited list for more than one tag. This field also supports `<key>:<value>` combinations. See [Getting Started with Tags](https://docs.datadoghq.com/getting_started/tagging/) in the Datadog documentation.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/DatadogSavedDestination.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Provides detailed information about the Splunk destination that you can use in your stream. Note that DataStream 2 currently supports only endpoint URLs ending with `collector/raw`. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                                  "title": "SPLUNK",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "displayName",
                                    "endpoint",
                                    "compressLogs"
                                  ],
                                  "properties": {
                                    "compressLogs": {
                                      "default": true,
                                      "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                                      "type": "boolean"
                                    },
                                    "customHeaderName": {
                                      "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                                      "type": "string"
                                    },
                                    "customHeaderValue": {
                                      "description": "The custom header's contents passed with the request that contains information about the client connection.",
                                      "type": "string"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set this value to `SPLUNK` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "SPLUNK"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "endpoint": {
                                      "description": "The raw event Splunk URL where you want to store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Splunk](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#akamaized-hostname-as-endpoint).",
                                      "type": "string"
                                    },
                                    "mTlsEnabled": {
                                      "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                                      "type": "boolean"
                                    },
                                    "tlsHostname": {
                                      "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/SplunkSavedDestination.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Provides details about the Google Cloud Storage destination in a stream.",
                                  "title": "GCS",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "displayName",
                                    "bucket",
                                    "projectId",
                                    "serviceAccountName",
                                    "compressLogs"
                                  ],
                                  "properties": {
                                    "bucket": {
                                      "description": "The name of the storage bucket you created in your Google Cloud account. See [Bucket naming conventions](https://cloud.google.com/storage/docs/naming-buckets) in the Google Cloud documentation.",
                                      "type": "string"
                                    },
                                    "compressLogs": {
                                      "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                                      "type": "boolean"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set it to `GCS` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "GCS"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "The path to the folder within your Google Cloud bucket where you want to store logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object naming guidelines](https://cloud.google.com/storage/docs/naming-objects) in the Google Cloud documentation.",
                                      "type": "string"
                                    },
                                    "projectId": {
                                      "description": "The unique ID of your Google Cloud project.",
                                      "type": "string"
                                    },
                                    "serviceAccountName": {
                                      "description": "The name of the service account with the `storage.object.create` permission or Storage Object Creator role.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/GCSSavedDestination.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Provides details about the custom HTTPS endpoint destination in a stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                                  "title": "HTTPS",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "displayName",
                                    "authenticationType",
                                    "endpoint",
                                    "compressLogs"
                                  ],
                                  "properties": {
                                    "authenticationType": {
                                      "description": "Either `NONE` for no authentication, or `BASIC`. For basic authentication, provide the username and password you set in your custom HTTPS endpoint.",
                                      "type": "string",
                                      "enum": [
                                        "BASIC",
                                        "NONE"
                                      ]
                                    },
                                    "compressLogs": {
                                      "default": false,
                                      "description": "Enables gzip compression for a log file sent to a destination. This member's value is `false` by default.",
                                      "type": "boolean"
                                    },
                                    "contentType": {
                                      "description": "The type of the resource passed in the request's custom header.",
                                      "type": "string"
                                    },
                                    "customHeaderName": {
                                      "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                                      "type": "string"
                                    },
                                    "customHeaderValue": {
                                      "description": "The custom header's contents passed with the request that contains information about the client connection.",
                                      "type": "string"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set it to `HTTPS` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "HTTPS"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "endpoint": {
                                      "description": "Enter the secure URL where you want to send and store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to a custom HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#akamaized-hostname-as-endpoint).",
                                      "type": "string"
                                    },
                                    "mTlsEnabled": {
                                      "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                                      "type": "boolean"
                                    },
                                    "tlsHostname": {
                                      "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/HTTPSSavedDestination.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Provides details about the Oracle Cloud Storage destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and tries to save an `akamai_write_test_2147483647.txt` file in your Oracle Cloud Storage folder. You can only see this file if the validation process is successful, and you have access to the Oracle Cloud Storage bucket and folder that you're trying to send logs to.",
                                  "title": "ORACLE_CLOUD_STORAGE",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "displayName",
                                    "region",
                                    "bucket",
                                    "path",
                                    "namespace",
                                    "compressLogs"
                                  ],
                                  "properties": {
                                    "bucket": {
                                      "description": "The name of the Oracle Cloud Storage bucket. See [Working with buckets](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingbuckets.htm) in the Oracle Cloud Storage documentation.",
                                      "type": "string"
                                    },
                                    "compressLogs": {
                                      "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                                      "type": "boolean"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set it to `ORACLE_CLOUD_STORAGE` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "ORACLE_CLOUD_STORAGE"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "description": "The namespace of your Oracle Cloud Storage account. See [Understanding Object Storage namespaces](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/understandingnamespaces.htm) in the Oracle Cloud Storage documentation.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "The path to the folder within your Oracle Cloud Storage bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Managing Objects](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingobjects.htm) in the Oracle Cloud Storage documentation.",
                                      "type": "string"
                                    },
                                    "region": {
                                      "description": "The Oracle Cloud Storage region where your bucket resides. See [Regions and availability domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm) in the Oracle Cloud Storage documentation.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/OCSSavedDestination.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Provides detailed information about the Sumo Logic destination that you can use in your stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                                  "title": "SUMO_LOGIC",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "displayName",
                                    "endpoint",
                                    "compressLogs"
                                  ],
                                  "properties": {
                                    "collectorCode": {
                                      "description": "The unique HTTP collector code of your Sumo Logic endpoint.",
                                      "type": "string"
                                    },
                                    "compressLogs": {
                                      "default": true,
                                      "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                                      "type": "boolean"
                                    },
                                    "contentType": {
                                      "description": "The type of the resource passed in the custom header of the request.",
                                      "type": "string"
                                    },
                                    "customHeaderName": {
                                      "description": "A human-readable name for the custom header of the request that can contain only alphanumeric, dash, and underscore characters. See [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic) for details.",
                                      "type": "string"
                                    },
                                    "customHeaderValue": {
                                      "description": "The contents of the custom header passed with the request that contain information about the client connection. See [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic) for details.",
                                      "type": "string"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set this value to `SUMO_LOGIC` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "SUMO_LOGIC"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "endpoint": {
                                      "description": "The Sumo Logic HTTP Source URL where you want to send your logs. You should follow the `https://<SumoEndpoint>/receiver/v1/http` format and set the collector code in the `collectorCode` member.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/SumoLogicSavedDestination.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Provides details about the loggly endpoint destination in a stream.",
                                  "title": "LOGGLY",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "displayName",
                                    "endpoint",
                                    "compressLogs"
                                  ],
                                  "properties": {
                                    "compressLogs": {
                                      "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                                      "type": "boolean"
                                    },
                                    "contentType": {
                                      "description": "The type of the resource passed in the request's custom header.",
                                      "type": "string"
                                    },
                                    "customHeaderName": {
                                      "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                                      "type": "string"
                                    },
                                    "customHeaderValue": {
                                      "description": "The custom header's contents passed with the request that contains information about the client connection.",
                                      "type": "string"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set it to `LOGGLY` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "LOGGLY"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "endpoint": {
                                      "description": "The Loggly bulk endpoint URL in the `https://hostname.loggly.com/bulk/` format. Set the endpoint code in the `authToken` field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Loggly](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#akamaized-hostname-as-endpoint).",
                                      "type": "string"
                                    },
                                    "tags": {
                                      "description": "The tags you can use to segment and filter log events in Loggly. See [Tags](https://documentation.solarwinds.com/en/success_center/loggly/content/admin/tags.htm) in the Loggly documentation.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/LogglySavedDestination.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Provides details about the Elasticsearch endpoint destination in a stream.",
                                  "title": "ELASTICSEARCH",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "displayName",
                                    "endpoint",
                                    "compressLogs"
                                  ],
                                  "properties": {
                                    "compressLogs": {
                                      "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                                      "type": "boolean"
                                    },
                                    "contentType": {
                                      "description": "The type of the resource passed in the request's custom header.",
                                      "type": "string"
                                    },
                                    "customHeaderName": {
                                      "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                                      "type": "string"
                                    },
                                    "customHeaderValue": {
                                      "description": "The custom header's contents passed with the request that contains information about the client connection.",
                                      "type": "string"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set it to `ELASTICSEARCH` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "ELASTICSEARCH"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "endpoint": {
                                      "description": "The Elasticsearch bulk endpoint URL in the `https://hostname.elastic-cloud.com:9243/_bulk/` format. Set `indexName` in the appropriate field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Elasticsearch][Stream logs to Elasticsearch](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#section-akamaized-hostname-as-endpoint).",
                                      "type": "string"
                                    },
                                    "mTlsEnabled": {
                                      "description": "Identifies if the stream has the mTLS authentication enabled. The response returns this field only if you set the `clientCert` and `clientKey` members while creating or editing a stream.",
                                      "type": "boolean"
                                    },
                                    "tlsHostname": {
                                      "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/ElasticsearchSavedDestination.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Provides details about the New Relic endpoint destination in a stream.",
                                  "title": "NEWRELIC",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "displayName",
                                    "endpoint",
                                    "compressLogs"
                                  ],
                                  "properties": {
                                    "compressLogs": {
                                      "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                                      "type": "boolean"
                                    },
                                    "contentType": {
                                      "description": "The type of the resource passed in the request's custom header.",
                                      "type": "string"
                                    },
                                    "customHeaderName": {
                                      "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters.",
                                      "type": "string"
                                    },
                                    "customHeaderValue": {
                                      "description": "The custom header's contents passed with the request that contains information about the client connection.",
                                      "type": "string"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set it to `NEWRELIC` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "NEWRELIC"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "endpoint": {
                                      "description": "The New Relic Log API endpoint URL in the `https://log-api.newrelic.com/log/v1/` format. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to New Relic](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#akamaized-hostname-as-endpoint).",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/NewRelicSavedDestination.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Provides details about the S3-compatible destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and saves an `Akamai_access_verification_[TimeStamp].txt` format file in your S3-compatible folder. You can only see this file if the validation process is successful, and you have access to the S3-compatible bucket and folder that you're trying to send logs to. Before configuring your stream to send logs to this destination, make sure you create a S3-compatible storage bucket, and store the access key together with the secret access key.",
                                  "title": "S3_COMPATIBLE",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "displayName",
                                    "bucket",
                                    "region",
                                    "endpoint"
                                  ],
                                  "properties": {
                                    "bucket": {
                                      "description": "The name of the S3-compatible object storage bucket.",
                                      "type": "string"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set it to `S3_COMPATIBLE` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "S3_COMPATIBLE"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "endpoint": {
                                      "description": "The scheme-qualified host of your S3-compatible object storage bucket.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "The path to the folder within your S3-compatible object storage bucket where you want to store logs. This value allows [Dynamic time variables](https://techdocs.akamai.com/datastream2/docs/dynamic-time-variables).",
                                      "type": "string"
                                    },
                                    "region": {
                                      "description": "The physical storage location of your S3-compatible object storage bucket.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/S3CompatibleSavedDestination.yaml"
                                  }
                                }
                              ]
                            }
                          },
                          "ds1StreamId": {
                            "description": "Identifies the DataStream 1 stream.",
                            "type": "integer"
                          },
                          "groupId": {
                            "description": "Identifies the group that has access to the product and that you created the stream configuration for. When editing a stream, the value you pass is ignored as you can't change the group for an existing stream.",
                            "type": "integer"
                          },
                          "latestVersion": {
                            "description": "Identifies the latest configuration version of the stream.",
                            "type": "integer"
                          },
                          "modifiedBy": {
                            "description": "The username who modified the stream.",
                            "type": "string"
                          },
                          "modifiedDate": {
                            "description": "An ISO 8601 timestamp marking when the stream was modified.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "notificationEmails": {
                            "description": "Identifies the email addresses where you want to send notifications about activations and deactivations of the stream. You can omit this member and activate or deactivate the stream without notifications.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "productId": {
                            "description": "The ID of the product that you created stream for.",
                            "type": "string"
                          },
                          "properties": {
                            "description": "Identifies the properties that you monitor in the stream.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "propertyId",
                                "propertyName"
                              ],
                              "properties": {
                                "propertyId": {
                                  "description": "The identifier of the property.",
                                  "type": "integer"
                                },
                                "propertyName": {
                                  "description": "The descriptive label for the property.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "streamId": {
                            "description": "Identifies the stream.",
                            "type": "integer"
                          },
                          "streamName": {
                            "description": "The name of the stream.",
                            "type": "string"
                          },
                          "streamStatus": {
                            "description": "The activation status of the stream configuration version. The possible values are: `ACTIVATED`, `DEACTIVATED`, `ACTIVATING`, `DEACTIVATING`, or `INACTIVE`. See the [Activate a stream](https://techdocs.akamai.com/datastream2/reference/post-stream-activate) and [Deactivate a stream](https://techdocs.akamai.com/datastream2/reference/post-stream-activate) operations.",
                            "type": "string",
                            "enum": [
                              "DEACTIVATED",
                              "ACTIVATING",
                              "ACTIVATED",
                              "DEACTIVATING",
                              "INACTIVE"
                            ]
                          },
                          "streamVersion": {
                            "description": "Identifies the configuration version of the stream.",
                            "type": "integer"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/MigStreamDetail.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/MigBulkStreamResponse.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The response lists validation errors.",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "4b20ad04-4953-4bf0-9226-ce4142f9c2d4",
                  "status": 400,
                  "title": "Bad Request",
                  "type": "bad-request",
                  "streams": [
                    {
                      "ds1StreamId": 155717,
                      "streamName": "Prod_AMD",
                      "errors": [
                        {
                          "detail": "Stream with name Prod_AMD already exists.",
                          "illegalParameter": "streamName",
                          "illegalValue": "Prod_AMD",
                          "title": "Bad Request",
                          "type": "bad-request"
                        }
                      ]
                    },
                    {
                      "ds1StreamId": 16788,
                      "streamName": "Stream_DD",
                      "errors": [
                        {
                          "detail": "The field delimiter field for the STRUCTURED log format cannot be blank.",
                          "illegalParameter": "deliveryConfiguration.fieldDelimiter",
                          "illegalValue": null,
                          "title": "Bad Request",
                          "type": "bad-request"
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Provides information on validation failures while creating streams.",
                  "type": "object",
                  "required": [
                    "title",
                    "type",
                    "instance",
                    "status",
                    "streams"
                  ],
                  "properties": {
                    "instance": {
                      "description": "Unique identifier for an instance of a problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code of the error response.",
                      "example": 404,
                      "type": "integer"
                    },
                    "streams": {
                      "description": "Lists details of validation failures while creating new stream configurations.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Lists details of validation failures while creating new stream configurations.",
                        "type": "object",
                        "required": [
                          "ds1StreamId",
                          "streamName",
                          "errors"
                        ],
                        "properties": {
                          "ds1StreamId": {
                            "description": "Identifies the DataStream 1 stream.",
                            "type": "integer"
                          },
                          "errors": {
                            "description": "The validation error list.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains feedback on validation.",
                              "type": "object",
                              "required": [
                                "title",
                                "type",
                                "detail"
                              ],
                              "properties": {
                                "detail": {
                                  "description": "The explanation of the error message.",
                                  "type": "string"
                                },
                                "title": {
                                  "description": "The error name.",
                                  "example": "Not Found",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "The type of the error.",
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/Migvalidation-dto.yaml"
                              }
                            }
                          },
                          "streamName": {
                            "description": "The name of the stream.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/MigStreamError.yaml"
                        }
                      }
                    },
                    "title": {
                      "description": "The title for the error.",
                      "example": "Not Found",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of the error.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/MigBulkStreamErrorResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Activates the stream at the time of the request, `false` by default. When you [Edit a stream](https://techdocs.akamai.com/datastream2/reference/put-stream) or [Patch a stream](https://techdocs.akamai.com/datastream2/reference/patch-stream) that is active, you need to set this member to `true`.",
            "example": "{{activate}}",
            "in": "query",
            "name": "activate",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/activate-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/migration/ds1-to-ds2/prepare": {
      "post": {
        "description": "Returns the payload needed to migrate up to ten DataStream 1 streams to DataStream 2 using the [Migrate streams](https://techdocs.akamai.com/datastream2/reference/migrate-stream) operation. You can use the `useCommonDestination` parameter to configure the same destination for each stream you want to migrate. Solve all validation errors and issues from the response before migrating the streams.",
        "operationId": "post-prepare-payload",
        "summary": "Prepare migration payload",
        "tags": [
          "Migrate"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's DataStream 2 API",
          "url": "https://techdocs.akamai.com/datastream2/reference/post-prepare-payload"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "streamIds": [
                  1256,
                  1340
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "The list of DataStream 1 stream IDs for which you need to generate the payload compatible with DataStream 2.",
                "type": "object",
                "properties": {
                  "streamIds": {
                    "description": "Identifies the stream.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/MigPreparePayloadRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "examples": {
                  "Prepare payload": {
                    "value": {
                      "validation": {
                        "errors": [],
                        "notices": [],
                        "warnings": [],
                        "message": {
                          "detail": "There are 2 error(s) and 4 warning(s) for your stream(s). Fix all errors before making a request for bulk stream migration. Please pay attention to the warnings that inform about features partially or not supported in DataStream 2.",
                          "title": "Fix errors before bulk stream migration",
                          "type": "FIX_ALL_ERRORS"
                        }
                      },
                      "streams": [
                        {
                          "contractId": "C-0N7RAC7",
                          "ds1StreamId": 1256,
                          "groupId": 21484,
                          "streamName": "Ds1_Stream_1",
                          "notificationEmails": [
                            "logged_in_user@domain.com"
                          ],
                          "deliveryConfiguration": {
                            "format": "JSON",
                            "uploadFilePrefix": "ak",
                            "uploadFileSuffix": "ds",
                            "frequency": {
                              "intervalInSeconds": 30
                            }
                          },
                          "validation": {
                            "errors": [
                              {
                                "detail": "DataStream 2 supports only one destination at this time. Select and pass at least one destination from the 'destinations' array, and provide values required for authentication marked with <ENTER VALUE>. For more details, refer to the Destinations topic in the migration document: https://techdocs.akamai.com/datastream2/v2/reference/datastream-1-and-datastream-2 ",
                                "title": "Single Destination Support",
                                "type": "SINGLE_DESTINATION_SUPPORT"
                              }
                            ],
                            "notices": [
                              {
                                "detail": "DataStream 2 does not support the DataStream Buffer destination.",
                                "title": "DataStream Buffer Not Supported",
                                "type": "DATASTREAM_BUFFER_NOT_SUPPORTED"
                              },
                              {
                                "detail": "Amazon S3 (Display name: S3Destination) path has been converted to the DataStream 2 dynamic variables format. Previous path: log/edgelogs/{year}/{month}/{day}. Updated path: log/edgelogs/{%Y}/{%m}/{%d}.",
                                "title": "Amazon S3 dynamic variables converted in path",
                                "type": "S3_DYNAMIC_PATH_CONVERSION"
                              },
                              {
                                "detail": "For the Amazon S3 destination, log filenames follow this pattern: <uploadFilePrefix>-'{'random-string'}'-'{'epoch-timestamp'}'-'{'random-string'}'-<uploadFileSuffix>. <uploadFilePrefix> defaults to `ak` and <uploadFileSuffix> defaults to `ds`. To customize these values, refer to the Destinations topic in the migration document: https://techdocs.akamai.com/datastream2/v2/reference/datastream-1-and-datastream-2",
                                "title": "Amazon S3 custom file name prefix and suffix support",
                                "type": "S3_FILENAME_PREFIX_AND_SUFFIX_SUPPORT"
                              }
                            ],
                            "warnings": [
                              {
                                "detail": "The following data set(s) are not supported in DataStream 2 and cannot be logged in the new stream: ({Data set field ID: 13, Name: Forward Hostname}, {Data set field ID: 18, Name: Request Cache-Control}).",
                                "title": "Data set not supported",
                                "type": "DATA_SET_NOT_SUPPORTED"
                              },
                              {
                                "detail": "Property (ID: 1234, name: xyz.com) not available for DataStream 2. Provide a property that is associated with product(s) supported by DataStream 2, and belongs to the appropriate contract (1-XYZ) and group ID (1122).",
                                "title": "Property not supported",
                                "type": "PROPERTY_NOT_SUPPORTED"
                              },
                              {
                                "detail": "One property can only be associated with a maximum of 3 streams. The \"xyz.com\" property (ID: 4567, hostnames: {xyz.in,xyz.ak}) is already associated to 3 streams.",
                                "title": "Maximum streams per property limit exceeded",
                                "type": "STREAMS_PER_PROPERTY_LIMIT_EXCEEDED"
                              }
                            ]
                          },
                          "datasetFields": [
                            {
                              "datasetFieldId": 1000
                            },
                            {
                              "datasetFieldId": 1001
                            },
                            {
                              "datasetFieldId": 1023
                            }
                          ],
                          "destinations": [
                            {
                              "destinationType": "SPLUNK",
                              "displayName": "Splunk",
                              "endpoint": "https://splunk.cloudapp.com:8088/services/collector/raw",
                              "eventCollectorToken": "<ENTER VALUE>"
                            },
                            {
                              "accessKey": "<ENTER VALUE>",
                              "bucket": "media-datastream.akamai.com",
                              "destinationType": "S3",
                              "displayName": "S3Destination",
                              "path": "log/edgelogs/{%Y}/{%m}/{%d}",
                              "region": "ap-south-1",
                              "secretAccessKey": "<ENTER VALUE>"
                            }
                          ],
                          "properties": [
                            {
                              "propertyId": 349772
                            },
                            {
                              "propertyId": 349770
                            }
                          ]
                        },
                        {
                          "contractId": "C-0N7RAC71",
                          "ds1StreamId": 6679,
                          "groupId": 21484,
                          "streamName": "Ds1_Stream_mig_2",
                          "destinations": [],
                          "notificationEmails": [
                            "logged_in_user@domain.com"
                          ],
                          "deliveryConfiguration": {
                            "format": "JSON",
                            "uploadFilePrefix": "ak",
                            "uploadFileSuffix": "ds",
                            "frequency": {
                              "intervalInSeconds": 30
                            }
                          },
                          "validation": {
                            "notices": [],
                            "errors": [
                              {
                                "detail": "DataStream 2 does not support the DataStream Buffer destination. Please provide details for any of the destinations supported by DataStream 2 in the `destinations` array. For more details, refer to the Destinations topic in the migration document: https://techdocs.akamai.com/datastream2/v2/reference/datastream-1-and-datastream-2",
                                "title": "DataStream Buffer not supported",
                                "type": "DATASTREAM_BUFFER_NOT_SUPPORTED"
                              }
                            ],
                            "warnings": [
                              {
                                "detail": "The Area (ID: 68), Zip (ID: 69), Latitude (ID: 70), and Longitude (ID: 71) data set fields in DataStream 1 are mapped to the City (ID: 2014) data set field in DataStream 2. For details, refer to the Data set parameters topic in the migration document: https://techdocs.akamai.com/datastream2/v2/reference/datastream-1-and-datastream-2",
                                "title": "Geo data fields support",
                                "type": "GEO_DATA_FIELDS_SUPPORT"
                              }
                            ]
                          },
                          "datasetFields": [
                            {
                              "datasetFieldId": 1011
                            },
                            {
                              "datasetFieldId": 1012
                            },
                            {
                              "datasetFieldId": 2014
                            }
                          ],
                          "properties": [
                            {
                              "propertyId": 778899
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "Prepare payload with common destination": {
                    "value": {
                      "validation": {
                        "warnings": [],
                        "message": {
                          "detail": "There are 1 error(s) and 4 warning(s) for your stream(s). Fix all errors before making a request for bulk stream migration. Please pay attention to the warnings that inform about features partially or not supported in DataStream 2.",
                          "title": "Fix errors before bulk stream migration",
                          "type": "FIX_ALL_ERRORS"
                        },
                        "errors": [
                          {
                            "detail": "DataStream 2 supports only one destination at this time. Select and pass at least one destination from the 'destinations' array, and provide values required for authentication marked with <ENTER VALUE>. For more details, refer to the Destinations topic in the migration document: https://techdocs.akamai.com/datastream2/v2/reference/datastream-1-and-datastream-2 ",
                            "title": "Single Destination Support",
                            "type": "SINGLE_DESTINATION_SUPPORT"
                          }
                        ],
                        "notices": [
                          {
                            "detail": "DataStream 2 does not support the DataStream Buffer destination.",
                            "title": "DataStream Buffer Not Supported",
                            "type": "DATASTREAM_BUFFER_NOT_SUPPORTED"
                          },
                          {
                            "detail": "Amazon S3 (Display name: S3Destination) path has been converted to the DataStream 2 dynamic variables format. Previous path: log/edgelogs/{year}/{month}/{day}. Updated path: log/edgelogs/{%Y}/{%m}/{%d}.",
                            "title": "Amazon S3 dynamic variables converted in path",
                            "type": "S3_DYNAMIC_PATH_CONVERSION"
                          },
                          {
                            "detail": "For the Amazon S3 destination, the log file name prefix (default: ak) and suffix (default: ds) is configurable. To customize these values pass uploadFilePrefix, and uploadFileSuffix under deliveryConfiguration of the stream. For more details, refer to the Destinations topic in the migration document: https://techdocs.akamai.com/datastream2/v2/reference/datastream-1-and-datastream-2",
                            "title": "Amazon S3 custom file name prefix and suffix support",
                            "type": "S3_CONFIGURABLE_FILENAME_SUPPORT"
                          }
                        ]
                      },
                      "commonDestinations": [
                        {
                          "destinationType": "SPLUNK",
                          "displayName": "Splunk",
                          "endpoint": "https://splunk.cloudapp.com:8088/services/collector/raw",
                          "eventCollectorToken": "<ENTER VALUE>"
                        },
                        {
                          "accessKey": "<ENTER VALUE>",
                          "bucket": "media-datastream.akamai.com",
                          "destinationType": "S3",
                          "displayName": "S3Destination",
                          "path": "log/edgelogs/{%Y}/{%m}/{%d}",
                          "region": "ap-south-1",
                          "secretAccessKey": "<ENTER VALUE>"
                        }
                      ],
                      "streams": [
                        {
                          "contractId": "C-0N7RAC71",
                          "ds1StreamId": 1256,
                          "groupId": 21484,
                          "streamName": "Ds1_Stream_1",
                          "notificationEmails": [
                            "logged_in_user@domain.com"
                          ],
                          "deliveryConfiguration": {
                            "format": "JSON",
                            "frequency": {
                              "intervalInSeconds": 30
                            }
                          },
                          "validation": {
                            "errors": [],
                            "notices": [],
                            "warnings": [
                              {
                                "detail": "The following data set(s) are not supported in DataStream 2 and cannot be logged in the new stream: ({Data set field ID: 13, Name: Forward Hostname}, {Data set field ID: 18, Name: Request Cache-Control}).",
                                "title": "Data set not supported",
                                "type": "DATA_SET_NOT_SUPPORTED"
                              },
                              {
                                "detail": "Property (ID: 1234, name: xyz.com) not available for DataStream 2. Provide a property that is associated with product(s) supported by DataStream 2, and belongs to the appropriate contract (1-XYZ) and group ID (1122).",
                                "title": "Property not supported",
                                "type": "PROPERTY_NOT_SUPPORTED"
                              },
                              {
                                "detail": "One property can only be associated with a maximum of 3 streams. The \"xyz.com\" property (ID: 4567, hostnames: {xyz.in,xyz.ak}) is already associated to 3 streams.",
                                "title": "Maximum streams per property limit exceeded",
                                "type": "STREAMS_PER_PROPERTY_LIMIT_EXCEEDED"
                              }
                            ]
                          },
                          "datasetFields": [
                            {
                              "datasetFieldId": 1000
                            },
                            {
                              "datasetFieldId": 1001
                            },
                            {
                              "datasetFieldId": 1023
                            }
                          ],
                          "properties": [
                            {
                              "propertyId": 349772
                            },
                            {
                              "propertyId": 349770
                            }
                          ]
                        },
                        {
                          "contractId": "C-0N7RAC7",
                          "ds1StreamId": 6679,
                          "groupId": 21484,
                          "streamName": "Ds1_Stream_mig_2",
                          "notificationEmails": [
                            "logged_in_user@domain.com"
                          ],
                          "deliveryConfiguration": {
                            "format": "JSON",
                            "uploadFilePrefix": "ak",
                            "uploadFileSuffix": "ds",
                            "frequency": {
                              "intervalInSeconds": 30
                            }
                          },
                          "validation": {
                            "errors": [],
                            "notices": [],
                            "warnings": [
                              {
                                "detail": "The Area (ID: 68), Zip (ID: 69), Latitude (ID: 70), and Longitude (ID: 71) data set fields in DataStream 1 are mapped to the City (ID: 2014) data set field in DataStream 2. For details, refer to the Data set parameters topic in the migration document: https://techdocs.akamai.com/datastream2/v2/reference/datastream-1-and-datastream-2",
                                "title": "Geo data fields support",
                                "type": "GEO_DATA_FIELDS_SUPPORT"
                              }
                            ]
                          },
                          "datasetFields": [
                            {
                              "datasetFieldId": 1011
                            },
                            {
                              "datasetFieldId": 1012
                            },
                            {
                              "datasetFieldId": 2014
                            }
                          ],
                          "properties": [
                            {
                              "propertyId": 778899
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Provides information that you need to specify when creating a stream configuration.",
                  "type": "object",
                  "required": [
                    "streams"
                  ],
                  "properties": {
                    "commonDestinations": {
                      "description": "The common destination configuration for all the stream configurations in the `streams` array. Currently you can configure one destination per stream as the destination to send logs. You can use the `useCommonDestination` parameter to get the payload with same destination for all streams in [Prepare migration payload](https://techdocs.akamai.com/datastream2/reference/prepare-payload) operation.",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "additionalProperties": false,
                            "description": "Provides details about the Azure Storage destination configuration in a stream. Note that DataStream 2 supports only streaming data to block objects. See [Azure Blob Storage](https://azure.microsoft.com/en-us/services/storage/blobs/#overview) in the Azure documentation.",
                            "title": "AZURE",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "displayName",
                              "accountName",
                              "accessKey",
                              "containerName",
                              "path"
                            ],
                            "properties": {
                              "accessKey": {
                                "description": "Either of the access keys for your Azure Storage account. See [View account access keys](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage?tabs=azure-portal) in the Azure documentation.",
                                "type": "string"
                              },
                              "accountName": {
                                "description": "Specifies the Azure Storage account name.",
                                "type": "string"
                              },
                              "containerName": {
                                "description": "Specifies the Azure Storage container name.",
                                "type": "string"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set this value to `AZURE` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "AZURE"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The path to the folder within the Azure Storage container where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long) in the Azure documentation.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/Azure.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Provides details about the Amazon S3 destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and saves an `Akamai_access_verification_[TimeStamp].txt` format file in your Amazon S3 folder. You can only see this file if the validation process is successful, and you have access to the Amazon S3 bucket and folder that you're trying to send logs to.",
                            "title": "S3",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "displayName",
                              "accessKey",
                              "secretAccessKey",
                              "region",
                              "bucket",
                              "path"
                            ],
                            "properties": {
                              "accessKey": {
                                "description": "The access key identifier that you use to authenticate requests to your Amazon S3 account. See the [Understanding and getting your AWS credentials](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html) in the Amazon S3 documentation.",
                                "type": "string"
                              },
                              "bucket": {
                                "description": "The name of the Amazon S3 bucket. See [Working with buckets in AWS](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html) in the Amazon S3 documentation.",
                                "type": "string"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set it to `S3` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "S3"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The path to the folder within your Amazon S3 bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object keys](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html) in the Amazon S3 documentation for naming conventions.",
                                "type": "string"
                              },
                              "region": {
                                "description": "The AWS region where your Amazon S3 bucket resides. See [Regions, Availability Zones, and Local Zones in AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) in the Amazon S3 documentation.",
                                "type": "string"
                              },
                              "secretAccessKey": {
                                "description": "The secret access key identifier that you use to authenticate requests to your Amazon S3 account.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/S3.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Provides detailed information about the Datadog destination that you can use in your stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. You can see the `validate connector test` data only if the destination validates, and you can access the destination storage.",
                            "title": "DATADOG",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "displayName",
                              "endpoint",
                              "authToken"
                            ],
                            "properties": {
                              "authToken": {
                                "description": "The API key for your Datadog account. See [View API keys in Datadog](https://docs.datadoghq.com/account_management/api-app-keys/#api-keys) in the Datadog documentation for details on how to create or fetch your Datadog API key.",
                                "type": "string"
                              },
                              "compressLogs": {
                                "default": false,
                                "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `false` by default.",
                                "type": "boolean"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set this value to `DATADOG` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "DATADOG"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "endpoint": {
                                "description": "The Datadog v1 endpoint URL where you want to send and store logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Datadog](https://techdocs.akamai.com/datastream2/v2/docs/stream-datadog#akamaized-hostname-as-endpoint), and [View Datadog logs endpoint](https://docs.datadoghq.com/logs/log_collection/?tab=http#logging-endpoints) in the Datadog documentation.",
                                "type": "string"
                              },
                              "service": {
                                "description": "The name of the application or service generating the log events in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) and [Services List](https://docs.datadoghq.com/tracing/visualization/services_list/) in the Datadog documentation.",
                                "type": "string"
                              },
                              "source": {
                                "description": "The name of the source or the technology of the logs in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) in the Datadog documentation.",
                                "type": "string"
                              },
                              "tags": {
                                "description": "The tags you can use to filter and group metrics in your Datadog account. Enter a comma-delimited list for more than one tag. This field also supports `<key>:<value>` combinations. See [Getting Started with Tags](https://docs.datadoghq.com/getting_started/tagging/) in the Datadog documentation.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/Datadog.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Provides detailed information about the Splunk destination that you can use in your stream. Note that DataStream 2 currently supports only endpoint URLs ending with `collector/raw`. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                            "title": "SPLUNK",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "displayName",
                              "endpoint",
                              "eventCollectorToken"
                            ],
                            "properties": {
                              "caCert": {
                                "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification. If you set this member, the `mTlsEnabled` property replaces it in the response as `true`.",
                                "type": "string"
                              },
                              "clientCert": {
                                "description": "The digital certificate in the PEM format that authenticates requests to your destination. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                                "type": "string"
                              },
                              "clientKey": {
                                "description": "The private key in the non-encrypted PKCS8 format that authenticates with the back-end server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                                "type": "string"
                              },
                              "compressLogs": {
                                "default": true,
                                "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true `by default.",
                                "type": "boolean"
                              },
                              "customHeaderName": {
                                "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see the additional options discussed in [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#additional-options).",
                                "type": "string"
                              },
                              "customHeaderValue": {
                                "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see the additional options discussed in [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#additional-options).",
                                "type": "string"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set this value to `SPLUNK` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "SPLUNK"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "endpoint": {
                                "description": "The raw event Splunk URL where you want to store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Splunk](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#akamaized-hostname-as-endpoint).",
                                "type": "string"
                              },
                              "eventCollectorToken": {
                                "description": "The Event Collector token for your Splunk account. See [View usage of Event Collector token](https://docs.splunk.com/Documentation/Splunk/8.0.3/Data/UsetheHTTPEventCollector) in the Splunk documentation.",
                                "type": "string"
                              },
                              "tlsHostname": {
                                "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/Splunk.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Provides detailed information about the Google Cloud Storage destination you can use in a stream. When validating this destination, DataStream uses the private access key to create an `Akamai_access_verification_[TimeStamp].txt` object file in your GCS bucket. You can only see this file if the destination validates, and you have access to the Google Cloud Storage bucket where you are trying to send logs.",
                            "title": "GCS",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "displayName",
                              "bucket",
                              "projectId",
                              "serviceAccountName",
                              "privateKey"
                            ],
                            "properties": {
                              "bucket": {
                                "description": "The name of the storage bucket you created in your Google Cloud account. See [Bucket naming conventions](https://cloud.google.com/storage/docs/naming-buckets) in the Google Cloud documentation.",
                                "type": "string"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set it to `GCS` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "GCS"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The path to the folder within your Google Cloud bucket where you want to store logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object naming guidelines](https://cloud.google.com/storage/docs/naming-objects) in the Google Cloud documentations.",
                                "type": "string"
                              },
                              "privateKey": {
                                "description": "The contents of the JSON service account keys you generated and downloaded in your Google Cloud Storage account. See [Creating service account keys](https://cloud.google.com/iam/docs/creating-managing-service-account-keys#creating_service_account_keys) in the Google Cloud documentation.",
                                "type": "string"
                              },
                              "projectId": {
                                "description": "The unique ID of your Google Cloud project.",
                                "type": "string"
                              },
                              "serviceAccountName": {
                                "description": "The name of the service account with the `storage.object.create` permission or Storage Object Creator role.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/GCS.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Provides detailed information about the custom HTTPS endpoint you can use as a destination for a stream. This includes basic or no authentication, and whether the stream sends uncompressed or gzip-compressed log files. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                            "title": "HTTPS",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "displayName",
                              "authenticationType",
                              "endpoint"
                            ],
                            "properties": {
                              "authenticationType": {
                                "description": "Either `NONE` for no authentication, or `BASIC`. For basic authentication, provide the username and password you set in your custom HTTPS endpoint.",
                                "type": "string",
                                "enum": [
                                  "BASIC",
                                  "NONE"
                                ]
                              },
                              "caCert": {
                                "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification. If you set this member, the `mTlsEnabled` property replaces it in the response as `true`.",
                                "type": "string"
                              },
                              "clientCert": {
                                "description": "The PEM-formatted digital certificate you want to authenticate requests to your destination with. If you want to use mutual authentication, you need to provide both the client certificate and the client key. If you pass this member, the `mTlsEnabled` member replaces it in the response as `true`.",
                                "type": "string"
                              },
                              "clientKey": {
                                "description": "The private key in the non-encrypted PKCS8 format that authenticates with the back-end server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                                "type": "string"
                              },
                              "compressLogs": {
                                "default": false,
                                "description": "Enables gzip compression for a log file sent to a destination. This member's value is `false` by default.",
                                "type": "boolean"
                              },
                              "contentType": {
                                "description": "The type of the resource passed in the request's custom header. For details, see the additional options discussed in [Stream logs to a HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#additional-options).",
                                "type": "string"
                              },
                              "customHeaderName": {
                                "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see the additional options discussed in [Stream logs to a HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#additional-options).",
                                "type": "string"
                              },
                              "customHeaderValue": {
                                "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see the additional options discussed in [Stream logs to a HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#additional-options).",
                                "type": "string"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set it to `HTTPS` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "HTTPS"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "endpoint": {
                                "description": "Enter the secure URL where you want to send and store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to a custom HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#akamaized-hostname-as-endpoint).",
                                "type": "string"
                              },
                              "password": {
                                "description": "Enter the password you set in your custom HTTPS endpoint for authentication.",
                                "type": "string"
                              },
                              "tlsHostname": {
                                "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                                "type": "string"
                              },
                              "userName": {
                                "description": "Enter the valid username you set in your custom HTTPS endpoint for authentication.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/HTTPS.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Provides detailed information about the Sumo Logic destination in a stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                            "title": "SUMO_LOGIC",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "displayName",
                              "endpoint",
                              "collectorCode"
                            ],
                            "properties": {
                              "collectorCode": {
                                "description": "The unique HTTP collector code of your Sumo Logic endpoint.",
                                "type": "string"
                              },
                              "compressLogs": {
                                "default": true,
                                "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                                "type": "boolean"
                              },
                              "contentType": {
                                "description": "The type of the resource passed in the request's custom header. For details, see the additional options discussed in [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#additional-options).",
                                "type": "string"
                              },
                              "customHeaderName": {
                                "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see the additional options discussed in [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#additional-options).",
                                "type": "string"
                              },
                              "customHeaderValue": {
                                "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see the additional options discussed in [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#additional-options).",
                                "type": "string"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set this value to `SUMO_LOGIC` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "SUMO_LOGIC"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "endpoint": {
                                "description": "The Sumo Logic HTTP Source URL where you want to send your logs. You should follow the `https://<SumoEndpoint>/receiver/v1/http` format and set the collector code in the `collectorCode` member. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#akamaized-hostname-as-endpoint), and [Upload Metrics to an HTTP Source](https://help.sumologic.com/docs/send-data/hosted-collectors/http-source/upload-metrics/) in the Sumo Logic documentation.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/SumoLogic.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Provides details about the Oracle Cloud Storage destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and tries to save an `Akamai_access_verification_[TimeStamp].txt file in your Oracle Cloud Storage folder. You can only see this file if the validation process is successful, and you have access to the Oracle Cloud Storage bucket and folder that you're trying to send logs to.",
                            "title": "ORACLE_CLOUD_STORAGE",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "displayName",
                              "accessKey",
                              "secretAccessKey",
                              "region",
                              "bucket",
                              "path",
                              "namespace"
                            ],
                            "properties": {
                              "accessKey": {
                                "description": "The access key identifier that you use to authenticate requests to your Oracle Cloud account. See [Managing user credentials](https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm) in the Oracle Cloud Storage documentation.",
                                "type": "string"
                              },
                              "bucket": {
                                "description": "The name of the Oracle Cloud Storage bucket. See [Working with buckets](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingbuckets.htm) in the Oracle Cloud Storage documentation.",
                                "type": "string"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set it to `ORACLE_CLOUD_STORAGE` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "ORACLE_CLOUD_STORAGE"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "The namespace of your Oracle Cloud Storage account. See [Understanding Object Storage namespaces](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/understandingnamespaces.htm) in the Oracle Cloud Storage documentation.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The path to the folder within your Oracle Cloud Storage bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Managing Objects](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingobjects.htm) in the Oracle Cloud Storage documentation.",
                                "type": "string"
                              },
                              "region": {
                                "description": "The Oracle Cloud Storage region where your bucket resides. See [Regions and availability domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm) in the Oracle Cloud Storage documentation.",
                                "type": "string"
                              },
                              "secretAccessKey": {
                                "description": "The secret access key identifier that you use to authenticate requests to your Oracle Cloud account.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/OCS.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Provides detailed information about the Loggly destination that you can use in your stream.",
                            "title": "LOGGLY",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "displayName",
                              "endpoint",
                              "authToken"
                            ],
                            "properties": {
                              "authToken": {
                                "description": "The custom token for your Loggly endpoint. The token is the value from the bulk endpoint URL that comes after the `/bulk` segment, and before `tags`.",
                                "type": "string"
                              },
                              "contentType": {
                                "description": "The type of the resource passed in the request's custom header. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#additional-options) in the DataStream user guide.",
                                "type": "string"
                              },
                              "customHeaderName": {
                                "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#additional-options) in the DataStream user guide.",
                                "type": "string"
                              },
                              "customHeaderValue": {
                                "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#additional-options) in the DataStream user guide.",
                                "type": "string"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set it to `LOGGLY` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "LOGGLY"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "endpoint": {
                                "description": "The Loggly bulk endpoint URL in the `https://hostname.loggly.com/bulk/` format. Set the endpoint token code in the `authToken` field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Loggly](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#akamaized-hostname-as-endpoint).",
                                "type": "string"
                              },
                              "tags": {
                                "description": "The tags you can use to segment and filter log events in Loggly. See [Tags](https://documentation.solarwinds.com/en/success_center/loggly/content/admin/tags.htm) in the Loggly documentation.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/Loggly.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Provides detailed information about the Elasticsearch destination that you can use in your stream.",
                            "title": "ELASTICSEARCH",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "displayName",
                              "endpoint",
                              "userName",
                              "password",
                              "indexName"
                            ],
                            "properties": {
                              "caCert": {
                                "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification. If you pass this member, the `mTlsEnabled` member replaces it in the response as `true`.",
                                "type": "string"
                              },
                              "clientCert": {
                                "description": "The PEM-formatted digital certificate you want to authenticate requests to your destination with. If you want to use mutual authentication, you need to provide both the client certificate and the client key. If you pass this member, the `mTlsEnabled` member replaces it in the response as `true`.",
                                "type": "string"
                              },
                              "clientKey": {
                                "description": "The private key in the non-encrypted PKCS8 format you want to use to authenticate with the backend server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                                "type": "string"
                              },
                              "contentType": {
                                "description": "The type of the resource passed in the request's custom header. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#additional-options) in the DataStream user guide.",
                                "type": "string"
                              },
                              "customHeaderName": {
                                "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#section-additional-options) in the DataStream user guide.",
                                "type": "string"
                              },
                              "customHeaderValue": {
                                "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#section-additional-options) in the DataStream user guide.",
                                "type": "string"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set it to `ELASTICSEARCH` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "ELASTICSEARCH"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "endpoint": {
                                "description": "The Elasticsearch bulk endpoint URL in the `https://hostname.elastic-cloud.com:9243/_bulk/` format. Set `indexName` in the appropriate field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Elasticsearch](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#akamaized-hostname-as-endpoint).",
                                "type": "string"
                              },
                              "indexName": {
                                "description": "The name of the index within an Elastic Cloud cluster where you want to store log files. This member supports [Dynamic index names](https://techdocs.akamai.com/datastream2/docs/stream-logs-to-elasticsearch#dynamic-index-name).",
                                "type": "string"
                              },
                              "password": {
                                "description": "The Elasticsearch basic access authentication password.",
                                "type": "string"
                              },
                              "tlsHostname": {
                                "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                                "type": "string"
                              },
                              "userName": {
                                "description": "The Elasticsearch basic access authentication username.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/Elasticsearch.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Provides detailed information about the New Relic destination that you can use in your stream.",
                            "title": "NEWRELIC",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "displayName",
                              "endpoint",
                              "authToken"
                            ],
                            "properties": {
                              "authToken": {
                                "description": "The unique personal API key that belongs to your New Relic account.",
                                "type": "string"
                              },
                              "contentType": {
                                "description": "The type of the resource passed in the request's custom header. For details, see [Additional options](https://techdocs.akamai.com/datastream2/docs/stream-newrelic#section-additional-options) in the DataStream user guide.",
                                "type": "string"
                              },
                              "customHeaderName": {
                                "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#additional-options) in the DataStream user guide.",
                                "type": "string"
                              },
                              "customHeaderValue": {
                                "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#additional-options) in the DataStream user guide.",
                                "type": "string"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set it to `NEWRELIC` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "NEWRELIC"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "endpoint": {
                                "description": "The New Relic Log API endpoint URL in the `https://log-api.newrelic.com/log/v1/` format. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to New Relic](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#akamaized-hostname-as-endpoint).",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/NewRelic.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Provides details about the S3-compatible destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and saves an `Akamai_access_verification_[TimeStamp].txt` format file in your S3-compatible folder. You can only see this file if the validation process is successful, and you have access to the S3-compatible bucket and folder that you're trying to send logs to. Before configuring your stream to send logs to this destination, make sure you create a S3-compatible storage bucket, and store the access key together with the secret access key.",
                            "title": "S3_COMPATIBLE",
                            "type": "object",
                            "required": [
                              "destinationType",
                              "displayName",
                              "accessKey",
                              "secretAccessKey",
                              "bucket",
                              "region",
                              "endpoint"
                            ],
                            "properties": {
                              "accessKey": {
                                "description": "The access key identifier of the S3-compatible object storage bucket.",
                                "type": "string"
                              },
                              "bucket": {
                                "description": "The name of the S3-compatible object storage bucket.",
                                "type": "string"
                              },
                              "compressLogs": {
                                "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                                "type": "boolean"
                              },
                              "destinationType": {
                                "description": "The name of the destination type. Set it to `S3_COMPATIBLE` for this destination type.",
                                "type": "string",
                                "enum": [
                                  "S3_COMPATIBLE"
                                ]
                              },
                              "displayName": {
                                "description": "The name of the destination.",
                                "type": "string"
                              },
                              "endpoint": {
                                "description": "The scheme-qualified host of your S3-compatible object storage bucket.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The path to the folder within your S3-compatible object storage bucket where you want to store logs. This value allows [Dynamic time variables](https://techdocs.akamai.com/datastream2/docs/dynamic-time-variables).",
                                "type": "string"
                              },
                              "region": {
                                "description": "The physical storage location of your S3-compatible object storage bucket.",
                                "type": "string"
                              },
                              "secretAccessKey": {
                                "description": "The secret access key identifier of the S3-compatible object storage bucket.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/S3Compatible.yaml"
                            }
                          }
                        ]
                      }
                    },
                    "streams": {
                      "description": "The details you need to specify when creating a stream configuration.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Provides information that you need to specify when creating a stream configuration.",
                        "type": "object",
                        "required": [
                          "ds1StreamId",
                          "streamName",
                          "groupId",
                          "contractId",
                          "properties",
                          "datasetFields",
                          "deliveryConfiguration"
                        ],
                        "properties": {
                          "collectMidgress": {
                            "description": "Set to `true` to collect midgress traffic data within the Akamai platform, such as between two edge servers. Enable logging midgress data to get numeric values in the second place of the log line that indicate if the request was processed within the Akamai platform. When you [Get a stream](https://techdocs.akamai.com/datastream2/reference/get-stream) that logs midgress traffic, the response returns `collectMidgress` as `true` and lists the `isMidgress` data set field with other fields. See [Midgress traffic](https://techdocs.akamai.com/datastream2/v2/docs/data-set-parameters#midgress-traffic) for details. If this feature is not enabled on your account, contact the Akamai support team.",
                            "type": "boolean"
                          },
                          "contractId": {
                            "description": "Identifies the contract that has access to the product.",
                            "type": "string"
                          },
                          "datasetFields": {
                            "description": "Identifiers of the data set fields that you want to receive in logs. The order of the identifiers define how the value for these fields appear in the log lines. Identifiers of the data set fields within the template that you want to receive in logs. The order of the identifiers define how the value for these fields appear in the log lines. See [Data set parameters](https://techdocs.akamai.com/datastream2/reference/data-set-parameters-1) for the complete list of the fields you can choose in DataStream 2.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "datasetFieldId"
                              ],
                              "properties": {
                                "datasetFieldId": {
                                  "description": "Identifies the field.",
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "deliveryConfiguration": {
                            "additionalProperties": false,
                            "description": "Provides information about the configuration of log lines, log file format, names of the log files sent to a destination, and delivery frequency for these files.",
                            "type": "object",
                            "required": [
                              "format",
                              "frequency"
                            ],
                            "properties": {
                              "fieldDelimiter": {
                                "description": "A delimiter that separates data set fields in the log lines, either `SPACE` or `TAB`. Set this only for the `STRUCTURED` log file `format`.",
                                "type": "string",
                                "enum": [
                                  "SPACE",
                                  "TAB"
                                ]
                              },
                              "format": {
                                "description": "The format in which you want to receive log files. `STRUCTURED` or `JSON` are the currently available formats. When the delimiter is present in the request, `STRUCTURED` is the mandatory format.",
                                "type": "string",
                                "enum": [
                                  "STRUCTURED",
                                  "JSON"
                                ]
                              },
                              "frequency": {
                                "additionalProperties": false,
                                "description": "The frequency of collecting logs from each uploader and sending these logs to a destination.",
                                "type": "object",
                                "required": [
                                  "intervalInSeconds"
                                ],
                                "properties": {
                                  "intervalInSeconds": {
                                    "description": "The time in seconds after which the system bundles log lines into a file and sends it to a destination. `30` or `60` are the possible values.",
                                    "type": "integer",
                                    "enum": [
                                      30,
                                      60
                                    ]
                                  }
                                }
                              },
                              "uploadFilePrefix": {
                                "description": "The prefix of the log file that you want to send to a destination. It's a string of at most 200 characters. If unspecified, it defaults to `ak`. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables), but doesn't support the `.` character. See [S3 naming conventions](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html), [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long), and [Google Cloud Storage object naming conventions](https://cloud.google.com/storage/docs/naming-objects).",
                                "type": "string"
                              },
                              "uploadFileSuffix": {
                                "description": "The suffix of the log file that you want to send to a destination. It's a static string of at most 10 characters. If unspecified, it defaults to `ds`. This member doesn't support [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables), and the `.`, `/`, `%`, `?` characters. See [S3 naming conventions](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html), [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long), and [Google Cloud Storage object naming conventions](https://cloud.google.com/storage/docs/naming-objects).",
                                "maxLength": 10,
                                "type": "string"
                              }
                            }
                          },
                          "destinations": {
                            "description": "A collection of destination configurations for the stream. You can configure one destination per stream as the destination to send logs.",
                            "type": "array",
                            "items": {
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "Provides details about the Azure Storage destination configuration in a stream. Note that DataStream 2 supports only streaming data to block objects. See [Azure Blob Storage](https://azure.microsoft.com/en-us/services/storage/blobs/#overview) in the Azure documentation.",
                                  "title": "AZURE",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "displayName",
                                    "accountName",
                                    "accessKey",
                                    "containerName",
                                    "path"
                                  ],
                                  "properties": {
                                    "accessKey": {
                                      "description": "Either of the access keys for your Azure Storage account. See [View account access keys](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage?tabs=azure-portal) in the Azure documentation.",
                                      "type": "string"
                                    },
                                    "accountName": {
                                      "description": "Specifies the Azure Storage account name.",
                                      "type": "string"
                                    },
                                    "containerName": {
                                      "description": "Specifies the Azure Storage container name.",
                                      "type": "string"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set this value to `AZURE` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "AZURE"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "The path to the folder within the Azure Storage container where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Azure blob naming conventions](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#:%7E:text=Blob%20Names&text=A%20blob%20name%20can%20contain,up%20to%20256%20characters%20long) in the Azure documentation.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/Azure.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Provides details about the Amazon S3 destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and saves an `Akamai_access_verification_[TimeStamp].txt` format file in your Amazon S3 folder. You can only see this file if the validation process is successful, and you have access to the Amazon S3 bucket and folder that you're trying to send logs to.",
                                  "title": "S3",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "displayName",
                                    "accessKey",
                                    "secretAccessKey",
                                    "region",
                                    "bucket",
                                    "path"
                                  ],
                                  "properties": {
                                    "accessKey": {
                                      "description": "The access key identifier that you use to authenticate requests to your Amazon S3 account. See the [Understanding and getting your AWS credentials](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html) in the Amazon S3 documentation.",
                                      "type": "string"
                                    },
                                    "bucket": {
                                      "description": "The name of the Amazon S3 bucket. See [Working with buckets in AWS](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html) in the Amazon S3 documentation.",
                                      "type": "string"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set it to `S3` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "S3"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "The path to the folder within your Amazon S3 bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object keys](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html) in the Amazon S3 documentation for naming conventions.",
                                      "type": "string"
                                    },
                                    "region": {
                                      "description": "The AWS region where your Amazon S3 bucket resides. See [Regions, Availability Zones, and Local Zones in AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) in the Amazon S3 documentation.",
                                      "type": "string"
                                    },
                                    "secretAccessKey": {
                                      "description": "The secret access key identifier that you use to authenticate requests to your Amazon S3 account.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/S3.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Provides detailed information about the Datadog destination that you can use in your stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. You can see the `validate connector test` data only if the destination validates, and you can access the destination storage.",
                                  "title": "DATADOG",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "displayName",
                                    "endpoint",
                                    "authToken"
                                  ],
                                  "properties": {
                                    "authToken": {
                                      "description": "The API key for your Datadog account. See [View API keys in Datadog](https://docs.datadoghq.com/account_management/api-app-keys/#api-keys) in the Datadog documentation for details on how to create or fetch your Datadog API key.",
                                      "type": "string"
                                    },
                                    "compressLogs": {
                                      "default": false,
                                      "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `false` by default.",
                                      "type": "boolean"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set this value to `DATADOG` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "DATADOG"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "endpoint": {
                                      "description": "The Datadog v1 endpoint URL where you want to send and store logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Datadog](https://techdocs.akamai.com/datastream2/v2/docs/stream-datadog#akamaized-hostname-as-endpoint), and [View Datadog logs endpoint](https://docs.datadoghq.com/logs/log_collection/?tab=http#logging-endpoints) in the Datadog documentation.",
                                      "type": "string"
                                    },
                                    "service": {
                                      "description": "The name of the application or service generating the log events in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) and [Services List](https://docs.datadoghq.com/tracing/visualization/services_list/) in the Datadog documentation.",
                                      "type": "string"
                                    },
                                    "source": {
                                      "description": "The name of the source or the technology of the logs in Datadog. See [Attributes and Aliasing](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/) in the Datadog documentation.",
                                      "type": "string"
                                    },
                                    "tags": {
                                      "description": "The tags you can use to filter and group metrics in your Datadog account. Enter a comma-delimited list for more than one tag. This field also supports `<key>:<value>` combinations. See [Getting Started with Tags](https://docs.datadoghq.com/getting_started/tagging/) in the Datadog documentation.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/Datadog.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Provides detailed information about the Splunk destination that you can use in your stream. Note that DataStream 2 currently supports only endpoint URLs ending with `collector/raw`. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                                  "title": "SPLUNK",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "displayName",
                                    "endpoint",
                                    "eventCollectorToken"
                                  ],
                                  "properties": {
                                    "caCert": {
                                      "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification. If you set this member, the `mTlsEnabled` property replaces it in the response as `true`.",
                                      "type": "string"
                                    },
                                    "clientCert": {
                                      "description": "The digital certificate in the PEM format that authenticates requests to your destination. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                                      "type": "string"
                                    },
                                    "clientKey": {
                                      "description": "The private key in the non-encrypted PKCS8 format that authenticates with the back-end server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                                      "type": "string"
                                    },
                                    "compressLogs": {
                                      "default": true,
                                      "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true `by default.",
                                      "type": "boolean"
                                    },
                                    "customHeaderName": {
                                      "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see the additional options discussed in [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#additional-options).",
                                      "type": "string"
                                    },
                                    "customHeaderValue": {
                                      "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see the additional options discussed in [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#additional-options).",
                                      "type": "string"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set this value to `SPLUNK` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "SPLUNK"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "endpoint": {
                                      "description": "The raw event Splunk URL where you want to store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Splunk](https://techdocs.akamai.com/datastream2/v2/docs/stream-splunk#akamaized-hostname-as-endpoint).",
                                      "type": "string"
                                    },
                                    "eventCollectorToken": {
                                      "description": "The Event Collector token for your Splunk account. See [View usage of Event Collector token](https://docs.splunk.com/Documentation/Splunk/8.0.3/Data/UsetheHTTPEventCollector) in the Splunk documentation.",
                                      "type": "string"
                                    },
                                    "tlsHostname": {
                                      "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/Splunk.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Provides detailed information about the Google Cloud Storage destination you can use in a stream. When validating this destination, DataStream uses the private access key to create an `Akamai_access_verification_[TimeStamp].txt` object file in your GCS bucket. You can only see this file if the destination validates, and you have access to the Google Cloud Storage bucket where you are trying to send logs.",
                                  "title": "GCS",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "displayName",
                                    "bucket",
                                    "projectId",
                                    "serviceAccountName",
                                    "privateKey"
                                  ],
                                  "properties": {
                                    "bucket": {
                                      "description": "The name of the storage bucket you created in your Google Cloud account. See [Bucket naming conventions](https://cloud.google.com/storage/docs/naming-buckets) in the Google Cloud documentation.",
                                      "type": "string"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set it to `GCS` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "GCS"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "The path to the folder within your Google Cloud bucket where you want to store logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Object naming guidelines](https://cloud.google.com/storage/docs/naming-objects) in the Google Cloud documentations.",
                                      "type": "string"
                                    },
                                    "privateKey": {
                                      "description": "The contents of the JSON service account keys you generated and downloaded in your Google Cloud Storage account. See [Creating service account keys](https://cloud.google.com/iam/docs/creating-managing-service-account-keys#creating_service_account_keys) in the Google Cloud documentation.",
                                      "type": "string"
                                    },
                                    "projectId": {
                                      "description": "The unique ID of your Google Cloud project.",
                                      "type": "string"
                                    },
                                    "serviceAccountName": {
                                      "description": "The name of the service account with the `storage.object.create` permission or Storage Object Creator role.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/GCS.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Provides detailed information about the custom HTTPS endpoint you can use as a destination for a stream. This includes basic or no authentication, and whether the stream sends uncompressed or gzip-compressed log files. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                                  "title": "HTTPS",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "displayName",
                                    "authenticationType",
                                    "endpoint"
                                  ],
                                  "properties": {
                                    "authenticationType": {
                                      "description": "Either `NONE` for no authentication, or `BASIC`. For basic authentication, provide the username and password you set in your custom HTTPS endpoint.",
                                      "type": "string",
                                      "enum": [
                                        "BASIC",
                                        "NONE"
                                      ]
                                    },
                                    "caCert": {
                                      "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification. If you set this member, the `mTlsEnabled` property replaces it in the response as `true`.",
                                      "type": "string"
                                    },
                                    "clientCert": {
                                      "description": "The PEM-formatted digital certificate you want to authenticate requests to your destination with. If you want to use mutual authentication, you need to provide both the client certificate and the client key. If you pass this member, the `mTlsEnabled` member replaces it in the response as `true`.",
                                      "type": "string"
                                    },
                                    "clientKey": {
                                      "description": "The private key in the non-encrypted PKCS8 format that authenticates with the back-end server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                                      "type": "string"
                                    },
                                    "compressLogs": {
                                      "default": false,
                                      "description": "Enables gzip compression for a log file sent to a destination. This member's value is `false` by default.",
                                      "type": "boolean"
                                    },
                                    "contentType": {
                                      "description": "The type of the resource passed in the request's custom header. For details, see the additional options discussed in [Stream logs to a HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#additional-options).",
                                      "type": "string"
                                    },
                                    "customHeaderName": {
                                      "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see the additional options discussed in [Stream logs to a HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#additional-options).",
                                      "type": "string"
                                    },
                                    "customHeaderValue": {
                                      "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see the additional options discussed in [Stream logs to a HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#additional-options).",
                                      "type": "string"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set it to `HTTPS` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "HTTPS"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "endpoint": {
                                      "description": "Enter the secure URL where you want to send and store your logs. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to a custom HTTPS endpoint](https://techdocs.akamai.com/datastream2/v2/docs/stream-custom-https#akamaized-hostname-as-endpoint).",
                                      "type": "string"
                                    },
                                    "password": {
                                      "description": "Enter the password you set in your custom HTTPS endpoint for authentication.",
                                      "type": "string"
                                    },
                                    "tlsHostname": {
                                      "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                                      "type": "string"
                                    },
                                    "userName": {
                                      "description": "Enter the valid username you set in your custom HTTPS endpoint for authentication.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/HTTPS.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Provides detailed information about the Sumo Logic destination in a stream. If you choose this destination, the stream pushes a sample POST request to the endpoint to validate write access. For `STRUCTURED` logs, the data is sent as `0,access_validation`, and for `JSON` it's `{\"access_validation\":true}`. You can see the data only if the destination validates, and you can access the destination storage.",
                                  "title": "SUMO_LOGIC",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "displayName",
                                    "endpoint",
                                    "collectorCode"
                                  ],
                                  "properties": {
                                    "collectorCode": {
                                      "description": "The unique HTTP collector code of your Sumo Logic endpoint.",
                                      "type": "string"
                                    },
                                    "compressLogs": {
                                      "default": true,
                                      "description": "Enables gzip compression for a log file sent to a destination. If not set, this member's value is `true` by default.",
                                      "type": "boolean"
                                    },
                                    "contentType": {
                                      "description": "The type of the resource passed in the request's custom header. For details, see the additional options discussed in [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#additional-options).",
                                      "type": "string"
                                    },
                                    "customHeaderName": {
                                      "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see the additional options discussed in [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#additional-options).",
                                      "type": "string"
                                    },
                                    "customHeaderValue": {
                                      "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see the additional options discussed in [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#additional-options).",
                                      "type": "string"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set this value to `SUMO_LOGIC` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "SUMO_LOGIC"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "endpoint": {
                                      "description": "The Sumo Logic HTTP Source URL where you want to send your logs. You should follow the `https://<SumoEndpoint>/receiver/v1/http` format and set the collector code in the `collectorCode` member. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Sumo Logic](https://techdocs.akamai.com/datastream2/v2/docs/stream-sumo-logic#akamaized-hostname-as-endpoint), and [Upload Metrics to an HTTP Source](https://help.sumologic.com/docs/send-data/hosted-collectors/http-source/upload-metrics/) in the Sumo Logic documentation.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/SumoLogic.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Provides details about the Oracle Cloud Storage destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and tries to save an `Akamai_access_verification_[TimeStamp].txt file in your Oracle Cloud Storage folder. You can only see this file if the validation process is successful, and you have access to the Oracle Cloud Storage bucket and folder that you're trying to send logs to.",
                                  "title": "ORACLE_CLOUD_STORAGE",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "displayName",
                                    "accessKey",
                                    "secretAccessKey",
                                    "region",
                                    "bucket",
                                    "path",
                                    "namespace"
                                  ],
                                  "properties": {
                                    "accessKey": {
                                      "description": "The access key identifier that you use to authenticate requests to your Oracle Cloud account. See [Managing user credentials](https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm) in the Oracle Cloud Storage documentation.",
                                      "type": "string"
                                    },
                                    "bucket": {
                                      "description": "The name of the Oracle Cloud Storage bucket. See [Working with buckets](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingbuckets.htm) in the Oracle Cloud Storage documentation.",
                                      "type": "string"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set it to `ORACLE_CLOUD_STORAGE` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "ORACLE_CLOUD_STORAGE"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "description": "The namespace of your Oracle Cloud Storage account. See [Understanding Object Storage namespaces](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/understandingnamespaces.htm) in the Oracle Cloud Storage documentation.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "The path to the folder within your Oracle Cloud Storage bucket where you want to store your logs. This member supports [Dynamic time variables](https://techdocs.akamai.com/datastream2/reference/custom-log-field#dynamic-time-variables). See [Managing Objects](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/managingobjects.htm) in the Oracle Cloud Storage documentation.",
                                      "type": "string"
                                    },
                                    "region": {
                                      "description": "The Oracle Cloud Storage region where your bucket resides. See [Regions and availability domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm) in the Oracle Cloud Storage documentation.",
                                      "type": "string"
                                    },
                                    "secretAccessKey": {
                                      "description": "The secret access key identifier that you use to authenticate requests to your Oracle Cloud account.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/OCS.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Provides detailed information about the Loggly destination that you can use in your stream.",
                                  "title": "LOGGLY",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "displayName",
                                    "endpoint",
                                    "authToken"
                                  ],
                                  "properties": {
                                    "authToken": {
                                      "description": "The custom token for your Loggly endpoint. The token is the value from the bulk endpoint URL that comes after the `/bulk` segment, and before `tags`.",
                                      "type": "string"
                                    },
                                    "contentType": {
                                      "description": "The type of the resource passed in the request's custom header. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#additional-options) in the DataStream user guide.",
                                      "type": "string"
                                    },
                                    "customHeaderName": {
                                      "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#additional-options) in the DataStream user guide.",
                                      "type": "string"
                                    },
                                    "customHeaderValue": {
                                      "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#additional-options) in the DataStream user guide.",
                                      "type": "string"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set it to `LOGGLY` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "LOGGLY"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "endpoint": {
                                      "description": "The Loggly bulk endpoint URL in the `https://hostname.loggly.com/bulk/` format. Set the endpoint token code in the `authToken` field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Loggly](https://techdocs.akamai.com/datastream2/v2/docs/stream-loggly#akamaized-hostname-as-endpoint).",
                                      "type": "string"
                                    },
                                    "tags": {
                                      "description": "The tags you can use to segment and filter log events in Loggly. See [Tags](https://documentation.solarwinds.com/en/success_center/loggly/content/admin/tags.htm) in the Loggly documentation.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/Loggly.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Provides detailed information about the Elasticsearch destination that you can use in your stream.",
                                  "title": "ELASTICSEARCH",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "displayName",
                                    "endpoint",
                                    "userName",
                                    "password",
                                    "indexName"
                                  ],
                                  "properties": {
                                    "caCert": {
                                      "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification. If you pass this member, the `mTlsEnabled` member replaces it in the response as `true`.",
                                      "type": "string"
                                    },
                                    "clientCert": {
                                      "description": "The PEM-formatted digital certificate you want to authenticate requests to your destination with. If you want to use mutual authentication, you need to provide both the client certificate and the client key. If you pass this member, the `mTlsEnabled` member replaces it in the response as `true`.",
                                      "type": "string"
                                    },
                                    "clientKey": {
                                      "description": "The private key in the non-encrypted PKCS8 format you want to use to authenticate with the backend server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.",
                                      "type": "string"
                                    },
                                    "contentType": {
                                      "description": "The type of the resource passed in the request's custom header. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#additional-options) in the DataStream user guide.",
                                      "type": "string"
                                    },
                                    "customHeaderName": {
                                      "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#section-additional-options) in the DataStream user guide.",
                                      "type": "string"
                                    },
                                    "customHeaderValue": {
                                      "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#section-additional-options) in the DataStream user guide.",
                                      "type": "string"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set it to `ELASTICSEARCH` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "ELASTICSEARCH"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "endpoint": {
                                      "description": "The Elasticsearch bulk endpoint URL in the `https://hostname.elastic-cloud.com:9243/_bulk/` format. Set `indexName` in the appropriate field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to Elasticsearch](https://techdocs.akamai.com/datastream2/v2/docs/stream-elasticsearch#akamaized-hostname-as-endpoint).",
                                      "type": "string"
                                    },
                                    "indexName": {
                                      "description": "The name of the index within an Elastic Cloud cluster where you want to store log files. This member supports [Dynamic index names](https://techdocs.akamai.com/datastream2/docs/stream-logs-to-elasticsearch#dynamic-index-name).",
                                      "type": "string"
                                    },
                                    "password": {
                                      "description": "The Elasticsearch basic access authentication password.",
                                      "type": "string"
                                    },
                                    "tlsHostname": {
                                      "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.",
                                      "type": "string"
                                    },
                                    "userName": {
                                      "description": "The Elasticsearch basic access authentication username.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/Elasticsearch.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Provides detailed information about the New Relic destination that you can use in your stream.",
                                  "title": "NEWRELIC",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "displayName",
                                    "endpoint",
                                    "authToken"
                                  ],
                                  "properties": {
                                    "authToken": {
                                      "description": "The unique personal API key that belongs to your New Relic account.",
                                      "type": "string"
                                    },
                                    "contentType": {
                                      "description": "The type of the resource passed in the request's custom header. For details, see [Additional options](https://techdocs.akamai.com/datastream2/docs/stream-newrelic#section-additional-options) in the DataStream user guide.",
                                      "type": "string"
                                    },
                                    "customHeaderName": {
                                      "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#additional-options) in the DataStream user guide.",
                                      "type": "string"
                                    },
                                    "customHeaderValue": {
                                      "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see [Additional options](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#additional-options) in the DataStream user guide.",
                                      "type": "string"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set it to `NEWRELIC` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "NEWRELIC"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "endpoint": {
                                      "description": "The New Relic Log API endpoint URL in the `https://log-api.newrelic.com/log/v1/` format. You can use Akamaized property hostnames as endpoint URLs. See [Stream logs to New Relic](https://techdocs.akamai.com/datastream2/v2/docs/stream-new-relic#akamaized-hostname-as-endpoint).",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/NewRelic.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Provides details about the S3-compatible destination in a stream. When validating this destination, DataStream uses the provided `accessKey` and `secretAccessKey` values and saves an `Akamai_access_verification_[TimeStamp].txt` format file in your S3-compatible folder. You can only see this file if the validation process is successful, and you have access to the S3-compatible bucket and folder that you're trying to send logs to. Before configuring your stream to send logs to this destination, make sure you create a S3-compatible storage bucket, and store the access key together with the secret access key.",
                                  "title": "S3_COMPATIBLE",
                                  "type": "object",
                                  "required": [
                                    "destinationType",
                                    "displayName",
                                    "accessKey",
                                    "secretAccessKey",
                                    "bucket",
                                    "region",
                                    "endpoint"
                                  ],
                                  "properties": {
                                    "accessKey": {
                                      "description": "The access key identifier of the S3-compatible object storage bucket.",
                                      "type": "string"
                                    },
                                    "bucket": {
                                      "description": "The name of the S3-compatible object storage bucket.",
                                      "type": "string"
                                    },
                                    "compressLogs": {
                                      "description": "Enables gzip compression for a log file sent to a destination. This value is always `true` for this destination type.",
                                      "type": "boolean"
                                    },
                                    "destinationType": {
                                      "description": "The name of the destination type. Set it to `S3_COMPATIBLE` for this destination type.",
                                      "type": "string",
                                      "enum": [
                                        "S3_COMPATIBLE"
                                      ]
                                    },
                                    "displayName": {
                                      "description": "The name of the destination.",
                                      "type": "string"
                                    },
                                    "endpoint": {
                                      "description": "The scheme-qualified host of your S3-compatible object storage bucket.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "The path to the folder within your S3-compatible object storage bucket where you want to store logs. This value allows [Dynamic time variables](https://techdocs.akamai.com/datastream2/docs/dynamic-time-variables).",
                                      "type": "string"
                                    },
                                    "region": {
                                      "description": "The physical storage location of your S3-compatible object storage bucket.",
                                      "type": "string"
                                    },
                                    "secretAccessKey": {
                                      "description": "The secret access key identifier of the S3-compatible object storage bucket.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/S3Compatible.yaml"
                                  }
                                }
                              ]
                            }
                          },
                          "ds1StreamId": {
                            "description": "Identifies the DataStream 1 stream.",
                            "type": "integer"
                          },
                          "groupId": {
                            "description": "Identifies the group that has access to the product and this stream configuration.",
                            "type": "integer"
                          },
                          "notificationEmails": {
                            "description": "Identifies the e-mail addresses where you want to send notifications about activations and deactivations of the stream. You can omit this member and activate or deactivate the stream without notifications.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "properties": {
                            "description": "Identifies the properties that belong to the same product and you want to monitor in the stream. Note that a stream can only log data for active properties. You can [activate a property](https://techdocs.akamai.com/property-mgr/reference/post-property-activations) in Property Manager.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "propertyId"
                              ],
                              "properties": {
                                "propertyId": {
                                  "description": "The identifier of the property.",
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "streamName": {
                            "description": "The name of the stream.",
                            "type": "string"
                          },
                          "validations": {
                            "additionalProperties": false,
                            "description": "Contains details about warnings, errors, or notices determined while preparing migration payload for the stream. Fix all errors before making a request for bulk stream migration. Please pay attention to the warnings that inform about partially supported/unsupported features in DataStream 2.",
                            "readOnly": true,
                            "type": "object",
                            "required": [
                              "errors",
                              "notices",
                              "warnings"
                            ],
                            "properties": {
                              "errors": {
                                "description": "Lists stream validation errors.",
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "Contains feedback on validation.",
                                  "type": "object",
                                  "required": [
                                    "title",
                                    "type",
                                    "detail"
                                  ],
                                  "properties": {
                                    "detail": {
                                      "description": "The explanation of the error message.",
                                      "type": "string"
                                    },
                                    "title": {
                                      "description": "The error name.",
                                      "example": "Not Found",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of the error.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/Migvalidation-dto.yaml"
                                  }
                                }
                              },
                              "message": {
                                "additionalProperties": false,
                                "description": "The information about number of errors and warnings found.",
                                "type": "object",
                                "required": [
                                  "title",
                                  "type",
                                  "detail"
                                ],
                                "properties": {
                                  "detail": {
                                    "description": "The explanation of the error message.",
                                    "type": "string"
                                  },
                                  "title": {
                                    "description": "The error name.",
                                    "example": "Not Found",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The type of the error.",
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/Migvalidation-dto.yaml"
                                }
                              },
                              "notices": {
                                "description": "Lists notices.",
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "Contains feedback on validation.",
                                  "type": "object",
                                  "required": [
                                    "title",
                                    "type",
                                    "detail"
                                  ],
                                  "properties": {
                                    "detail": {
                                      "description": "The explanation of the error message.",
                                      "type": "string"
                                    },
                                    "title": {
                                      "description": "The error name.",
                                      "example": "Not Found",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of the error.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/Migvalidation-dto.yaml"
                                  }
                                }
                              },
                              "warnings": {
                                "description": "Lists warnings.",
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "Contains feedback on validation.",
                                  "type": "object",
                                  "required": [
                                    "title",
                                    "type",
                                    "detail"
                                  ],
                                  "properties": {
                                    "detail": {
                                      "description": "The explanation of the error message.",
                                      "type": "string"
                                    },
                                    "title": {
                                      "description": "The error name.",
                                      "example": "Not Found",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of the error.",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/Migvalidation-dto.yaml"
                                  }
                                }
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/Migvalidations.yaml"
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/MigSaveStreamRequest.yaml"
                        }
                      }
                    },
                    "validations": {
                      "additionalProperties": false,
                      "description": "Contains details about warnings, errors, or notices determined while preparing migration payload. Fix all errors before making a request for bulk stream migration. Please pay attention to the warnings that inform about partially supported or not supported features in DataStream 2.",
                      "readOnly": true,
                      "type": "object",
                      "required": [
                        "errors",
                        "notices",
                        "warnings"
                      ],
                      "properties": {
                        "errors": {
                          "description": "Lists stream validation errors.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Contains feedback on validation.",
                            "type": "object",
                            "required": [
                              "title",
                              "type",
                              "detail"
                            ],
                            "properties": {
                              "detail": {
                                "description": "The explanation of the error message.",
                                "type": "string"
                              },
                              "title": {
                                "description": "The error name.",
                                "example": "Not Found",
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of the error.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/Migvalidation-dto.yaml"
                            }
                          }
                        },
                        "message": {
                          "additionalProperties": false,
                          "description": "The information about number of errors and warnings found.",
                          "type": "object",
                          "required": [
                            "title",
                            "type",
                            "detail"
                          ],
                          "properties": {
                            "detail": {
                              "description": "The explanation of the error message.",
                              "type": "string"
                            },
                            "title": {
                              "description": "The error name.",
                              "example": "Not Found",
                              "type": "string"
                            },
                            "type": {
                              "description": "The type of the error.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/Migvalidation-dto.yaml"
                          }
                        },
                        "notices": {
                          "description": "Lists notices.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Contains feedback on validation.",
                            "type": "object",
                            "required": [
                              "title",
                              "type",
                              "detail"
                            ],
                            "properties": {
                              "detail": {
                                "description": "The explanation of the error message.",
                                "type": "string"
                              },
                              "title": {
                                "description": "The error name.",
                                "example": "Not Found",
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of the error.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/Migvalidation-dto.yaml"
                            }
                          }
                        },
                        "warnings": {
                          "description": "Lists warnings.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Contains feedback on validation.",
                            "type": "object",
                            "required": [
                              "title",
                              "type",
                              "detail"
                            ],
                            "properties": {
                              "detail": {
                                "description": "The explanation of the error message.",
                                "type": "string"
                              },
                              "title": {
                                "description": "The error name.",
                                "example": "Not Found",
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of the error.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/Migvalidation-dto.yaml"
                            }
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/Migvalidations.yaml"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/MigBulkStreamRequest.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Configures a single destination across all migrated streams. The default `false` value returns the response payload with a `destinations` array with destinations for each stream separately. Set this parameter to `true` to get the response payload with a `commonDestinations` array listing the destinations for all DataStream 1 streams you provide in the request. The [Migrate streams](https://techdocs.akamai.com/datastream2/reference/migrate-stream) operation requires at least one destination per stream in the `destinations` or `commonDestinations` array.",
            "example": "{{useCommonDestination}}",
            "in": "query",
            "name": "useCommonDestination",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/mig-useCommonDestination-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "x-readme": {
    "samples-languages": [
      "curl",
      "python",
      "node"
    ]
  },
  "servers": [
    {
      "url": "https://{hostname}/datastream-config-api/v2"
    }
  ]
}