type: object
description: |-
  Contains details about a rate policy.
  
x-akamai:
  file-path: schemas/rate-policy.yaml
additionalProperties: false
required:
- matchType
- type
- name
- averageThreshold
- burstThreshold
- clientIdentifier
- requestType
- sameActionOnIpv6
- pathMatchType
properties:
  id:
    type: integer
    description: |
      Uniquely identifies each rate policy.
    readOnly: true
  name:
    type: string
    description: |
      The name you assign to a rate policy.
  type:
    type: string
    description: |
      The rate policy type. Either `WAF` for Web Application Firewall, or `BOTMAN` for Bot Manager.
    enum:
    - WAF
    - BOTMAN
  description:
    type: string
    description: |
      Descriptive text you provide about a policy.
  additionalMatchOptions:
    type: array
    description: |
      The list of additional match conditions.
    items:
      type: object
      additionalProperties: false
      required:
      - type
      - positiveMatch
      - values
      properties:
        type:
          type: string
          description: |
            The match condition type. The `RequestHeaderCondition` listed here is deprecated. Specify `RequestHeaderCondition` as an `atomicCondition` to match on request headers. See [Export match condition type values](ref:cndval).
          enum:
          - IpAddressCondition
          - NetworkListCondition
          - RequestHeaderCondition
          - RequestMethodCondition
          - ResponseHeaderCondition
          - ResponseStatusCondition
          - UserAgentCondition
          - AsNumberCondition
        positiveMatch:
          type: boolean
          description: |
            Whether the condition should trigger on a match (`true`) or a lack of match (`false`).
        values:
          type: array
          description: |
            The list of values that trigger the condition on match.
          items:
            type: string
  apiSelectors:
    type: array
    description: |
      The API endpoints to match in incoming requests. This only applies to the `api` `matchType`.
    items:
      type: object
      additionalProperties: false
      required:
      - apiDefinitionId
      properties:
        apiDefinitionId:
          type: integer
          description: |
            Uniquely identifies each API endpoint.
        definedResources:
          type: boolean
          description: |
            When `true`, match on any resource explicitly added to your API definition without including a `resourceId`. When `false`, you'll need to pass a `resourceId`.
        resourceIds:
          type: array
          description: |
            The unique identifiers of the endpoint's resources.
          items:
            type: integer
        undefinedResources:
          type: boolean
          description: |
            When `true`, match on any resource you have not explicitly added to your API definition without including a `resourceId`.  When `false`, you'll need to pass a `resourceId`.
  averageThreshold:
    type: integer
    description: |
      The allowed hits per second during any two-minute interval.
  bodyParameters:
    type: array
    description: |
      The list of body parameters to match on.
    items:
      type: object
      additionalProperties: false
      required:
      - name
      - values
      - positiveMatch
      properties:
        name:
          type: string
          description: |
            The name you assign to a body parameter.
        positiveMatch:
          type: boolean
          description: |
            Whether the condition should trigger on a match (`true`) or a lack of match (`false`).
        valueInRange:
          type: boolean
          description: |
            Whether to match a value inside or outside a range. The range format is `min:max` — for example, `2:4`.
        values:
          type: array
          description: |
            The body parameter values.
          items:
            type: string
  burstThreshold:
    type: integer
    description: |
      The allowed hits per second during any five-second interval.
  burstWindow:
    type: integer
    description: |
      The time span for the `burstThreshold` interval. For existing rate policies, analyze your traffic in Alert mode before you reduce the measure window from 5 seconds. [Learn more about thresholds here](https://techdocs.akamai.com/kona-site-defender/docs/rate-thresholds).
    minimum: 1
    maximum: 5
  clientIdentifier:
    type: string
    description: |
      The client identifier you want to use to identify and track request senders. The value is required only for WAF type, and `api-key` is supported only for API match criteria. Using `ip-useragent` is typically more specific than using `ip` alone when trying to identify a client. Tracking by `cookie:value` applies to requests per individual session, even if the IP address changes.
    enum:
    - ip
    - ip-useragent
    - api-key
    - cookie:value
  condition:
    type: object
    description: |
      Contains information about the criteria that trigger the rate policy.
    additionalProperties: false
    properties:
      atomicConditions:
        type: array
        description: |
          The conditions that trigger the rate policy. Specify one or more request headers, TLS fingerprints, or client reputation categories.
        minItems: 1
        items:
          oneOf:
          - $ref: request-header-condition-2.yaml
          - $ref: tls-fingerprint-condition.yaml
          - $ref: client-reputation-condition.yaml
      positiveMatch:
        type: boolean
        description: |
          Whether the condition should trigger on a match (`true`) or a lack of match (`false`).
  createDate:
    type: string
    description: |
      The time stamp when you created the rate policy.
    example: '2016-07-22 18:57:08.0'
    readOnly: true
    format: date-time
  fileExtensions:
    type: object
    description: |
      Contains the file extension match criteria.
    additionalProperties: false
    required:
    - positiveMatch
    - values
    properties:
      positiveMatch:
        type: boolean
        description: |
          Whether the condition should trigger on a match (`true`) or a lack of match (`false`).
      values:
        type: array
        description: |
          The file extensions to match on.
        items:
          type: string
  hostnames:
    type: array
    description: |
      __Deprecated__. The hostnames to match. This array member is deprecated. Use the `hosts` object instead.
    items:
      type: string
  hosts:
    type: object
    description: |
      The hostnames to match, and whether to trigger on a match or absence of match.
    additionalProperties: false
    required:
    - positiveMatch
    - values
    properties:
      positiveMatch:
        type: boolean
        description: |
          When `true`, triggers on hostnames that match any hostnames in this array. When `false`, triggers on hostnames that don't match any in this array.
        default: true
      values:
        type: array
        description: |
          The hostnames you choose to match, or specifically not match.
        items:
          type: string
  matchType:
    type: string
    description: |
      The match type in a rate policy. Either `path` to match website paths or `api` to match API paths.
    enum:
    - path
    - api
  path:
    type: object
    description: |
      Contains details about the path match criteria.
    additionalProperties: false
    required:
    - positiveMatch
    - values
    properties:
      positiveMatch:
        type: boolean
        description: |
          Whether the condition should trigger on a match (`true`) or a lack of match (`false`).
      values:
        type: array
        description: |
          The list of paths to match on.
        items:
          type: string
  pathMatchType:
    type: string
    description: |
      The type of paths to match in incoming requests. Either `AllRequests` to match an empty path or any path that ends in a trailing slash (`/`), `TopLevel` to match top-level hostnames only, or `Custom` to match a specific path or path component. This applies only when the corresponding `matchType` member is `path`.
    enum:
    - Custom
    - TopLevel
    - AllRequests
  pathUriPositiveMatch:
    type: boolean
    description: |
      Whether the condition should trigger on a match (`true`) or a lack of match (`false`).
  queryParameters:
    type: array
    description: |
      The list of query parameter objects to match on.
    items:
      type: object
      additionalProperties: false
      required:
      - name
      - values
      - positiveMatch
      properties:
        name:
          type: string
          description: |
            The query parameter name.
        positiveMatch:
          type: boolean
          description: |
            Whether the condition should trigger on a match (`true`) or a lack of match (`false`).
        valueInRange:
          type: boolean
          description: |
            Whether to match a value inside or outside a range. The range format is `min:max` — for example, `2:4`.
        values:
          type: array
          description: |
            The list of query parameter values.
          items:
            type: string
  requestType:
    type: string
    description: |
      The type of requests to count towards the rate policy's thresholds. Either `ClientRequest` to count client requests to edge servers, `ClientResponse` to count edge responses to the client, `ForwardResponse` to count origin responses to the client, or `ForwardRequest` to count edge requests to your origin.
    enum:
    - ClientRequest
    - ClientResponse
    - ForwardResponse
    - ForwardRequest
  sameActionOnIpv6:
    type: boolean
    description: |
      Whether to apply the same action to the IPv6 traffic as to the IPv4 traffic.
  updateDate:
    type: string
    description: |
      The ISO 8601 timestamp when you last updated the rate policy.
    example: '2017-02-22 00:05:41.0'
    readOnly: true
    format: date-time
  useXForwardForHeaders:
    type: boolean
    description: |
      Whether to check the contents of the `X-Forwarded-For` header in incoming requests.
  used:
    type: boolean
    description: |
      Whether you're currently using the rate policy.
    readOnly: true
